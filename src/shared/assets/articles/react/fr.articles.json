[{"key": "Installation", "values": [{"key": "Bien d\u00e9marrer", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Cette page est un aper\u00e7u de la documentation React et des ressources associ\u00e9es.</p>\n<p><strong>React</strong> est une biblioth\u00e8que JavaScript pour la construction d\u2019interfaces utilisateur (UI). Pour d\u00e9couvrir \u00e0 quoi sert React, allez sur <a class=\"external-link\" href=\"https://fr.reactjs.org//\">notre page d\u2019accueil</a> ou <a class=\"external-link\" href=\"https://fr.reactjs.org//tutorial/tutorial.html\">dans le tutoriel</a>.</p>\n\n<ul>\n<li><a href=\"/react/getting-started#try-react\">Essayer React</a></li>\n<li><a href=\"/react/getting-started#learn-react\">Apprendre React</a></li>\n<li><a href=\"/react/getting-started#staying-informed\">Se tenir au courant</a></li>\n<li><a href=\"/react/getting-started#versioned-documentation\">Documentation versionn\u00e9e</a></li>\n<li><a href=\"/react/getting-started#something-missing\">Quelque chose vous manque\u00a0?</a></li>\n</ul>\n<h2 id=\"try-react\"><a class=\"anchor\" href=\"/react/getting-started#try-react\"></a>Essayer React </h2>\n<p>React a \u00e9t\u00e9 con\u00e7u d\u00e8s le d\u00e9part pour une adoption progressive, et <strong>vous pouvez utiliser React <em>a minima</em> ou autant que n\u00e9cessaire.</strong> Que vous souhaitiez avoir un aper\u00e7u de React, ajouter de l\u2019interactivit\u00e9 \u00e0 une simple page HTML ou d\u00e9marrer une application React compl\u00e8te, les liens de cette section vous aideront \u00e0 bien d\u00e9marrer.</p>\n<h3 id=\"online-playgrounds\"><a class=\"anchor\" href=\"/react/getting-started#online-playgrounds\"></a>Terrains de jeu en ligne </h3>\n<p>Si vous souhaitez tester React, vous pouvez utiliser un terrain de jeu en ligne. Essayez un mod\u00e8le <em>Hello World</em> sur <a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/hello-world\">CodePen</a>, <a class=\"external-link\" href=\"https://codesandbox.io/s/new\">CodeSandbox</a>, <a class=\"external-link\" href=\"https://glitch.com/edit/#!/remix/starter-react-template\">Glitch</a> ou <a class=\"external-link\" href=\"https://stackblitz.com/fork/react\">Stackblitz</a>.</p>\n<p>Si vous pr\u00e9f\u00e9rez utiliser votre propre \u00e9diteur de texte, vous pouvez aussi <a class=\"external-link\" href=\"https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html\">t\u00e9l\u00e9charger ce fichier HTML</a>, l\u2019\u00e9diter et l\u2019ouvrir \u00e0 partir du syst\u00e8me de fichiers local dans votre navigateur. Il transforme le code \u00e0 la vol\u00e9e lors de l\u2019ex\u00e9cution, ce qui est particuli\u00e8rement lent. Pour cette raison, nous vous recommandons de ne l\u2019utiliser que pour des d\u00e9mos simples.</p>\n<h3 id=\"add-react-to-a-website\"><a class=\"anchor\" href=\"/react/getting-started#add-react-to-a-website\"></a>Ajouter React \u00e0 un site Web </h3>\n<p>Vous pouvez <a href=\"/react/add-react-to-a-website\">ajouter React \u00e0 une page HTML en une minute</a> et ensuite \u00e9tendre progressivement sa pr\u00e9sence ou la limiter \u00e0 quelques \u00e9l\u00e9ments d\u2019interface dynamiques.</p>\n<h3 id=\"create-a-new-react-app\"><a class=\"anchor\" href=\"/react/getting-started#create-a-new-react-app\"></a>Cr\u00e9er une nouvelle application React </h3>\n<p>Lorsque vous d\u00e9marrez un projet React, une <a href=\"/react/add-react-to-a-website\">simple page HTML avec des balises de script</a> reste peut-\u00eatre la meilleure option. \u00c7a ne prend qu\u2019une minute \u00e0 mettre en place\u00a0!</p>\n<p>Au fur et \u00e0 mesure que votre application grandit, vous voudrez peut-\u00eatre envisager une configuration plus int\u00e9gr\u00e9e. Il y a plusieurs bo\u00eetes \u00e0 outils JavaScript que nous conseillons pour des applications plus importantes. Chacune d\u2019entre elles peut fonctionner avec peu ou pas de configuration et vous permet de tirer pleinement parti du riche \u00e9cosyst\u00e8me de React.  <a href=\"/react/create-a-new-react-app\">D\u00e9couvrez comment faire</a>.</p>\n<h2 id=\"learn-react\"><a class=\"anchor\" href=\"/react/getting-started#learn-react\"></a>Apprendre React </h2>\n<p>Les gens qui d\u00e9couvrent React viennent d\u2019horizons et de styles d\u2019apprentissage vari\u00e9s. Que vous pr\u00e9f\u00e9riez une approche plut\u00f4t th\u00e9orique ou pratique, nous esp\u00e9rons que vous trouverez cette section utile.</p>\n<ul>\n<li>Si vous pr\u00e9f\u00e9rez <strong>apprendre en faisant</strong>, commencez par notre <a class=\"external-link\" href=\"https://fr.reactjs.org//tutorial/tutorial.html\">tutoriel</a>.</li>\n<li>Si vous pr\u00e9f\u00e9rez <strong>apprendre les concepts \u00e9tape par \u00e9tape</strong>, commencez par notre <a href=\"/react/hello-world\">guide des fondamentaux</a>.</li>\n</ul>\n<p>Comme toute technologie que vous ne connaissez pas encore, React a une certaine courbe d\u2019apprentissage. Avec de la pratique et un peu de patience, vous <em>arriverez</em> \u00e0 le ma\u00eetriser.</p>\n<h3 id=\"first-examples\"><a class=\"anchor\" href=\"/react/getting-started#first-examples\"></a>Premiers exemples </h3>\n<p>La <a class=\"external-link\" href=\"https://fr.reactjs.org//\">page d\u2019accueil de React</a> contient quelques petits exemples React que vous pouvez modifier directement en ligne. M\u00eame si vous ne connaissez rien encore \u00e0 React, essayez de changer le code de ces exemples et voyez comment cela affecte le r\u00e9sultat.</p>\n<h3 id=\"react-for-beginners\"><a class=\"anchor\" href=\"/react/getting-started#react-for-beginners\"></a>React pour les d\u00e9butant\u00b7e\u00b7s </h3>\n<p>Si vous trouvez que la documentation React va un peu trop vite pour vous, consultez <a class=\"external-link\" href=\"https://www.taniarascia.com/getting-started-with-react/\">cet aper\u00e7u de React par Tania Rascia</a>. Il pr\u00e9sente les concepts les plus importants de React de fa\u00e7on d\u00e9taill\u00e9e et conviviale pour les d\u00e9butant\u00b7e\u00b7s. Une fois que vous avez termin\u00e9, essayez \u00e0 nouveau la documentation\u00a0!</p>\n<h3 id=\"react-for-designers\"><a class=\"anchor\" href=\"/react/getting-started#react-for-designers\"></a>React pour les designers </h3>\n<p>Si vous avez plut\u00f4t une exp\u00e9rience de designer, <a class=\"external-link\" href=\"http://reactfordesigners.com/\">ces ressources</a> sont un excellent moyen de commencer.</p>\n<h3 id=\"javascript-resources\"><a class=\"anchor\" href=\"/react/getting-started#javascript-resources\"></a>Ressources JavaScript </h3>\n<p>La documentation de React suppose une certaine habitude de la programmation en langage JavaScript. Pas besoin d\u2019\u00eatre un\u00b7e expert\u00b7e, mais il est plus difficile d\u2019apprendre \u00e0 la fois React et JavaScript.</p>\n<p>Nous vous recommandons de parcourir <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Une_r%C3%A9introduction_%C3%A0_JavaScript\">cet aper\u00e7u JavaScript</a> pour v\u00e9rifier votre niveau de connaissances. \u00c7a vous prendra entre 30 minutes et une heure, mais vous vous sentirez plus en confiance pour apprendre React.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Chaque fois que quelque chose en JavaScript vous semble d\u00e9routant, <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript\">MDN</a> et <a class=\"external-link\" href=\"http://javascript.info/\">javascript.info</a> sont d\u2019excellents sites pour v\u00e9rifier. On trouve aussi <a class=\"external-link\" href=\"https://fr.reactjs.org//community/support.html\">des forums de soutien communautaire</a> dans lesquels vous pouvez demander de l\u2019aide.</p>\n</div>\n<h3 id=\"practical-tutorial\"><a class=\"anchor\" href=\"/react/getting-started#practical-tutorial\"></a>Tutoriel pratique </h3>\n<p>Si vous pr\u00e9f\u00e9rez <strong>apprendre par la pratique</strong>, allez voir notre <a class=\"external-link\" href=\"https://fr.reactjs.org//tutorial/tutorial.html\">tutoriel pratique</a>. Dans ce tutoriel, nous construisons un jeu de morpion en React. Vous pourriez \u00eatre tent\u00e9\u00b7e de l\u2019ignorer sous pr\u00e9texte que vous n\u2019\u00eates pas int\u00e9ress\u00e9\u00b7e par la construction de jeux\u2014mais donnez-lui sa chance.  Les techniques que vous apprendrez dans ce tutoriel sont fondamentales pour la construction de n\u2019importe quel type d\u2019appli React, et les ma\u00eetriser vous apportera une compr\u00e9hension profonde de React.</p>\n<h3 id=\"step-by-step-guide\"><a class=\"anchor\" href=\"/react/getting-started#step-by-step-guide\"></a>Guide \u00e9tape par \u00e9tape </h3>\n<p>Si vous pr\u00e9f\u00e9rez <strong>apprendre les concepts \u00e9tape par \u00e9tape</strong> notre <a href=\"/react/hello-world\">guide des fondamentaux</a> est le meilleur endroit pour commencer. Chaque chapitre s\u2019appuie sur les connaissances introduites dans les pr\u00e9c\u00e9dents, afin que vous ne manquiez de rien pour avancer.</p>\n<h3 id=\"thinking-in-react\"><a class=\"anchor\" href=\"/react/getting-started#thinking-in-react\"></a>Penser en React </h3>\n<p>De nombreux utilisateurs de React estiment que c\u2019est en lisant <a href=\"/react/thinking-in-react\">Penser en React</a> que React a enfin \u00ab\u00a0cliqu\u00e9\u00a0\u00bb pour eux. C\u2019est probablement le plus ancien guide pas-\u00e0-pas sur React, mais il est toujours aussi pertinent.</p>\n<h3 id=\"recommended-courses\"><a class=\"anchor\" href=\"/react/getting-started#recommended-courses\"></a>Cours recommand\u00e9s </h3>\n<p>Parfois les gens pr\u00e9f\u00e9reront des livres et cours vid\u00e9o cr\u00e9\u00e9s par des tiers \u00e0 la documentation officielle. Nous maintenons <a class=\"external-link\" href=\"https://fr.reactjs.org//community/courses.html\">une liste de ressources fr\u00e9quemment recommand\u00e9es</a>, dont certaines sont gratuites.</p>\n<h3 id=\"advanced-concepts\"><a class=\"anchor\" href=\"/react/getting-started#advanced-concepts\"></a>Guides avanc\u00e9s </h3>\n<p>Une fois que vous serez \u00e0 l\u2019aise avec les <a href=\"/react/hello-world\">fondamentaux</a> et que vous aurez jou\u00e9 un peu avec React, vous pourriez \u00eatre int\u00e9ress\u00e9\u00b7e par des sujets plus avanc\u00e9s. Cette section pr\u00e9sente les fonctionnalit\u00e9s puissantes, mais moins utilis\u00e9es, de React, telles que le <a href=\"/react/context\">contexte</a> et les <a href=\"/react/refs-and-the-dom\">refs</a>.</p>\n<h3 id=\"api-reference\"><a class=\"anchor\" href=\"/react/getting-started#api-reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h3>\n<p>Cette section de la documentation est utile lorsque vous souhaitez en savoir plus sur une API React sp\u00e9cifique. Par exemple, <a href=\"/react/react-component\">la r\u00e9f\u00e9rence de l\u2019API <code class=\"language-javascript\">React.Component</code></a> peut vous fournir des d\u00e9tails sur le fonctionnement de <code class=\"language-javascript\">setState()</code>, et sur les utilit\u00e9s respectives des diff\u00e9rentes m\u00e9thodes de cycle de vie.</p>\n<h3 id=\"glossary-and-faq\"><a class=\"anchor\" href=\"/react/getting-started#glossary-and-faq\"></a>Glossaire et FAQ </h3>\n<p>Le <a href=\"/react/glossary\">glossaire</a> contient un aper\u00e7u des termes les plus couramment employ\u00e9s dans la documentation de React. Il y a \u00e9galement une section FAQ d\u00e9di\u00e9e aux questions et r\u00e9ponses courtes sur des sujets fr\u00e9quents, tels que <a href=\"/react/faq-ajax\">faire des requ\u00eates AJAX</a>, <a href=\"/react/faq-state\">g\u00e9rer l\u2019\u00e9tat local des composants</a>, et <a href=\"/react/faq-structure\">la structure de fichiers</a>.</p>\n<h2 id=\"staying-informed\"><a class=\"anchor\" href=\"/react/getting-started#staying-informed\"></a>Se tenir au courant </h2>\n<p>Le <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/\">blog React</a> est la source officielle des mises \u00e0 jour, par l\u2019\u00e9quipe de React. Tout ce qui est important, y compris les notes de publication ou les avis de d\u00e9pr\u00e9ciation, y est publi\u00e9 en priorit\u00e9.</p>\n<p>Vous pouvez \u00e9galement suivre le <a class=\"external-link\" href=\"https://twitter.com/reactjs\">compte @reactjs</a> sur Twitter, mais rien d\u2019essentiel ne vous \u00e9chappera si vous ne lisez que le blog.</p>\n<p>Toutes les versions de React ne m\u00e9ritent pas leur propre article de blog, mais vous pouvez trouver un <em>changelog</em> d\u00e9taill\u00e9 pour chaque version dans le <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/master/CHANGELOG.md\">fichier <code class=\"language-javascript\">CHANGELOG.md</code> du d\u00e9p\u00f4t React</a>, ainsi que sur la page des <a class=\"external-link\" href=\"https://github.com/facebook/react/releases\"><em>Releases</em></a>.</p>\n<h2 id=\"versioned-documentation\"><a class=\"anchor\" href=\"/react/getting-started#versioned-documentation\"></a>Documentation versionn\u00e9e </h2>\n<p>Cette documentation refl\u00e8te toujours la derni\u00e8re version stable de React. Depuis React 16, vous pouvez trouver les anciennes versions de la documentation sur une <a class=\"external-link\" href=\"https://fr.reactjs.org//versions\">page s\u00e9par\u00e9e</a>. Notez que la documentation des versions ant\u00e9rieures est fig\u00e9e au moment de la publication et n\u2019est plus mise \u00e0 jour par la suite.</p>\n<h2 id=\"something-missing\"><a class=\"anchor\" href=\"/react/getting-started#something-missing\"></a>Quelque chose vous manque\u00a0? </h2>\n<p>Si quelque chose manque dans la documentation ou si vous en trouvez une partie d\u00e9routante, veuillez <a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/issues/new\">cr\u00e9er une <em>issue</em> sur le d\u00e9p\u00f4t de la documentation</a> avec vos suggestions d\u2019am\u00e9lioration, ou tweetez en mentionnant le <a class=\"external-link\" href=\"https://twitter.com/reactjs\">compte @reactjs</a>. Nous adorons avoir de vos nouvelles\u00a0!</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/getting-started.md\">Edit this page</a></p></div></article>", "path": "/react/getting-started", "nav": ["/react", "/react/add-react-to-a-website"]}, {"key": "Ajouter React \u00e0 un site web", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Utiliser React en fonction de vos besoins</p>\n<p>React a \u00e9t\u00e9 con\u00e7u d\u00e8s le d\u00e9part pour une adoption progressive, et <strong>vous pouvez utiliser React <em>a minima</em> ou autant que n\u00e9cessaire.</strong> Peut-\u00eatre souhaitez-vous juste ajouter un peu d\u2019interactivit\u00e9 \u00e0 une page existante. Les composants React sont une bonne solution pour \u00e7a.</p>\n<p>La majorit\u00e9 des sites web ne sont pas, et n\u2019ont pas besoin d\u2019\u00eatre, des applications web monopages <em>(Single-Page Application ou plus simplement SPA, NdT)</em>. <strong>Avec juste quelques lignes de code et sans outillage particulier</strong>, vous pouvez essayer React sur une petite partie de votre site web. Vous pourrez par la suite ajouter des composants suppl\u00e9mentaires ou limiter React \u00e0 quelques \u00e9l\u00e9ments dynamiques.</p>\n\n<ul>\n<li><a href=\"/react/add-react-to-a-website#add-react-in-one-minute\">Ajouter React en une minute</a></li>\n<li><a href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\">Optionnel\u00a0: Essayer React avec JSX</a> (aucun <em>bundler</em> n\u00e9cessaire\u00a0!)</li>\n</ul>\n<h2 id=\"add-react-in-one-minute\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#add-react-in-one-minute\"></a>Ajouter React en une minute </h2>\n<p>Dans cette partie, nous allons voir comment ajouter un composant React \u00e0 une page HTML existante. Vous pouvez suivre les \u00e9tapes avec votre propre site web, ou avec une page HTML vide pour vous entra\u00eener.</p>\n<p>Pas besoin d\u2019outils compliqu\u00e9s ni de faire des installations\u00a0: <strong>pour suivre cette section, vous avez juste besoin d\u2019une connexion \u00e0 internet et d\u2019une minute de votre temps.</strong></p>\n<p>Optionnel\u00a0: <a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/f6c882b6ae18bde42dcf6fdb751aae93495a2275.zip\">T\u00e9l\u00e9charger l\u2019exemple complet (2\u00a0Ko zipp\u00e9)</a></p>\n<h3 id=\"step-1-add-a-dom-container-to-the-html\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-1-add-a-dom-container-to-the-html\"></a>\u00c9tape 1\u00a0: ajouter un conteneur DOM \u00e0 votre HTML </h3>\n<p>Pour commencer, ouvrez la page HTML que vous souhaitez modifier. Ajoutez une balise <code class=\"language-javascript\">&lt;div&gt;</code> vide pour indiquer l\u2019endroit dans lequel vous souhaitez afficher quelque chose avec React. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token comment\">&lt;!-- ... code HTML existant ... --&gt;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button_container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"token comment\">&lt;!-- ... code HTML existant ... --&gt;</span></code></pre></div>\n<p>L\u2019attribut <code class=\"language-javascript\">id</code> de votre <code class=\"language-javascript\">&lt;div&gt;</code>, qui est unique, va vous permettre de manipuler cette balise depuis le code JavaScript afin d\u2019afficher un composant React dans celle-ci.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Vous pouvez placer une telle <code class=\"language-javascript\">&lt;div&gt;</code> \u00ab\u00a0conteneur\u00a0\u00bb <strong>o\u00f9 vous le souhaitez</strong> dans la balise <code class=\"language-javascript\">&lt;body&gt;</code>. Vous pouvez d\u2019ailleurs avoir autant de conteneurs DOM ind\u00e9pendants que vous le souhaitez dans la m\u00eame page. Il sont g\u00e9n\u00e9ralement vides, car React remplacera leur contenu existant de toutes fa\u00e7ons.</p>\n</div>\n<h3 id=\"step-2-add-the-script-tags\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-2-add-the-script-tags\"></a>\u00c9tape 2\u00a0: ajouter les balises de script </h3>\n<p>Ensuite, ajoutez trois balises <code class=\"language-javascript\">&lt;script&gt;</code> \u00e0 votre page HTML, juste avant la fermeture de la balise <code class=\"language-javascript\">&lt;/body&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\">  <span class=\"token comment\">&lt;!-- ... autres contenus HTML ... --&gt;</span>\n\n  <span class=\"token comment\">&lt;!-- Charge React --&gt;</span>\n  <span class=\"token comment\">&lt;!-- Remarque : pour le d\u00e9ploiement, remplacez \"development.js\"\n       par \"production.min.js\" --&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span>\n  <span class=\"token comment\">&lt;!-- Charge notre composant React --&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Les deux premi\u00e8res balises permettent de charger React, alors que la troisi\u00e8me charge le code de votre composant.</p>\n<h3 id=\"step-3-create-a-react-component\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-3-create-a-react-component\"></a>\u00c9tape 3\u00a0: cr\u00e9er un composant React </h3>\n<p>Cr\u00e9ez un fichier nomm\u00e9 <code class=\"language-javascript\">like_button.js</code> dans le m\u00eame dossier que votre page HTML.</p>\n<p>Ouvrez et copiez <strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\">le code de d\u00e9marrage</a></strong> et collez son contenu dans votre fichier.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Ce code d\u00e9finit un composant appel\u00e9 <code class=\"language-javascript\">LikeButton</code>. Ne vous en faites pas si vous ne comprenez pas son code tout de suite, nous aborderons les facettes de React ult\u00e9rieurement dans notre <a class=\"external-link\" href=\"https://fr.reactjs.org//tutorial/tutorial.html\">tutoriel pratique</a> et dans le <a href=\"/react/hello-world\">guide des fondamentaux</a>. Pour le moment, essayons simplement de l\u2019afficher \u00e0 l\u2019\u00e9cran\u00a0!</p>\n</div>\n<p>Ajoutez deux lignes \u00e0 la fin de <code class=\"language-javascript\">like_button.js</code>, apr\u00e8s <strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\">le code de d\u00e9marrage</a></strong>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ... le code de d\u00e9marrage que vous avez coll\u00e9 ...</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> domContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#like_button_container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>LikeButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> domContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Ces deux lignes de code vont remplacer le contenu de la <code class=\"language-javascript\">&lt;div&gt;</code> que nous avons ajout\u00e9e dans la premi\u00e8re \u00e9tape. Ainsi elles afficheront notre composant React sous forme de bouton \u00ab\u00a0J\u2019aime\u00a0\u00bb.</p>\n<h3 id=\"thats-it\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#thats-it\"></a>Et voil\u00e0\u00a0! </h3>\n<p>Il n\u2019y a pas de quatri\u00e8me \u00e9tape. <strong>Vous venez tout juste d\u2019ajouter votre premier composant React \u00e0 votre site web.</strong></p>\n<p>Pour plus d\u2019astuces concernant l\u2019int\u00e9gration de React, n\u2019h\u00e9sitez pas \u00e0 consulter les prochaines sections.</p>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605\">Voir le code source int\u00e9gral de l\u2019exemple</a></strong></p>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/f6c882b6ae18bde42dcf6fdb751aae93495a2275.zip\">T\u00e9l\u00e9charger le code source int\u00e9gral de l\u2019exemple (2\u00a0Ko zipp\u00e9)</a></strong></p>\n<h3 id=\"tip-reuse-a-component\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#tip-reuse-a-component\"></a>Astuce\u00a0: r\u00e9utiliser un composant </h3>\n<p>G\u00e9n\u00e9ralement, on souhaite afficher des composants React \u00e0 plusieurs endroits d\u2019une page HTML. Voici un exemple qui affiche le bouton \u00ab\u00a0J\u2019aime\u00a0\u00bb \u00e0 trois reprises et lui fournit quelques donn\u00e9es\u00a0:</p>\n<p><a class=\"external-link\" href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda\">Voir le code source int\u00e9gral de l\u2019exemple</a></p>\n<p><a class=\"external-link\" href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda/archive/9d0dd0ee941fea05fd1357502e5aa348abb84c12.zip\">T\u00e9l\u00e9charger le code source int\u00e9gral de l\u2019exemple (2\u00a0Ko zipp\u00e9)</a></p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette solution est souvent utilis\u00e9e lorsque les \u00e9l\u00e9ments de React doivent \u00eatre isol\u00e9s les uns des autres. Il est cependant plus facile d\u2019utiliser le principe de <a href=\"/react/components-and-props#composing-components\">composition de composants</a> au sein de votre code React.</p>\n</div>\n<h3 id=\"tip-minify-javascript-for-production\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#tip-minify-javascript-for-production\"></a>Astuce\u00a0: minifier votre JavaScript pour la production </h3>\n<p>Avant de d\u00e9ployer votre site web en production, gardez \u00e0 l\u2019esprit qu\u2019un JavaScript non-minifi\u00e9 risque de ralentir significativement le chargement de la page pour vos utilisateurs.</p>\n<p>Si vous minifiez d\u00e9j\u00e0 vos scripts applicatifs et si vous vous assurez de r\u00e9f\u00e9rencer les versions de React dont les noms se terminent en <code class=\"language-javascript\">production.min.js</code>, <strong>votre site sera pr\u00eat pour la production</strong>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Si vous n\u2019avez pas de minification d\u00e9j\u00e0 en place pour vos scripts, voici <a class=\"external-link\" href=\"https://gist.github.com/gaearon/42a2ffa41b8319948f9be4076286e1f3\">une fa\u00e7on de faire</a>.</p>\n<h2 id=\"optional-try-react-with-jsx\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\"></a>Optionnel\u00a0: essayer React avec JSX </h2>\n<p>Dans les exemples ci-dessus, nous utilisions uniquement les fonctionnalit\u00e9s prises en charge nativement par les navigateurs. C\u2019est pourquoi nous appelions une fonction JavaScript pour indiquer \u00e0 React ce qu\u2019il fallait afficher\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>createElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Affiche un bouton \u00ab J\u2019aime \u00bb</span>\n<span class=\"token keyword\">return</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> liked<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'J\u2019aime'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>N\u00e9anmoins, React nous offre aussi la possibilit\u00e9 d\u2019utiliser plut\u00f4t <a href=\"/react/introducing-jsx\">JSX</a>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Affiche un bouton \u00ab J\u2019aime \u00bb</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> liked<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    J\u2019aime\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ces deux extraits de code sont \u00e9quivalents. M\u00eame si la syntaxe <strong>JSX est <a href=\"/react/react-without-jsx\">compl\u00e8tement optionnelle</a></strong>, la plupart des d\u00e9veloppeur\u00b7euse\u00b7s React la trouvent tr\u00e8s pratique pour \u00e9crire du code  (avec React ou m\u00eame avec d\u2019autres biblioth\u00e8ques).</p>\n<p>Vous pouvez tester JSX en utilisant un <a class=\"external-link\" href=\"https://babeljs.io/en/repl#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=false&amp;code_lz=DwIwrgLhD2B2AEcDCAbAlgYwNYF4DeAFAJTw4B88EAFmgM4B0tAphAMoQCGETBe86WJgBMAXJQBOYJvAC-RGWQBQ8FfAAyaQYuAB6cFDhkgA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=es2015%2Creact%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=7.4.3\">convertisseur en ligne</a>.</p>\n<h3 id=\"quickly-try-jsx\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#quickly-try-jsx\"></a>Essayer JSX en un clin d\u2019\u0153il </h3>\n<p>La fa\u00e7on la plus simple et rapide de tester JSX dans votre projet est d\u2019ajouter la balise <code class=\"language-javascript\">&lt;script&gt;</code> ci-dessous \u00e0 votre page\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/babel-standalone@6/babel.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Vous pouvez d\u00e9sormais utiliser JSX dans les fichiers charg\u00e9s par n\u2019importe quelle balise <code class=\"language-javascript\">&lt;script&gt;</code> simplement en lui ajoutant l\u2019attribut <code class=\"language-javascript\">type=\"text/babel\"</code>. Vous pouvez t\u00e9l\u00e9charger et tester cet exemple contenant un <a class=\"external-link\" href=\"https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html\">fichier HTML utilisant JSX</a>.</p>\n<p>Cette approche est acceptable pour se former ou r\u00e9aliser des d\u00e9mos simples. Cependant, elle va ralentir l\u2019affichage de votre site, elle n\u2019est donc <strong>pas adapt\u00e9e pour la production</strong>. Lorsque vous serez pr\u00eat\u00b7e \u00e0 aller plus loin, supprimez la balise <code class=\"language-javascript\">&lt;script&gt;</code> et l\u2019attribut <code class=\"language-javascript\">type=\"text/babel\"</code> que vous venez d\u2019ajouter. Dans la section suivante, nous verrons plut\u00f4t comment configurer le pr\u00e9processeur JSX afin de convertir automatiquement toutes les balises <code class=\"language-javascript\">&lt;script&gt;</code>.</p>\n<h3 id=\"add-jsx-to-a-project\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#add-jsx-to-a-project\"></a>Ajouter JSX \u00e0 votre projet </h3>\n<p>L\u2019ajout de JSX \u00e0 votre projet ne n\u00e9cessite pas d\u2019outils compliqu\u00e9s comme un <em>bundler</em> ou un serveur de d\u00e9veloppement. Cela ressemble plus <strong>\u00e0 l\u2019ajout d\u2019un pr\u00e9processeur CSS</strong>. Le seul outil indispensable est <a class=\"external-link\" href=\"https://nodejs.org/fr/\">Node.js</a>, qui doit \u00eatre install\u00e9 sur votre ordinateur.</p>\n<p>Dans un terminal (invite de commande), d\u00e9placez-vous dans le dossier de votre projet, et copiez-collez ces deux commandes\u00a0:</p>\n<ol>\n<li><strong>\u00c9tape 1\u00a0:</strong> ex\u00e9cutez <code class=\"language-javascript\">npm init -y</code> (si \u00e7a ne fonctionne pas, <a class=\"external-link\" href=\"https://gist.github.com/gaearon/246f6380610e262f8a648e3e51cad40d\">voici un correctif</a>)</li>\n<li><strong>\u00c9tape 2\u00a0:</strong> ex\u00e9cutez <code class=\"language-javascript\">npm install babel-cli@6 babel-preset-react-app@3</code></li>\n</ol>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Nous <strong>utilisons npm uniquement  pour installer le pr\u00e9processeur JSX</strong> (vous n\u2019en aurez besoin pour rien d\u2019autre). React et le code applicatif peuvent rester sous la forme de balises <code class=\"language-javascript\">&lt;script&gt;</code> sans modification.</p>\n</div>\n<p>Bravo\u00a0! Vous venez d\u2019ajouter <strong>une configuration JSX de production</strong> \u00e0 votre projet.</p>\n<h3 id=\"run-jsx-preprocessor\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#run-jsx-preprocessor\"></a>Lancer le pr\u00e9processeur JSX </h3>\n<p>Cr\u00e9ez un dossier nomm\u00e9 <code class=\"language-javascript\">src</code> et lancez la commande suivante dans le terminal\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">npx babel --watch src --out-dir . --presets react-app/prod</code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">npx</code> n\u2019est pas une faute de frappe, il s\u2019agit d\u2019un <a class=\"external-link\" href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\">outil d\u2019ex\u00e9cution de paquet fourni avec npm 5.2+</a> <em>(\u201dpackage runner tool\u201d, NdT)</em>.</p>\n<p>Si le message d\u2019erreur <em>\u201dYou have mistakenly installed the <code class=\"language-javascript\">babel</code> package\u201d</em> appara\u00eet, vous avez peut-\u00eatre loup\u00e9 <a href=\"/react/add-react-to-a-website#add-jsx-to-a-project\">l\u2019\u00e9tape pr\u00e9c\u00e9dente</a>. Dans le m\u00eame dossier, recommencez l\u2019op\u00e9ration et essayez de nouveau.</p>\n</div>\n<p>Cette commande surveille votre JSX en continu, inutile donc d\u2019attendre qu\u2019elle se termine.</p>\n<p>Dor\u00e9navant, si \u00e0 partir du <strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/c8e112dc74ac44aac4f673f2c39d19d1/raw/09b951c86c1bf1116af741fa4664511f2f179f0a/like_button.js\">code de d\u00e9marrage JSX</a></strong>, vous cr\u00e9ez un fichier nomm\u00e9 <code class=\"language-javascript\">src/like_button.js</code>, le pr\u00e9processeur va produire un fichier traduit <code class=\"language-javascript\">like_button.js</code>, avec du code JavaScript exploitable par le navigateur. Ce fichier sera mis \u00e0 jour \u00e0 chaque modification de votre fichier JSX original.</p>\n<p>Et en bonus, \u00e7a vous permet aussi d\u2019utiliser des syntaxes JavaScript modernes comme les classes, sans vous soucier de la compatibilit\u00e9 avec d\u2019anciens navigateurs. L\u2019outil que nous venons d\u2019utiliser se nomme Babel, et vous pouvez en savoir plus sur lui en allant sur <a class=\"external-link\" href=\"https://babeljs.io/docs/en/babel-cli/\">sa documentation</a>.</p>\n<p>Si vous vous sentez \u00e0 l\u2019aise avec les outils de compilation et souhaitez en apprendre plus, la <a href=\"/react/create-a-new-react-app\">partie suivante</a> d\u00e9crit les outils les plus populaires et les plus accessibles de la chaine de compilation. Si ce n\u2019est pas le cas, les balises d\u00e9crites pr\u00e9c\u00e9demment fonctionneront \u00e0 merveille\u00a0!</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/add-react-to-a-website.md\">Edit this page</a></p></div></article>", "path": "/react/add-react-to-a-website", "nav": ["/react/getting-started", "/react/create-a-new-react-app"]}, {"key": "Cr\u00e9er une nouvelle appli React", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Utilisez une bo\u00eete \u00e0 outils int\u00e9gr\u00e9e pour la meilleure exp\u00e9rience utilisateur et d\u00e9veloppeur possible.</p>\n<p>Cette page d\u00e9crit quelques bo\u00eetes \u00e0 outils populaires qui facilitent les t\u00e2ches telles que\u00a0:</p>\n<ul>\n<li>La mont\u00e9e \u00e0 l\u2019\u00e9chelle avec de nombreux fichiers et composants.</li>\n<li>L\u2019utilisation de biblioth\u00e8ques tierces depuis npm.</li>\n<li>La d\u00e9tection pr\u00e9coce des erreurs courantes.</li>\n<li>L\u2019\u00e9dition \u00e0 la vol\u00e9e du CSS et du JS en d\u00e9veloppement.</li>\n<li>L\u2019optimisation pour la production.</li>\n</ul>\n<p>Les bo\u00eetes \u00e0 outils recommand\u00e9es sur cette page <strong>ne n\u00e9cessitent aucune configuration pour d\u00e9marrer</strong>.</p>\n<h2 id=\"you-might-not-need-a-toolchain\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#you-might-not-need-a-toolchain\"></a>Vous n\u2019avez peut-\u00eatre pas besoin d\u2019une bo\u00eete \u00e0 outils </h2>\n<p>Si vous ne rencontrez pas les probl\u00e8mes d\u00e9crits ci-dessus ou si vous n\u2019\u00eates pas encore \u00e0 l\u2019aise avec l\u2019utilisation d\u2019outils JavaScript, envisagez <a href=\"/react/add-react-to-a-website\">d\u2019ajouter React comme une simple balise <code class=\"language-javascript\">&lt;script&gt;</code> sur une page HTML</a>, \u00e9ventuellement <a href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\">avec du JSX</a>.</p>\n<p>C\u2019est \u00e9galement <strong>la fa\u00e7on la plus simple d\u2019int\u00e9grer React au sein d\u2019un site web existant</strong>. Vous pourrez toujours \u00e9tendre votre outillage si \u00e7a vous semble utile\u00a0!</p>\n<h2 id=\"recommended-toolchains\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#recommended-toolchains\"></a>Bo\u00eetes \u00e0 outils recommand\u00e9es </h2>\n<p>L\u2019\u00e9quipe React recommande en premier lieu ces solutions\u00a0:</p>\n<ul>\n<li>Si vous <strong>apprenez React</strong> ou <strong>cr\u00e9ez une nouvelle <a href=\"/react/glossary#single-page-application\">application web monopage</a></strong>, alors utilisez <a href=\"/react/create-a-new-react-app#create-react-app\">Create React App</a>.</li>\n<li>Si vous construisez un <strong>site web rendu c\u00f4t\u00e9 serveur avec Node.js</strong>, essayez <a href=\"/react/create-a-new-react-app#nextjs\">Next.js</a>.</li>\n<li>Si vous construisez un <strong>site web statique orient\u00e9 contenu</strong>, essayez <a href=\"/react/create-a-new-react-app#gatsby\">Gatsby</a>.</li>\n<li>Si vous construisez une <strong>biblioth\u00e8que de composants</strong> ou une <strong>int\u00e9gration avec du code d\u00e9j\u00e0 existant</strong>, essayez <a href=\"/react/create-a-new-react-app#more-flexible-toolchains\">des bo\u00eetes \u00e0 outils plus flexibles</a>.</li>\n</ul>\n<h3 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#create-react-app\"></a>Create React App </h3>\n<p><a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a> est un environnement confortable pour <strong>apprendre React</strong>, et constitue la meilleure option pour d\u00e9marrer <strong>une nouvelle <a href=\"/react/glossary#single-page-application\">application web monopage</a></strong> en React.</p>\n<p>Il configure votre environnement de d\u00e9veloppement de fa\u00e7on \u00e0 vous permettre d\u2019utiliser les derni\u00e8res fonctionnalit\u00e9s de JavaScript, propose une exp\u00e9rience d\u00e9veloppeur agr\u00e9able et optimise votre application pour la production. Vous aurez besoin de <a class=\"external-link\" href=\"https://nodejs.org/en/\">Node &gt;= 8.10 et de npm &gt;= 5.6</a> sur votre machine. Pour cr\u00e9er un projet, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx create-react-app mon-app\n<span class=\"token builtin class-name\">cd</span> mon-app\n<span class=\"token function\">npm</span> start</code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque\u00a0:</strong>\n<p><code class=\"language-javascript\">npx</code> sur la premi\u00e8re ligne n\u2019est pas une faute de frappe \u2014 c\u2019est un <a class=\"external-link\" href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\">ex\u00e9cuteur de paquets qui est inclus dans npm 5.2+</a>.</p>\n</div>\n<p>Create React App ne prend pas en charge la logique c\u00f4t\u00e9 serveur ni les bases de donn\u00e9es ; il cr\u00e9e simplement une cha\u00eene de construction pour la partie frontale, de sorte que vous pouvez utiliser le serveur de votre choix. Sous le capot, il utilise <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> et <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a>, mais vous n\u2019avez pas besoin de conna\u00eetre ces outils.</p>\n<p>Lorsque vous \u00eates pr\u00eat\u00b7e \u00e0 d\u00e9ployer en production, ex\u00e9cutez <code class=\"language-javascript\">npm run build</code> pour cr\u00e9er une version optimis\u00e9e de votre application dans le r\u00e9pertoire <code class=\"language-javascript\">build</code>. Vous pouvez en apprendre davantage sur Create React App <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app#create-react-app--\">dans son README</a> et son <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/\">guide utilisateur</a>.</p>\n<h3 id=\"nextjs\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#nextjs\"></a>Next.js </h3>\n<p><a class=\"external-link\" href=\"https://nextjs.org/\">Next.js</a> est un framework populaire et l\u00e9ger pour les <strong>applications statiques rendues c\u00f4t\u00e9 serveur</strong> construites avec React. Il fournit des solutions pr\u00eates \u00e0 l\u2019emploi pour <strong>les styles et le routage</strong>, et suppose que vous utilisez <a class=\"external-link\" href=\"https://nodejs.org/\">Node.js</a> comme environnement serveur.</p>\n<p>Apprenez Next.js gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://nextjs.org/learn/\">son guide officiel</a>.</p>\n<h3 id=\"gatsby\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#gatsby\"></a>Gatsby </h3>\n<p><a class=\"external-link\" href=\"https://www.gatsbyjs.org/\">Gatsby</a> est la meilleure option pour cr\u00e9er des <strong>sites web statiques</strong> avec React. Il vous permet d\u2019utiliser des composants React, mais g\u00e9n\u00e8re du HTML et du CSS pr\u00e9-rendus afin de garantir le temps de chargement le plus rapide.</p>\n<p>Apprenez Gatsby gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://www.gatsbyjs.org/docs/\">son guide officiel</a> et \u00e0 une <a class=\"external-link\" href=\"https://www.gatsbyjs.org/docs/gatsby-starters/\">collection de kits de d\u00e9marrage</a>.</p>\n<h3 id=\"more-flexible-toolchains\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#more-flexible-toolchains\"></a>Bo\u00eetes \u00e0 outils plus flexibles </h3>\n<p>Les bo\u00eetes \u00e0 outils suivantes offrent plus de flexibilit\u00e9 et de choix. Nous les recommandons pour les utilisateurs exp\u00e9riment\u00e9s\u00a0:</p>\n<ul>\n<li><strong><a class=\"external-link\" href=\"https://neutrinojs.org/\">Neutrino</a></strong> combine la puissance de <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a> avec la simplicit\u00e9 des pr\u00e9r\u00e9glages. Il inclut un pr\u00e9r\u00e9glage pour les <a class=\"external-link\" href=\"https://neutrinojs.org/packages/react/\">applications React</a> et les <a class=\"external-link\" href=\"https://neutrinojs.org/packages/react-components/\">composants React</a>.</li>\n<li><strong><a class=\"external-link\" href=\"https://github.com/insin/nwb\">nwb</a></strong> est particuli\u00e8rement utile pour <a class=\"external-link\" href=\"https://github.com/insin/nwb/blob/master/docs/guides/ReactComponents.md#developing-react-components-and-libraries-with-nwb\">publier des composants React sur npm</a>. Il <a class=\"external-link\" href=\"https://github.com/insin/nwb/blob/master/docs/guides/ReactApps.md#developing-react-apps-with-nwb\">peut \u00e9galement \u00eatre utilis\u00e9</a> pour cr\u00e9er des applications React.</li>\n<li><strong><a class=\"external-link\" href=\"https://nx.dev/react\">Nx</a></strong> est une bo\u00eete \u00e0 outils pour le d\u00e9veloppements de monorepos full-stack, avec une prise en charge int\u00e9gr\u00e9e de React, next.js, <a class=\"external-link\" href=\"https://expressjs.com/\">Express</a> et plus encore.</li>\n<li><strong><a class=\"external-link\" href=\"https://parceljs.org/\">Parcel</a></strong> est un <em>bundler</em> d\u2019applications web rapide et sans configuration qui <a class=\"external-link\" href=\"https://parceljs.org/recipes.html#react\">fonctionne avec React</a>.</li>\n<li><strong><a class=\"external-link\" href=\"https://github.com/jaredpalmer/razzle\">Razzle</a></strong> est un framework de rendu c\u00f4t\u00e9 serveur qui ne requiert aucune configuration, mais offre plus de flexibilit\u00e9 que Next.js.</li>\n</ul>\n<h2 id=\"creating-a-toolchain-from-scratch\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#creating-a-toolchain-from-scratch\"></a>Cr\u00e9er une bo\u00eete \u00e0 outils \u00e0 partir de z\u00e9ro </h2>\n<p>Une bo\u00eete \u00e0 outils de construction en JavaScript comprend g\u00e9n\u00e9ralement\u00a0:</p>\n<ul>\n<li>Un <strong>gestionnaire de paquets</strong>, tel que <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> ou <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>. Il vous permet de tirer parti d\u2019un vaste \u00e9cosyst\u00e8me de paquets tiers, et de les installer ou les mettre \u00e0 jour facilement.</li>\n<li>Un <strong><em>bundler</em></strong>, tel que <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a> ou <a class=\"external-link\" href=\"https://parceljs.org/\">Parcel</a>. Il vous permet d\u2019\u00e9crire du code modulaire et de le regrouper en petits paquets permettant d\u2019optimiser le temps de chargement.</li>\n<li>Un <strong>compilateur</strong> tel que <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a>. Il vous permet d\u2019\u00e9crire du JavaScript moderne qui fonctionnera quand m\u00eame dans les navigateurs les plus anciens.</li>\n</ul>\n<p>Si vous pr\u00e9f\u00e9rez configurer votre propre bo\u00eete \u00e0 outils JavaScript \u00e0 partir de z\u00e9ro, <a class=\"external-link\" href=\"https://blog.usejournal.com/creating-a-react-app-from-scratch-f3c693b84658\">jetez un \u0153il \u00e0 ce guide</a> qui re-cr\u00e9e certaines des fonctionnalit\u00e9s de Create React App.</p>\n<p>Pensez \u00e0 vous assurer que votre outillage personnalis\u00e9 <a href=\"/react/optimizing-performance#use-the-production-build\">est correctement configur\u00e9 pour la production</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/create-a-new-react-app.md\">Edit this page</a></p></div></article>", "path": "/react/create-a-new-react-app", "nav": ["/react/add-react-to-a-website", "/react/cdn-links"]}, {"key": "Liens CDN", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React et ReactDOM sont tous deux accessibles depuis un CDN.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Les versions ci-dessus ne doivent \u00eatre utilis\u00e9es qu\u2019\u00e0 des fins de d\u00e9veloppement et ne sont pas adapt\u00e9es \u00e0 l\u2019utilisation en production. Les versions minifi\u00e9es et optimis\u00e9es pour la production sont disponibles ici\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Pour charger une version sp\u00e9cifique de <code class=\"language-javascript\">react</code> et <code class=\"language-javascript\">react-dom</code>, il suffit de remplacer le <code class=\"language-javascript\">16</code> par la version souhait\u00e9e.</p>\n<h3 id=\"why-the-crossorigin-attribute\"><a class=\"anchor\" href=\"/react/cdn-links#why-the-crossorigin-attribute\"></a>Pourquoi utiliser l\u2019attribut <code class=\"language-javascript\">crossorigin</code>\u00a0? </h3>\n<p>Si vous chargez React depuis un CDN, nous vous recommandons de conserver l\u2019attribut <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/HTML/Reglages_des_attributs_CORS\"><code class=\"language-javascript\">crossorigin</code></a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Nous vous conseillons \u00e9galement de v\u00e9rifier que le CDN que vous utilisez d\u00e9finit bien l\u2019en-t\u00eate HTTP <code class=\"language-javascript\">Access-Control-Allow-Origin: *</code>\u00a0:</p>\n<p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/89baed0a6540f29e954065ce04661048/13ae7/cdn-cors-header.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/89baed0a6540f29e954065ce04661048/13ae7/cdn-cors-header.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Cela am\u00e9liore l\u2019<a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/07/26/error-handling-in-react-16.html\">exp\u00e9rience de gestion des erreurs</a> avec React 16 et des versions ult\u00e9rieures.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/cdn-links.md\">Edit this page</a></p></div></article>", "path": "/react/cdn-links", "nav": ["/react/create-a-new-react-app", "/react/release-channels"]}, {"key": "Canaux de sortie", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React d\u00e9pend d\u2019une communaut\u00e9 open source florissante pour signaler des bugs, ouvrir des <em>pull requests</em> et <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">soumettre des RFC</a>. Afin d\u2019encourager des retours efficaces nous partageons parfois des builds sp\u00e9ciaux de React qui comportent des fonctionnalit\u00e9s encore officieuses.</p>\n<div class=\"blockquote\">\n<strong>Ce document sera surtout pertinent pour les d\u00e9veloppeur\u00b7se\u00b7s qui travaillent sur des frameworks, des biblioth\u00e8ques ou de l\u2019outillage de d\u00e9veloppement.  Les personnes qui utilisent React principalement pour construire des applications destin\u00e9es \u00e0 des utilisateurs finaux ne devraient pas avoir \u00e0 se pr\u00e9occuper de nos canaux de sortie.</strong>\n</div>\n<p>Chaque canal de sortie React est con\u00e7u pour des cas d\u2019usages bien sp\u00e9cifiques\u00a0:</p>\n<ul>\n<li><a href=\"/react/release-channels#latest-channel\"><strong>Latest</strong></a> fournit les versions stables de React, conformes \u00e0 semver.  C\u2019est ce que vous obtenez en installant React depuis npm.  C\u2019est le canal que vous utilisez d\u00e9j\u00e0 aujourd\u2019hui. <strong>Utilisez ce canal pour toute application React visant des utilisateurs finaux.</strong></li>\n<li><a href=\"/react/release-channels#next-channel\"><strong>Next</strong></a> est bas\u00e9e sur la branche <code class=\"language-javascript\">master</code> du d\u00e9p\u00f4t de code source de React.  Consid\u00e9rez-le comme des versions candidates de la prochaine version semver mineure.  Utilisez-le pour faire des tests d\u2019int\u00e9gration entre React et des projets tiers.</li>\n<li><a href=\"/react/release-channels#experimental-channel\"><strong>Experimental</strong></a> comprend les API et fonctionnalit\u00e9s exp\u00e9rimentales qu\u2019on ne trouve pas dans les versions stables.  C\u2019est l\u00e0 aussi bas\u00e9 sur la branche <code class=\"language-javascript\">master</code>, mais des drapeaux de fonctionnalit\u00e9s suppl\u00e9mentaires ont \u00e9t\u00e9 activ\u00e9s.  Utilisez ce canal pour essayer des fonctionnalit\u00e9s \u00e0 venir en amont de leur sortie officielle.</li>\n</ul>\n<p>Toutes ces versions sont publi\u00e9es sur npm, mais seul <em>Latest</em> utilise <a href=\"/react/faq-versioning\">une gestion s\u00e9mantique des versions</a>. Les pr\u00e9-versions (celles des canaux <em>Next</em> et <em>Experimental</em>) ont des versions dont l\u2019identifiant est un hash bas\u00e9 sur leur contenu, par exemple <code class=\"language-javascript\">0.0.0-1022ee0ec</code> pour <em>Next</em> et <code class=\"language-javascript\">0.0.0-experimental-1022ee0ec</code> pour <em>Experimental</em>.</p>\n<p><strong>Latest est le seul canal de sortie officiellement autoris\u00e9 pour des applications visant les utilisateurs finaux.</strong>  Les sorties des canaux <em>Next</em> et <em>Experimental</em> sont fournies dans une optique de tests uniquement, et leur comportement est susceptible de varier d\u2019une sortie \u00e0 l\u2019autre.  Elles ne respectent pas le protocole semver que nous utilisons pour les sorties du canal <em>Latest</em>.</p>\n<p>En publiant les pr\u00e9-versions sur le m\u00eame r\u00e9f\u00e9rentiel que pour les versions stables, nous pouvons tirer parti des nombreux outils qui se basent sur npm pour fonctionner, tels que <a class=\"external-link\" href=\"https://unpkg.com\">unpkg</a> et <a class=\"external-link\" href=\"https://codesandbox.io\">CodeSandbox</a>.</p>\n<h3 id=\"latest-channel\"><a class=\"anchor\" href=\"/react/release-channels#latest-channel\"></a>Canal <em>Latest</em> </h3>\n<p>Le canal <em>Latest</em> est utilis\u00e9 pour les versions stables de React.  Il correspond \u00e0 l\u2019\u00e9tiquette <code class=\"language-javascript\">latest</code> sur npm.  C\u2019est le canal recommand\u00e9 pour toute appli React propos\u00e9e \u00e0 de v\u00e9ritables utilisateurs.</p>\n<p><strong>Si vous n\u2019\u00eates pas s\u00fbr\u00b7e du canal que vous devriez utiliser, alors c\u2019est <em>Latest</em>.</strong>  Si vous d\u00e9veloppez avec React, c\u2019est ce que vous utilisez d\u00e9j\u00e0.</p>\n<p>Vous pouvez vous attendre \u00e0 ce que les mises \u00e0 jour sur <em>Latest</em> soient extr\u00eamement stables.  On y suit un protocole s\u00e9mantique de gestion des versions.  Vous pouvez en apprendre davantage sur nos engagements en termes de stabilit\u00e9 et de migration incr\u00e9mentielle en consultant notre <a href=\"/react/faq-versioning\">politique de gestion des versions</a>.</p>\n<h3 id=\"next-channel\"><a class=\"anchor\" href=\"/react/release-channels#next-channel\"></a>Canal <em>Next</em> </h3>\n<p>Le canal <em>Next</em> est un canal de pr\u00e9-version qui piste la branche <code class=\"language-javascript\">master</code> du d\u00e9p\u00f4t React.  Nous utilisons les pr\u00e9-versions du canal <em>Next</em> comme des versions candidates pour le canal <em>Latest</em>.  Vous pouvez imaginer <em>Next</em> comme un sur-ensemble de <em>Latest</em>, mis \u00e0 jour plus fr\u00e9quemment.</p>\n<p>L\u2019ampleur des changements entre la version <em>Next</em> la plus r\u00e9cente et la derni\u00e8re version <em>Latest</em> est \u00e0 peu pr\u00e8s du m\u00eame ordre que ce que vous trouveriez entre deux versions semver mineures.  En revanche, <strong>le canal <em>Next</em> ne respecte pas la gestion s\u00e9mantique des versions.</strong>  Vous \u00eates susceptible d\u2019y rencontrer des ruptures de compatibilit\u00e9 ascendante d\u2019une version \u00e0 la suivante.</p>\n<p><strong>N\u2019utilisez pas les pr\u00e9-versions dans des applications pour utilisateurs finaux.</strong></p>\n<p>Les sorties de <em>Next</em> sont publi\u00e9es avec l\u2019\u00e9tiquette <code class=\"language-javascript\">next</code> sur npm.  Les num\u00e9ros de versions sont g\u00e9n\u00e9r\u00e9s sur la base d\u2019un hash de leur contenu, par exemple <code class=\"language-javascript\">0.0.0-1022ee0ec</code>.</p>\n<h4 id=\"using-the-next-channel-for-integration-testing\"><a class=\"anchor\" href=\"/react/release-channels#using-the-next-channel-for-integration-testing\"></a>Utiliser le canal <em>Next</em> pour des tests d\u2019int\u00e9gration </h4>\n<p>Le canal <em>Next</em> est con\u00e7u pour permettre des tests d\u2019int\u00e9gration entre React et d\u2019autres projets qui se basent dessus.</p>\n<p>Toutes les modifications apport\u00e9es \u00e0 React passent par une phase pouss\u00e9e de tests internes avant d\u2019\u00eatre publi\u00e9es.  Cependant, l\u2019\u00e9cosyst\u00e8me React rec\u00e8le une myriade d\u2019environnements et de configurations, et il nous est parfaitement impossible de tester chaque combinaison.</p>\n<p>Si vous \u00eates l\u2019auteur\u00b7e d\u2019une solution tierce pour React (framework, biblioth\u00e8que, outil de d\u00e9veloppement ou d\u2019autres projets de type infrastructurel), vous pouvez nous aider \u00e0 pr\u00e9server la stabilit\u00e9 de React pour vos utilisateurs et la communaut\u00e9 React toute enti\u00e8re en ex\u00e9cutant r\u00e9guli\u00e8rement votre suite de tests avec les derni\u00e8res modifications en date.  Si cela vous int\u00e9resse, suivez ces \u00e9tapes\u00a0:</p>\n<ul>\n<li>Mettez en place une t\u00e2che p\u00e9riodique au sein de votre plate-forme pr\u00e9f\u00e9r\u00e9e d\u2019int\u00e9gration continue.  On trouve ce type d\u2019ex\u00e9cutions p\u00e9riodiques tant dans <a class=\"external-link\" href=\"https://circleci.com/docs/2.0/triggers/#scheduled-builds\">CircleCI</a> que dans <a class=\"external-link\" href=\"https://docs.travis-ci.com/user/cron-jobs/\">Travis CI</a>.</li>\n<li>\n<p>Dans la t\u00e2che, mettez \u00e0 jour les modules React \u00e0 partir de la version la plus r\u00e9cente du canal <em>Next</em>, gr\u00e2ce \u00e0 l\u2019\u00e9tiquette <code class=\"language-javascript\">next</code> sur npm.  Avec la CLI de npm\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">npm update react@next react-dom@next</code></pre></div>\n<p>Ou avec Yarn\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">yarn upgrade react@next react-dom@next</code></pre></div>\n</li>\n<li>Ex\u00e9cutez votre suite de tests avec les modules ainsi mis \u00e0 jour.</li>\n<li>Si tout fonctione, super\u00a0!  Vous pouvez vous attendre \u00e0 ce que votre projet continue \u00e0 fonctionner avec la prochaine version mineure de React.</li>\n<li>Si quelque chose casse de fa\u00e7on inattendue, merci de nous le signaler en <a class=\"external-link\" href=\"https://github.com/facebook/react/issues\">cr\u00e9ant un ticket</a>.</li>\n</ul>\n<p>Le projet Next.js (promis, on n\u2019a pas fait expr\u00e8s\u00a0!) utilise cette approche.  Vous pouvez consulter leur <a class=\"external-link\" href=\"https://github.com/zeit/next.js/blob/c0a1c0f93966fe33edd93fb53e5fafb0dcd80a9e/.circleci/config.yml\">configuration CircleCI</a> \u00e0 titre d\u2019exemple.</p>\n<h3 id=\"experimental-channel\"><a class=\"anchor\" href=\"/react/release-channels#experimental-channel\"></a>Canal <em>Experimental</em> </h3>\n<p>Tout comme <em>Next</em>, le canal <em>Experimental</em> est un canal de pr\u00e9-versions qui piste la branche <code class=\"language-javascript\">master</code> du d\u00e9p\u00f4t React.  Mais contrairement \u00e0 <em>Next</em>, les sorties sur <em>Experimental</em> comportent des fonctionnalit\u00e9s et API qui ne sont pas encore pr\u00eates \u00e0 \u00eatre diffus\u00e9es plus largement.</p>\n<p>En g\u00e9n\u00e9ral, une mise \u00e0 jour sur <em>Next</em> est accompagn\u00e9e par une mise \u00e0 jour correspondante sur <em>Experimental</em>.  Elles sont bas\u00e9es sur la m\u00eame r\u00e9vision de source, mais sont construites avec des jeux distincts de drapeaux de fonctionnalit\u00e9s.</p>\n<p>Les versions sur <em>Experimental</em> peuvent diff\u00e9rer consid\u00e9rablement de celles sur <em>Next</em> et <em>Latest</em>. <strong>N\u2019utilisez pas les pr\u00e9-versions <em>Experimental</em> dans les applications pour utilisateurs finaux.</strong>  Vous pouvez vous attendre \u00e0 des ruptures fr\u00e9quentes de compatibilit\u00e9 ascendante dans les sorties du canal <em>Experimental</em>.</p>\n<p>Les sorties de <em>Experimental</em> sont publi\u00e9es avec l\u2019\u00e9tiquette <code class=\"language-javascript\">experimental</code> sur npm.  Les num\u00e9ros de versions sont g\u00e9n\u00e9r\u00e9s sur la base d\u2019un hash de leur contenu, par exemple <code class=\"language-javascript\">0.0.0-experimental-1022ee0ec</code>.</p>\n<h4 id=\"what-goes-into-an-experimental-release\"><a class=\"anchor\" href=\"/react/release-channels#what-goes-into-an-experimental-release\"></a>Que trouve-t-on dans une sortie <em>Experimental</em>\u00a0? </h4>\n<p>Les fonctionnalit\u00e9s exp\u00e9rimentales ne sont pas encore pr\u00eates \u00e0 \u00eatre livr\u00e9es \u00e0 un large public, et sont susceptibles de changer radicalement d\u2019ici leur finalisation.  Certaines exp\u00e9riences n\u2019aboutiront peut-\u00eatre m\u00eame jamais\u2014c\u2019est justement pour tester la viabilit\u00e9 de changements propos\u00e9s que nous avons ces exp\u00e9riences.</p>\n<p>Par exemple, si le canal <em>Experimental</em> avait exist\u00e9 quand nous avons annonc\u00e9 les Hooks, nous aurions sorti les Hooks sur le canal <em>Experimental</em> plusieurs semaines avant qu\u2019ils deviennent disponibles dans <em>Latest</em>.</p>\n<p>Vous trouverez peut-\u00eatre utile de lancer des tests d\u2018int\u00e9gration avec <em>Experimental</em>.  Libre \u00e0 vous.  Ceci dit, gardez bien \u00e0 l\u2019esprit que <em>Experimental</em> est encore moins stable que <em>Next</em>. <strong>Nous ne garantissons aucune stabilit\u00e9 d\u2019une version de <em>Experimental</em> \u00e0 une autre.</strong></p>\n<h4 id=\"how-can-i-learn-more-about-experimental-features\"><a class=\"anchor\" href=\"/react/release-channels#how-can-i-learn-more-about-experimental-features\"></a>Comment en apprendre davantage sur les fonctionnalit\u00e9s exp\u00e9rimentales\u00a0? </h4>\n<p>Les fonctionnalit\u00e9s exp\u00e9rimentales ne sont pas n\u00e9cessairement document\u00e9es.  Le plus souvent, les exp\u00e9riences ne sont document\u00e9es qu\u2019une fois qu\u2019elles sont sur le point d\u2019\u00eatre livr\u00e9es dans <em>Next</em> ou <em>Latest</em>.</p>\n<p>Si une fonctionnalit\u00e9 n\u2019est pas document\u00e9e, elle peut toutefois \u00eatre accompagn\u00e9e d\u2019une <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">RFC</a>.</p>\n<p>Lorsque nous sommes pr\u00eats \u00e0 annoncer de nouvelles exp\u00e9riences, nous en parlons sur le <a class=\"external-link\" href=\"https://fr.reactjs.org//blog\">blog React</a>, mais \u00e7a ne veut pas dire que nous annon\u00e7ons chaque exp\u00e9rience.</p>\n<p>Vous pouvez toujours vous r\u00e9f\u00e9rer \u00e0 l\u2019<a class=\"external-link\" href=\"https://github.com/facebook/react/commits/master\">historique</a> de notre d\u00e9p\u00f4t public sur GitHub pour une liste exhaustive des modifications.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/release-channels.md\">Edit this page</a></p></div></article>", "path": "/react/release-channels", "nav": ["/react/cdn-links", "/react/hello-world"]}]}, {"key": "Fondamentaux", "values": [{"key": "1. Bonjour, monde\u00a0!", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Le plus petit exemple de React ressemble \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Il affiche un titre qui dit \u00ab\u00a0Bonjour, monde\u00a0!\u00a0\u00bb sur la page.</p>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/hello-world\">Essayer sur CodePen</a></strong></p>\n<p>Cliquez sur le lien ci-dessus pour ouvrir un \u00e9diteur en ligne. Vous \u00eates libres de faire quelques changements et de voir comment ils affectent l\u2019affichage. La plupart des pages de ce guide auront des exemples modifiables comme celui-ci.</p>\n<h2 id=\"how-to-read-this-guide\"><a class=\"anchor\" href=\"/react/hello-world#how-to-read-this-guide\"></a>Comment lire ce guide </h2>\n<p>Dans ce guide, nous examinerons les blocs qui constituent une application React\u00a0: les \u00e9l\u00e9ments et les composants. Une fois que vous les aurez ma\u00eetris\u00e9s, vous pourrez cr\u00e9er des applications complexes \u00e0 partir de petits blocs r\u00e9utilisables.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Ce guide est destin\u00e9 aux personnes qui pr\u00e9f\u00e8rent <strong>apprendre \u00e9tape par \u00e9tape</strong>. Si vous pr\u00e9f\u00e9rez apprendre par la pratique, allez voir notre <a class=\"external-link\" href=\"https://fr.reactjs.org//tutorial/tutorial.html\">tutoriel</a>. Vous trouverez peut-\u00eatre que les deux sont compl\u00e9mentaires.</p>\n</div>\n<p>Ceci est le premier chapitre d\u2019un guide \u00e9tape par \u00e9tape \u00e0 propos des concepts principaux de React. Vous pouvez trouver une liste des chapitres dans la barre lat\u00e9rale de navigation. Si vous lisez ceci depuis un appareil mobile, vous pouvez acc\u00e9der \u00e0 la navigation en appuyant sur le bouton situ\u00e9 dans le coin en bas \u00e0 droite de votre \u00e9cran.</p>\n<p>Chacun des chapitres de ce guide s\u2019appuie sur les connaissances introduites dans les chapitres pr\u00e9c\u00e9dents. <strong>Vous pouvez apprendre l\u2019essentiel de React en lisant les chapitres du guide \u00ab\u00a0Fondamentaux\u00a0\u00bb dans l\u2019ordre o\u00f9 ils apparaissent dans la barre lat\u00e9rale.</strong> Par exemple, le prochain chapitre s\u2019intitule <a href=\"/react/introducing-jsx\">\u00ab\u00a0Introduction \u00e0 JSX\u00a0\u00bb</a>.</p>\n<h2 id=\"knowledge-level-assumptions\"><a class=\"anchor\" href=\"/react/hello-world#knowledge-level-assumptions\"></a>Niveau de connaissances suppos\u00e9 </h2>\n<p>React est une biblioth\u00e8que JavaScript, donc nous supposerons que vous avez une compr\u00e9hension suffisante du langage JavaScript. <strong>Si vous ne vous sentez pas \u00e0 l\u2019aise, nous vous recommandons de <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Une_r%C3%A9introduction_%C3%A0_JavaScript\">passer par un tutoriel JavaScript</a> pour v\u00e9rifier votre niveau de connaissances</strong> et vous permettre de suivre ce guide sans \u00eatre perdu\u00b7e. Il vous prendra entre 30 minutes et une heure environ, mais au moins vous n\u2019aurez pas le sentiment d\u2019apprendre React et JavaScript en m\u00eame temps.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Ce guide utilise occasionnellement quelques nouvelles syntaxes de JavaScript dans les exemples. Si vous n\u2019avez pas travaill\u00e9 avec JavaScript ces derni\u00e8res ann\u00e9es, <a class=\"external-link\" href=\"https://gist.github.com/gaearon/683e676101005de0add59e8bb345340c\">ces trois points</a> devraient vous aider.</p>\n</div>\n<h2 id=\"lets-get-started\"><a class=\"anchor\" href=\"/react/hello-world#lets-get-started\"></a>Commen\u00e7ons\u00a0! </h2>\n<p>Continuez \u00e0 d\u00e9filer pour atteindre le lien vers le <a href=\"/react/introducing-jsx\">prochain chapitre de ce guide</a> juste avant le pied de page.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hello-world.md\">Edit this page</a></p></div></article>", "path": "/react/hello-world", "nav": ["/react/release-channels", "/react/introducing-jsx"]}, {"key": "2. Introduction \u00e0 JSX", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Observez cette d\u00e9claration de variable\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cette dr\u00f4le de syntaxe n\u2019est ni une cha\u00eene de caract\u00e8res ni du HTML.</p>\n<p>\u00c7a s\u2019appelle du JSX, et c\u2019est une extension syntaxique de JavaScript. Nous recommandons de l\u2019utiliser avec React afin de d\u00e9crire \u00e0 quoi devrait ressembler l\u2019interface utilisateur (UI). JSX vous fait s\u00fbrement penser \u00e0 un langage de balisage, mais il rec\u00e8le toute la puissance de JavaScript.</p>\n<p>JSX produit des \u00ab\u00a0\u00e9l\u00e9ments\u00a0\u00bb React. Nous verrons comment les retranscrire dans le DOM dans la <a href=\"/react/rendering-elements\">prochaine section</a>. Dans la suite de ce document, nous verrons les bases de JSX dont vous aurez besoin pour bien d\u00e9marrer.</p>\n<h3 id=\"why-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#why-jsx\"></a>Pourquoi JSX\u00a0? </h3>\n<p>Le fonctionnement d\u2019une UI conditionnera toujours les logiques de rendu, de la gestion des \u00e9v\u00e9nements \u00e0 la pr\u00e9paration des donn\u00e9es pour l\u2019affichage, en passant par l\u2019\u00e9volution de l\u2019\u00e9tat au fil du temps. React a choisi d\u2019assumer pleinement cet \u00e9tat de fait.</p>\n<p>Au lieu de s\u00e9parer artificiellement les <em>technologies</em> en mettant le balisage et la logique dans des fichiers s\u00e9par\u00e9s, React <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/S%C3%A9paration_des_pr%C3%A9occupations\">s\u00e9pare les <em>pr\u00e9occupations</em></a> via des unit\u00e9s faiblement coupl\u00e9es appel\u00e9es \u00ab\u00a0composants\u00a0\u00bb, qui contiennent les deux. Nous reviendrons sur les composants dans une <a href=\"/react/components-and-props\">prochaine section</a>, mais si l\u2019id\u00e9e d\u2019injecter des balises dans du JS vous met mal \u00e0 l\u2019aise, <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=x7cQ3mrcKaY\">cette pr\u00e9sentation</a> vous fera peut-\u00eatre changer d\u2019avis.</p>\n<p>React <a href=\"/react/react-without-jsx\">ne vous oblige pas</a> \u00e0 utiliser JSX, mais la plupart des gens y trouvent une aide visuelle quand ils manipulent l\u2019interface utilisateur dans le code JavaScript. \u00c7a permet aussi \u00e0 React de produire des messages d\u2019erreurs et d\u2019avertissements plus utiles.</p>\n<p>Ceci \u00e9tant pos\u00e9, commen\u00e7ons\u00a0!</p>\n<h3 id=\"embedding-expressions-in-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#embedding-expressions-in-jsx\"></a>Utiliser des expressions dans JSX </h3>\n<p>Dans l\u2019exemple suivant, nous d\u00e9clarons une variable appel\u00e9e <code class=\"language-javascript\">name</code> et nous l\u2019utilisons ensuite dans JSX en l\u2019encadrant avec des accolades\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Clarisse Agbegnenou'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous pouvez utiliser n\u2019importe quelle <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Expressions_et_Op%C3%A9rateurs#Expressions\">expression JavaScript</a> valide dans des accolades en JSX. Par exemple, <code class=\"language-javascript\">2 + 2</code>, <code class=\"language-javascript\">user.firstName</code>, ou <code class=\"language-javascript\">formatName(user)</code> sont toutes des expressions JavaScript valides.</p>\n<p>Dans l\u2019exemple suivant, on int\u00e8gre le r\u00e9sultat de l\u2019appel d\u2019une fonction JavaScript, <code class=\"language-javascript\">formatName(user)</code>, dans un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;h1&gt;</code>.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Kylian'</span><span class=\"token punctuation\">,</span>\n  lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Mbapp\u00e9'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !</span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/introducing-jsx\">Essayer sur CodePen</a></strong></p>\n<p>On d\u00e9couple le JSX en plusieurs lignes pour une meilleure lisibilit\u00e9. Par la m\u00eame occasion, nous recommandons \u00e9galement de le mettre entre parenth\u00e8ses afin d\u2019\u00e9viter les pi\u00e8ges <a class=\"external-link\" href=\"https://stackoverflow.com/q/2846283\">d\u2019insertion de point-virgule automatique</a>, m\u00eame si cette pratique n\u2019est pas obligatoire.</p>\n<h3 id=\"jsx-is-an-expression-too\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-is-an-expression-too\"></a>JSX n\u2019est rien d\u2019autre qu\u2019une expression </h3>\n<p>Apr\u00e8s la compilation, les expressions JSX deviennent de simples appels de fonctions JavaScript, dont l\u2019\u00e9valuation renvoie des objets JavaScript.</p>\n<p>\u00c7a signifie que vous pouvez utiliser JSX \u00e0 l\u2019int\u00e9rieur d\u2019instructions <code class=\"language-javascript\">if</code> ou de boucles <code class=\"language-javascript\">for</code>, l\u2019affecter \u00e0 des variables, l\u2019accepter en tant qu\u2019argument, et le renvoyer depuis des fonctions\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, Belle Inconnue.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"specifying-attributes-with-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#specifying-attributes-with-jsx\"></a>Sp\u00e9cifier des attributs en JSX </h3>\n<p>Vous pouvez utiliser des guillemets pour sp\u00e9cifier des litt\u00e9raux cha\u00eenes de caract\u00e8res dans les attributs\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">tabIndex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous pouvez aussi utiliser des accolades pour utiliser une expression JavaScript dans un attribut\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>img</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ne mettez pas de guillemets autour des accolades quand vous utilisez une expression JavaScript dans un attribut. Vous pouvez utiliser soit des guillemets (pour des valeurs textuelles) soit des accolades (pour des expressions), mais pas les deux \u00e0 la fois pour un m\u00eame attribut.</p>\n<div class=\"blockquote\">\n<strong>Attention\u00a0:</strong>\n<p>Dans la mesure o\u00f9 JSX est plus proche de JavaScript que de HTML, React DOM utilise la casse <code class=\"language-javascript\">camelCase</code> comme convention de nommage des propri\u00e9t\u00e9s, au lieu des noms d\u2019attributs HTML.</p>\n<p>Par exemple, <code class=\"language-javascript\">class</code> devient <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/Element/className\"><code class=\"language-javascript\">className</code></a> en JSX, et <code class=\"language-javascript\">tabindex</code> devient <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/HTMLElement/tabIndex\"><code class=\"language-javascript\">tabIndex</code></a>.</p>\n</div>\n<h3 id=\"specifying-children-with-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#specifying-children-with-jsx\"></a>Sp\u00e9cifier des \u00e9l\u00e9ments enfants en JSX </h3>\n<p>Si une balise est vide, vous pouvez la fermer imm\u00e9diatement avec <code class=\"language-javascript\">/&gt;</code>, comme en XML\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Les balises JSX peuvent contenir des enfants\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Content de te voir ici.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"jsx-prevents-injection-attacks\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-prevents-injection-attacks\"></a>JSX emp\u00eache les attaques d\u2019injection </h3>\n<p>Vous ne risquez rien en utilisant une saisie utilisateur dans JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>potentiallyMaliciousInput<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Ceci est sans risque :</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Par d\u00e9faut, React DOM <a class=\"external-link\" href=\"https://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html\">\u00e9chappe</a> toutes les valeurs int\u00e9gr\u00e9es avec JSX avant d\u2019en faire le rendu. Il garantit ainsi que vous ne risquez jamais d\u2019injecter quoi que ce soit d\u2019autre que ce vous avez explicitement \u00e9crit dans votre application. Tout est converti en cha\u00eene de caract\u00e8res avant de produire le rendu. \u00c7a aide \u00e0 \u00e9viter les attaques <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Cross-site_scripting\">XSS (cross-site-scripting)</a>.</p>\n<h3 id=\"jsx-represents-objects\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-represents-objects\"></a>JSX repr\u00e9sente des objets </h3>\n<p>Babel compile JSX vers des appels \u00e0 <code class=\"language-javascript\">React.createElement()</code>.</p>\n<p>Ces deux exemples sont identiques\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>greeting<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    Bonjour, monde !\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>className<span class=\"token operator\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Bonjour, monde !'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">React.createElement()</code> effectue quelques v\u00e9rifications pour vous aider \u00e0 \u00e9crire un code sans bug, mais pour l\u2019essentiel il cr\u00e9e un objet qui ressemble \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Remarque : cette structure est simplifi\u00e9e</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    className<span class=\"token operator\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour, monde !'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ces objets sont appel\u00e9s des \u00ab\u00a0\u00e9l\u00e9ments React\u00a0\u00bb. Vous pouvez les consid\u00e9rer comme des descriptions de ce que vous voulez voir sur l\u2019\u00e9cran. React lit ces objets et les utilise pour construire le DOM et le tenir \u00e0 jour.</p>\n<p>Nous explorerons la retranscription des \u00e9l\u00e9ments React dans le DOM dans la <a href=\"/react/rendering-elements\">prochaine section</a>.</p>\n<div class=\"blockquote\">\n<strong>Astuce\u00a0:</strong>\n<p>Nous recommandons d\u2019utiliser la <a class=\"external-link\" href=\"https://babeljs.io/docs/editors\">d\u00e9finition de langage \u00ab\u00a0Babel\u00a0\u00bb</a> dans votre \u00e9diteur pr\u00e9f\u00e9r\u00e9, afin que les codes ES6 et JSX soient correctement coloris\u00e9s.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/introducing-jsx.md\">Edit this page</a></p></div></article>", "path": "/react/introducing-jsx", "nav": ["/react/hello-world", "/react/rendering-elements"]}, {"key": "3. Le rendu des \u00e9l\u00e9ments", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les \u00e9l\u00e9ments sont les blocs \u00e9l\u00e9mentaires d\u2019une application React.</p>\n<p>Un \u00e9l\u00e9ment d\u00e9crit ce que vous voulez voir \u00e0 l\u2019\u00e9cran\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Contrairement aux \u00e9l\u00e9ments DOM d\u2019un navigateur, les \u00e9l\u00e9ments React sont de simples objets peu co\u00fbteux \u00e0 cr\u00e9er. React DOM se charge de mettre \u00e0 jour le DOM afin qu\u2019il corresponde aux \u00e9l\u00e9ments React.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>On pourrait confondre les \u00e9l\u00e9ments avec le concept plus r\u00e9pandu de \u00ab\u00a0composants\u00a0\u00bb. Nous pr\u00e9senterons les composants dans la <a href=\"/react/components-and-props\">prochaine section</a>. Les \u00e9l\u00e9ments repr\u00e9sentent la base des composants, aussi nous vous conseillons de bien lire cette section avant d\u2019aller plus loin.</p>\n</div>\n<h2 id=\"rendering-an-element-into-the-dom\"><a class=\"anchor\" href=\"/react/rendering-elements#rendering-an-element-into-the-dom\"></a>Afficher un \u00e9l\u00e9ment dans le DOM </h2>\n<p>Supposons qu\u2019il y ait une balise <code class=\"language-javascript\">&lt;div&gt;</code> quelque part dans votre fichier HTML\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Nous parlons de n\u0153ud DOM \u00ab\u00a0racine\u00a0\u00bb car tout ce qu\u2019il contient sera g\u00e9r\u00e9 par React DOM.</p>\n<p>Les applications d\u00e9v\u00e9lopp\u00e9es uniquement avec React ont g\u00e9n\u00e9ralement un seul n\u0153ud DOM racine. Si vous int\u00e9grez React dans une application existante, vous pouvez avoir autant de n\u0153uds DOM racines isol\u00e9s que vous le souhaitez.</p>\n<p>Pour faire le rendu d\u2019un \u00e9l\u00e9ment React dans un n\u0153ud DOM\u00a0racine, passez les deux \u00e0 la m\u00e9thode <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a>\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/rendering-elements/render-an-element\">Essayer sur CodePen</a></strong></p>\n<p>Cet exemple de code affichera \u00ab\u00a0Bonjour, monde\u00a0\u00bb sur la page.</p>\n<h2 id=\"updating-the-rendered-element\"><a class=\"anchor\" href=\"/react/rendering-elements#updating-the-rendered-element\"></a>Mettre \u00e0 jour un \u00e9l\u00e9ment affich\u00e9 </h2>\n<p>Les \u00e9l\u00e9ments React sont <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Objet_immuable\">immuables</a>. Une fois votre \u00e9l\u00e9ment cr\u00e9\u00e9, vous ne pouvez plus modifier ses enfants ou ses attributs. Un \u00e9l\u00e9ment est comme une image d\u2019un film \u00e0 un instant\u00a0T\u00a0: il repr\u00e9sente l\u2019interface utilisateur \u00e0 un point pr\u00e9cis dans le temps.</p>\n<p>Avec nos connaissances actuelles, la seule fa\u00e7on de mettre \u00e0 jour l\u2019interface utilisateur est de cr\u00e9er un nouvel \u00e9l\u00e9ment et de le passer \u00e0 <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a>.</p>\n<p>Prenons l\u2019exemple de cette horloge\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/rendering-elements/update-rendered-element\">Essayer dans CodePen</a></strong></p>\n<p>\u00c0 chaque seconde, nous appellons <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a> depuis une fonction de rappel pass\u00e9e \u00e0 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/WindowTimers/setInterval\"><code class=\"language-javascript\">setInterval()</code></a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>En pratique, la plupart des applications React n\u2019appellent <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a> qu\u2019une seule fois. Dans les prochaines sections, nous apprendrons comment encapsuler un tel code dans des <a href=\"/react/state-and-lifecycle\">composants \u00e0 \u00e9tat</a>.</p>\n<p>Nous vous conseillons de lire les sujets abord\u00e9s dans l\u2019ordre car ils s\u2019appuient l\u2019un sur l\u2019autre.</p>\n</div>\n<h2 id=\"react-only-updates-whats-necessary\"><a class=\"anchor\" href=\"/react/rendering-elements#react-only-updates-whats-necessary\"></a>React met \u00e0 jour le strict n\u00e9cessaire </h2>\n<p>React DOM compare l\u2019\u00e9l\u00e9ment et ses enfants avec la version pr\u00e9c\u00e9dente, et applique uniquement les mises \u00e0 jour DOM n\u00e9cessaires pour refl\u00e9ter l\u2019\u00e9tat voulu.</p>\n<p>Vous pouvez v\u00e9rifier ce comportement en inspectant le <a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/rendering-elements/update-rendered-element\">dernier exemple</a> avec les outils de d\u00e9veloppement du navigateur\u00a0:</p>\n<p><a class=\"external-link\" href=\"https://fr.reactjs.org//c158617ed7cc0eac8f58330e49e48224/granular-dom-updates.gif\">Image link</a></p>\n<p>M\u00eame si nous cr\u00e9ons \u00e0 chaque seconde un \u00e9l\u00e9ment d\u00e9crivant l\u2019arborescence compl\u00e8te de l\u2019interface utilisateur, seul le n\u0153ud texte dont le contenu a \u00e9t\u00e9 modifi\u00e9 est mis \u00e0 jour par React DOM.</p>\n<p>L\u2019exp\u00e9rience nous montre que r\u00e9fl\u00e9chir \u00e0 quoi devrait ressembler une interface utilisateur \u00e0 un moment donn\u00e9 plut\u00f4t que de r\u00e9fl\u00e9chir \u00e0 comment elle devrait \u00e9voluer permet d\u2019\u00e9liminer toute une cat\u00e9gorie de bugs.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/rendering-elements.md\">Edit this page</a></p></div></article>", "path": "/react/rendering-elements", "nav": ["/react/introducing-jsx", "/react/components-and-props"]}, {"key": "4. Composants et props", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les composants vous permettent de d\u00e9couper l\u2019interface utilisateur en \u00e9l\u00e9ments ind\u00e9pendants et r\u00e9utilisables, vous permettant ainsi de consid\u00e9rer chaque \u00e9l\u00e9ment de mani\u00e8re isol\u00e9e. Cette page fournit une introduction au concept de composants. Vous trouverez une <a href=\"/react/react-component\">r\u00e9f\u00e9rence d\u00e9taill\u00e9e de l\u2019API des composants ici</a>.</p>\n<p>Conceptuellement, les composants sont comme des fonctions JavaScript. Ils acceptent des entr\u00e9es quelconques (appel\u00e9es \u00ab\u00a0props\u00a0\u00bb) et renvoient des \u00e9l\u00e9ments React d\u00e9crivant ce qui doit appara\u00eetre \u00e0 l\u2019\u00e9cran.</p>\n<h2 id=\"function-and-class-components\"><a class=\"anchor\" href=\"/react/components-and-props#function-and-class-components\"></a>Fonctions composants et composants \u00e0 base de classes </h2>\n<p>Le moyen le plus simple de d\u00e9finir un composant consiste \u00e0 \u00e9crire une fonction JavaScript\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette fonction est un composant React valide car elle accepte un seul argument \u00ab\u00a0props\u00a0\u00bb (qui signifie \u00ab\u00a0propri\u00e9t\u00e9s\u00a0\u00bb) contenant des donn\u00e9es, et renvoie un \u00e9l\u00e9ment React. Nous appelons de tels composants des \u00ab\u00a0fonctions composants\u00a0\u00bb, car ce sont litt\u00e9ralement des fonctions JavaScript.</p>\n<p>Vous pouvez \u00e9galement utiliser une <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Classes\">classe ES6</a> pour d\u00e9finir un composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les deux composants ci-dessus sont \u00e9quivalents du point de vue de React.</p>\n<p>Les composants (aussi bien fonctions que classes) poss\u00e8dent quelques fonctionnalit\u00e9s suppl\u00e9mentaires dont nous discuterons dans les <a href=\"/react/state-and-lifecycle\">prochaines sections</a>.</p>\n<h2 id=\"rendering-a-component\"><a class=\"anchor\" href=\"/react/components-and-props#rendering-a-component\"></a>Produire le rendu d\u2019un composant </h2>\n<p>Jusqu\u2019ici, nous n\u2019avons rencontr\u00e9 que des \u00e9l\u00e9ments React repr\u00e9sentant des balises DOM\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Mais ces \u00e9l\u00e9ments peuvent \u00e9galement repr\u00e9senter des composants d\u00e9finis par l\u2019utilisateur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Lorsque React rencontre un \u00e9l\u00e9ment repr\u00e9sentant un composant d\u00e9fini par l\u2019utilisateur, il transmet les attributs JSX et les enfants \u00e0 ce composant sous la forme d\u2019un objet unique. Nous appelons cet objet \u00ab\u00a0props\u00a0\u00bb.</p>\n<p>Par exemple, ce code affiche \u00ab\u00a0Bonjour, Sara\u00a0\u00bb sur la page\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/components-and-props/rendering-a-component\">Essayer sur CodePen</a></strong></p>\n<p>R\u00e9capitulons ce qui se passe dans cet exemple\u00a0:</p>\n<ol>\n<li>On appelle <code class=\"language-javascript\">ReactDOM.render()</code> avec l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;Welcome name=\"Sara\" /&gt;</code>.</li>\n<li>React appelle le composant <code class=\"language-javascript\">Welcome</code> avec comme props <code class=\"language-javascript\">{name: 'Sara'}</code>.</li>\n<li>Notre composant <code class=\"language-javascript\">Welcome</code> retourne un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;h1&gt;Bonjour, Sara&lt;/h1&gt;</code> pour r\u00e9sultat.</li>\n<li>React DOM met \u00e0 jour efficacement le DOM pour correspondre \u00e0 <code class=\"language-javascript\">&lt;h1&gt;Bonjour, Sara&lt;/h1&gt;</code>.</li>\n</ol>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React consid\u00e8re les composants commen\u00e7ant par des lettres minuscules comme des balises DOM. Par exemple, <code class=\"language-javascript\">&lt;div /&gt;</code> repr\u00e9sente une balise HTML div, mais <code class=\"language-javascript\">&lt;Welcome /&gt;</code> repr\u00e9sente un composant, et exige que l\u2019identifiant <code class=\"language-javascript\">Welcome</code> existe dans la port\u00e9e courante.</p>\n<p>Pour en apprendre davantage sur le raisonnement qui sous-tend cette convention, lisez donc <a href=\"/react/jsx-in-depth#user-defined-components-must-be-capitalized\">JSX en profondeur</a>.</p>\n</div>\n<h2 id=\"composing-components\"><a class=\"anchor\" href=\"/react/components-and-props#composing-components\"></a>Composition de composants </h2>\n<p>Les composants peuvent faire r\u00e9f\u00e9rence \u00e0 d\u2019autres composants dans leur sortie. \u00c7a nous permet d\u2019utiliser la m\u00eame abstraction de composants pour n\u2019importe quel niveau de d\u00e9tail. Un bouton, un formulaire, une bo\u00eete de dialogue, un \u00e9cran\u00a0: dans React, ils sont g\u00e9n\u00e9ralement tous exprim\u00e9s par des composants.</p>\n<p>Par exemple, nous pouvons cr\u00e9er un composant <code class=\"language-javascript\">App</code> qui utilise plusieurs fois <code class=\"language-javascript\">Welcome</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Cahal<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Edite<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/components-and-props/composing-components\">Essayer sur CodePen</a></strong></p>\n<p>En r\u00e8gle g\u00e9n\u00e9rale, les nouvelles applications React ont un seul composant <code class=\"language-javascript\">App</code> \u00e0 la racine.  En revanche, si vous int\u00e9grez React \u00e0 une application existante, vous pouvez commencer tout en bas par un petit composant comme <code class=\"language-javascript\">Button</code> et remonter progressivement la hi\u00e9rarchie des vues.</p>\n<h2 id=\"extracting-components\"><a class=\"anchor\" href=\"/react/components-and-props#extracting-components\"></a>Extraire des composants </h2>\n<p>N\u2019ayez pas peur de scinder des composants en composants plus petits.</p>\n<p>Prenons par exemple ce composant <code class=\"language-javascript\">Comment</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/components-and-props/extracting-components\">Essayer sur CodePen</a></strong></p>\n<p>Il accepte comme props <code class=\"language-javascript\">author</code> (un objet), <code class=\"language-javascript\">text</code> (une cha\u00eene de caract\u00e8res) et <code class=\"language-javascript\">date</code> (une date), et d\u00e9crit un commentaire sur un r\u00e9seau social en ligne.</p>\n<p>Les nombreuses imbrications au sein du composant le rendent difficile \u00e0 maintenir, et nous emp\u00eachent d\u2019en r\u00e9utiliser des parties individuelles. Essayons donc d\u2019en extraire quelques composants.</p>\n<p>Pour commencer, nous allons extraire <code class=\"language-javascript\">Avatar</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le composant <code class=\"language-javascript\">Avatar</code> n\u2019a pas besoin de savoir qu\u2019il figure dans un composant <code class=\"language-javascript\">Comment</code>. C\u2019est pourquoi nous avons donn\u00e9 \u00e0 sa prop un nom plus g\u00e9n\u00e9rique\u00a0: <code class=\"language-javascript\">user</code> plut\u00f4t que <code class=\"language-javascript\">author</code>.</p>\n<p>Nous vous recommandons de nommer les props du point de vue du composant plut\u00f4t que de celui du contexte dans lequel il est utilis\u00e9.</p>\n<p>On peut maintenant simplifier un poil<code class=\"language-javascript\">Comment</code> \u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ensuite, nous allons extraire un composant <code class=\"language-javascript\">UserInfo</code> qui affiche un <code class=\"language-javascript\">Avatar</code> \u00e0 c\u00f4t\u00e9 du nom de l\u2019utilisateur\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">UserInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce qui nous permet de simplifier encore davantage <code class=\"language-javascript\">Comment</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserInfo</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/components-and-props/extracting-components-continued\">Essayer sur CodePen</a></strong></p>\n<p>Au d\u00e9but, extraire des composants peut vous sembler fastidieux, mais disposer d\u2019une palette de composants r\u00e9utilisables s\u2019av\u00e8re rentable sur des applications de plus grande taille. En r\u00e8gle g\u00e9n\u00e9rale, si une partie de votre interface utilisateur est utilis\u00e9e plusieurs fois (<code class=\"language-javascript\">Button</code>, <code class=\"language-javascript\">Panel</code>, <code class=\"language-javascript\">Avatar</code>) ou si elle est suffisamment complexe en elle-m\u00eame (<code class=\"language-javascript\">App</code>, <code class=\"language-javascript\">FeedStory</code>, <code class=\"language-javascript\">Comment</code>), c\u2019est un bon candidat pour une extraction en tant que composant s\u00e9par\u00e9.</p>\n<h2 id=\"props-are-read-only\"><a class=\"anchor\" href=\"/react/components-and-props#props-are-read-only\"></a>Les props sont en lecture seule </h2>\n<p>Que vous d\u00e9clariez un composant <a href=\"/react/components-and-props#function-and-class-components\">sous forme de fonction ou de classe</a>, il ne doit jamais modifier ses propres props. Consid\u00e9rons cette fonction <code class=\"language-javascript\">sum</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ces fonctions sont dites <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Fonction_pure\">\u00ab\u00a0pures\u00a0\u00bb</a> parce qu\u2019elles ne tentent pas de modifier leurs entr\u00e9es et retournent toujours le m\u00eame r\u00e9sultat pour les m\u00eames entr\u00e9es.</p>\n<p>En revanche, cette fonction est impure car elle modifie sa propre entr\u00e9e\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">account<span class=\"token punctuation\">,</span> amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  account<span class=\"token punctuation\">.</span>total <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React est plut\u00f4t flexible mais applique une r\u00e8gle stricte\u00a0:</p>\n<p><strong>Tout composant React doit agir comme une fonction pure vis-\u00e0-vis de ses props.</strong></p>\n<p>Bien entendu, les interfaces utilisateurs des applications sont dynamiques et \u00e9voluent dans le temps. Dans la <a href=\"/react/state-and-lifecycle\">prochaine section</a>, nous pr\u00e9senterons un nouveau concept \u00ab\u00a0d\u2019\u00e9tat local\u00a0\u00bb. L\u2019\u00e9tat local permet aux composants React de modifier leur sortie au fil du temps en fonction des actions de l\u2019utilisateur, des r\u00e9ponses r\u00e9seau et de n\u2019importe quoi d\u2019autre, mais sans enfreindre cette r\u00e8gle.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/components-and-props.md\">Edit this page</a></p></div></article>", "path": "/react/components-and-props", "nav": ["/react/rendering-elements", "/react/state-and-lifecycle"]}, {"key": "5. \u00c9tat et cycle de vie", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Cette page pr\u00e9sente les concepts d\u2019\u00e9tat local et de cycle de vie dans un composant React. Vous pouvez trouver <a href=\"/react/react-component\">la r\u00e9f\u00e9rence d\u2019API des composants ici</a>.</p>\n<p>Prenons l\u2019exemple de l\u2019horloge dans <a href=\"/react/rendering-elements#updating-the-rendered-element\">une des sections pr\u00e9c\u00e9dentes</a>. Dans <a href=\"/react/rendering-elements#rendering-an-element-into-the-dom\">Le rendu des \u00e9l\u00e9ments</a>, nous avons appris une seule fa\u00e7on de mettre \u00e0 jour l\u2019interface utilisateur (UI). On appelle <code class=\"language-javascript\">ReactDOM.render()</code> pour changer la sortie rendue :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    element<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwoJZk?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Dans cette section, nous allons apprendre \u00e0 faire un composant <code class=\"language-javascript\">Clock</code> vraiment r\u00e9utilisable et isol\u00e9. Il mettra en place son propre minuteur et se mettra \u00e0 jour tout seul \u00e0 chaque seconde.</p>\n<p>Nous commen\u00e7ons par isoler l\u2019apparence de l\u2019horloge :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Clock</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token attr-name\">date</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span>    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/dpdoYR?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Cependant, il manque une contrainte cruciale : le fait que la <code class=\"language-javascript\">Clock</code> mette en place le minuteur et mette \u00e0 jour son interface utilisateur devrait \u00eatre un d\u00e9tail d\u2019impl\u00e9mentation de la <code class=\"language-javascript\">Clock</code>.</p>\n<p>Id\u00e9alement, on veut \u00e9crire ceci une seule fois et voir la <code class=\"language-javascript\">Clock</code> se mettre \u00e0 jour elle-m\u00eame :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pour impl\u00e9menter \u00e7a, on a besoin d\u2019ajouter un \u00ab\u00a0\u00e9tat local\u00a0\u00bb au composant <code class=\"language-javascript\">Horloge</code>.</p>\n<p>L\u2019\u00e9tat local est similaire aux props, mais il est priv\u00e9 et compl\u00e8tement contr\u00f4l\u00e9 par le composant.</p>\n<h2 id=\"converting-a-function-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#converting-a-function-to-a-class\"></a>Convertir une fonction en classe </h2>\n<p>Vous pouvez convertir un composant fonctionnel comme <code class=\"language-javascript\">Clock</code> en une classe en cinq \u00e9tapes :</p>\n<ol>\n<li>Cr\u00e9ez une <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Classes\">classe ES6</a>, avec le m\u00eame nom, qui \u00e9tend <code class=\"language-javascript\">React.Component</code>.</li>\n<li>Ajoutez-y une m\u00e9thode vide appel\u00e9e <code class=\"language-javascript\">render()</code>.</li>\n<li>D\u00e9placez le corps de la fonction dans la m\u00e9thode <code class=\"language-javascript\">render()</code>.</li>\n<li>Remplacez <code class=\"language-javascript\">props</code> par <code class=\"language-javascript\">this.props</code> dans le corps de la m\u00e9thode <code class=\"language-javascript\">render()</code>.</li>\n<li>Supprimez la d\u00e9claration d\u00e9sormais vide de la fonction.</li>\n</ol>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/zKRGpo?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Le composant <code class=\"language-javascript\">Clock</code> est maintenant d\u00e9fini comme une classe au lieu d\u2019une fonction.</p>\n<p>La m\u00e9thode <code class=\"language-javascript\">render</code> sera appel\u00e9e \u00e0 chaque fois qu\u2019une mise \u00e0 jour aura lieu, mais tant que l\u2019on exploite le rendu de <code class=\"language-javascript\">&lt;Clock /&gt;</code> dans le m\u00eame n\u0153ud DOM, une seule instance de la classe <code class=\"language-javascript\">clock</code> sera utilis\u00e9e. Cela nous permet d\u2019utiliser des fonctionnalit\u00e9s suppl\u00e9mentaires telles que l\u2019\u00e9tat local et les m\u00e9thodes de cycle de vie.</p>\n<h2 id=\"adding-local-state-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\"></a>Ajouter un \u00e9tat local \u00e0 une classe </h2>\n<p>Nous allons d\u00e9placer la <code class=\"language-javascript\">date</code> des props vers l\u2019\u00e9tat en trois \u00e9tapes :</p>\n<ol>\n<li>Remplacez <code class=\"language-javascript\">\u001cthis.props.date</code> avec <code class=\"language-javascript\">\u001cthis.state.date</code> dans la m\u00e9thode <code class=\"language-javascript\">\u001crender()</code> :</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>Ajoutez <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Classes#Constructeur\">un constructeur de classe</a> qui initialise <code class=\"language-javascript\">this.state</code>:</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notez que l\u2019on passe <code class=\"language-javascript\">\u001cprops</code> au constructeur de base :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les composants \u00e0 base de classe devraient toujours appeler le constructeur de base avec <code class=\"language-javascript\">props</code>.</p>\n<ol>\n<li>Supprimez la prop <code class=\"language-javascript\">\u001cdate</code> de l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">\u001c&lt;Clock /&gt;</code> :</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous rajouterons plus tard le code du minuteur dans le composant lui-m\u00eame.</p>\n<p>Le r\u00e9sultat ressemble \u00e0 ceci :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/KgQpJd?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Ensuite, nous allons faire en sorte que le composant <code class=\"language-javascript\">\u001cClock</code> mette en place son propre minuteur et se mette \u00e0 jour toutes les secondes.</p>\n<h2 id=\"adding-lifecycle-methods-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#adding-lifecycle-methods-to-a-class\"></a>Ajouter des m\u00e9thodes de cycle de vie \u00e0 une classe </h2>\n<p>Dans des applications avec de nombreux composants, il est tr\u00e8s important de lib\u00e9rer les ressources utilis\u00e9es par les composants quand ils sont d\u00e9truits.</p>\n<p>Nous voulons <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/WindowTimers/setInterval\">mettre en place un minuteur</a> quand une <code class=\"language-javascript\">Horloge</code> appara\u00eet dans le DOM pour la premi\u00e8re fois. Le terme React \u00ab\u00a0montage \u00bb d\u00e9signe cette phase.</p>\n<p>Nous voulons \u00e9galement <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/WindowTimers/clearInterval\">nettoyer le minuteur</a> quand le DOM produit par l\u2019<code class=\"language-javascript\">Horloge</code> est supprim\u00e9. En React, on parle de \u00ab\u00a0d\u00e9montage\u00a0\u00bb.</p>\n<p>Nous pouvons d\u00e9clarer des m\u00e9thodes sp\u00e9ciales sur un composant \u00e0 base de classe pour ex\u00e9cuter du code quand un composant est mont\u00e9 et d\u00e9mont\u00e9 :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>On les appelle des \u00ab\u00a0m\u00e9thodes de cycle de vie\u00a0\u00bb.</p>\n<p>La m\u00e9thode <code class=\"language-javascript\">componentDidMount()</code> est ex\u00e9cut\u00e9e apr\u00e8s que la sortie du composant a \u00e9t\u00e9 inject\u00e9e dans le DOM. C\u2019est un bon endroit pour mettre en place le minuteur :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token number\">1000</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notez qu\u2019on a enregistr\u00e9 l\u2019ID du minuteur directement sur <code class=\"language-javascript\">this</code> (<code class=\"language-javascript\">this.timerID</code>).</p>\n<p>Alors que <code class=\"language-javascript\">this.props</code> est mis en place par React lui-m\u00eame et que <code class=\"language-javascript\">this.state</code> a un sens bien sp\u00e9cial, vous pouvez tr\u00e8s bien ajouter manuellement d\u2019autres champs sur la classe si vous avez besoin de stocker quelque chose qui ne participe pas au flux de donn\u00e9es (comme un ID de minuteur).</p>\n<p>Nous allons d\u00e9truire le minuteur dans la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentWillUnmount()</code> :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Enfin, nous allons impl\u00e9menter une m\u00e9thode appel\u00e9e <code class=\"language-javascript\">tick()</code> que le composant <code class=\"language-javascript\">Clock</code> va ex\u00e9cuter toutes les secondes.</p>\n<p>Elle utilisera <code class=\"language-javascript\">this.setState()</code> pour planifier une mise \u00e0 jour de l\u2019\u00e9tat local du composant :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/amqdNA?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Maintenant l\u2019horloge se met \u00e0 jour toutes les secondes.</p>\n<p>R\u00e9capitulons ce qui se passe et l\u2019ordre dans lequel les m\u00e9thodes sont invoqu\u00e9es :</p>\n<ol>\n<li>Quand <code class=\"language-javascript\">&lt;Clock /&gt;</code> est pass\u00e9 \u00e0 <code class=\"language-javascript\">ReactDOM.render()</code>, React appelle le constructeur du composant <code class=\"language-javascript\">Clock</code>. Puisque <code class=\"language-javascript\">Clock</code> a besoin d\u2019afficher l\u2019heure actuelle, il initialise <code class=\"language-javascript\">this.state</code> avec un objet contenant l\u2019heure actuelle. Nous mettrons cet \u00e9tat \u00e0 jour par la suite.</li>\n<li>React appelle ensuite la m\u00e9thode <code class=\"language-javascript\">render()</code> du composant <code class=\"language-javascript\">Clock</code>. C\u2019est comme cela que React d\u00e9couvre ce qu\u2019il faut afficher \u00e0 l\u2019\u00e9cran. React met ensuite \u00e0 jour le DOM pour correspondre \u00e0 la sortie de la m\u00e9thode <code class=\"language-javascript\">render()</code> du composant <code class=\"language-javascript\">Clock</code>.</li>\n<li>Quand la sortie de la <code class=\"language-javascript\">Clock</code> est ins\u00e9r\u00e9e dans le DOM, React appelle la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentDidMount()</code>. \u00c0 l\u2019int\u00e9rieur, le composant <code class=\"language-javascript\">\u001cClock</code> demande au navigateur de mettre en place un minuteur pour appeler la m\u00e9thode <code class=\"language-javascript\">tick()</code> du composant une fois par seconde.</li>\n<li>Chaque seconde, le navigateur appelle la m\u00e9thode <code class=\"language-javascript\">tick()</code>. \u00c0 l\u2019int\u00e9rieur, le composant <code class=\"language-javascript\">Clock</code> planifie une mise \u00e0 jour de l\u2019interface utilisateur en appelant <code class=\"language-javascript\">setState()</code> avec un objet contenant l\u2019heure actuelle. Gr\u00e2ce \u00e0 l\u2019appel \u00e0 <code class=\"language-javascript\">setState()</code>, React sait que l\u2019\u00e9tat a chang\u00e9, et invoque \u00e0 nouveau la m\u00e9thode <code class=\"language-javascript\">render()</code> pour savoir ce qui devrait \u00eatre affich\u00e9 \u00e0 l\u2019\u00e9cran. Cette fois, la valeur de <code class=\"language-javascript\">\u001cthis.state.date</code> dans la m\u00e9thode <code class=\"language-javascript\">render()</code> est diff\u00e9rente, la sortie devrait donc inclure l\u2019heure mise \u00e0 jour. React met \u00e0 jour le DOM en accord avec cela.</li>\n<li>Si le composant <code class=\"language-javascript\">Clock</code> finit par \u00eatre retir\u00e9 du DOM, React appellera la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentWillUnmount()</code> pour que le minuteur soit arr\u00eat\u00e9.</li>\n</ol>\n<h2 id=\"using-state-correctly\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#using-state-correctly\"></a>Utiliser l\u2019\u00e9tat local correctement </h2>\n<p>Il y\u2019a trois choses que vous devriez savoir \u00e0 propos de <code class=\"language-javascript\">setState()</code>.</p>\n<h3 id=\"do-not-modify-state-directly\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#do-not-modify-state-directly\"></a>Ne modifiez pas l\u2019\u00e9tat directement </h3>\n<p>Par exemple, ceci ne d\u00e9clenchera pas un rafra\u00eechissement du composant :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Erron\u00e9</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> <span class=\"token string\">'Bonjour'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c0 la place, utilisez <code class=\"language-javascript\">setState()</code> :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>comment<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Le seul endroit o\u00f9 vous pouvez affecter <code class=\"language-javascript\">this.state</code>, c\u2019est le constructeur.</p>\n<h3 id=\"state-updates-may-be-asynchronous\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#state-updates-may-be-asynchronous\"></a>Les mises \u00e0 jour de l\u2019\u00e9tat peuvent \u00eatre asynchrones </h3>\n<p>React peut grouper plusieurs appels \u00e0 <code class=\"language-javascript\">setState()</code> en une seule mise \u00e0 jour pour des raisons de performance.</p>\n<p>Comme <code class=\"language-javascript\">\u001cthis.props</code> et <code class=\"language-javascript\">\u001cthis.state</code> peuvent \u00eatre mises \u00e0 jour de fa\u00e7on asynchrone, vous ne devez pas vous baser sur leurs valeurs pour calculer le prochain \u00e9tat.</p>\n<p>Par exemple, ce code peut \u00e9chouer pour mettre \u00e0 jour un compteur :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Erron\u00e9</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  counter<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>increment<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pour rem\u00e9dier \u00e0 ce probl\u00e8me, utilisez la seconde forme de <code class=\"language-javascript\">setState()</code> qui accepte une fonction \u00e0 la place d\u2019un objet. Cette fonction recevra l\u2019\u00e9tat pr\u00e9c\u00e9dent comme premier argument et les props au moment de la mise \u00e0 jour comme second argument :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  counter<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous avons utilis\u00e9 une <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Fonctions/Fonctions_fl%C3%A9ch%C3%A9es\">fonction fl\u00e9ch\u00e9e</a> ci-dessus, mais une fonction normale marche aussi :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    counter<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"state-updates-are-merged\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#state-updates-are-merged\"></a>Les mises \u00e0 jour de l\u2019\u00e9tat sont fusionn\u00e9es </h3>\n<p>Quand vous invoquez <code class=\"language-javascript\">setState()</code>, React fusionne les objets que vous donnez avec l\u2019\u00e9tat actuel.</p>\n<p>Par exemple, votre \u00e9tat peut contenir plusieurs variables ind\u00e9pendantes :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      posts<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      comments<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ensuite, vous pouvez les mettre \u00e0 jour ind\u00e9pendamment avec des appels s\u00e9par\u00e9s \u00e0 <code class=\"language-javascript\">setState()</code> :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        posts<span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>posts</span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        comments<span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>comments</span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>La fusion n\u2019est pas profonde, donc <code class=\"language-javascript\">this.setState({comments})</code> laisse <code class=\"language-javascript\">this.state.posts</code> intacte, mais remplace compl\u00e8tement <code class=\"language-javascript\">this.state.comments</code>.</p>\n<h2 id=\"the-data-flows-down\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#the-data-flows-down\"></a>Les donn\u00e9es descendent </h2>\n<p>Ni parent ni enfant ne peuvent savoir si un certain composant est \u00e0 \u00e9tat ou non, et ne devraient pas se soucier de savoir s\u2019il est d\u00e9fini par une fonction ou une classe.</p>\n<p>C\u2019est pourquoi on dit souvent que l\u2019\u00e9tat est local ou encapsul\u00e9. Il est impossible d\u2019y acc\u00e9der depuis un autre composant.</p>\n<p>Un composant peut choisir de passer son \u00e9tat \u00e0 ses enfants via des props :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedDate</span></span> <span class=\"token attr-name\">date</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Le composant <code class=\"language-javascript\">FormattedDate</code> re\u00e7oit la <code class=\"language-javascript\">date</code> dans ses props et ne sait pas si elle vient de l\u2019\u00e9tat de la <code class=\"language-javascript\">Clock</code>, des props de la <code class=\"language-javascript\">Clock</code>, ou a \u00e9t\u00e9 tap\u00e9e \u00e0 la main :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FormattedDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Il est </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/zKRqNB?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>On appelle souvent cela un flux de donn\u00e9es \u00ab\u00a0du haut vers le bas\u00a0\u00bb ou \u00ab\u00a0unidirectionnel\u00a0\u00bb. Un \u00e9tat local est toujours poss\u00e9d\u00e9 par un composant sp\u00e9cifique, et toute donn\u00e9e ou interface utilisateur d\u00e9riv\u00e9e de cet \u00e9tat ne peut affecter que les composants \u00ab\u00a0en-dessous\u00a0\u00bb de celui-ci dans l\u2019arbre de composants.</p>\n<p>Si vous imaginez un arbre de composants comme une cascade de props, chaque \u00e9tat de composant est une source d\u2019eau suppl\u00e9mentaire qui rejoint la cascade \u00e0 un point quelconque, mais qui coule \u00e9galement vers le bas.</p>\n<p>Pour d\u00e9montrer que tous les composants sont r\u00e9ellement isol\u00e9s, nous pouvons cr\u00e9er un composant <code class=\"language-javascript\">App</code> qui affiche trois <code class=\"language-javascript\">&lt;Clock&gt;</code>s :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Application</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/vXdGmd?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Chaque <code class=\"language-javascript\">\u001cClock</code> met en place son propre minuteur et se met \u00e0 jour ind\u00e9pendamment.</p>\n<p>Dans une application React, le fait qu\u2019un composant soit \u00e0 \u00e9tat ou non est consid\u00e9r\u00e9 comme un d\u00e9tail d\u2019impl\u00e9mentation du composant qui peut varier avec le temps. Vous pouvez utiliser des composants sans \u00e9tat \u00e0 l\u2019int\u00e9rieur de composants \u00e0 \u00e9tat, et vice-versa.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/state-and-lifecycle.md\">Edit this page</a></p></div></article>", "path": "/react/state-and-lifecycle", "nav": ["/react/components-and-props", "/react/handling-events"]}, {"key": "6. G\u00e9rer les \u00e9v\u00e9nements", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>La gestion des \u00e9v\u00e9nements pour les \u00e9l\u00e9ments React est tr\u00e8s similaire \u00e0 celle des \u00e9l\u00e9ments du DOM. Il y a tout de m\u00eame quelques diff\u00e9rences de syntaxe\u00a0:</p>\n<ul>\n<li>Les \u00e9v\u00e9nements de React sont nomm\u00e9s en <code class=\"language-javascript\">camelCase</code> plut\u00f4t qu\u2019en minuscules.</li>\n<li>En JSX on passe une fonction comme gestionnaire d\u2019\u00e9v\u00e9nements plut\u00f4t qu\u2019une cha\u00eene de caract\u00e8res.</li>\n</ul>\n<p>Par exemple, le HTML suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>activateLasers()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  Activer les lasers\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>est l\u00e9g\u00e8rement diff\u00e9rent avec React:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>activateLasers<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  Activer les lasers</span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Autre diff\u00e9rence importante\u00a0: en React, on ne peut pas renvoyer <code class=\"language-javascript\">false</code> pour emp\u00eacher le comportement par d\u00e9faut. Vous devez appeler explicitement <code class=\"language-javascript\">preventDefault</code>. Par exemple, en HTML, pour annuler le comportement par d\u00e9faut des liens qui consiste \u00e0 ouvrir une nouvelle page, vous pourriez \u00e9crire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console.log(<span class=\"token punctuation\">'</span>Le lien a \u00e9t\u00e9 cliqu\u00e9.<span class=\"token punctuation\">'</span>); return false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  Clique ici\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>En React, \u00e7a pourrait \u00eatre\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ActionLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Le lien a \u00e9t\u00e9 cliqu\u00e9.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      Clique ici</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ici, <code class=\"language-javascript\">e</code> est un \u00e9v\u00e9nement synth\u00e9tique. React le d\u00e9finit en suivant les <a class=\"external-link\" href=\"https://www.w3.org/TR/DOM-Level-3-Events/\">sp\u00e9cifications W3C</a>, afin que vous n\u2019ayez pas \u00e0 vous pr\u00e9occuper de la compatibilit\u00e9 entre les navigateurs. Les \u00e9v\u00e9nements React ne fonctionnent pas tout \u00e0 fait comme les \u00e9v\u00e9nements natifs. Pour en apprendre davantage, consultez le guide de r\u00e9f\u00e9rence de <a href=\"/react/events\"><code class=\"language-javascript\">SyntheticEvent</code></a>.</p>\n<p>Lorsque vous utilisez React, vous n\u2019avez g\u00e9n\u00e9ralement pas besoin d\u2019appeler la m\u00e9thode <code class=\"language-javascript\">addEventListener</code> pour ajouter des \u00e9couteurs d\u2019\u00e9v\u00e9nements <em>(event listeners, NdT)</em> \u00e0 un \u00e9l\u00e9ment du DOM apr\u00e8s que celui-ci est cr\u00e9\u00e9. \u00c0 la place, on fournit l\u2019\u00e9couteur lors du rendu initial de l\u2019\u00e9l\u00e9ment.</p>\n<p>Lorsque vous d\u00e9finissez un composant en utilisant les <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Classes\">classes ES6</a>, il est d\u2019usage que le gestionnaire d\u2019\u00e9v\u00e9nements soit une m\u00e9thode de la classe. Par exemple, ce composant <code class=\"language-javascript\">Toggle</code> affiche un bouton qui permet \u00e0 l\u2019utilisateur de basculer l\u2019\u00e9tat de \u201cON\u201d \u00e0 \u201cOFF\u201d.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Toggle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>isToggleOn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Cette liaison est n\u00e9c\u00e9ssaire afin de permettre</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// l'utilisation de `this` dans la fonction de rappel.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      isToggleOn<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isToggleOn</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isToggleOn <span class=\"token operator\">?</span> <span class=\"token string\">'ON'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'OFF'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toggle</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/xEmzGg?editors=0010\"><strong>Essayer dans CodePen</strong></a></p>\n<p>En JSX, vous devez \u00eatre prudent\u00b7e avec l\u2019utilisation de <code class=\"language-javascript\">this</code> dans les fonctions de rappel. En JavaScript, les m\u00e9thodes de classes ne sont pas <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Function/bind\">li\u00e9es</a> par d\u00e9faut. Si vous oubliez de lier <code class=\"language-javascript\">this.handleClick</code> et l\u2019utilisez dans <code class=\"language-javascript\">onClick</code>, <code class=\"language-javascript\">this</code> sera <code class=\"language-javascript\">undefined</code> quand la fonction sera appel\u00e9e.</p>\n<p>Ce n\u2019est pas un comportement sp\u00e9cifique \u00e0 React, \u00e7a fait partie du <a class=\"external-link\" href=\"https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/\">fonctionnement normal des fonctions en JavaScript</a>. En g\u00e9n\u00e9ral, si vous faites r\u00e9f\u00e9rence \u00e0 une m\u00e9thode sans l\u2019appeler avec <code class=\"language-javascript\">()</code>, comme dans <code class=\"language-javascript\">onClick={this.handleClick}</code>, vous devriez lier cette m\u00e9thode.</p>\n<p>Si vous ne souhaitez pas utiliser <code class=\"language-javascript\">bind</code>, vous avez deux alternatives possibles. Si vous avez l\u2019habitude d\u2019utiliser la <a class=\"external-link\" href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">syntaxe des champs de classes</a>, qui est encore exp\u00e9rimentale, vous pourriez l\u2019utiliser pour lier les fonctions de rappel\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Cette syntaxe nous assure que `this` est bien li\u00e9 dans la m\u00e9thode handleClick.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Attention : cette syntaxe est encore *exp\u00e9rimentale*.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this vaut :'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Clique ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette syntaxe est activ\u00e9e par d\u00e9faut dans <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a>.</p>\n<p>Si vous n\u2019utilisez pas la syntaxe des champs de classe, vous pouvez utiliser les <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Fonctions/Fonctions_fl%C3%A9ch%C3%A9es\">fonctions fl\u00e9ch\u00e9es</a> pour les fonctions de rappel.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this vaut :'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Cette syntaxe nous assure que `this` est bien li\u00e9 dans la m\u00e9thode handleClick</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        Clique ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette syntaxe n\u2019est toutefois pas sans d\u00e9fauts, car elle cr\u00e9e une nouvelle fonction de rappel \u00e0 chaque affichage de <code class=\"language-javascript\">LoggingButton</code>. Dans la plupart des cas ce n\u2019est pas g\u00eanant. N\u00e9anmoins, si cette fonction \u00e9tait pass\u00e9e comme  prop \u00e0 des composants plus bas dans l\u2019arbre, ces composants risqueraient de faire des r\u00e9-affichages superflus. Nous recommandons donc, en r\u00e8gle g\u00e9n\u00e9rale, de lier ces m\u00e9thodes dans le constructeur ou d\u2019utiliser un champ de classe afin d\u2019\u00e9viter ce genre de  probl\u00e8mes de performances.</p>\n<h2 id=\"passing-arguments-to-event-handlers\"><a class=\"anchor\" href=\"/react/handling-events#passing-arguments-to-event-handlers\"></a>Passer des arguments \u00e0 un gestionnaire d\u2019\u00e9v\u00e9nements </h2>\n<p>Au sein d\u2019une boucle, il est courant de vouloir passer un argument suppl\u00e9mentaire \u00e0 un gestionnaire d\u2019\u00e9v\u00e9nements. Par exemple, si <code class=\"language-javascript\">id</code> repr\u00e9sente la ligne s\u00e9lectionn\u00e9e, on peut faire au choix\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Supprimer la ligne</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Supprimer la ligne</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Les lignes pr\u00e9c\u00e9dentes sont \u00e9quivalentes et utilisent respectivement les <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Fonctions/Fonctions_fl%C3%A9ch%C3%A9es\">fonctions fl\u00e9ch\u00e9es</a> et <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Function/bind\"><code class=\"language-javascript\">Function.prototype.bind</code></a>.</p>\n<p>Dans les deux cas, l\u2019argument <code class=\"language-javascript\">e</code> represente l\u2019\u00e9v\u00e9nement React qui sera pass\u00e9 en second argument apr\u00e8s l\u2019ID. Avec une fonction fl\u00e9ch\u00e9e, nous devons passer l\u2019argument explicitement, alors qu\u2019avec <code class=\"language-javascript\">bind</code> tous les arguments sont automatiquement transmis.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/handling-events.md\">Edit this page</a></p></div></article>", "path": "/react/handling-events", "nav": ["/react/state-and-lifecycle", "/react/conditional-rendering"]}, {"key": "7. Affichage conditionnel", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>En React, vous pouvez concevoir des composants distincts qui encapsulent le comportement voulu. Vous pouvez alors n\u2019afficher que certains d\u2019entre eux, suivant l\u2019\u00e9tat de votre application.</p>\n<p>L\u2019affichage conditionnel en React fonctionne de la m\u00eame fa\u00e7on que les conditions en Javascript. On utilise l\u2019instruction Javascript <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Instructions/if...else\"><code class=\"language-javascript\">if</code></a> ou l\u2019<a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/L_op%C3%A9rateur_conditionnel\">op\u00e9rateur ternaire</a> pour cr\u00e9er des \u00e9l\u00e9ments repr\u00e9sentant l\u2019\u00e9tat courant, et on laisse React mettre \u00e0 jour l\u2019interface utilisateur (UI) pour qu\u2019elle corresponde.</p>\n<p>Consid\u00e9rons ces deux composants\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">UserGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bienvenue !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">GuestGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Veuillez vous inscrire.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous allons cr\u00e9er un composant <code class=\"language-javascript\">Greeting</code> qui affiche un de ces deux composants, selon qu\u2019un utilisateur est connect\u00e9 ou non\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GuestGreeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Essayez de changer \u00e7a vers isLoggedIn={true} :</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZpVxNq?editors=0011\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Cet exemple affiche un message diff\u00e9rent selon la valeur de la prop <code class=\"language-javascript\">isLoggedIn</code>.</p>\n<h3 id=\"element-variables\"><a class=\"anchor\" href=\"/react/conditional-rendering#element-variables\"></a>Variables d\u2019\u00e9l\u00e9ments </h3>\n<p>Vous pouvez stocker les \u00e9l\u00e9ments dans des variables. \u00c7a vous aide \u00e0 afficher de fa\u00e7on conditionnelle une partie du composant tandis que le reste ne change pas.</p>\n<p>Prenons ces deux nouveaux composants, qui repr\u00e9sentent les boutons de D\u00e9connexion et de Connexion\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">LoginButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Connexion\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">LogoutButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      D\u00e9connexion\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans l\u2019exemple ci-dessous, nous allons cr\u00e9er un <a href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\">composant \u00e0 \u00e9tat</a> appel\u00e9 <code class=\"language-javascript\">LoginControl</code>.</p>\n<p>Il affichera soit <code class=\"language-javascript\">&lt;LoginButton /&gt;</code>, soit <code class=\"language-javascript\">&lt;LogoutButton /&gt;</code>, selon son \u00e9tat courant. Il affichera aussi un <code class=\"language-javascript\">&lt;Greeting /&gt;</code> de l\u2019exemple pr\u00e9c\u00e9dent\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginControl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> button<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>button<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginControl</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/QKzAgB?editors=0010\"><strong>Essayer sur  CodePen</strong></a></p>\n<p>M\u00eame si d\u00e9clarer une variable et utiliser une instruction <code class=\"language-javascript\">if</code> reste une bonne fa\u00e7on d\u2019afficher conditionnellement un composant, parfois vous voudrez peut-\u00eatre utiliser une syntaxe plus concise. Nous allons voir, ci-dessous, plusieurs fa\u00e7ons d\u2019utiliser des conditions \u00e0 la vol\u00e9e en JSX.</p>\n<h3 id=\"inline-if-with-logical--operator\"><a class=\"anchor\" href=\"/react/conditional-rendering#inline-if-with-logical--operator\"></a>Condition \u00e0 la vol\u00e9e avec l\u2019op\u00e9rateur logique <code class=\"language-javascript\">&amp;&amp;</code> </h3>\n<p>Vous pouvez <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">utiliser n\u2019importe quelle expression dans du JSX</a> en l\u2019enveloppant dans des accolades. \u00c7a vaut aussi pour l\u2019op\u00e9rateur logique Javascript <code class=\"language-javascript\">&amp;&amp;</code>. Il peut \u00eatre pratique pour inclure conditionnellement un \u00e9l\u00e9ment\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Mailbox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> unreadMessages <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>unreadMessages<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          Vous avez </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> message(s) non-lu(s).</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re: React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re:Re: React'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mailbox</span></span> <span class=\"token attr-name\">unreadMessages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ozJddz?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>\u00c7a fonctionne parce qu\u2019en JavaScript, <code class=\"language-javascript\">true &amp;&amp; expression</code> est toujours \u00e9valu\u00e9 \u00e0 <code class=\"language-javascript\">expression</code>, et <code class=\"language-javascript\">false &amp;&amp; expression</code> est toujours \u00e9valu\u00e9 \u00e0 <code class=\"language-javascript\">false</code>.</p>\n<p>Du coup, si la condition vaut <code class=\"language-javascript\">true</code>, l\u2019\u00e9l\u00e9ment juste apr\u00e8s <code class=\"language-javascript\">&amp;&amp;</code> sera affich\u00e9. Si elle vaut <code class=\"language-javascript\">false</code>, React va l\u2019ignorer et le sauter.</p>\n<h3 id=\"inline-if-else-with-conditional-operator\"><a class=\"anchor\" href=\"/react/conditional-rendering#inline-if-else-with-conditional-operator\"></a>Alternative \u00e0 la vol\u00e9e avec op\u00e9rateur ternaire </h3>\n<p>Une autre m\u00e9thode pour l\u2019affichage conditionnel \u00e0 la vol\u00e9e d\u2019\u00e9l\u00e9ments consiste \u00e0 utiliser l\u2019op\u00e9rateur ternaire Javascript <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/L_op%C3%A9rateur_conditionnel\"><code class=\"language-javascript\">condition ? trueValue : falseValue</code></a>.</p>\n<p>Dans l\u2019exemple ci-dessous, on l\u2019utilise pour afficher conditionnellement un bloc de texte.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      L\u2019utilisateur </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token string\">'est actuellement'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'n\u2019est pas'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> connect\u00e9.</span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>On peut aussi l\u2019utiliser pour des expressions plus longues, m\u00eame si c\u2019est moins clair\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>isLoggedIn</span>        <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tout comme en Javascript, c\u2019est \u00e0 vous de choisir un style appropri\u00e9 selon les pr\u00e9f\u00e9rences de lisibilit\u00e9 en vigueur pour vous et votre \u00e9quipe. Souvenez-vous aussi que chaque fois que des conditions deviennent trop complexes, c\u2019est peut-\u00eatre le signe qu\u2019il serait judicieux d\u2019en <a href=\"/react/components-and-props#extracting-components\">extraire un composant</a>.</p>\n<h3 id=\"preventing-component-from-rendering\"><a class=\"anchor\" href=\"/react/conditional-rendering#preventing-component-from-rendering\"></a>Emp\u00eacher l\u2019affichage d\u2019un composant </h3>\n<p>Dans de rares cas, vous voudrez peut-\u00eatre qu\u2019un composant se masque alors m\u00eame qu\u2019il figure dans le rendu d\u2019un autre composant. Pour ce faire, il suffit de renvoyer <code class=\"language-javascript\">null</code> au lieu de son affichage habituel.</p>\n<p>Dans l\u2019exemple ci-dessous, <code class=\"language-javascript\">&lt;WarningBanner /&gt;</code> s\u2019affichera en fonction de la valeur de la prop <code class=\"language-javascript\">warn</code>. Si la valeur est <code class=\"language-javascript\">false</code>, le composant ne s\u2019affiche pas\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">WarningBanner</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Attention !</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>showWarning<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      showWarning<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>showWarning\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WarningBanner</span></span> <span class=\"token attr-name\">warn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning <span class=\"token operator\">?</span> <span class=\"token string\">'Masquer'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Afficher'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/Xjoqwm?editors=0010\"><strong>Essayer sur on CodePen</strong></a></p>\n<p>Renvoyer <code class=\"language-javascript\">null</code> depuis la m\u00e9thode <code class=\"language-javascript\">render</code> d\u2019un composant n\u2019affecte pas l\u2019appel aux m\u00e9thodes du cycle de vie du composant. Par exemple, <code class=\"language-javascript\">componentDidUpdate</code> sera quand m\u00eame appel\u00e9e.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/conditional-rendering.md\">Edit this page</a></p></div></article>", "path": "/react/conditional-rendering", "nav": ["/react/handling-events", "/react/lists-and-keys"]}, {"key": "8. Listes et cl\u00e9s", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Tout d\u2019abord, voyons comment transformer des listes en JavaScript.</p>\n<p>Dans le code suivant, on utilise la m\u00e9thode <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/map\"><code class=\"language-javascript\">map()</code></a> pour prendre un tableau de nombres et doubler leurs valeurs. On affecte le nouveau tableau retourn\u00e9 par <code class=\"language-javascript\">map()</code> \u00e0 une variable <code class=\"language-javascript\">doubled</code> et on l\u2019affiche dans la console\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> doubled <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doubled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ce code affiche <code class=\"language-javascript\">[2, 4, 6, 8, 10]</code> dans la console.</p>\n<p>Avec React, transformer un tableau en une liste d\u2019<a href=\"/react/rendering-elements\">\u00e9l\u00e9ments</a> est presque identique.</p>\n<h3 id=\"rendering-multiple-components\"><a class=\"anchor\" href=\"/react/lists-and-keys#rendering-multiple-components\"></a>Afficher plusieurs composants </h3>\n<p>On peut construire des collections d\u2019\u00e9l\u00e9ments et <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">les inclure dans du JSX</a> en utilisant les accolades <code class=\"language-javascript\">{}</code>.</p>\n<p>Ci-dessous, on it\u00e8re sur le tableau de nombres en utilisant la m\u00e9thode JavaScript <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/map\"><code class=\"language-javascript\">map()</code></a>. On retourne un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;li&gt;</code> pour chaque entr\u00e9e du tableau. Enfin, on affecte le tableau d\u2019\u00e9l\u00e9ments r\u00e9sultant \u00e0 <code class=\"language-javascript\">listItems</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>On inclut tout le tableau <code class=\"language-javascript\">listItems</code> dans un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;ul&gt;</code>, et <a href=\"/react/rendering-elements#rendering-an-element-into-the-dom\">on l\u2019affiche dans le DOM</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span></span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/GjPyQr?editors=0011\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Ce code affiche une liste \u00e0 puces de nombres entre 1 et 5.</p>\n<h3 id=\"basic-list-component\"><a class=\"anchor\" href=\"/react/lists-and-keys#basic-list-component\"></a>Composant basique de liste </h3>\n<p>G\u00e9n\u00e9ralement, on souhaite afficher une liste au sein d\u2019un <a href=\"/react/components-and-props\">composant</a>.</p>\n<p>On peut transformer l\u2019exemple pr\u00e9c\u00e9dent pour en faire un composant qui accepte un tableau de nombres et produit une liste d\u2019\u00e9l\u00e9ments.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NumberList</span></span> <span class=\"token attr-name\">numbers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span></span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>En ex\u00e9cutant ce code, vous obtiendrez un avertissement disant qu\u2019une cl\u00e9 devrait \u00eatre fournie pour les \u00e9l\u00e9ments d\u2019une liste. Une \u00ab\u00a0cl\u00e9\u00a0\u00bb <em>(key, NdT)</em>, est un attribut sp\u00e9cial que vous devez inclure quand vous cr\u00e9ez une liste d\u2019\u00e9l\u00e9ments. Nous verrons pourquoi c\u2019est important dans la prochaine section.</p>\n<p>Assignons une <code class=\"language-javascript\">key</code> aux \u00e9l\u00e9ments de notre liste dans <code class=\"language-javascript\">numbers.map()</code> afin de corriger  le probl\u00e8me de cl\u00e9s manquantes.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NumberList</span></span> <span class=\"token attr-name\">numbers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jrXYRR?editors=0011\"><strong>Essayer sur CodePen</strong></a></p>\n<h2 id=\"keys\"><a class=\"anchor\" href=\"/react/lists-and-keys#keys\"></a>Les cl\u00e9s </h2>\n<p>Les cl\u00e9s aident React \u00e0 identifier quels \u00e9l\u00e9ments d\u2019une liste ont chang\u00e9, ont \u00e9t\u00e9 ajout\u00e9s ou supprim\u00e9s. Vous devez donner une cl\u00e9 \u00e0 chaque \u00e9l\u00e9ment dans un tableau afin d\u2019apporter aux \u00e9l\u00e9ments une identit\u00e9 stable\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Le meilleur moyen de choisir une cl\u00e9 est d\u2019utiliser quelque chose qui identifie de fa\u00e7on unique un \u00e9l\u00e9ment d\u2019une liste parmi ses voisins. Le plus souvent on utilise l\u2019ID de notre donn\u00e9e comme cl\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> todoItems <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Quand vous n\u2019avez pas d\u2019ID stable pour les \u00e9l\u00e9ments affich\u00e9s, vous pouvez utiliser l\u2019index de l\u2019\u00e9l\u00e9ment en dernier recours\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> todoItems <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Ne faites ceci que si les \u00e9l\u00e9ments n'ont pas d'ID stable</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous vous recommandons de ne pas utiliser l\u2019index comme cl\u00e9 si l\u2019ordre des \u00e9l\u00e9ments est susceptible de changer. \u00c7a peut avoir un effet n\u00e9gatif sur les performances, et causer des probl\u00e8mes avec l\u2019\u00e9tat du composant. Vous pouvez lire l\u2019article de Robin Pokorny pour une <a class=\"external-link\" href=\"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318\">explication en profondeur de l\u2019impact n\u00e9gatif de l\u2019utilisation de l\u2019index comme cl\u00e9</a> (en anglais). Si vous choisissez de ne pas donner explicitement de cl\u00e9 aux \u00e9l\u00e9ments d\u2019une liste, React utilisera l\u2019index par d\u00e9faut.</p>\n<p>Si vous voulez en apprendre davantage, consultez cette <a href=\"/react/reconciliation#recursing-on-children\">explication en profondeur de la raison pour laquelle les cl\u00e9s sont n\u00e9cessaires</a>.</p>\n<h3 id=\"extracting-components-with-keys\"><a class=\"anchor\" href=\"/react/lists-and-keys#extracting-components-with-keys\"></a>Extraire des composants avec des cl\u00e9s </h3>\n<p>Les cl\u00e9s n\u2019ont une signification que dans le contexte du tableau qui les entoure.</p>\n<p>Par exemple, si on <a href=\"/react/components-and-props#extracting-components\">extrait</a> un composant <code class=\"language-javascript\">ListItem</code>, on doit garder la cl\u00e9 sur l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;ListItem /&gt;</code> dans le tableau, et non sur l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;li&gt;</code> dans le composant <code class=\"language-javascript\">ListItem</code> lui-m\u00eame.</p>\n<p><strong>Exemple\u00a0: utilisation erron\u00e9e des cl\u00e9s</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Erron\u00e9 ! Pas la peine de sp\u00e9cifier la cl\u00e9 ici :</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Erron\u00e9 : la cl\u00e9 doit \u00eatre sp\u00e9cifi\u00e9e ici :</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NumberList</span></span> <span class=\"token attr-name\">numbers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Exemple\u00a0: utilisation correcte des cl\u00e9s</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Correct ! Pas la peine de sp\u00e9cifier la cl\u00e9 ici :</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Correct ! La cl\u00e9 doit \u00eatre sp\u00e9cifi\u00e9e dans le tableau.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NumberList</span></span> <span class=\"token attr-name\">numbers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZXeOGM?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Gardez en t\u00eate cette r\u00e8gle simple\u00a0: chaque \u00e9l\u00e9ment \u00e0 l\u2019int\u00e9rieur d\u2019un appel \u00e0 <code class=\"language-javascript\">map()</code> a besoin d\u2019une cl\u00e9.</p>\n<h3 id=\"keys-must-only-be-unique-among-siblings\"><a class=\"anchor\" href=\"/react/lists-and-keys#keys-must-only-be-unique-among-siblings\"></a>Les cl\u00e9s n\u2019ont besoin d\u2019\u00eatre uniques qu\u2019au sein de la liste </h3>\n<p>Les cl\u00e9s utilis\u00e9es dans un tableau doivent \u00eatre uniques parmi leurs voisins. Cependant, elles n\u2019ont pas besoin d\u2019\u00eatre globalement uniques. On peut utiliser les m\u00eames cl\u00e9s dans des tableaux diff\u00e9rents\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Blog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> sidebar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>sidebar<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour, monde'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> <span class=\"token string\">'Bienvenue sur la doc de React !'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Installation'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> <span class=\"token string\">'Vous pouvez installer React depuis npm.'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Blog</span></span> <span class=\"token attr-name\">posts</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/NRZYGN?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Les cl\u00e9s servent d\u2019indicateur \u00e0 React mais ne sont pas pass\u00e9es \u00e0 vos composants. Si vous avez besoin de la m\u00eame valeur dans votre composant, passez-la dans une prop avec un nom diff\u00e9rent\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Post</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span></span>    <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dans l\u2019exemple ci-dessus, le composant <code class=\"language-javascript\">Post</code> peut acc\u00e9der \u00e0 <code class=\"language-javascript\">props.id</code>, mais pas \u00e0 <code class=\"language-javascript\">props.key</code>.</p>\n<h3 id=\"embedding-map-in-jsx\"><a class=\"anchor\" href=\"/react/lists-and-keys#embedding-map-in-jsx\"></a>Int\u00e9grer <code class=\"language-javascript\">map()</code> dans du JSX </h3>\n<p>Dans les exemples pr\u00e9c\u00e9dents, nous d\u00e9clarions s\u00e9par\u00e9ment la variable <code class=\"language-javascript\">listItems</code> pour ensuite l\u2019inclure dans le JSX\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">              <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JSX permet <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">d\u2019int\u00e9grer des expressions quelconques</a> entre accolades. Nous pouvons donc utiliser <code class=\"language-javascript\">map()</code> directement dans notre code JSX\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">                  <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/BLvYrB?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>\u00c7a rend parfois le code plus lisible, mais il faut \u00e9viter d\u2019en abuser. Comme avec JavaScript, c\u2019est vous qui d\u00e9cidez quand \u00e7a vaut le coup d\u2019extraire l\u2019expression dans une variable pour plus de lisibilit\u00e9. Gardez en t\u00eate que si le corps de <code class=\"language-javascript\">map()</code> est trop profond ou trop riche, c\u2019est sans doute le signe qu\u2019il faudrait <a href=\"/react/components-and-props#extracting-components\">extraire un composant</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/lists-and-keys.md\">Edit this page</a></p></div></article>", "path": "/react/lists-and-keys", "nav": ["/react/conditional-rendering", "/react/forms"]}, {"key": "9. Formulaires", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les formulaires HTML fonctionnent un peu diff\u00e9remment des autres \u00e9l\u00e9ments du DOM en React car ils poss\u00e8dent naturellement un \u00e9tat interne. Par exemple, ce formulaire en HTML qui accepte juste un nom\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    Nom :\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Ce formulaire a le comportement classique d\u2019un formulaire HTML et redirige sur une nouvelle page quand l\u2019utilisateur le soumet. Si vous souhaitez ce comportement en React, vous n\u2019avez rien \u00e0 faire. Cependant, dans la plupart des cas, vous voudrez pouvoir g\u00e9rer la soumission avec une fonction JavaScript, qui acc\u00e8de aux donn\u00e9es saisies par l\u2019utilisateur. La mani\u00e8re classique de faire \u00e7a consiste \u00e0 utiliser les \u00ab\u00a0composants contr\u00f4l\u00e9s\u00a0\u00bb.</p>\n<h2 id=\"controlled-components\"><a class=\"anchor\" href=\"/react/forms#controlled-components\"></a>Composants contr\u00f4l\u00e9s </h2>\n<p>En HTML, les \u00e9l\u00e9ments de formulaire tels que <code class=\"language-javascript\">&lt;input&gt;</code>, <code class=\"language-javascript\">&lt;textarea&gt;</code>, et <code class=\"language-javascript\">&lt;select&gt;</code> maintiennent g\u00e9n\u00e9ralement leur propre \u00e9tat et se mettent \u00e0 jour par rapport aux saisies de l\u2019utilisateur. En React, l\u2019\u00e9tat modifiable est g\u00e9n\u00e9ralement stock\u00e9 dans la propri\u00e9t\u00e9 <code class=\"language-javascript\">state</code> des composants et mis \u00e0 jour uniquement avec <a href=\"/react/react-component#setstate\"><code class=\"language-javascript\">setState()</code></a>.</p>\n<p>On peut combiner ces deux concepts en utilisant l\u2019\u00e9tat local React comme \u00ab\u00a0source unique de v\u00e9rit\u00e9\u00a0\u00bb. Ainsi le composant React qui affiche le formulaire contr\u00f4le aussi son comportement par rapport aux saisies de l\u2019utilisateur. Un champ de formulaire dont l\u2019\u00e9tat est contr\u00f4l\u00e9 de cette fa\u00e7on par React est appel\u00e9 un \u00ab\u00a0composant contr\u00f4l\u00e9\u00a0\u00bb.</p>\n<p>Par exemple, en reprenant le code ci-dessus pour afficher le nom lors de la soumission, on peut \u00e9crire le formulaire sous forme de composant contr\u00f4l\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Le nom a \u00e9t\u00e9 soumis : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Nom :</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/VmmPgp?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>\u00c0 pr\u00e9sent que l\u2019attribut <code class=\"language-javascript\">value</code> est d\u00e9fini sur notre \u00e9l\u00e9ment de formulaire, la valeur affich\u00e9e sera toujours <code class=\"language-javascript\">this.state.value</code>, faisant ainsi de l\u2019\u00e9tat local React la source de v\u00e9rit\u00e9. Puisque <code class=\"language-javascript\">handleChange</code> est d\u00e9clench\u00e9 \u00e0 chaque frappe pour mettre \u00e0 jour l\u2019\u00e9tat local React, la valeur affich\u00e9e restera mise \u00e0 jour au fil de la saisie.</p>\n<p>Dans un composant contr\u00f4l\u00e9, la valeur du champ est en permanence pilot\u00e9e par l\u2019\u00e9tat React.  M\u00eame si \u00e7a signifie que vous devez taper un peu plus de code, vous pouvez d\u00e9sormais passer la valeur \u00e0 d\u2019autres \u00e9l\u00e9ments de l\u2019UI, ou la r\u00e9initialiser depuis d\u2019autres gestionnaires d\u2019\u00e9v\u00e9nements.</p>\n<h2 id=\"the-textarea-tag\"><a class=\"anchor\" href=\"/react/forms#the-textarea-tag\"></a>La balise <code class=\"language-javascript\">textarea</code> </h2>\n<p>En HTML, une balise <code class=\"language-javascript\">&lt;textarea&gt;</code> d\u00e9finit son texte via ses enfants\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  Bonjour, voici du texte dans une zone de texte\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>En React, un <code class=\"language-javascript\">&lt;textarea&gt;</code> utilise \u00e0 la place l\u2019attribut <code class=\"language-javascript\">value</code>. Du coup, un formulaire utilisant un <code class=\"language-javascript\">&lt;textarea&gt;</code> peut \u00eatre \u00e9crit d\u2019une mani\u00e8re tr\u00e8s similaire \u00e0 un formulaire avec un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;input&gt;</code> mono-ligne.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EssayForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      value<span class=\"token operator\">:</span> <span class=\"token string\">'\u00c9crivez un essai \u00e0 propos de votre \u00e9l\u00e9ment du DOM pr\u00e9f\u00e9r\u00e9'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Un essai a \u00e9t\u00e9 envoy\u00e9 : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Essay:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez que <code class=\"language-javascript\">this.state.value</code> est initialis\u00e9 dans le constructeur, permettant que le textarea d\u00e9marre avec du texte \u00e0 l\u2019int\u00e9rieur.</p>\n<h2 id=\"the-select-tag\"><a class=\"anchor\" href=\"/react/forms#the-select-tag\"></a>La balise <code class=\"language-javascript\">select</code> </h2>\n<p>En HTML, <code class=\"language-javascript\">&lt;select&gt;</code> cr\u00e9e une liste d\u00e9roulante. Par exemple, ce HTML cr\u00e9e une liste d\u00e9roulante de parfums.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grapefruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Pamplemousse<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Citron vert<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">selected</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coconut<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Noix de coco<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mango<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Mangue<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Notez que l\u2019option Noix de coco est s\u00e9lectionn\u00e9e au d\u00e9part, gr\u00e2ce \u00e0 l\u2019attribut <code class=\"language-javascript\">selected</code>. React, au lieu d\u2019utiliser l\u2019attribut <code class=\"language-javascript\">selected</code>, utilise un attribut <code class=\"language-javascript\">value</code> sur la balise racine <code class=\"language-javascript\">select</code>. C\u2019est plus pratique dans un composant contr\u00f4l\u00e9 car vous n\u2019avez qu\u2019un seul endroit \u00e0 mettre \u00e0 jour. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FlavorForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> <span class=\"token string\">'coconut'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Votre parfum favori est : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Choisissez votre parfum favori :</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grapefruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Pamplemousse</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Citron vert</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coconut<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Noix de coco</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mango<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Mangue</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/JbbEzX?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Au final, \u00e7a permet aux balises <code class=\"language-javascript\">&lt;input type=\"text\"&gt;</code>, <code class=\"language-javascript\">&lt;textarea&gt;</code>, et <code class=\"language-javascript\">&lt;select&gt;</code> de fonctionner de mani\u00e8re tr\u00e8s similaire\u2014elles acceptent toutes un attribut <code class=\"language-javascript\">value</code> que vous pouvez utiliser pour impl\u00e9menter un composant contr\u00f4l\u00e9.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>Vous pouvez passer un tableau pour l\u2019attribut <code class=\"language-javascript\">value</code>, permettant de s\u00e9lectionner plusieurs valeurs dans un \u00e9l\u00e9ment <code class=\"language-javascript\">select</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">multiple</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n</div>\n<h2 id=\"the-file-input-tag\"><a class=\"anchor\" href=\"/react/forms#the-file-input-tag\"></a>La balise <code class=\"language-javascript\">input type=\"file\"</code> </h2>\n<p>En HTML, un <code class=\"language-javascript\">&lt;input type=\"file\"&gt;</code> permet \u00e0 l\u2019utilisateur de s\u00e9lectionner un ou plusieurs fichiers depuis son appareil et de les t\u00e9l\u00e9verser vers un serveur ou de les manipuler en JavaScript gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/File/Using_files_from_web_applications\">l\u2019API File</a>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Sa valeur \u00e9tant en lecture seule, c\u2019est un composant <strong>non-contr\u00f4l\u00e9</strong> en React. Ce cas de figure et le sujet des composants non-contr\u00f4l\u00e9s en g\u00e9n\u00e9ral sera d\u00e9taill\u00e9 <a href=\"/react/uncontrolled-components#the-file-input-tag\">plus tard dans la documentation</a>.</p>\n<h2 id=\"handling-multiple-inputs\"><a class=\"anchor\" href=\"/react/forms#handling-multiple-inputs\"></a>G\u00e9rer plusieurs saisies </h2>\n<p>Quand vous souhaitez g\u00e9rer plusieurs champs contr\u00f4l\u00e9s, vous pouvez ajouter un attribut <code class=\"language-javascript\">name</code> \u00e0 chaque champ et laisser la fonction gestionnaire choisir quoi faire en fonction de la valeur de <code class=\"language-javascript\">event.target.name</code>.</p>\n<p>Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Reservation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      isGoing<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      numberOfGuests<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">?</span> target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">:</span> target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value</span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Participe :</span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isGoing<span class=\"token punctuation\">\"</span></span></span>            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">checked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isGoing<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Nombre d'invit\u00e9s :</span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numberOfGuests<span class=\"token punctuation\">\"</span></span></span>            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>numberOfGuests<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/wgedvV?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Notez l\u2019utilisation de la syntaxe des <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Initialisateur_objet#Noms_de_propri%C3%A9t%C3%A9s_calcul%C3%A9s\">propri\u00e9t\u00e9s calcul\u00e9s</a> pour mettre \u00e0 jour la valeur de l\u2019\u00e9tat correspondant au nom du champ.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>C\u2019est \u00e9quivalent \u00e0 ce code ES5\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> partialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">partialState<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>partialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Qui plus est, comme <code class=\"language-javascript\">setState()</code> fusionne automatiquement un \u00e9tat partiel dans l\u2019\u00e9tat local courant, il nous a suffi de l\u2019appeler avec les parties modifi\u00e9es.</p>\n<h2 id=\"controlled-input-null-value\"><a class=\"anchor\" href=\"/react/forms#controlled-input-null-value\"></a>Valeur nulle des champs contr\u00f4l\u00e9s </h2>\n<p>D\u00e9finir la prop <code class=\"language-javascript\">value</code> sur un <a href=\"/react/forms#controlled-components\">composant contr\u00f4l\u00e9</a> emp\u00eache l\u2019utilisateur de changer la saisie sauf si vous le permettez. Si vous sp\u00e9cifiez une <code class=\"language-javascript\">value</code> mais que le champ reste modifiable, alors <code class=\"language-javascript\">value</code> doit s\u2019\u00eatre accidentellement retrouv\u00e9e \u00e0 <code class=\"language-javascript\">undefined</code> ou <code class=\"language-javascript\">null</code>.</p>\n<p>Le code suivant illustre ce cas de figure. (Le champ est verrouill\u00e9 au d\u00e9marrage mais devient modifiable apr\u00e8s un court d\u00e9lai.)</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Salut<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> mountNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> mountNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"alternatives-to-controlled-components\"><a class=\"anchor\" href=\"/react/forms#alternatives-to-controlled-components\"></a>Alternatives aux composants contr\u00f4l\u00e9s </h2>\n<p>Il est parfois fastidieux d\u2019utiliser les composants contr\u00f4l\u00e9s, car il vous faut \u00e9crire un gestionnaire d\u2019\u00e9v\u00e9nement pour chaque possibilit\u00e9 de changement des donn\u00e9es, et g\u00e9rer toute modification des saisies via un composant React. \u00c7a peut devenir particuli\u00e8rement irritant lors de la conversion d\u2019un projet en React, ou l\u2019int\u00e9gration d\u2019une application React avec une biblioth\u00e8que non-React. Dans ces situations, il est int\u00e9ressant de conna\u00eetre les <a href=\"/react/uncontrolled-components\">composants non-contr\u00f4l\u00e9s</a>, une technique alternative pour impl\u00e9menter les formulaires de saisie.</p>\n<h2 id=\"fully-fledged-solutions\"><a class=\"anchor\" href=\"/react/forms#fully-fledged-solutions\"></a>Solutions cl\u00e9 en main </h2>\n<p>Si vous cherchez une solution compl\u00e8te g\u00e9rant la validation, l\u2019historique des champs visit\u00e9s, et la gestion de soumission de formulaire, <a class=\"external-link\" href=\"https://jaredpalmer.com/formik\">Formik</a> fait partie des choix populaires. Ceci dit, il repose sur les m\u00eames principes de composants contr\u00f4l\u00e9s et de gestion d\u2019\u00e9tat local\u2014alors ne faites pas l\u2019impasse dessus.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/forms.md\">Edit this page</a></p></div></article>", "path": "/react/forms", "nav": ["/react/lists-and-keys", "/react/lifting-state-up"]}, {"key": "10. Faire remonter l'\u00e9tat", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Plusieurs composants ont souvent besoin de refl\u00e9ter les m\u00eames donn\u00e9es dynamiques. Nous conseillons de faire remonter l\u2019\u00e9tat partag\u00e9 dans leur anc\u00eatre commun le plus proche. Voyons comment \u00e7a marche.</p>\n<p>Dans cette section, nous allons cr\u00e9er un calculateur de temp\u00e9rature qui d\u00e9termine si l\u2019eau bout \u00e0 une temp\u00e9rature donn\u00e9e.</p>\n<p>Commen\u00e7ons par un composant appel\u00e9 <code class=\"language-javascript\">BoilingVerdict</code>. Il accepte une prop <code class=\"language-javascript\">celsius</code> pour la temp\u00e9rature, et il affiche si elle est suffisante pour faire bouillir l\u2019eau\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">BoilingVerdict</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>celsius <span class=\"token operator\">&gt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">L'eau bout.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">L'eau ne bout pas.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ensuite, nous allons cr\u00e9er un composant appel\u00e9 <code class=\"language-javascript\">Calculator</code>. Il affiche un <code class=\"language-javascript\">&lt;input&gt;</code> qui permet de saisir une temp\u00e9rature et de conserver sa valeur dans <code class=\"language-javascript\">this.state.temperature</code>.</p>\n<p>Par ailleurs, il affiche le <code class=\"language-javascript\">BoilingVerdict</code> pour la temp\u00e9rature saisie.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Saisissez la temp\u00e9rature en Celsius :</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BoilingVerdict</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">celsius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZXeOBm?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<h2 id=\"adding-a-second-input\"><a class=\"anchor\" href=\"/react/lifting-state-up#adding-a-second-input\"></a>Ajouter un deuxi\u00e8me champ </h2>\n<p>Il nous faut \u00e0 pr\u00e9sent proposer, en plus d\u2019une saisie en Celsius, une saisie en Fahrenheit, les deux devant rester synchronis\u00e9es.</p>\n<p>On peut commencer par extraire un composant <code class=\"language-javascript\">TemperatureInput</code> du code de <code class=\"language-javascript\">Calculator</code>. Ajoutons-y une prop <code class=\"language-javascript\">scale</code> qui pourra \u00eatre soit <code class=\"language-javascript\">\"c\"</code>, soit <code class=\"language-javascript\">\"f\"</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> scaleNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  c<span class=\"token operator\">:</span> <span class=\"token string\">'Celsius'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  f<span class=\"token operator\">:</span> <span class=\"token string\">'Fahrenheit'</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Saisissez la temp\u00e9rature en </span><span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> :</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span>\n               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pouvons d\u00e9sormais modifier le composant <code class=\"language-javascript\">Calculator</code> pour afficher deux saisies de temp\u00e9rature\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jGBryx?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Nous avons maintenant deux champs de saisie, mais lorsque vous saisissez la temp\u00e9rature dans un des deux, l\u2019autre ne se met pas \u00e0 jour. Nous avons besoin de les garder synchronis\u00e9s.</p>\n<p>Qui plus est, nous ne pouvons pas afficher le <code class=\"language-javascript\">BoilingVerdict</code> depuis <code class=\"language-javascript\">Calculator</code>. Le composant <code class=\"language-javascript\">Calculator</code> n\u2019a pas acc\u00e8s \u00e0 la temp\u00e9rature saisie, car elle est cach\u00e9e dans le <code class=\"language-javascript\">TemperatureInput</code>.</p>\n<h2 id=\"writing-conversion-functions\"><a class=\"anchor\" href=\"/react/lifting-state-up#writing-conversion-functions\"></a>\u00c9crire des fonctions de conversion </h2>\n<p>D\u2019abord, \u00e9crivons deux fonctions pour convertir de Celsius \u00e0 Fahrenheit et r\u00e9ciproquement\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toCelsius</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fahrenheit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">toFahrenheit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">celsius</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>celsius <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ces deux fonctions convertissent des nombres. \u00c9crivons une autre fonction qui prend en arguments une cha\u00eene de caract\u00e8res <code class=\"language-javascript\">temperature</code> et une fonction de conversion, et qui renvoie une cha\u00eene. Nous utiliserons cette nouvelle fonction pour calculer la valeur d\u2019un champ en fonction de l\u2019autre.</p>\n<p>Elle renvoie une cha\u00eene vide pour une <code class=\"language-javascript\">temperature</code> incorrecte, et arrondit la valeur de retour \u00e0 trois d\u00e9cimales\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature<span class=\"token punctuation\">,</span> convert</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rounded <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>output <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> rounded<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Par exemple, <code class=\"language-javascript\">tryConvert('abc', toCelsius)</code> renvoie une cha\u00eene vide, et <code class=\"language-javascript\">tryConvert('10.22', toFahrenheit)</code> renvoie <code class=\"language-javascript\">'50.396'</code>.</p>\n<h2 id=\"lifting-state-up\"><a class=\"anchor\" href=\"/react/lifting-state-up#lifting-state-up\"></a>Faire remonter l\u2019\u00e9tat </h2>\n<p>Pour l\u2019instant, les deux \u00e9l\u00e9ments <code class=\"language-javascript\">TemperatureInput</code> conservent leur propre \u00e9tat local ind\u00e9pendamment l\u2019un de l\u2019autre\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Cependant, nous voulons que les deux champs soient synchronis\u00e9s. Lorsqu\u2019on modifie le champ en Celsius, celui en Fahrenheit doit refl\u00e9ter la temp\u00e9rature convertie, et r\u00e9ciproquement.</p>\n<p>Avec React, partager l\u2019\u00e9tat est possible en le d\u00e9pla\u00e7ant dans le plus proche anc\u00eatre commun. On appelle \u00e7a \u00ab\u00a0faire remonter l\u2019\u00e9tat\u00a0\u00bb. Nous allons supprimer l\u2019\u00e9tat local de <code class=\"language-javascript\">TemperatureInput</code> et le d\u00e9placer dans le composant <code class=\"language-javascript\">Calculator</code>.</p>\n<p>Si le composant <code class=\"language-javascript\">Calculator</code> est responsable de l\u2019\u00e9tat partag\u00e9, il devient la \u00ab\u00a0source de v\u00e9rit\u00e9\u00a0\u00bb pour la temp\u00e9rature des deux champs. Il peut leur fournir des valeurs qui soient coh\u00e9rentes l\u2019une avec l\u2019autre. Comme les props des deux composants <code class=\"language-javascript\">TemperatureInput</code> viennent du m\u00eame composant parent <code class=\"language-javascript\">Calculator</code>, les deux champs seront toujours synchronis\u00e9s.</p>\n<p>Voyons comment \u00e7a marche \u00e9tape par \u00e9tape.</p>\n<p>D\u2019abord, rempla\u00e7ons <code class=\"language-javascript\">this.state.temperature</code> par <code class=\"language-javascript\">this.props.temperature</code> dans le composant <code class=\"language-javascript\">TemperatureInput</code>. Pour le moment, faisons comme si <code class=\"language-javascript\">this.props.temperature</code> existait d\u00e9j\u00e0, m\u00eame si nous allons devoir la passer depuis <code class=\"language-javascript\">Calculator</code> plus tard\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Avant : const temperature = this.state.temperature;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>On sait que <a href=\"/react/components-and-props#props-are-read-only\">les props sont en lecture seule</a>. Quand la <code class=\"language-javascript\">temperature</code> \u00e9tait dans l\u2019\u00e9tat local, le composant <code class=\"language-javascript\">TemperatureInput</code> pouvait simplement appeler <code class=\"language-javascript\">this.setState()</code> pour la changer. Cependant, maintenant que <code class=\"language-javascript\">temperature</code> vient du parent par une prop, le composant <code class=\"language-javascript\">TemperatureInput</code> n\u2019a pas le contr\u00f4le dessus.</p>\n<p>Avec React, on g\u00e8re g\u00e9n\u00e9ralement \u00e7a en rendant le composant \u00ab\u00a0contr\u00f4l\u00e9\u00a0\u00bb. Tout comme un \u00e9l\u00e9ment DOM <code class=\"language-javascript\">&lt;input&gt;</code> accepte des props <code class=\"language-javascript\">value</code> et <code class=\"language-javascript\">onChange</code>, notre <code class=\"language-javascript\">TemperatureInput</code> peut accepter des props <code class=\"language-javascript\">temperature</code> et <code class=\"language-javascript\">onTemperatureChange</code> fournies par son parent <code class=\"language-javascript\">Calculator</code>.</p>\n<p>Maintenant, quand le composant <code class=\"language-javascript\">TemperatureInput</code> veut mettre \u00e0 jour la temp\u00e9rature, il appelle <code class=\"language-javascript\">this.props.onTemperatureChange</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Avant : this.setState({temperature: e.target.value});</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les noms de props <code class=\"language-javascript\">temperature</code> et <code class=\"language-javascript\">onTemperatureChange</code> n\u2019ont pas de sens particulier. On aurait pu les appeler n\u2019importe comment, par exemple <code class=\"language-javascript\">value</code> et <code class=\"language-javascript\">onChange</code>, qui constituent une convention de nommage r\u00e9pandue.</p>\n</div>\n<p>La prop <code class=\"language-javascript\">onTemperatureChange</code> sera fournie par le composant parent <code class=\"language-javascript\">Calculator</code>, tout comme la prop <code class=\"language-javascript\">temperature</code>. Elle s\u2019occupera du changement en modifiant son propre \u00e9tat local, entra\u00eenant un nouvel affichage des deux champs avec leurs nouvelles valeurs. Nous allons nous pencher tr\u00e8s bient\u00f4t sur l\u2019impl\u00e9mentation du nouveau composant <code class=\"language-javascript\">Calculator</code>.</p>\n<p>Avant de modifier le composant <code class=\"language-javascript\">Calculator</code>, r\u00e9capitulons les modifications apport\u00e9es au composant <code class=\"language-javascript\">TemperatureInput</code>. Nous en avons retir\u00e9 l\u2019\u00e9tat local, et nous lisons d\u00e9sormais <code class=\"language-javascript\">this.props.temperature</code> au lieu de <code class=\"language-javascript\">this.state.temperature</code>. Plut\u00f4t que d\u2019appeler <code class=\"language-javascript\">this.setState()</code> quand on veut faire un changement, on appelle d\u00e9sormais <code class=\"language-javascript\">this.props.onTemperatureChange()</code>, qui est fournie par le <code class=\"language-javascript\">Calculator</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Saisissez la temp\u00e9rature en </span><span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> :</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span>\n               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Int\u00e9ressons-nous maintenant au composant <code class=\"language-javascript\">Calculator</code>.</p>\n<p>Nous allons stocker la valeur courante de <code class=\"language-javascript\">temperature</code> et de <code class=\"language-javascript\">scale</code> dans son \u00e9tat local. C\u2019est l\u2019\u00e9tat que nous avons \u00ab\u00a0remont\u00e9\u00a0\u00bb depuis les champs, et il servira de \u00ab\u00a0source de v\u00e9rit\u00e9\u00a0\u00bb pour eux deux. C\u2019est la repr\u00e9sentation minimale des donn\u00e9es dont nous avons besoin afin d\u2019afficher les deux champs.</p>\n<p>Par exemple, si on saisit 37 dans le champ en Celsius, l\u2019\u00e9tat local du composant <code class=\"language-javascript\">Calculator</code> sera\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  temperature<span class=\"token operator\">:</span> <span class=\"token string\">'37'</span><span class=\"token punctuation\">,</span>\n  scale<span class=\"token operator\">:</span> <span class=\"token string\">'c'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si plus tard on change le champ Fahrenheit \u00e0 212, l\u2019\u00e9tat local du composant <code class=\"language-javascript\">Calculator</code> sera\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  temperature<span class=\"token operator\">:</span> <span class=\"token string\">'212'</span><span class=\"token punctuation\">,</span>\n  scale<span class=\"token operator\">:</span> <span class=\"token string\">'f'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>On pourrait avoir stock\u00e9 les valeurs des deux champs, mais en fait ce n\u2019est pas n\u00e9cessaire. Stocker uniquement la valeur la plus r\u00e9cente et son unit\u00e9 s\u2019av\u00e8re suffisant. On peut d\u00e9duire la valeur de l\u2019autre champ rien qu\u2019\u00e0 partir des valeurs de <code class=\"language-javascript\">temperature</code> et de <code class=\"language-javascript\">scale</code> stock\u00e9es.</p>\n<p>Les champs restent synchronis\u00e9s car leurs valeurs sont calcul\u00e9es depuis le m\u00eame \u00e9tat\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>temperature<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>scale<span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>scale<span class=\"token operator\">:</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> celsius <span class=\"token operator\">=</span> scale <span class=\"token operator\">===</span> <span class=\"token string\">'f'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toCelsius<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> fahrenheit <span class=\"token operator\">=</span> scale <span class=\"token operator\">===</span> <span class=\"token string\">'c'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toFahrenheit<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature<span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span>\n          <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">temperature</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>celsius<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onTemperatureChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span>\n          <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">temperature</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fahrenheit<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onTemperatureChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BoilingVerdict</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">celsius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>celsius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/WZpxpz?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>D\u00e9sormais, quel que soit le champ que vous modifiez, <code class=\"language-javascript\">this.state.temperature</code> et <code class=\"language-javascript\">this.state.scale</code> seront mis \u00e0 jour au sein du composant <code class=\"language-javascript\">Calculator</code>. L\u2019un des deux champ recevra la valeur telle quelle, et l\u2019autre valeur de champ sera toujours recalcul\u00e9e \u00e0 partir de la valeur modifi\u00e9e.</p>\n<p>R\u00e9capitulons ce qui se passe quand on change la valeur d\u2019un champ\u00a0:</p>\n<ul>\n<li>React appelle la fonction sp\u00e9cifi\u00e9e dans l\u2019attribut <code class=\"language-javascript\">onChange</code> de l\u2019\u00e9l\u00e9ment DOM <code class=\"language-javascript\">&lt;input&gt;</code>. Dans notre cas, c\u2019est la m\u00e9thode <code class=\"language-javascript\">handleChange</code> du composant <code class=\"language-javascript\">TemperatureInput</code>.</li>\n<li>La m\u00e9thode <code class=\"language-javascript\">handleChange</code> du composant <code class=\"language-javascript\">TemperatureInput</code> appelle <code class=\"language-javascript\">this.props.onTemperatureChange()</code> avec la nouvelle valeur. Ses props, notamment <code class=\"language-javascript\">onTemperatureChange</code>, ont \u00e9t\u00e9 fournies par son composant parent, <code class=\"language-javascript\">Calculator</code>.</li>\n<li>Au dernier affichage en date, le composant <code class=\"language-javascript\">Calculator</code> avait pass\u00e9 la m\u00e9thode <code class=\"language-javascript\">handleCelsiusChange</code> de <code class=\"language-javascript\">Calculator</code> comme prop <code class=\"language-javascript\">onTemperatureChange</code> du <code class=\"language-javascript\">TemperatureInput</code>  en Celsius, et la m\u00e9thode <code class=\"language-javascript\">handleFahrenheitChange</code> de <code class=\"language-javascript\">Calculator</code> comme prop <code class=\"language-javascript\">onTemperatureChange</code> du <code class=\"language-javascript\">TemperatureInput</code> en Fahrenheit. L\u2019une ou l\u2019autre de ces m\u00e9thodes de <code class=\"language-javascript\">Calculator</code> sera ainsi appel\u00e9e en fonction du champ modifi\u00e9.</li>\n<li>Dans ces m\u00e9thodes, le composant <code class=\"language-javascript\">Calculator</code> demande \u00e0 React de le rafra\u00eechir en appelant <code class=\"language-javascript\">this.setState()</code> avec la nouvelle valeur du champ et l\u2019unit\u00e9 du champ modifi\u00e9.</li>\n<li>React appelle la m\u00e9thode <code class=\"language-javascript\">render</code> du composant <code class=\"language-javascript\">Calculator</code> afin de savoir \u00e0 quoi devrait ressembler son UI. Les valeurs des deux champs sont recalcul\u00e9es en fonction de la temp\u00e9rature actuelle et de l\u2019unit\u00e9 active. La conversion de temp\u00e9rature est faite ici.</li>\n<li>React appelle les m\u00e9thodes <code class=\"language-javascript\">render</code> des deux composants <code class=\"language-javascript\">TemperatureInput</code> avec leurs nouvelles props, sp\u00e9cifi\u00e9es par le <code class=\"language-javascript\">Calculator</code>. React sait alors \u00e0 quoi devraient ressembler leurs UI.</li>\n<li>React appelle la m\u00e9thode <code class=\"language-javascript\">render</code> du composant <code class=\"language-javascript\">BoilingVerdict</code>, en lui passant la temp\u00e9rature en Celsius dans les props.</li>\n<li>React DOM met \u00e0 jour le DOM avec le verdict d\u2019\u00e9bullition, et retranscrit les valeurs de champs souhait\u00e9es. Le champ que nous venons de modifier re\u00e7oit sa valeur actuelle, et l\u2019autre champ est mis \u00e0 jour avec la temp\u00e9rature convertie.</li>\n</ul>\n<p>Chaque mise \u00e0 jour suit ces m\u00eames \u00e9tapes, ainsi les champs restent synchronis\u00e9s.</p>\n<h2 id=\"lessons-learned\"><a class=\"anchor\" href=\"/react/lifting-state-up#lessons-learned\"></a>Ce qu\u2019il faut retenir </h2>\n<p>Il ne doit y avoir qu\u2019une seule \u00ab\u00a0source de v\u00e9rit\u00e9\u00a0\u00bb pour toute donn\u00e9e qui change dans une application React. En g\u00e9n\u00e9ral, l\u2019\u00e9tat est d\u2019abord ajout\u00e9 au composant qui en a besoin pour s\u2019afficher. Ensuite, si d\u2019autres composants en ont \u00e9galement besoin, vous pouvez faire remonter l\u2019\u00e9tat dans l\u2019anc\u00eatre commun le plus proche. Au lieu d\u2019essayer de synchroniser les \u00e9tats de diff\u00e9rents composants, vous devriez vous baser sur des donn\u00e9es qui se propagent <a href=\"/react/state-and-lifecycle#the-data-flows-down\">du haut vers le bas</a>.</p>\n<p>Faire remonter l\u2019\u00e9tat implique d\u2019\u00e9crire plus de code g\u00e9n\u00e9rique <em>(boilerplate code, NdT)</em> qu\u2019avec une liaison de donn\u00e9es bidirectionnelle, mais le jeu en vaut la chandelle, car \u00e7a demande moins de travail pour trouver et isoler les bugs. Puisque tout \u00e9tat \u00ab\u00a0vit\u00a0\u00bb dans un composant et que seul ce composant peut le changer, la surface d\u2019impact des bugs est grandement r\u00e9duite. Qui plus est, vous pouvez impl\u00e9menter n\u2019importe quelle logique personnalis\u00e9e pour rejeter ou transformer les saisies des utilisateurs.</p>\n<p>Si quelque chose peut \u00eatre d\u00e9riv\u00e9 des props ou de l\u2019\u00e9tat, cette chose ne devrait probablement pas figurer dans l\u2019\u00e9tat. Par exemple, plut\u00f4t que de stocker \u00e0 la fois <code class=\"language-javascript\">celsiusValue</code> et <code class=\"language-javascript\">fahrenheitValue</code>, on stocke uniquement la derni\u00e8re <code class=\"language-javascript\">temperature</code> modifi\u00e9e et son unit\u00e9 <code class=\"language-javascript\">scale</code>. La valeur de l\u2019autre champ peut toujours \u00eatre calcul\u00e9e dans la m\u00e9thode <code class=\"language-javascript\">render()</code> \u00e0 partir de la valeur de ces donn\u00e9es. \u00c7a nous permet de vider ou d\u2019arrondir la valeur de l\u2019autre champ sans perdre la valeur saisie par l\u2019utilisateur.</p>\n<p>Quand vous voyez quelque chose qui ne va pas dans l\u2019UI, vous pouvez utiliser les <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-devtools\">outils de d\u00e9veloppement React</a> pour examiner les props et remonter dans l\u2019arborescence des composants jusqu\u2019\u00e0 trouver le composant responsable de la mise \u00e0 jour de l\u2019\u00e9tat. \u00c7a vous permet de remonter \u00e0 la source des bugs\u00a0:</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//ef94afc3447d75cdc245c77efb0d63be/react-devtools-state.gif\">Image link</a></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/lifting-state-up.md\">Edit this page</a></p></div></article>", "path": "/react/lifting-state-up", "nav": ["/react/forms", "/react/composition-vs-inheritance"]}, {"key": "11. Composition ou h\u00e9ritage\u00a0?", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React fournit un puissant mod\u00e8le de composition, aussi nous recommandons d\u2019utiliser la composition plut\u00f4t que l\u2019h\u00e9ritage pour r\u00e9utiliser du code entre les composants.</p>\n<p>Dans cette section, nous examinerons quelques situations pour lesquelles les d\u00e9butants en React ont tendance \u00e0 opter pour l\u2019h\u00e9ritage, et montrerons comment les r\u00e9soudre \u00e0 l\u2019aide de la composition.</p>\n<h2 id=\"containment\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#containment\"></a>D\u00e9l\u00e9gation de contenu </h2>\n<p>Certains composants ne connaissent pas leurs enfants \u00e0 l\u2019avance. C\u2019est particuli\u00e8rement courant pour des composants comme <code class=\"language-javascript\">Sidebar</code> ou <code class=\"language-javascript\">Dialog</code>, qui repr\u00e9sentent des blocs g\u00e9n\u00e9riques.</p>\n<p>Pour de tels composants, nous vous conseillons d\u2019utiliser la prop sp\u00e9ciale <code class=\"language-javascript\">children</code>, pour passer directement les \u00e9l\u00e9ments enfants dans votre sortie\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyBorder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'FancyBorder FancyBorder-'</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a permet aux autres composants de leur passer des enfants quelconques en imbriquant le JSX\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Bienvenue</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Merci de visiter notre vaisseau spatial !</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ozqNOV?editors=0010\">Essayer sur CodePen</a></strong></p>\n<p>Tout ce qui se trouve dans la balise JSX <code class=\"language-javascript\">&lt;FancyBorder&gt;</code> est pass\u00e9 comme prop <code class=\"language-javascript\">children</code> au composant <code class=\"language-javascript\">FancyBorder</code>. Puisque <code class=\"language-javascript\">FancyBorder</code> utilise <code class=\"language-javascript\">{props.children}</code> dans une balise <code class=\"language-javascript\">&lt;div&gt;</code>, les \u00e9l\u00e9ments pass\u00e9s apparaissent dans la sortie finale.</p>\n<p>Bien que cela soit moins courant, vous aurez parfois besoin de plusieurs \u00ab trous \u00bb dans un composant. Dans ces cas-l\u00e0, vous pouvez cr\u00e9er votre propre convention au lieu d\u2019utiliser <code class=\"language-javascript\">children</code> :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">SplitPane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane-left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane-right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SplitPane</span></span>\n      <span class=\"token attr-name\">left</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Contacts</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">right</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chat</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwZOJp?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Des \u00e9l\u00e9ments React tels que <code class=\"language-javascript\">&lt;Contacts /&gt;</code> et <code class=\"language-javascript\">&lt;Chat /&gt;</code> sont simplement des objets, vous pouvez les passer comme props au m\u00eame titre que n\u2019importe quelle autre donn\u00e9e. Cette approche peut vous rappeler la notion de \u201cslots\u201d pr\u00e9sente dans d\u2019autres biblioth\u00e8ques, mais il n\u2019y a aucune limitation \u00e0 ce que vous pouvez passer en props avec React.</p>\n<h2 id=\"specialization\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#specialization\"></a>Sp\u00e9cialisation </h2>\n<p>Parfois, nous voyons nos composants comme des \u00ab cas particuliers \u00bb d\u2019autres composants. Par exemple, nous pourrions dire que <code class=\"language-javascript\">WelcomeDialog</code> est un cas particulier de <code class=\"language-javascript\">Dialog</code>.</p>\n<p>Avec React, on r\u00e9alise aussi \u00e7a avec la composition\u00a0; un composant plus \u00ab sp\u00e9cialis\u00e9 \u00bb utilise un composant plus \u00ab g\u00e9n\u00e9rique \u00bb et le configure gr\u00e2ce aux props : </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialog</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Bienvenue<span class=\"token punctuation\">\"</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Merci de visiter notre vaisseau spatial !<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/kkEaOZ?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>La composition fonctionne tout aussi bien pour les composants \u00e0 base de classe :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUpDialog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>login<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialog</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Programme d<span class=\"token punctuation\">'</span>exploration de Mars<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment devrions-nous nous adresser \u00e0 vous ?<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          Inscrivez-moi !</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialog</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>login<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bienvenue \u00e0 bord, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> !</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwZbYa?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<h2 id=\"so-what-about-inheritance\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#so-what-about-inheritance\"></a>Qu\u2019en est-il de l\u2019h\u00e9ritage ? </h2>\n<p>Chez Facebook, nous utilisons React pour des milliers de composants, et nous n\u2019avons pas encore trouv\u00e9 de cas o\u00f9 nous aurions recommand\u00e9 de cr\u00e9er des hi\u00e9rarchies d\u2019h\u00e9ritage de composants.</p>\n<p>Les props et la composition vous donnent toute la flexibilit\u00e9 dont vous avez besoin pour personnaliser l\u2019apparence  et le comportement d\u2019un composant de mani\u00e8re explicite et s\u00fbre. Souvenez-vous qu\u2019un composant peut accepter tout type de props, y compris des valeurs primitives, des \u00e9l\u00e9ments React et des fonctions.</p>\n<p>Si vous souhaitez r\u00e9utiliser des fonctionnalit\u00e9s sans rapport \u00e0 l\u2019interface utilisateur entre les composants, nous vous sugg\u00e9rons de les extraire dans un module Javascript s\u00e9par\u00e9. Les composants pourront alors importer cette fonction, cet objet ou cette classe sans avoir \u00e0 l\u2019\u00e9tendre.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/composition-vs-inheritance.md\">Edit this page</a></p></div></article>", "path": "/react/composition-vs-inheritance", "nav": ["/react/lifting-state-up", "/react/thinking-in-react"]}, {"key": "12. Penser en React", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React est, \u00e0 notre avis, la meilleure fa\u00e7on de cr\u00e9er des applis web vastes et performantes en JavaScript. Il a tr\u00e8s bien tenu le coup pour nous, \u00e0 Facebook et Instagram.</p>\n<p>L\u2019un des nombreux points forts de React, c\u2019est la fa\u00e7on dont il vous fait penser aux applis pendant que vous les cr\u00e9ez. Dans ce document, nous vous guiderons \u00e0 travers l\u2019\u00e9laboration avec React d\u2019un tableau de donn\u00e9es de produits proposant filtrage et recherche.</p>\n<h2 id=\"start-with-a-mock\"><a class=\"anchor\" href=\"/react/thinking-in-react#start-with-a-mock\"></a>Commen\u00e7ons par une maquette </h2>\n<p>Imaginez que nous avons d\u00e9j\u00e0 une API JSON et une maquette de notre designer. La maquette ressemble \u00e0 ceci\u00a0:</p>\n<p>\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/1071fbcc9eed01fddc115b41e193ec11/d4770/thinking-in-react-mock.png\">Image link</a>\n</span>\n</span>\n</p>\n<p>Notre API JSON renvoie des donn\u00e9es qui ressemblent \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">[\n  {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n  {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n  {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n  {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n  {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n  {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"}\n];</code></pre></div>\n<h2 id=\"step-1-break-the-ui-into-a-component-hierarchy\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-1-break-the-ui-into-a-component-hierarchy\"></a>\u00c9tape 1\u00a0: d\u00e9composer l\u2019interface utilisateur en une hi\u00e9rarchie de composants </h2>\n<p>Pour commencer, dessinez des cases autour de chaque composant (et sous-composant) sur la maquette, et attribuez un nom \u00e0 chacune. Si vous travaillez avec un designer, il se peut qu\u2019elle l\u2019ait d\u00e9j\u00e0 fait, alors allez lui parler\u00a0! Ses noms de calques Photoshop pourraient devenir les noms de vos composants React\u00a0!</p>\n<p>Mais comment savoir quelles parties devraient disposer de leurs propres composants\u00a0? Utilisez les m\u00eames techniques que lorsque vous d\u00e9cidez de cr\u00e9er une nouvelle fonction ou un nouvel objet. L\u2019une de ces techniques est le <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Principe_de_responsabilit%C3%A9_unique\">principe de responsabilit\u00e9 unique</a>, qui stipule qu\u2019un composant ne devrait id\u00e9alement faire qu\u2019une seule chose. S\u2019il finit par grossir, il devrait \u00eatre d\u00e9compos\u00e9 en sous-composants plus petits.</p>\n<p>Comme vous affichez souvent un mod\u00e8le de donn\u00e9es JSON \u00e0 un utilisateur, vous constaterez que si votre mod\u00e8le a \u00e9t\u00e9 correctement construit, votre interface utilisateur (et donc la structure de vos composants) correspondra ais\u00e9ment. En effet, l\u2019interface utilisateur (UI) et les mod\u00e8les de donn\u00e9es tendent \u00e0 adh\u00e9rer \u00e0 la m\u00eame <em>architecture d\u2019information</em>. S\u00e9parez votre UI en composants, o\u00f9 chaque composant repr\u00e9sente juste un \u00e9l\u00e9ment de votre mod\u00e8le de donn\u00e9es.</p>\n<p>\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/eb8bda25806a89ebdc838813bdfa3601/6b2ea/thinking-in-react-components.png\">Image link</a>\n</span>\n</span>\n</p>\n<p>Vous pouvez voir que nous avons cinq composants dans notre petite appli. Nous avons mis en italiques les donn\u00e9es que chaque composant repr\u00e9sente.</p>\n<ol>\n<li><strong><code class=\"language-javascript\">FilterableProductTable</code> (orange)\u00a0:</strong> contient l\u2019int\u00e9gralit\u00e9 de l\u2019exemple</li>\n<li><strong><code class=\"language-javascript\">SearchBar</code> (bleu)\u00a0:</strong> re\u00e7oit toutes les <em>donn\u00e9es saisies par l\u2019utilisateur</em></li>\n<li><strong><code class=\"language-javascript\">ProductTable</code> (vert)\u00a0:</strong> affiche et filtre la <em>collection de donn\u00e9es</em> en fonction des <em>donn\u00e9es saisies par l\u2019utilisateur</em></li>\n<li><strong><code class=\"language-javascript\">ProductCategoryRow</code> (turquoise)\u00a0:</strong> affiche un titre pour chaque <em>cat\u00e9gorie</em></li>\n<li><strong><code class=\"language-javascript\">ProductRow</code> (rouge)\u00a0:</strong> affiche une ligne pour chaque <em>produit</em></li>\n</ol>\n<p>Si vous regardez <code class=\"language-javascript\">ProductTable</code>, vous verrez que l\u2019en-t\u00eate du tableau (contenant les titres \u201cName\u201d et \u201cPrice\u201d) n\u2019a pas son propre composant. C\u2019est une question de pr\u00e9f\u00e9rence, et honn\u00eatement les deux se valent. Dans cet exemple, nous l\u2019avons laiss\u00e9 au sein de <code class=\"language-javascript\">ProductTable</code> car il fait partie de l\u2019affichage de la <em>collection de donn\u00e9es</em>, qui est de la responsabilit\u00e9 de <code class=\"language-javascript\">ProductTable</code>. Cependant, si cet en-t\u00eate devenait complexe (par exemple, si nous devions ajouter des options de tri), il deviendrait logique d\u2019en faire son propre composant <code class=\"language-javascript\">ProductTableHeader</code>.</p>\n<p>Maintenant que nous avons identifi\u00e9 les composants dans notre maquette, organisons-les en hi\u00e9rarchie. Les composants qui apparaissent dans un autre composant sur la maquette doivent appara\u00eetre comme enfants dans cette hi\u00e9rarchie\u00a0:</p>\n<ul>\n<li>\n<p><code class=\"language-javascript\">FilterableProductTable</code></p>\n<ul>\n<li><code class=\"language-javascript\">SearchBar</code></li>\n<li>\n<p><code class=\"language-javascript\">ProductTable</code></p>\n<ul>\n<li><code class=\"language-javascript\">ProductCategoryRow</code></li>\n<li><code class=\"language-javascript\">ProductRow</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"step-2-build-a-static-version-in-react\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-2-build-a-static-version-in-react\"></a>\u00c9tape 2\u00a0: construire une version statique avec React </h2>\n<p class=\"codepen\">Voir le Pen <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/BwWzwm\">Penser en React\u00a0: \u00c9tape 2</a> sur <a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>.</p>\n<script></script>\n<p>Maintenant que vous avez votre hi\u00e9rarchie de composants, il est temps d\u2019impl\u00e9menter votre appli. La fa\u00e7on la plus simple consiste \u00e0 construire une version qui prend votre mod\u00e8le de donn\u00e9es et affiche une UI inerte. Il est pr\u00e9f\u00e9rable de d\u00e9coupler ces processus, car la construction d\u2019une version statique n\u00e9cessite beaucoup de code et aucune r\u00e9flexion, alors qu\u2019ajouter de l\u2019interactivit\u00e9 demande beaucoup de r\u00e9flexion et peu de code. Nous verrons pourquoi.</p>\n<p>Pour cr\u00e9er une version statique de votre appli qui affiche votre mod\u00e8le de donn\u00e9es, vous devrez cr\u00e9er des composants qui en r\u00e9utilisent d\u2019autres et transmettent les donn\u00e9es au moyen des <em>props</em>. Les <em>props</em> sont un moyen de transmettre des donn\u00e9es de parent \u00e0 enfant. Si vous \u00eates \u00e0 l\u2019aise avec le concept d\u2019<em>\u00e9tat local</em>, <strong>n\u2019utilisez pas d\u2019\u00e9tat local du tout</strong> pour construire cette version statique. L\u2019\u00e9tat local est r\u00e9serv\u00e9 \u00e0 l\u2019interactivit\u00e9, c\u2019est-\u00e0-dire aux donn\u00e9es qui \u00e9voluent dans le temps. Comme il s\u2019agit d\u2019une version statique de l\u2019appli, vous n\u2019en avez pas besoin.</p>\n<p>Vous pouvez construire l\u2019appli en partant de l\u2019ext\u00e9rieur ou de l\u2019int\u00e9rieur. En d\u2019autres termes, vous pouvez aussi bien commencer par construire les composants les plus hauts dans la hi\u00e9rarchie (dans notre cas, <code class=\"language-javascript\">FilterableProductTable</code>), que par ceux les plus bas (<code class=\"language-javascript\">ProductRow</code>). Dans des exemples plus simples, il est g\u00e9n\u00e9ralement plus facile de partir de l\u2019ext\u00e9rieur, et sur des projets plus importants, il est plus facile de partir de l\u2019int\u00e9rieur et d\u2019\u00e9crire les tests au fil de la construction.</p>\n<p>\u00c0 la fin de cette \u00e9tape, vous disposerez d\u2019une biblioth\u00e8que de composants r\u00e9utilisables qui afficheront votre mod\u00e8le de donn\u00e9es. Les composants n\u2019auront que des m\u00e9thodes <code class=\"language-javascript\">render()</code> puisque c\u2019est une version statique de l\u2019application. Le composant au sommet de la hi\u00e9rarchie (<code class=\"language-javascript\">FilterableProductTable</code>) prendra votre mod\u00e8le de donn\u00e9es en tant que <em>prop</em>. Si vous modifiez les donn\u00e9es et appelez <code class=\"language-javascript\">ReactDOM.render()</code> \u00e0 nouveau, l\u2019UI sera mise \u00e0 jour. On comprend comment votre UI est mise \u00e0 jour et o\u00f9 y apporter des modifications, car il n\u2019y a rien de compliqu\u00e9. <strong>Le flux de donn\u00e9es unidirectionnel</strong> de React (\u00e9galement appel\u00e9 <em>liaison unidirectionnelle</em>) permet de maintenir la modularit\u00e9 et la rapidit\u00e9 de l\u2019ensemble.</p>\n<p>Jetez un \u0153il \u00e0 la <a href=\"/react/\">doc de React</a> si vous avez besoin d\u2019aide pour cette \u00e9tape.</p>\n<h3 id=\"a-brief-interlude-props-vs-state\"><a class=\"anchor\" href=\"/react/thinking-in-react#a-brief-interlude-props-vs-state\"></a>Petit entracte\u00a0: props ou \u00e9tat\u00a0? </h3>\n<p>Il existe deux types de donn\u00e9es dans le \u00ab\u00a0mod\u00e8le\u00a0\u00bb de React\u00a0: les props et l\u2019\u00e9tat local. Il est important de bien comprendre la distinction entre les deux\u00a0; jetez un coup d\u2019\u0153il \u00e0 <a href=\"/react/state-and-lifecycle\">la doc officielle de React</a> si vous n\u2019\u00eates pas s\u00fbr\u00b7e de la diff\u00e9rence. Vous pouvez aussi consulter la <a href=\"/react/faq-state#what-is-the-difference-between-state-and-props\">FAQ\u00a0: Quelle est la diff\u00e9rence entre <code class=\"language-javascript\">state</code> et <code class=\"language-javascript\">props</code>\u00a0?</a></p>\n<h2 id=\"step-3-identify-the-minimal-but-complete-representation-of-ui-state\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-3-identify-the-minimal-but-complete-representation-of-ui-state\"></a>\u00c9tape 3\u00a0: d\u00e9terminer le contenu minimal (mais suffisant) de l\u2019\u00e9tat de l\u2019UI </h2>\n<p>Pour rendre votre UI interactive, vous devez pouvoir d\u00e9clencher des modifications \u00e0 votre mod\u00e8le de donn\u00e9es. React utilise pour cela l\u2019<strong>\u00e9tat local</strong>.</p>\n<p>Afin de construire correctement votre appli, vous devez d\u2019abord penser \u00e0 l\u2019\u00e9tat modifiable minimal dont votre appli a besoin. La r\u00e8gle est simple\u00a0: <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Ne_vous_r%C3%A9p%C3%A9tez_pas\"><em>ne vous r\u00e9p\u00e9tez pas</em></a> <em>(Don\u2019t Repeat Yourself, aussi d\u00e9sign\u00e9 par l\u2019acronyme DRY, NdT)</em>. D\u00e9terminez la repr\u00e9sentation la plus minimale possible de l\u2019\u00e9tat dont votre appli a besoin, et calculez le reste \u00e0 la demande. Par exemple, si vous construisez une liste de t\u00e2ches, gardez un tableau des t\u00e2ches sous la main\u00a0; pas besoin d\u2019une variable d\u2019\u00e9tat pour le compteur. Au lieu de \u00e7a, quand vous voulez afficher  le nombre de t\u00e2ches, prenez la longueur du tableau de t\u00e2ches.</p>\n<p>Pensez \u00e0 toutes les donn\u00e9es de notre application. On a\u00a0:</p>\n<ul>\n<li>La liste des produits</li>\n<li>Le texte de recherche saisi par l\u2019utilisateur</li>\n<li>La valeur de la case \u00e0 cocher</li>\n<li>La liste filtr\u00e9e des produits</li>\n</ul>\n<p>Passons-les en revue pour d\u00e9terminer lesquelles constituent notre \u00e9tat. Posez-vous ces trois questions pour chaque donn\u00e9e\u00a0:</p>\n<ol>\n<li>Est-elle pass\u00e9e depuis un parent via les props\u00a0? Si oui, ce n\u2019est probablement pas de l\u2019\u00e9tat.</li>\n<li>Est-elle fig\u00e9e dans le temps\u00a0? Si oui, ce n\u2019est probablement pas de l\u2019\u00e9tat.</li>\n<li>Pouvez-vous la calculer en vous basant sur le reste de l\u2019\u00e9tat ou les props de votre composant\u00a0? Si oui, ce n\u2019est pas de l\u2019\u00e9tat.</li>\n</ol>\n<p>La liste des produits est pass\u00e9e via les props, ce n\u2019est donc pas de l\u2019\u00e9tat. Le texte de recherche et la case \u00e0 cocher semblent \u00eatre de l\u2019\u00e9tat puisqu\u2019ils changent avec le temps et ne peuvent \u00eatre calcul\u00e9s \u00e0 partir d\u2019autre chose. Enfin, la liste filtr\u00e9e des produits ne constitue pas de l\u2019\u00e9tat puisqu\u2019elle peut \u00eatre calcul\u00e9e en combinant la liste originale des produits avec le texte de recherche et la valeur de la case \u00e0 cocher.</p>\n<p>Au final, notre \u00e9tat contient\u00a0:</p>\n<ul>\n<li>Le texte de recherche saisi par l\u2019utilisateur</li>\n<li>La valeur de la case \u00e0 cocher</li>\n</ul>\n<h2 id=\"step-4-identify-where-your-state-should-live\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-4-identify-where-your-state-should-live\"></a>\u00c9tape 4\u00a0: identifier o\u00f9 votre \u00e9tat doit vivre </h2>\n<p class=\"codepen\">Voir le Pen <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/qPrNQZ\">Penser en React\u00a0: \u00c9tape 4</a> sur <a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>.</p>\n<p>Bon, nous avons identifi\u00e9 le contenu minimal de notre \u00e9tat applicatif. \u00c0 pr\u00e9sent, nous devons identifier quel composant modifie, ou <em>poss\u00e8de</em>, cet \u00e9tat.</p>\n<p>Souvenez-vous\u00a0: React se fonde sur un flux de donn\u00e9es unidirectionnel qui descend le long de la hi\u00e9rarchie des composants. Quant \u00e0 savoir quel composant devrait poss\u00e9der quel \u00e9tat, ce n\u2019est pas forc\u00e9ment \u00e9vident d\u2019entr\u00e9e de jeu. <strong>C\u2019est souvent la partie la plus difficile \u00e0 comprendre pour les novices</strong>, alors suivez ces \u00e9tapes pour trouver la r\u00e9ponse\u00a0:</p>\n<p>Pour chaque partie de l\u2019\u00e9tat de votre application\u00a0:</p>\n<ul>\n<li>Identifiez chaque composant qui affiche quelque chose bas\u00e9 sur cet \u00e9tat.</li>\n<li>Trouvez leur plus proche anc\u00eatre commun (un composant unique, au-dessus de tous les composants qui ont besoin de cette partie de l\u2019\u00e9tat dans la hi\u00e9rarchie).</li>\n<li>L\u2019anc\u00eatre commun ou un autre composant situ\u00e9 plus haut dans la hi\u00e9rarchie devrait poss\u00e9der cette portion d\u2019\u00e9tat.</li>\n<li>Si vous ne trouvez pas de composant logique pour poss\u00e9der cette partie de l\u2019\u00e9tat, cr\u00e9ez-en un expr\u00e8s pour \u00e7a, et ajoutez-le quelque part dans la hi\u00e9rarchie au-dessus de l\u2019anc\u00eatre commun.</li>\n</ul>\n<p>Utilisons cette strat\u00e9gie pour notre application\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">ProductTable</code> doit filtrer la liste des produits en fonction de l\u2019\u00e9tat et <code class=\"language-javascript\">SearchBar</code> doit afficher l\u2019\u00e9tat du texte de recherche et de la case \u00e0 cocher.</li>\n<li>Leur anc\u00eatre commun est <code class=\"language-javascript\">FilterableProductTable</code>.</li>\n<li>Conceptuellement, il est logique que le texte du filtre et la valeur de la case \u00e0 cocher soient dans <code class=\"language-javascript\">FilterableProductTable</code></li>\n</ul>\n<p>Parfait, nous avons donc d\u00e9cid\u00e9 que <code class=\"language-javascript\">FilterableProductTable</code> poss\u00e8dera notre \u00e9tat. Tout d\u2019abord, ajoutez une propri\u00e9t\u00e9 d\u2019instance <code class=\"language-javascript\">this.state = {filterText: '', inStockOnly: false}</code> dans le <code class=\"language-javascript\">constructor</code> de <code class=\"language-javascript\">FilterableProductTable</code> pour refl\u00e9ter l\u2019\u00e9tat initial de votre application. Ensuite, passez <code class=\"language-javascript\">filterText</code> et <code class=\"language-javascript\">inStockOnly</code> \u00e0 <code class=\"language-javascript\">ProductTable</code> et <code class=\"language-javascript\">SearchBar</code> via leurs props. Enfin, utilisez ces props pour filtrer les lignes dans <code class=\"language-javascript\">ProductTable</code> et d\u00e9finir les valeurs des champs du formulaire dans <code class=\"language-javascript\">SearchBar</code>.</p>\n<p>Vous pouvez commencer \u00e0 voir comment votre application se comportera\u00a0: d\u00e9finissez <code class=\"language-javascript\">filterText</code> \u00e0 <code class=\"language-javascript\">\"ball\"</code> et rafra\u00eechissez votre appli. Vous verrez que le tableau de donn\u00e9es est correctement mis \u00e0 jour.</p>\n<h2 id=\"step-5-add-inverse-data-flow\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-5-add-inverse-data-flow\"></a>\u00c9tape 5\u00a0: ajouter le flux de donn\u00e9es inverse </h2>\n<p class=\"codepen\">Voir le Pen <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/LzWZvb\">Penser en React\u00a0: \u00c9tape 5</a> sur <a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>.</p>\n<p>Pour le moment, nous avons construit une appli qui s\u2019affiche correctement en fonction des props et de l\u2019\u00e9tat qui descendent le long de la hi\u00e9rarchie. \u00c0 pr\u00e9sent, il est temps de permettre la circulation des donn\u00e9es dans l\u2019autre sens\u00a0: les composants de formulaire situ\u00e9s plus bas dans la hi\u00e9rarchie ont besoin de mettre \u00e0 jour l\u2019\u00e9tat dans <code class=\"language-javascript\">FilterableProductTable</code>.</p>\n<p>React rend ce flux de donn\u00e9es explicite pour vous aider \u00e0 comprendre le fonctionnement de votre programme, mais cela demande un peu plus de code qu\u2019une liaison de donn\u00e9es bidirectionnelle classique.</p>\n<p>Si vous essayez de saisir du texte ou de cocher la case dans la version actuelle de l\u2019exemple, vous verrez que React ne tient pas compte de vos saisies. C\u2019est volontaire, car nous avons sp\u00e9cifi\u00e9 l\u2019attribut <code class=\"language-javascript\">value</code> de l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">input</code> pour qu\u2019il soit toujours \u00e9gal \u00e0 l\u2019\u00e9tat pass\u00e9 depuis <code class=\"language-javascript\">FilterableProductTable</code>.</p>\n<p>R\u00e9fl\u00e9chissons \u00e0 ce que nous voulons qu\u2019il se passe. Nous voulons garantir que chaque fois que l\u2019utilisateur met \u00e0 jour le formulaire, nous mettons \u00e0 jour l\u2019\u00e9tat pour refl\u00e9ter la saisie de l\u2019utilisateur. Puisque les composants ne peuvent mettre \u00e0 jour que leur propre \u00e9tat, <code class=\"language-javascript\">FilterableProductTable</code> passera une fonction de rappel \u00e0 <code class=\"language-javascript\">SearchBar</code>, qui devra \u00eatre d\u00e9clench\u00e9e chaque fois que l\u2019\u00e9tat doit \u00eatre mis \u00e0 jour. Nous pouvons utiliser l\u2019\u00e9v\u00e9nement <code class=\"language-javascript\">onChange</code> des champs pour cela. Les fonctions de rappel pass\u00e9es par <code class=\"language-javascript\">FilterableProductTable</code> appelleront <code class=\"language-javascript\">setState()</code>, et l\u2019application sera mise \u00e0 jour.</p>\n<h2 id=\"and-thats-it\"><a class=\"anchor\" href=\"/react/thinking-in-react#and-thats-it\"></a>Et c\u2019est tout </h2>\n<p>Avec un peu de chance, vous avez maintenant une id\u00e9e de la fa\u00e7on de penser la construction de vos composants et applis en React. Bien que \u00e7a demande peut-\u00eatre un peu plus de code que vous n\u2019en avez l\u2019habitude, souvenez-vous que le code est lu beaucoup plus souvent qu\u2019il n\u2019est \u00e9crit, et que ce type de code, modulaire et explicite, est moins difficile \u00e0 lire. Plus vous \u00e9crirez de composants, plus vous appr\u00e9cierez cette clart\u00e9 et cette modularit\u00e9, et avec la r\u00e9utilisation du code, le nombre de vos lignes de code commencera \u00e0 diminuer. \ud83d\ude00</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/thinking-in-react.md\">Edit this page</a></p></div></article>", "path": "/react/thinking-in-react", "nav": ["/react/composition-vs-inheritance", "/react/accessibility"]}]}, {"key": "Guides avanc\u00e9s", "values": [{"key": "Accessibilit\u00e9", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h2 id=\"why-accessibility\"><a class=\"anchor\" href=\"/react/accessibility#why-accessibility\"></a>Pourquoi l\u2019accessibilit\u00e9\u00a0? </h2>\n<p>L\u2019accessibilit\u00e9 du web (aussi d\u00e9sign\u00e9e par la contraction <a class=\"external-link\" href=\"https://fr.wiktionary.org/wiki/a11y\"><strong>a11y</strong></a>) concerne le design et la cr\u00e9ation de sites web qui peuvent \u00eatre utilis\u00e9s par tout le monde. La prise en charge de l\u2019accessibilit\u00e9 est n\u00e9cessaire pour permettre aux technologies d\u2019assistance d\u2019interpr\u00e9ter les pages web.</p>\n<p>React prend totalement en charge la cr\u00e9ation de sites web accessibles, en s\u2019appuyant souvent sur des techniques HTML standard.</p>\n<h2 id=\"standards-and-guidelines\"><a class=\"anchor\" href=\"/react/accessibility#standards-and-guidelines\"></a>Standards et lignes directrices </h2>\n<h3 id=\"wcag\"><a class=\"anchor\" href=\"/react/accessibility#wcag\"></a>WCAG </h3>\n<p>Les <a class=\"external-link\" href=\"https://www.w3.org/WAI/intro/wcag\">directives pour l\u2019accessibilit\u00e9 au contenu web</a> <em>(Web Content Accessibility Guidelines, ou WCAG, NdT)</em> proposent des lignes directrices pour cr\u00e9er des sites web accessibles.</p>\n<p>Les listes de contr\u00f4le du WCAG ci-dessous en fournissent un aper\u00e7u\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.wuhcag.com/wcag-checklist/\">La liste de contr\u00f4le WCAG de Wuhcag</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"http://webaim.org/standards/wcag/checklist\">La liste de contr\u00f4le WCAG de WebAIM</a> (en anglais, une traduction est disponible <a class=\"external-link\" href=\"https://anysurfer.be/fr/en-pratique/sites-web/checklist-wcag-2-1-de-webaim\">ici</a>).</li>\n<li><a class=\"external-link\" href=\"http://a11yproject.com/checklist.html\">La liste de contr\u00f4le de <em>The A11Y Project</em></a> (en anglais).</li>\n</ul>\n<h3 id=\"wai-aria\"><a class=\"anchor\" href=\"/react/accessibility#wai-aria\"></a>WAI-ARIA </h3>\n<p>Le document de <a class=\"external-link\" href=\"https://www.w3.org/WAI/intro/aria\">l\u2019Initiative d\u2019Accessibilit\u00e9 du Web - Applications Internet Riches Accessibles</a> <em>(Web Accessibility Initiative - Accessible Rich Internet Applications, ou WAI-ARIA, NdT)</em> contient les techniques n\u00e9cessaires \u00e0 la cr\u00e9ation d\u2019\u00e9l\u00e9ments d\u2019interface JavaScript compl\u00e8tement accessibles.</p>\n<p>Remarquez que tous les attributs HTML <code class=\"language-javascript\">aria-*</code> sont autoris\u00e9s dans JSX. L\u00e0 o\u00f9 la plupart des propri\u00e9t\u00e9s DOM en React utilisent la casse <em>camelCase</em>, ces attributs doivent \u00eatre en minuscules avec des tirets (casse connue sous les noms <em>hyphen-case</em>, <em>kebab-case</em>, <em>lisp-case</em>, etc.), comme ils le sont en HTML brut\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">aria-label</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>labelText<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">aria-required</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span></span>  <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onchangeHandler<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputValue<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h2 id=\"semantic-html\"><a class=\"anchor\" href=\"/react/accessibility#semantic-html\"></a>HTML s\u00e9mantique </h2>\n<p>Le HTML s\u00e9mantique est la base de l\u2019accessibilit\u00e9 dans une application web. L\u2019utilisation des diff\u00e9rents \u00e9l\u00e9ments HTML pour renforcer la signification de l\u2019information de nos sites web am\u00e9liore g\u00e9n\u00e9ralement l\u2019accessibilit\u00e9 \u00e0 peu de frais.</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/HTML/Element\">La r\u00e9f\u00e9rence des \u00e9l\u00e9ments HTML sur MDN</a>.</li>\n</ul>\n<p>Il nous arrive de casser la s\u00e9mantique HTML en ajoutant des balises <code class=\"language-javascript\">&lt;div&gt;</code> dans notre JSX afin de faire fonctionner notre code React, en particulier lorsqu\u2019on travaille avec des listes (<code class=\"language-javascript\">&lt;ol&gt;</code>, <code class=\"language-javascript\">&lt;ul&gt;</code> et <code class=\"language-javascript\">&lt;dl&gt;</code>) ou des tableaux HTML <code class=\"language-javascript\">&lt;table&gt;</code>.\nDans ces cas-l\u00e0, nous devrions plut\u00f4t utiliser les <a href=\"/react/fragments\">fragments React</a> pour regrouper de multiples \u00e9l\u00e9ments.</p>\n<p>Par exemple,</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Fragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">item</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez repr\u00e9senter une liste d\u2019\u00e9l\u00e9ments comme un tableau de fragments, comme vous le feriez avec tout autre type d\u2019\u00e9l\u00e9ment\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token comment\">// Les fragments doivent aussi disposer de la propri\u00e9t\u00e9 `key`</span>\n        <span class=\"token comment\">// lors de l'it\u00e9ration sur les listes.</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span></span>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lorsque vous n\u2019avez pas besoin de d\u00e9finir de propri\u00e9t\u00e9 sur la balise fragment, vous pouvez utiliser la <a href=\"/react/fragments#short-syntax\">syntaxe courte</a>, si votre outillage la prend en charge\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour plus d\u2019informations, consultez <a href=\"/react/fragments\">la documentation sur les fragments</a>.</p>\n<h2 id=\"accessible-forms\"><a class=\"anchor\" href=\"/react/accessibility#accessible-forms\"></a>Formulaires accessibles </h2>\n<h3 id=\"labeling\"><a class=\"anchor\" href=\"/react/accessibility#labeling\"></a>L\u2019\u00e9tiquetage </h3>\n<p>Tous les champs de formulaire HTML, tels que <code class=\"language-javascript\">&lt;input&gt;</code> et <code class=\"language-javascript\">&lt;textarea&gt;</code>, doivent \u00eatre \u00e9tiquet\u00e9s de mani\u00e8re accessible. Nous devons fournir des \u00e9tiquettes descriptives, qui sont \u00e9galement expos\u00e9es aux lecteurs d\u2019\u00e9cran.</p>\n<p>Les ressources ci-dessous nous montrent comment proc\u00e9der\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/WAI/tutorials/forms/labels/\">Le W3C nous montre comment \u00e9tiqueter les \u00e9l\u00e9ments</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"http://webaim.org/techniques/forms/controls\">Le WebAIM nous montre comment \u00e9tiqueter les \u00e9l\u00e9ments</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://www.paciellogroup.com/blog/2017/04/what-is-an-accessible-name/\">Le groupe Paciello explique ce qu\u2019est un nom accessible</a> (en anglais).</li>\n</ul>\n<p>Bien que ces pratiques HTML standard soient directement utilisables dans React, il faut noter que l\u2019attribut <code class=\"language-javascript\">for</code> est \u00e9crit <code class=\"language-javascript\">htmlFor</code> en JSX\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namedInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Nom :</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namedInput<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h3 id=\"notifying-the-user-of-errors\"><a class=\"anchor\" href=\"/react/accessibility#notifying-the-user-of-errors\"></a>Notifier des erreurs \u00e0 l\u2019utilisateur </h3>\n<p>Les situations d\u2019erreur doivent \u00eatre comprises par tous les utilisateurs. Les liens ci-dessous montrent comment exposer les textes d\u2019erreur aux lecteurs d\u2019\u00e9cran\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/WAI/tutorials/forms/notifications/\">Le W3C pr\u00e9sente les notifications utilisateur</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"http://webaim.org/techniques/formvalidation/\">Le WebAIM se penche sur la validation de formulaire</a> (en anglais).</li>\n</ul>\n<h2 id=\"focus-control\"><a class=\"anchor\" href=\"/react/accessibility#focus-control\"></a>Contr\u00f4le du focus </h2>\n<p>Assurez-vous que votre application web peut \u00eatre compl\u00e8tement utilisable avec le clavier seul\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/techniques/keyboard/\">Le WebAIM parle de l\u2019accessibilit\u00e9 depuis le clavier</a> (en anglais).</li>\n</ul>\n<h3 id=\"keyboard-focus-and-focus-outline\"><a class=\"anchor\" href=\"/react/accessibility#keyboard-focus-and-focus-outline\"></a>Focus clavier et contour de focus </h3>\n<p>Le focus clavier fait r\u00e9f\u00e9rence \u00e0 l\u2019\u00e9l\u00e9ment courant dans le DOM qui est s\u00e9lectionn\u00e9 pour accepter les saisies au clavier. Nous le voyons partout comme un contour similaire \u00e0 ce qu\u2019on voit sur l\u2019image ci-dessous\u00a0:</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/dec0e6bcc1f882baf76ebc860d4f04e5/4fcfe/keyboard-focus.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/dec0e6bcc1f882baf76ebc860d4f04e5/4fcfe/keyboard-focus.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>N\u2019utilisez CSS pour retirer ce contour, par exemple en d\u00e9finissant <code class=\"language-javascript\">outline: 0</code>, que si vous le remplacez par une autre impl\u00e9mentation de contour de focus.</p>\n<h3 id=\"mechanisms-to-skip-to-desired-content\"><a class=\"anchor\" href=\"/react/accessibility#mechanisms-to-skip-to-desired-content\"></a>M\u00e9canismes pour sauter au contenu d\u00e9sir\u00e9 </h3>\n<p>Fournissez un m\u00e9canisme permettant aux utilisateurs de sauter les sections de navigation dans votre application, car \u00e7a facilite et acc\u00e9l\u00e8re la navigation au clavier.</p>\n<p>Les liens d\u2019\u00e9vitement <em>(skiplinks, NdT)</em> sont des liens de navigation cach\u00e9s qui ne sont visibles que lorsque l\u2019utilisateur interagit au clavier avec la page. Ils sont tr\u00e8s faciles \u00e0 mettre en \u0153uvre avec les ancres de pages internes et un peu de style\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/techniques/skipnav/\">WebAIM - Liens d\u2019\u00e9vitement</a> (en anglais).</li>\n</ul>\n<p>Utilisez \u00e9galement les \u00e9l\u00e9ments et r\u00f4les de rep\u00e9rage, tels que <code class=\"language-javascript\">&lt;main&gt;</code> et <code class=\"language-javascript\">&lt;aside&gt;</code>, afin de d\u00e9limiter les r\u00e9gions de la page, car les technologies d\u2019assistance permettent \u00e0 l\u2019utilisateur de naviguer rapidement vers ces sections.</p>\n<p>Pour en apprendre davantage sur l\u2019utilisation de ces \u00e9l\u00e9ments afin d\u2019am\u00e9liorer l\u2019accessibilit\u00e9, rendez-vous sur\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://www.scottohara.me/blog/2018/03/03/landmarks.html\">Rep\u00e8res d\u2019accessibilit\u00e9</a> (en anglais).</li>\n</ul>\n<h3 id=\"programmatically-managing-focus\"><a class=\"anchor\" href=\"/react/accessibility#programmatically-managing-focus\"></a>G\u00e9rer le focus programmatiquement </h3>\n<p>Nos applications React modifient en continu le DOM HTML au cours de l\u2019ex\u00e9cution, ce qui entra\u00eene parfois la perte du focus clavier ou le positionne sur un \u00e9l\u00e9ment inattendu. Pour corriger \u00e7a, nous devons d\u00e9placer le focus clavier programmatiquement dans la bonne direction. On peut par exemple redonner le focus clavier \u00e0 un bouton qui ouvre une fen\u00eatre modale, lorsque cette derni\u00e8re se referme.</p>\n<p>La documentation web du MDN se penche sur \u00e7a et d\u00e9crit comment nous pouvons construire <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Contr%C3%B4les_DHTML_personnalis%C3%A9s_navigables_au_clavier\">des \u00e9l\u00e9ments d\u2019interface JavaScript permettant la navigation au clavier</a>.</p>\n<p>Afin de d\u00e9finir le focus en React, nous pouvons utiliser les <a href=\"/react/refs-and-the-dom\">Refs aux \u00e9l\u00e9ments du DOM</a>.</p>\n<p>Nous cr\u00e9ons d\u2019abord une ref \u00e0 un \u00e9l\u00e9ment du JSX de la classe du composant\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Cr\u00e9ez une r\u00e9f\u00e9rence pour conserver l'\u00e9l\u00e9ment textInput du DOM.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Utilisez la prop `ref` pour d\u00e9finir la valeur courante</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//  de la ref `textInput` \u00e0 l'\u00e9l\u00e9ment DOM</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span></span>      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ensuite, nous pouvons lui donner le focus depuis n\u2019importe o\u00f9 dans notre composant en cas de besoin\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Donnez explicitement le focus au champ de saisie en utilisant l'API du DOM.</span>\n  <span class=\"token comment\">// Remarque : nous utilisons \"current\" pour acc\u00e9der au n\u0153ud du DOM.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il arrive parfois qu\u2019un composant parent ait besoin de d\u00e9finir le focus sur un \u00e9l\u00e9ment au sein d\u2019un composant enfant. Pour ce faire, nous <a href=\"/react/refs-and-the-dom#exposing-dom-refs-to-parent-components\">exposons des refs DOM aux composants parents</a> via une propri\u00e9t\u00e9 sp\u00e9ciale sur le composant enfant qui transf\u00e8re la ref du parent au n\u0153ud DOM de l\u2019enfant.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span> <span class=\"token attr-name\">inputRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Maintenant, vous pouvez d\u00e9finir le focus quand vous en avez besoin.</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Quand vous enrobez des composants \u00e0 l\u2019aide d\u2019un composant d\u2019ordre sup\u00e9rieur <em>(Higher-Order Component, ou HOC, NdT)</em>, il est recommand\u00e9 de <a href=\"/react/forwarding-refs\">transf\u00e9rer la r\u00e9f\u00e9rence</a> vers l\u2019\u00e9l\u00e9ment enrob\u00e9 gr\u00e2ce \u00e0 la fonction <code class=\"language-javascript\">forwardRef</code> de React. Si un HOC tiers n\u2019impl\u00e9mente pas le transfert de r\u00e9f\u00e9rence, le mod\u00e8le ci-dessus peut \u00eatre utilis\u00e9 comme solution de secours.</p>\n<p>Le composant <a class=\"external-link\" href=\"https://github.com/davidtheclark/react-aria-modal\">react-aria-modal</a> est un excellent exemple de la gestion du focus. Il s\u2019agit de l\u2019un des rares exemples de fen\u00eatre modale compl\u00e8tement accessible. Non seulement il d\u00e9finit le focus initial sur le bouton d\u2019annulation (emp\u00eachant l\u2019utilisateur du clavier d\u2019activer accidentellement l\u2019action de succ\u00e8s), mais il restreint bien le focus clavier \u00e0 l\u2019int\u00e9rieur de la fen\u00eatre modale et il remet \u00e0 terme le focus sur l\u2019\u00e9l\u00e9ment qui a originellement d\u00e9clench\u00e9 la fen\u00eatre modale.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Bien qu\u2019il s\u2019agisse d\u2019une caract\u00e9ristique d\u2019accessibilit\u00e9 tr\u00e8s importante, c\u2019est \u00e9galement une technique qui doit \u00eatre utilis\u00e9e \u00e0 bon escient. Utilisez-la pour corriger le comportement du focus clavier lorsqu\u2019il est perturb\u00e9, et non pour essayer d\u2019anticiper la mani\u00e8re dont les utilisateurs souhaitent utiliser les applications.</p>\n</div>\n<h2 id=\"mouse-and-pointer-events\"><a class=\"anchor\" href=\"/react/accessibility#mouse-and-pointer-events\"></a>\u00c9v\u00e9nements de souris et de pointeur </h2>\n<p>Assurez-vous que toutes les fonctionnalit\u00e9s expos\u00e9es via un \u00e9v\u00e9nement de souris ou de pointeur sont \u00e9galement accessibles avec le clavier seul. Ne d\u00e9pendre que du pointeur peut aboutir \u00e0 de nombreuses situations o\u00f9 les utilisateurs de clavier ne pourront pas utiliser votre application.</p>\n<p>Pour illustrer \u00e7a, examinons un exemple courant o\u00f9 l\u2019accessibilit\u00e9 est cass\u00e9e par les \u00e9v\u00e9nements de clics. Il s\u2019agit du mod\u00e8le de clic ext\u00e9rieur dans lequel un utilisateur peut d\u00e9sactiver une liste d\u00e9roulante en cliquant \u00e0 l\u2019ext\u00e9rieur de l\u2019\u00e9l\u00e9ment.</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//5523b05b22210c5a2fa0bd1f01339cb3/outerclick-with-mouse.gif\">Image link</a>\n<p>C\u2019est g\u00e9n\u00e9ralement impl\u00e9ment\u00e9 en \u00e9coutant l\u2019\u00e9v\u00e9nement <code class=\"language-javascript\">click</code> de l\u2019objet <code class=\"language-javascript\">window</code> pour fermer le menu d\u00e9roulant\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">OuterClickExample</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOpen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickOutsideHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      isOpen<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>currentState<span class=\"token punctuation\">.</span>isOpen\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onClickOutsideHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> isOpen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Choisissez une option</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 3</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a fonctionne peut-\u00eatre pour les utilisateurs ayant des dispositifs de pointage, tels qu\u2019une souris, mais le fait de n\u2019utiliser que le clavier entra\u00eene des dysfonctionnements lors de la tabulation sur l\u2019\u00e9l\u00e9ment suivant, car l\u2019objet <code class=\"language-javascript\">window</code> ne re\u00e7oit jamais d\u2019\u00e9v\u00e9nement <code class=\"language-javascript\">click</code>. \u00c7a peut finir par masquer des fonctionnalit\u00e9s, ce qui emp\u00eache les utilisateurs d\u2019utiliser votre application.</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//eca0ca825c8c5e2aa609cee72ef47e27/outerclick-with-keyboard.gif\">Image link</a>\n<p>La m\u00eame fonctionnalit\u00e9 peut \u00eatre obtenue en utilisant les gestionnaires d\u2019\u00e9v\u00e9nements appropri\u00e9s, tels que <code class=\"language-javascript\">onBlur</code> et <code class=\"language-javascript\">onFocus</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BlurExample</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOpen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBlurHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onBlurHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onFocusHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onFocusHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      isOpen<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>currentState<span class=\"token punctuation\">.</span>isOpen\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Nous fermons le menu d\u00e9roulant au prochain tick en utilisant setTimeout.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// C'est n\u00e9cessaire car nous devons d'abord v\u00e9rifier si un</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// autre enfant de l'\u00e9l\u00e9ment a re\u00e7u le focus car l'\u00e9v\u00e9nement</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// `blur` se d\u00e9clenche avant le nouvel \u00e9v\u00e9nement de focus.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onBlurHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        isOpen<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Si un enfant re\u00e7oit le focus, alors on ne ferme pas le menu d\u00e9roulant.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onFocusHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// React nous aide en assurant la propagation des</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// \u00e9v\u00e9nements `blur` et `focus` vers le parent.</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onBlur</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBlurHandler<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">           <span class=\"token attr-name\">onFocus</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onFocusHandler<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">aria-haspopup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">aria-expanded</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Choisissez une option</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 3</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce code expose la fonctionnalit\u00e9 aussi bien aux utilisateurs de dispositifs de pointage qu\u2019aux utilisateurs de clavier. Remarquez \u00e9galement les propri\u00e9t\u00e9s <code class=\"language-javascript\">aria-*</code> ajout\u00e9es afin de prendre en charge les lecteurs d\u2019\u00e9cran. Par souci de simplicit\u00e9, les \u00e9v\u00e9nements clavier permettant l\u2019interaction avec les options du menu d\u00e9roulant via les touches de curseur n\u2019ont pas \u00e9t\u00e9 impl\u00e9ment\u00e9s.</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//28ce2067489843caf05fe7ce22494542/blur-popover-close.gif\">Image link</a>\n<p>C\u2019est un exemple des nombreux cas o\u00f9 le fait de ne d\u00e9pendre que des \u00e9v\u00e9nements de souris et de pointeur casse les fonctionnalit\u00e9s pour les utilisateurs de clavier. Toujours tester avec le clavier mettra imm\u00e9diatement en \u00e9vidence les probl\u00e8mes qui peuvent ensuite \u00eatre r\u00e9solus \u00e0 l\u2019aide des gestionnaires d\u2019\u00e9v\u00e9nements clavier.</p>\n<h2 id=\"more-complex-widgets\"><a class=\"anchor\" href=\"/react/accessibility#more-complex-widgets\"></a>\u00c9l\u00e9ments d\u2019interface plus complexes </h2>\n<p>Une exp\u00e9rience utilisateur plus complexe ne doit pas signifier une exp\u00e9rience moins accessible. Alors que l\u2019accessibilit\u00e9 est plus facile \u00e0 r\u00e9aliser en codant au plus pr\u00e8s du HTML, m\u00eame les \u00e9l\u00e9ments d\u2019interface les plus complexes peuvent \u00eatre cod\u00e9s de mani\u00e8re accessible.</p>\n<p>Nous avons besoin ici de conna\u00eetre les <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria/#roles\">r\u00f4les ARIA</a>, ainsi que les <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria/#states_and_properties\">\u00e9tats et propri\u00e9t\u00e9s ARIA</a> (liens en anglais).\nCe sont des bo\u00eetes \u00e0 outils pleines d\u2019attributs HTML pris en charge par JSX et qui nous permettent de construire des composants React pleinement accessibles et hautement fonctionnels.</p>\n<p>Chaque type d\u2019\u00e9l\u00e9ment d\u2019interface a son mod\u00e8le de conception sp\u00e9cifique et devrait fonctionner de la m\u00eame mani\u00e8re avec les utilisateurs et les agents utilisateurs (notamment les navigateurs et les lecteurs d\u2019\u00e9cran)\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria-practices/#aria_ex\">Pratiques de cr\u00e9ation WAI-ARIA - Mod\u00e8les de conception et \u00e9l\u00e9ments d\u2019interface</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://heydonworks.com/article/practical-aria-examples/\">Heydon Pickering - Exemples ARIA</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://inclusive-components.design/\">Composants inclusifs</a> (en anglais).</li>\n</ul>\n<h2 id=\"other-points-for-consideration\"><a class=\"anchor\" href=\"/react/accessibility#other-points-for-consideration\"></a>Autres points \u00e0 consid\u00e9rer </h2>\n<h3 id=\"setting-the-language\"><a class=\"anchor\" href=\"/react/accessibility#setting-the-language\"></a>D\u00e9finir la langue </h3>\n<p>Indiquez la langue des pages de texte de fa\u00e7on \u00e0 ce que les logiciels de lecture d\u2019\u00e9cran puissent s\u00e9lectionner les param\u00e8tres de voix appropri\u00e9s\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/techniques/screenreader/#language\">WebAIM - Langue du document</a> (en anglais).</li>\n</ul>\n<h3 id=\"setting-the-document-title\"><a class=\"anchor\" href=\"/react/accessibility#setting-the-document-title\"></a>D\u00e9finir le titre du document </h3>\n<p>D\u00e9finissez la balise <code class=\"language-javascript\">&lt;title&gt;</code> du document pour d\u00e9crire correctement le contenu de la page courante, afin de garantir que l\u2019utilisateur est au courant du contexte de la page en cours\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html\">WCAG - Comprendre l\u2019exigence du titre du document</a> (en anglais).</li>\n</ul>\n<p>Nous pouvons le d\u00e9finir dans React en utilisant le <a class=\"external-link\" href=\"https://github.com/gaearon/react-document-title\">composant React Document Title</a>.</p>\n<h3 id=\"color-contrast\"><a class=\"anchor\" href=\"/react/accessibility#color-contrast\"></a>Contraste des couleurs </h3>\n<p>Assurez-vous que tous les textes lisibles sur votre site web ont un contraste des couleurs suffisant pour rester lisibles de mani\u00e8re optimale par les utilisateurs malvoyants\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\">WCAG - Comprendre l\u2019exigence du contraste des couleurs</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/\">Tout savoir sur le contraste des couleurs et pourquoi vous devriez le repenser</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"http://a11yproject.com/posts/what-is-color-contrast/\">A11yProject - Qu\u2019est-ce que le contraste des couleurs\u00a0?</a> (en anglais).</li>\n</ul>\n<p>Il peut \u00eatre fastidieux de calculer manuellement les combinaisons de couleurs appropri\u00e9es pour toutes les situations sur votre site web, aussi vous est-il possible de <a class=\"external-link\" href=\"http://jxnblk.com/colorable/\">calculer une palette enti\u00e8re de couleurs accessible avec Colorable</a> (en anglais).</p>\n<p>Les outils aXe et WAVE mentionn\u00e9s ci-dessous incluent \u00e9galement des tests de contraste des couleurs et signalent les erreurs de contraste.</p>\n<p>Si vous souhaitez \u00e9tendre vos capacit\u00e9s de test de contraste, vous pouvez utiliser ces outils\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/resources/contrastchecker/\">WebAIM - V\u00e9rification de contraste des couleurs</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://www.paciellogroup.com/resources/contrastanalyser/\">The Paciello Group - Analyseur de contraste des couleurs</a> (en anglais).</li>\n</ul>\n<h2 id=\"development-and-testing-tools\"><a class=\"anchor\" href=\"/react/accessibility#development-and-testing-tools\"></a>Outils de d\u00e9veloppement et de test </h2>\n<p>Il existe de nombreux outils que nous pouvons utiliser pour nous assister durant la cr\u00e9ation d\u2019applications web accessibles.</p>\n<h3 id=\"the-keyboard\"><a class=\"anchor\" href=\"/react/accessibility#the-keyboard\"></a>Le clavier </h3>\n<p>La v\u00e9rification de loin la plus simple, mais aussi l\u2019une des plus importantes, consiste \u00e0 tester si l\u2019ensemble de votre site web est accessible et utilisable avec le clavier seul. Proc\u00e9dez ainsi\u00a0:</p>\n<ol>\n<li>D\u00e9branchez votre souris.</li>\n<li>Utilisez <code class=\"language-javascript\">Tab</code> et <code class=\"language-javascript\">Shift\u00a0+\u00a0Tab</code> pour naviguer.</li>\n<li>Utilisez <code class=\"language-javascript\">Entr\u00e9e</code> pour activer des \u00e9l\u00e9ments.</li>\n<li>Le cas \u00e9ch\u00e9ant, utilisez les touches de curseur du clavier pour interagir avec certains \u00e9l\u00e9ments, tels que les menus et les listes d\u00e9roulantes.</li>\n</ol>\n<h3 id=\"development-assistance\"><a class=\"anchor\" href=\"/react/accessibility#development-assistance\"></a>Assistance au d\u00e9veloppement </h3>\n<p>Nous pouvons tester certaines fonctionnalit\u00e9s d\u2019accessibilit\u00e9 directement dans notre code JSX. Souvent des contr\u00f4les automatiques sont d\u00e9j\u00e0 pr\u00e9sents dans les EDI qui prennent en charge JSX pour v\u00e9rifier les r\u00f4les, \u00e9tats et propri\u00e9t\u00e9s ARIA. Nous avons \u00e9galement acc\u00e8s \u00e0 l\u2019outil suivant\u00a0:</p>\n<h4 id=\"eslint-plugin-jsx-a11y\"><a class=\"anchor\" href=\"/react/accessibility#eslint-plugin-jsx-a11y\"></a>eslint-plugin-jsx-a11y </h4>\n<p>L\u2019extension <a class=\"external-link\" href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y\">eslint-plugin-jsx-a11y</a> pour ESLint fournit des informations concernant les probl\u00e8mes d\u2019accessibilit\u00e9 dans votre JSX. De nombreux EDI vous permettent d\u2019int\u00e9grer ces r\u00e9sultats directement dans leurs fen\u00eatres d\u2019analyse de code ou de code source.</p>\n<p><a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/\">Create React App</a> pr\u00e9-configure cette extension avec un sous-ensemble de r\u00e8gles activ\u00e9es. Si vous souhaitez activer encore plus de r\u00e8gles d\u2019accessibilit\u00e9, vous pouvez cr\u00e9er un fichier <code class=\"language-javascript\">.eslintrc</code> \u00e0 la racine de votre projet avec ce contenu\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsxon\"><code class=\"language-javascript\">{\n  \"extends\": [\"react-app\", \"plugin:jsx-a11y/recommended\"],\n  \"plugins\": [\"jsx-a11y\"]\n}</code></pre></div>\n<h3 id=\"testing-accessibility-in-the-browser\"><a class=\"anchor\" href=\"/react/accessibility#testing-accessibility-in-the-browser\"></a>Tester l\u2019accessibilit\u00e9 dans le navigateur </h3>\n<p>Il existe un certain nombre d\u2019outils pour ex\u00e9cuter des audits d\u2019accessibilit\u00e9 sur des pages web dans votre navigateur. Veuillez les utiliser conjointement avec d\u2019autres contr\u00f4les d\u2019accessibilit\u00e9 mentionn\u00e9s ici car ils ne peuvent tester que l\u2019accessibilit\u00e9 technique de votre HTML.</p>\n<h4 id=\"axe-axe-core-and-react-axe\"><a class=\"anchor\" href=\"/react/accessibility#axe-axe-core-and-react-axe\"></a>aXe, aXe-core et react-axe </h4>\n<p>Deque Systems propose <a class=\"external-link\" href=\"https://github.com/dequelabs/axe-core\">aXe-core</a> pour automatiser les tests d\u2019accessibilit\u00e9 de bout en bout de vos applications. Ce module comprend des int\u00e9grations pour Selenium.</p>\n<p><a class=\"external-link\" href=\"https://www.deque.com/products/axe/\"><em>The Accessibility Engine</em></a> (en anglais) ou aXe, est une extension du navigateur qui fournit un inspecteur d\u2019accessibilit\u00e9 en se basant sur <code class=\"language-javascript\">aXe-core</code>.</p>\n<p>Vous pouvez aussi utiliser le module <a class=\"external-link\" href=\"https://github.com/dylanb/react-axe\">react-axe</a> pour signaler directement ces r\u00e9sultats d\u2019accessibilit\u00e9 dans la console durant le d\u00e9veloppement et le d\u00e9bogage.</p>\n<h4 id=\"webaim-wave\"><a class=\"anchor\" href=\"/react/accessibility#webaim-wave\"></a>WebAIM WAVE </h4>\n<p>L\u2019<a class=\"external-link\" href=\"http://wave.webaim.org/extension/\">outil Web Accessibility Evaluation</a> (en anglais) est une autre extension du navigateur pour l\u2019accessibilit\u00e9.</p>\n<h4 id=\"accessibility-inspectors-and-the-accessibility-tree\"><a class=\"anchor\" href=\"/react/accessibility#accessibility-inspectors-and-the-accessibility-tree\"></a>Inspecteurs d\u2019accessibilit\u00e9 et arbre d\u2019accessibilit\u00e9 </h4>\n<p><a class=\"external-link\" href=\"https://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/\">L\u2019arbre d\u2019accessibilit\u00e9</a> (en anglais) est un sous-ensemble de l\u2019arbre DOM qui contient des objets d\u2019accessibilit\u00e9 pour chaque \u00e9l\u00e9ment du DOM devant \u00eatre expos\u00e9 aux technologies d\u2019assistance, telles que les lecteurs d\u2019\u00e9crans.</p>\n<p>Sur certains navigateurs, nous pouvons facilement consulter les informations d\u2019accessibilit\u00e9 pour chaque \u00e9l\u00e9ment de l\u2019arbre d\u2019accessibilit\u00e9\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Outils/Inspecteur_accessibilite\">Utiliser l\u2019inspecteur d\u2019accessibilit\u00e9 de Firefox</a>.</li>\n<li><a class=\"external-link\" href=\"https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#pane\">Utiliser l\u2019inspecteur d\u2019accessibilit\u00e9 de Chrome</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://developer.apple.com/library/content/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html\">Utiliser l\u2019inspecteur d\u2019accessibilit\u00e9 d\u2019OS X Safari</a> (en anglais).</li>\n</ul>\n<h3 id=\"screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#screen-readers\"></a>Lecteurs d\u2019\u00e9cran </h3>\n<p>Tester avec un lecteur d\u2019\u00e9cran devrait faire partie de vos tests d\u2019accessibilit\u00e9.</p>\n<p>Veuillez noter que les combinaisons navigateur / lecteur d\u2019\u00e9cran ont leur importance. Il est recommand\u00e9 de tester votre application dans le navigateur le plus adapt\u00e9 au lecteur d\u2019\u00e9cran de votre choix.</p>\n<h3 id=\"commonly-used-screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#commonly-used-screen-readers\"></a>Lecteurs d\u2019\u00e9cran fr\u00e9quemment utilis\u00e9s </h3>\n<h4 id=\"nvda-in-firefox\"><a class=\"anchor\" href=\"/react/accessibility#nvda-in-firefox\"></a>NVDA dans Firefox </h4>\n<p><a class=\"external-link\" href=\"https://www.nvaccess.org/\"><em>NonVisual Desktop Access</em></a> (en anglais) ou NVDA est un logiciel libre de lecteur d\u2019\u00e9cran qui est largement utilis\u00e9.</p>\n<p>Reportez-vous aux guides suivants pour savoir comment utiliser au mieux NVDA\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/articles/nvda/\">WebAIM - Utiliser NVDA pour \u00e9valuer l\u2019accessibilit\u00e9 web</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/nvda-keyboard-shortcuts\">Deque - Raccourcis clavier NVDA</a> (en anglais).</li>\n</ul>\n<h4 id=\"voiceover-in-safari\"><a class=\"anchor\" href=\"/react/accessibility#voiceover-in-safari\"></a>VoiceOver dans Safari </h4>\n<p>VoiceOver est un lecteur d\u2019\u00e9cran int\u00e9gr\u00e9 dans les appareils d\u2019Apple.</p>\n<p>Reportez-vous aux guides suivants pour savoir comment activer et utiliser VoiceOver\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/articles/voiceover/\">WebAIM - Utiliser VoiceOver pour \u00e9valuer l\u2019accessibilit\u00e9 web</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts\">Deque - Raccourcis clavier pour VoiceOver sur OS X</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/voiceover-ios-shortcuts\">Deque - Raccourcis pour VoiceOver sur iOS</a> (en anglais).</li>\n</ul>\n<h4 id=\"jaws-in-internet-explorer\"><a class=\"anchor\" href=\"/react/accessibility#jaws-in-internet-explorer\"></a>JAWS dans Internet Explorer </h4>\n<p><a class=\"external-link\" href=\"http://www.freedomscientific.com/Products/Blindness/JAWS\"><em>Job Access With Speech</em></a> (en anglais) ou JAWS, est un lecteur d\u2019\u00e9cran tr\u00e8s largement utilis\u00e9 sur Windows.</p>\n<p>Reportez-vous aux guides suivants pour utiliser au mieux JAWS\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"http://webaim.org/articles/jaws/\">WebAIM - Utiliser JAWS pour \u00e9valuer l\u2019accessibilit\u00e9 web</a> (en anglais).</li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/jaws-keyboard-shortcuts\">Deque - Raccourcis clavier pour JAWS</a> (en anglais).</li>\n</ul>\n<h3 id=\"other-screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#other-screen-readers\"></a>Autres lecteurs d\u2019\u00e9cran </h3>\n<h4 id=\"chromevox-in-google-chrome\"><a class=\"anchor\" href=\"/react/accessibility#chromevox-in-google-chrome\"></a>ChromeVox dans Google Chrome </h4>\n<p><a class=\"external-link\" href=\"http://www.chromevox.com/\">ChromeVox</a> est un lecteur d\u2019\u00e9cran int\u00e9gr\u00e9 aux Chromebooks et est disponible <a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn?hl=fr\">en tant qu\u2019extension</a> pour Google Chrome.</p>\n<p>Reportez-vous aux guides suivants pour utiliser au mieux ChromeVox\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://support.google.com/chromebook/answer/7031755?hl=fr\">Aide de Google Chromebook - Utiliser le lecteur d\u2019\u00e9cran int\u00e9gr\u00e9</a>.</li>\n<li><a class=\"external-link\" href=\"http://www.chromevox.com/keyboard_shortcuts.html\">R\u00e9f\u00e9rence des raccourcis clavier pour ChromeVox Classic</a> (en anglais).</li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/accessibility.md\">Edit this page</a></p></div></article>", "path": "/react/accessibility", "nav": ["/react/thinking-in-react", "/react/code-splitting"]}, {"key": "D\u00e9coupage dynamique de code", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h2 id=\"bundling\"><a class=\"anchor\" href=\"/react/code-splitting#bundling\"></a>Bundling </h2>\n<p>La plupart des applications React empaquetteront leur fichiers au moyen d\u2019outils tels que <a class=\"external-link\" href=\"https://webpack.js.org/\">Webpack</a>, <a class=\"external-link\" href=\"https://rollupjs.org/\">Rollup</a> ou <a class=\"external-link\" href=\"http://browserify.org/\">Browserify</a>. L\u2019empaquetage <em>(bundling, NdT)</em> consiste \u00e0 suivre le graphe des importations dans les fichiers, et \u00e0 les regrouper au sein d\u2019un m\u00eame fichier\u00a0: un <em>bundle</em> <em>(terme que nous utiliserons sans italiques dans la suite de la page, NdT)</em>. Ce bundle peut ensuite \u00eatre inclus dans une page web pour charger une application enti\u00e8re d\u2019un seul coup.</p>\n<h4 id=\"example\"><a class=\"anchor\" href=\"/react/code-splitting#example\"></a>Exemple </h4>\n<p><strong>Application\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// app.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> add <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./math.js'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// math.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Bundle\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vos bundles finiront par \u00eatre tr\u00e8s diff\u00e9rents de ceux-l\u00e0.</p>\n</div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://create-react-app.dev/\">Create React App</a>, <a class=\"external-link\" href=\"https://nextjs.org/\">Next.js</a>, <a class=\"external-link\" href=\"https://www.gatsbyjs.org/\">Gatsby</a> ou un outil similaire, vous b\u00e9n\u00e9ficierez d\u2019une configuration de Webpack pr\u00eate \u00e0 l\u2019emploi pour cr\u00e9er le bundle de votre application.</p>\n<p>Si ce n\u2019est pas le cas, vous devrez configurer vous-m\u00eame la g\u00e9n\u00e9ration de votre bundle. Consultez les guides <a class=\"external-link\" href=\"https://webpack.js.org/guides/installation/\">d\u2019installation</a> et de <a class=\"external-link\" href=\"https://webpack.js.org/guides/getting-started/\">d\u00e9marrage</a> de Webpack.</p>\n<h2 id=\"code-splitting\"><a class=\"anchor\" href=\"/react/code-splitting#code-splitting\"></a>Le d\u00e9coupage dynamique de code </h2>\n<p>Les bundles c\u2019est g\u00e9nial, mais au fur et \u00e0 mesure que votre application grandit, votre bundle va grossir aussi. Surtout si vous int\u00e9grez de grosses biblioth\u00e8ques tierces. Vous devez garder un \u0153il sur le code que vous int\u00e9grez dans votre bundle pour \u00e9viter de le rendre si lourd que le chargement de votre application prendrait beaucoup de temps.</p>\n<p>Pour \u00e9viter de vous retrouver avec un bundle trop volumineux, il est bon d\u2019anticiper les probl\u00e8mes et de commencer \u00e0 fractionner votre bundle. Le d\u00e9coupage dynamique de code est une fonctionnalit\u00e9 prise en charge par des empaqueteurs tels que <a class=\"external-link\" href=\"https://webpack.js.org/guides/code-splitting/\">Webpack</a>, <a class=\"external-link\" href=\"https://rollupjs.org/guide/en/#code-splitting\">Rollup</a> ou Browserify (via <a class=\"external-link\" href=\"https://github.com/browserify/factor-bundle\">factor-bundle</a>), qui permet de cr\u00e9er plusieurs bundles pouvant \u00eatre charg\u00e9s dynamiquement au moment de l\u2019ex\u00e9cution.</p>\n<p>Fractionner votre application peut vous aider \u00e0 charger \u00e0 la demande <em>(lazy-load, NdT)</em> les parties qui sont n\u00e9cessaires pour l\u2019utilisateur \u00e0 un moment donn\u00e9, ce qui peut am\u00e9liorer consid\u00e9rablement les performances de votre application. Bien que vous n\u2019ayez pas r\u00e9duit la quantit\u00e9 de code de votre application, vous \u00e9vitez de charger du code dont l\u2019utilisateur n\u2019aura peut-\u00eatre jamais besoin, et r\u00e9duisez la quantit\u00e9 de code n\u00e9cessaire au chargement initial.</p>\n<h2 id=\"import\"><a class=\"anchor\" href=\"/react/code-splitting#import\"></a><code class=\"language-javascript\">import()</code> </h2>\n<p>La meilleure fa\u00e7on d\u2019introduire du d\u00e9coupage dynamique de code dans votre application consiste \u00e0 utiliser la syntaxe d\u2019<code class=\"language-javascript\">import()</code> dynamique.</p>\n<p><strong>Avant\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> add <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./math'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Apr\u00e8s\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./math\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">math</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Lorsque Webpack rencontre cette syntaxe, il commence automatiquement \u00e0 d\u00e9couper le code de votre application. Si vous utilisez Create React App, c\u2019est d\u00e9j\u00e0 configur\u00e9 pour vous et vous pouvez <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/docs/code-splitting\">l\u2019utiliser</a> imm\u00e9diatement. C\u2019est \u00e9galement pris en charge de base par <a class=\"external-link\" href=\"https://nextjs.org/docs/advanced-features/dynamic-import\">Next.js</a>.</p>\n<p>Si vous configurez Webpack vous-m\u00eame, vous voudrez sans doute lire le <a class=\"external-link\" href=\"https://webpack.js.org/guides/code-splitting/\">guide sur le d\u00e9coupage dynamique de code</a> de Webpack. Votre configuration Webpack devrait vaguement ressembler <a class=\"external-link\" href=\"https://gist.github.com/gaearon/ca6e803f5c604d37468b0091d9959269\">\u00e0 \u00e7a</a>.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"http://babeljs.io/\">Babel</a>, vous devrez vous assurer que Babel peut comprendre la syntaxe d\u2019import dynamique mais ne la transforme pas. Pour cela, vous aurez besoin de l\u2019extension <a class=\"external-link\" href=\"https://yarnpkg.com/en/package/babel-plugin-syntax-dynamic-import\">babel-plugin-syntax-dynamic-import</a>.</p>\n<h2 id=\"reactlazy\"><a class=\"anchor\" href=\"/react/code-splitting#reactlazy\"></a><code class=\"language-javascript\">React.lazy</code> </h2>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">React.lazy</code> et Suspense ne sont pas encore disponibles pour le rendu c\u00f4t\u00e9 serveur. Si vous souhaitez fractionner votre code dans une application rendue c\u00f4t\u00e9 serveur, nous vous recommandons d\u2019utiliser <a class=\"external-link\" href=\"https://github.com/gregberge/loadable-components\">Loadable Components</a>. Il propose un <a class=\"external-link\" href=\"https://loadable-components.com/docs/server-side-rendering/\">guide pratique pour fractionner le bundle avec un rendu c\u00f4t\u00e9 serveur</a>.</p>\n</div>\n<p>La fonction <code class=\"language-javascript\">React.lazy</code> vous permet d\u2019afficher un composant import\u00e9 dynamiquement comme n\u2019importe quel autre composant.</p>\n<p><strong>Avant\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> OtherComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Apr\u00e8s\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c7a chargera automatiquement le bundle contenant le composant <code class=\"language-javascript\">OtherComponent</code> quand celui-ci sera rendu pour la premi\u00e8re fois.</p>\n<p><code class=\"language-javascript\">React.lazy</code> prend une fonction qui doit appeler un <code class=\"language-javascript\">import()</code> dynamique. \u00c7a doit renvoyer une <code class=\"language-javascript\">Promise</code> qui s\u2019accomplit avec un module dont l\u2019export par d\u00e9faut contient un composant React.</p>\n<p>Le composant import\u00e9 dynamiquement devrait \u00eatre exploit\u00e9 dans un composant <code class=\"language-javascript\">Suspense</code>, qui nous permet d\u2019afficher un contenu de repli (ex. un indicateur de chargement) en attendant que ce module soit charg\u00e9.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La prop  <code class=\"language-javascript\">fallback</code> accepte n\u2019importe quel \u00e9l\u00e9ment React que vous souhaitez afficher en attendant le chargement du composant. Vous pouvez placer le composant <code class=\"language-javascript\">Suspense</code> n\u2019importe o\u00f9 au-dessus du composant charg\u00e9 \u00e0 la demande. Vous pouvez m\u00eame envelopper plusieurs composants charg\u00e9s \u00e0 la demande avec un seul composant <code class=\"language-javascript\">Suspense</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> AnotherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./AnotherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnotherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"error-boundaries\"><a class=\"anchor\" href=\"/react/code-splitting#error-boundaries\"></a>P\u00e9rim\u00e8tres d\u2019erreurs </h3>\n<p>Si le chargement de l\u2019autre module \u00e9choue (par exemple \u00e0 cause d\u2019une d\u00e9faillance r\u00e9seau), une erreur sera lev\u00e9e. Vous pouvez g\u00e9rer ces erreurs pour assurer une exp\u00e9rience utilisateur agr\u00e9able et retomber sur vos pieds avec <a href=\"/react/error-boundaries\">les p\u00e9rim\u00e8tres d\u2019erreurs</a> <em>(Error boundaries, NdT)</em>. Une fois que vous avez cr\u00e9\u00e9 votre p\u00e9rim\u00e8tre d\u2019erreur, vous pouvez l\u2019utiliser n\u2019importe o\u00f9 au-dessus de vos composants charg\u00e9s \u00e0 la demande pour afficher un \u00e9tat d\u2019erreur lors d\u2019une d\u00e9faillance r\u00e9seau.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MyErrorBoundary <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyErrorBoundary'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> AnotherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./AnotherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnotherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"route-based-code-splitting\"><a class=\"anchor\" href=\"/react/code-splitting#route-based-code-splitting\"></a>D\u00e9coupage dynamique de code bas\u00e9 sur les routes </h2>\n<p>D\u00e9cider o\u00f9 introduire un d\u00e9coupage dynamique de code dans votre application peut s\u2019av\u00e9rer d\u00e9licat. Vous voulez \u00eatre s\u00fbr\u00b7e de choisir des endroits qui fractionnent les bundles de mani\u00e8re uniforme, sans perturber l\u2019exp\u00e9rience utilisateur.</p>\n<p>Les routes sont un bon endroit pour commencer. La plupart des gens sont habitu\u00e9s sur le web \u00e0 ce que les transitions entre les pages mettent du temps \u00e0 charger. Vous aurez \u00e9galement tendance \u00e0 r\u00e9-afficher la page enti\u00e8re d\u2019un bloc, de sorte qu\u2019il est peu probable que vos utilisateurs interagissent avec d\u2019autres \u00e9l\u00e9ments de la page pendant ce temps-l\u00e0.</p>\n<p>Voici un exemple de configuration du d\u00e9coupage dynamique de code bas\u00e9 sur les routes de votre application, qui utilise une biblioth\u00e8que comme <a class=\"external-link\" href=\"https://reacttraining.com/react-router/\">React Router</a> avec <code class=\"language-javascript\">React.lazy</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense<span class=\"token punctuation\">,</span> lazy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Home <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/Home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> About <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/About'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Home<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>About<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"named-exports\"><a class=\"anchor\" href=\"/react/code-splitting#named-exports\"></a>Exports nomm\u00e9s </h2>\n<p>Pour le moment, <code class=\"language-javascript\">React.lazy</code> ne prend en charge que les exports par d\u00e9faut. Si le module que vous souhaitez importer utilise des exports nomm\u00e9s, vous pouvez cr\u00e9er un module interm\u00e9diaire qui r\u00e9exportera le composant voulu en tant qu\u2019export par d\u00e9faut. Cela garantit que le <em>tree shaking</em> <em>(<a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Glossaire/Tree_shaking\">proc\u00e9d\u00e9 permettant de supprimer les exports non-exploit\u00e9s</a>, NdT)</em> continuera \u00e0 fonctionner et que vous n\u2019embarquerez pas de composants inutilis\u00e9s.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ManyComponents.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> <span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> MyUnusedComponent <span class=\"token operator\">=</span> <span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// MyComponent.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> MyComponent <span class=\"token keyword\">as</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ManyComponents.js\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// MyApp.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> lazy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./MyComponent.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/code-splitting.md\">Edit this page</a></p></div></article>", "path": "/react/code-splitting", "nav": ["/react/accessibility", "/react/context"]}, {"key": "Contexte", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Le Contexte offre un moyen de faire passer des donn\u00e9es \u00e0 travers l\u2019arborescence du composant sans avoir \u00e0 passer manuellement les props \u00e0 chaque niveau.</p>\n<p>Dans une application React typique, les donn\u00e9es sont pass\u00e9es de haut en bas (du parent \u00e0 l\u2019enfant) via les props, mais cela peut devenir lourd pour certains types de props (ex. les pr\u00e9f\u00e9rences r\u00e9gionales, le th\u00e8me de l\u2019interface utilisateur) qui s\u2019av\u00e8rent n\u00e9cessaires pour de nombreux composants au sein d\u2019une application. Le Contexte offre un moyen de partager des valeurs comme celles-ci entre des composants sans avoir \u00e0 explicitement passer une prop \u00e0 chaque niveau de l\u2019arborescence.</p>\n<ul>\n<li><a href=\"/react/context#when-to-use-context\">Quand utiliser le Contexte</a></li>\n<li><a href=\"/react/context#before-you-use-context\">Avant d\u2019utiliser le Contexte</a></li>\n<li>\n<p><a href=\"/react/context#api\">API</a></p>\n<ul>\n<li><a href=\"/react/context#reactcreatecontext\">React.createContext</a></li>\n<li><a href=\"/react/context#contextprovider\">Context.Provider</a></li>\n<li><a href=\"/react/context#classcontexttype\">Class.contextType</a></li>\n<li><a href=\"/react/context#contextconsumer\">Context.Consumer</a></li>\n<li><a href=\"/react/context#contextdisplayname\">Context.displayName</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/context#examples\">Exemples</a></p>\n<ul>\n<li><a href=\"/react/context#dynamic-context\">Contexte dynamique</a></li>\n<li><a href=\"/react/context#updating-context-from-a-nested-component\">Mettre \u00e0 jour le Contexte \u00e0 partir d\u2019un composant imbriqu\u00e9</a></li>\n<li><a href=\"/react/context#consuming-multiple-contexts\">Consommer plusieurs Contextes</a></li>\n</ul>\n</li>\n<li><a href=\"/react/context#caveats\">Limitations</a></li>\n<li><a href=\"/react/context#legacy-api\">API historique</a></li>\n</ul>\n<h2 id=\"when-to-use-context\"><a class=\"anchor\" href=\"/react/context#when-to-use-context\"></a>Quand utiliser le Contexte </h2>\n<p>Le Contexte est con\u00e7u pour partager des donn\u00e9es qui peuvent \u00eatre consid\u00e9r\u00e9es comme \u00ab\u00a0globales\u00a0\u00bb pour une arborescence de composants React, comme l\u2019utilisateur actuellement authentifi\u00e9, le th\u00e8me, ou la pr\u00e9f\u00e9rence de langue. Par exemple, dans le code ci-dessous nous faisons passer manuellement la prop <code class=\"language-javascript\">theme</code> afin de styler le composant <code class=\"language-javascript\">Button</code>\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token attr-name\">theme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Le composant Toolbar doit prendre une prop suppl\u00e9mentaire `theme` et la</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// passer au ThemedButton. \u00c7a peut devenir p\u00e9nible si chaque bouton de l\u2019appli</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// a besoin de conna\u00eetre le th\u00e8me parce qu\u2019il faudra le faire passer \u00e0 travers</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// tous les composants.</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>En utilisant le Contexte, nous pouvons \u00e9viter de passer les props \u00e0 travers des \u00e9l\u00e9ments interm\u00e9diaires\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Le Contexte nous permet de transmettre une prop profond\u00e9ment dans l\u2019arbre des</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// composants sans la faire passer explicitement \u00e0 travers tous les composants.</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Cr\u00e9e un contexte pour le th\u00e8me (avec \u201clight\u201d comme valeur par d\u00e9faut).</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Utilise un Provider pour passer le th\u00e8me plus bas dans l\u2019arbre.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// N\u2019importe quel composant peut le lire, quelle que soit sa profondeur.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Dans cet exemple, nous passons \u201cdark\u201d comme valeur actuelle.</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Un composant au milieu n\u2019a plus \u00e0 transmettre explicitement le th\u00e8me</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9finit un contextType pour lire le contexte de th\u00e8me actuel.  React va</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// trouver le Provider de th\u00e8me anc\u00eatre le plus proche et utiliser sa valeur.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Dans cet exemple, le th\u00e8me actuel est \u201cdark\u201d.</span></span>  <span class=\"token keyword\">static</span> contextType <span class=\"token operator\">=</span> ThemeContext<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"before-you-use-context\"><a class=\"anchor\" href=\"/react/context#before-you-use-context\"></a>Avant d\u2019utiliser le Contexte </h2>\n<p>Le Contexte est principalement utilis\u00e9 quand certaines donn\u00e9es doivent \u00eatre accessibles par de <em>nombreux</em> composants \u00e0 diff\u00e9rents niveaux d\u2019imbrication. Utilisez-le avec parcimonie car il rend la r\u00e9utilisation des composants plus difficile.</p>\n<p><strong>Si vous voulez seulement \u00e9viter de passer certaines props \u00e0 travers de nombreux niveaux, <a href=\"/react/composition-vs-inheritance\">la composition des composants</a> est souvent plus simple que le contexte.</strong></p>\n<p>Par exemple, prenez un composant <code class=\"language-javascript\">Page</code> qui passe des props <code class=\"language-javascript\">user</code> et <code class=\"language-javascript\">avatarSize</code> plusieurs niveaux plus bas pour que les composants profond\u00e9ment imbriqu\u00e9s <code class=\"language-javascript\">Link</code> et <code class=\"language-javascript\">Avatar</code> puissent les lire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00c7a peut para\u00eetre redondant de passer les props <code class=\"language-javascript\">user</code> et <code class=\"language-javascript\">avatarSize</code> \u00e0 travers plusieurs niveaux, si au final seul le composant <code class=\"language-javascript\">Avatar</code> en a r\u00e9ellement besoin. Il est \u00e9galement p\u00e9nible qu\u2019\u00e0 chaque fois que le composant <code class=\"language-javascript\">Avatar</code> a besoin de davantage de props d\u2019en haut, vous ayez \u00e0 les ajouter \u00e0 tous les niveaux.</p>\n<p>Un des moyens de r\u00e9soudre ce probl\u00e8me <strong>sans le contexte</strong> consisterait \u00e0 <a href=\"/react/composition-vs-inheritance#containment\">transmettre le composant <code class=\"language-javascript\">Avatar</code> lui-m\u00eame</a> de fa\u00e7on \u00e0 ce que les composants interm\u00e9diaires n\u2019aient pas besoin de conna\u00eetre les props <code class=\"language-javascript\">user</code> ou <code class=\"language-javascript\">avatarSize</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> userLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>userLink<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// \u00c0 pr\u00e9sent nous avons :</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... qui affiche ...</span>\n<span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>userLink<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Avec cette modification, seulement le composant le plus haut plac\u00e9, <code class=\"language-javascript\">Page</code>, a besoin de conna\u00eetre l\u2019utilisation de <code class=\"language-javascript\">user</code> et <code class=\"language-javascript\">avatarSize</code> par les composants <code class=\"language-javascript\">Link</code> et <code class=\"language-javascript\">Avatar</code>.</p>\n<p>Cette <em>inversion de contr\u00f4le</em> peut rendre votre code plus propre dans de nombreux cas en r\u00e9duisant le nombre de props que vous avez besoin de passer \u00e0 travers votre application et vous donne plus de contr\u00f4le sur les composants racines. Cependant, ce n\u2019est pas toujours la bonne approche\u00a0: d\u00e9placer la complexit\u00e9 vers le haut de l\u2019arborescence rend les composants des niveaux sup\u00e9rieurs plus compliqu\u00e9s et force les composants de plus bas niveau \u00e0 \u00eatre plus flexibles que vous pourriez le souhaiter.</p>\n<p>Vous n\u2019\u00eates pas limit\u00e9\u00b7e \u00e0 un unique enfant pour un composant. Vous pouvez passer plusieurs enfants, ou m\u00eame pr\u00e9voir dans votre JSX plusieurs emplacements s\u00e9par\u00e9s pour les enfants <a href=\"/react/composition-vs-inheritance#containment\">comme document\u00e9 ici</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feed</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> topBar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NavigationBar</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span>\n      <span class=\"token attr-name\">topBar</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>topBar<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">content</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce motif est suffisant pour les nombreux cas o\u00f9 vous avez besoin de d\u00e9coupler un enfant de ses parents directs. Vous pouvez aller encore plus loin avec les <a href=\"/react/render-props\">props de rendu</a> si l\u2019enfant a besoin de communiquer avec le parent avant de s\u2019afficher.</p>\n<p>Cependant, parfois les m\u00eames donn\u00e9es ont besoin d\u2019\u00eatre accessibles par de nombreux composants dans l\u2019arborescence, et \u00e0 diff\u00e9rents niveaux d\u2019imbrication. Le Contexte vous permet de \u00ab\u00a0diffuser\u00a0\u00bb ces donn\u00e9es, et leurs mises \u00e0 jour, \u00e0 tous les composants plus bas dans l\u2019arbre. Les exemples courants o\u00f9 l\u2019utilisation du Contexte apporte une simplification incluent la gestion des pr\u00e9f\u00e9rences r\u00e9gionales, du th\u00e8me ou d\u2019un cache de donn\u00e9es.</p>\n<h2 id=\"api\"><a class=\"anchor\" href=\"/react/context#api\"></a>API </h2>\n<h3 id=\"reactcreatecontext\"><a class=\"anchor\" href=\"/react/context#reactcreatecontext\"></a><code class=\"language-javascript\">React.createContext</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span>defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cr\u00e9e un objet Context. Lorsque React affiche un composant qui s\u2019abonne \u00e0 cet objet <code class=\"language-javascript\">Context</code>, il lira la valeur actuelle du contexte depuis le <code class=\"language-javascript\">Provider</code> le plus proche situ\u00e9 plus haut dans l\u2019arborescence.</p>\n<p>L\u2019argument <code class=\"language-javascript\">defaultValue</code> est <strong>uniquement</strong> utilis\u00e9 lorsqu\u2019un composant n\u2019a pas de <code class=\"language-javascript\">Provider</code> correspondant au-dessus de lui dans l\u2019arborescence. \u00c7a peut \u00eatre utile pour tester des composants de mani\u00e8re isol\u00e9e sans les enrober. Remarquez que passer <code class=\"language-javascript\">undefined</code> comme valeur au <code class=\"language-javascript\">Provider</code> n\u2019aboutit pas \u00e0 ce que les composants consommateurs utilisent <code class=\"language-javascript\">defaultValue</code>.</p>\n<h3 id=\"contextprovider\"><a class=\"anchor\" href=\"/react/context#contextprovider\"></a><code class=\"language-javascript\">Context.Provider</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* une valeur */</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Chaque objet Contexte est livr\u00e9 avec un composant React <code class=\"language-javascript\">Provider</code> qui permet aux composants consommateurs de s\u2019abonner aux mises \u00e0 jour du contexte.</p>\n<p>Il accepte une prop <code class=\"language-javascript\">value</code> \u00e0 transmettre aux composants consommateurs descendants de ce <code class=\"language-javascript\">Provider</code>(plus bas dans l\u2019arbre, donc). Un <code class=\"language-javascript\">Provider</code> peut \u00eatre connect\u00e9 \u00e0 plusieurs consommateurs. Les <code class=\"language-javascript\">Provider</code> peuvent \u00eatre imbriqu\u00e9s pour remplacer leur valeur plus profond\u00e9ment dans l\u2019arbre.</p>\n<p>Tous les consommateurs qui sont descendants d\u2019un <code class=\"language-javascript\">Provider</code> se rafra\u00eechiront lorsque la prop <code class=\"language-javascript\">value</code> du <code class=\"language-javascript\">Provider</code> change. La propagation du <code class=\"language-javascript\">Provider</code> vers ses consommateurs descendants (y compris <a href=\"/react/context#classcontexttype\"><code class=\"language-javascript\">.contextType</code></a> et <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a>) n\u2019est pas assujettie \u00e0 la m\u00e9thode <code class=\"language-javascript\">shouldComponentUpdate</code>, de sorte que le consommateur est mis \u00e0 jour m\u00eame lorsqu\u2019un composant anc\u00eatre saute sa mise \u00e0 jour.</p>\n<p>On d\u00e9termine si modification il y a en comparant les nouvelles et les anciennes valeurs avec le m\u00eame algorithme que <a href=\"//developer.mozilla.org/fr/react/Web/JavaScript/Reference/Objets_globaux/Object/is#Description\"><code class=\"language-javascript\">Object.is</code></a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>La mani\u00e8re dont les modifications sont d\u00e9termin\u00e9es peut provoquer des probl\u00e8mes lorsqu\u2019on passe des objets dans <code class=\"language-javascript\">value</code>\u00a0: voir les <a href=\"/react/context#caveats\">limitations</a>.</p>\n</div>\n<h3 id=\"classcontexttype\"><a class=\"anchor\" href=\"/react/context#classcontexttype\"></a><code class=\"language-javascript\">Class.contextType</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* produit un effet de bord au montage sur la valeur de MyContext */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* affiche quelque chose bas\u00e9 sur la valeur de MyContext */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nMyClass<span class=\"token punctuation\">.</span>contextType <span class=\"token operator\">=</span> MyContext<span class=\"token punctuation\">;</span></code></pre></div>\n<p>La propri\u00e9t\u00e9 <code class=\"language-javascript\">contextType</code> d\u2019une classe peut recevoir un objet Contexte cr\u00e9\u00e9 par <a href=\"/react/context#reactcreatecontext\"><code class=\"language-javascript\">React.createContext()</code></a>. \u00c7a vous permet de consommer la valeur la plus proche de ce Contexte en utilisant <code class=\"language-javascript\">this.context</code>. Vous pouvez la r\u00e9f\u00e9rencer dans toutes les m\u00e9thodes de cycle de vie, y compris la fonction de rendu.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous pouvez vous abonner \u00e0 un unique contexte en utilisant cette API. Si vous voulez lire plus d\u2019un contexte, voyez <a href=\"/react/context#consuming-multiple-contexts\">Consommer plusieurs contextes</a>.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">la syntaxe exp\u00e9rimentale des champs publics de classe</a>, vous pouvez utiliser un champ <strong>statique</strong>  de classe pour initialiser votre <code class=\"language-javascript\">contextType</code>.</p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> contextType <span class=\"token operator\">=</span> MyContext<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* Affiche quelque chose bas\u00e9 sur la valeur */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"contextconsumer\"><a class=\"anchor\" href=\"/react/context#contextconsumer\"></a><code class=\"language-javascript\">Context.Consumer</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=&gt;</span> <span class=\"token comment\">/* affiche quelque chose bas\u00e9 sur la valeur du contexte */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Un composant React qui s\u2019abonne aux modifications de contexte. \u00c7a permet de s\u2019abonner \u00e0 un contexte au sein d\u2019une <a href=\"/react/components-and-props#function-and-class-components\">fonction composant</a>.</p>\n<p>N\u00e9cessite une <a href=\"/react/render-props#using-props-other-than-render\">fonction enfant</a>. La fonction re\u00e7oit le contexte actuel et renvoie un n\u0153ud React. L\u2019argument <code class=\"language-javascript\">value</code> envoy\u00e9 \u00e0 la fonction sera \u00e9gal \u00e0 la prop <code class=\"language-javascript\">value</code> du <code class=\"language-javascript\">Provider</code> le plus proche (plus haut dans l\u2019arbre) pour le contexte en question. Si il n\u2019y pas de <code class=\"language-javascript\">Provider</code> pour le contexte voulu, l\u2019argument <code class=\"language-javascript\">value</code> sera \u00e9gal \u00e0 la <code class=\"language-javascript\">defaultValue</code> pass\u00e9e lors de son <code class=\"language-javascript\">createContext()</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Pour en apprendre davantage sur l\u2019approche \u00ab\u00a0fonction enfant\u00a0\u00bb, voyez les <a href=\"/react/render-props\">props de rendu</a>.</p>\n</div>\n<h3 id=\"contextdisplayname\"><a class=\"anchor\" href=\"/react/context#contextdisplayname\"></a><code class=\"language-javascript\">Context.displayName</code> </h3>\n<p>Les objets Contexte permettent une propri\u00e9t\u00e9 textuelle <code class=\"language-javascript\">displayName</code>.  Les Outils de d\u00e9veloppement React l\u2019utilisent pour d\u00e9terminer comment afficher le contexte.</p>\n<p>Par exemple, le composant ci-apr\u00e8s appara\u00eetra dans les Outils de d\u00e9veloppement en tant que MyDisplayName\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* une valeur */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">MyContext<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'MyDisplayName'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> // \"MyDisplayName.Provider\" dans les DevTools</span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> // \"MyDisplayName.Consumer\" dans les DevTools</span></code></pre></div>\n<h2 id=\"examples\"><a class=\"anchor\" href=\"/react/context#examples\"></a>Exemples </h2>\n<h3 id=\"dynamic-context\"><a class=\"anchor\" href=\"/react/context#dynamic-context\"></a>Contexte dynamique </h3>\n<p>Un exemple plus complexe avec des valeurs dynamiques pour le th\u00e8me\u00a0:</p>\n<p><strong>theme-context.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">'#000000'</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">'#eeeeee'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  dark<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">'#ffffff'</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">'#222222'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  themes<span class=\"token punctuation\">.</span>dark <span class=\"token comment\">// valeur par d\u00e9faut</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n</div></p>\n<p><strong>themed-button.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> props <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> theme <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>backgroundColor<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">ThemedButton<span class=\"token punctuation\">.</span>contextType <span class=\"token operator\">=</span> ThemeContext<span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ThemedButton<span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>app.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">,</span> themes<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ThemedButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./themed-button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Un composant interm\u00e9diaire qui utilise ThemedButton</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>changeTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Changer le th\u00e8me</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemedButton</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      theme<span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        theme<span class=\"token operator\">:</span>\n          state<span class=\"token punctuation\">.</span>theme <span class=\"token operator\">===</span> themes<span class=\"token punctuation\">.</span>dark\n            <span class=\"token operator\">?</span> themes<span class=\"token punctuation\">.</span>light\n            <span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Le bouton ThemedButton \u00e0 l'int\u00e9rieur du ThemeProvider</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// utilise le th\u00e8me de l\u2019\u00e9tat local tandis que celui \u00e0 l'ext\u00e9rieur</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// utilise le th\u00e8me dark par d\u00e9faut</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token attr-name\">changeTheme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleTheme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Section</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Section</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Page</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<h3 id=\"updating-context-from-a-nested-component\"><a class=\"anchor\" href=\"/react/context#updating-context-from-a-nested-component\"></a>Mettre \u00e0 jour le Contexte \u00e0 partir d\u2019un composant imbriqu\u00e9 </h3>\n<p>Il est souvent n\u00e9cessaire de mettre \u00e0 jour le contexte \u00e0 partir d\u2019un composant imbriqu\u00e9 profond\u00e9ment dans l\u2019arbre des composants. Dans un tel cas, vous pouvez passer une fonction \u00e0 travers le contexte qui permet aux consommateurs de le mettre \u00e0 jour\u00a0:</p>\n<p><strong>theme-context.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Assurez-vous que la forme de la valeur par d\u00e9faut pass\u00e9e \u00e0</span>\n<span class=\"token comment\">// createContext correspond \u00e0 la forme que les consommateurs attendent !</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  theme<span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">toggleTheme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>theme-toggler-button.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemeTogglerButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Le Theme Toggler Button re\u00e7oit non seulement le th\u00e8me</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// mais aussi une fonction toggleTheme du contexte</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">,</span> toggleTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleTheme<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>backgroundColor<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Changer le th\u00e8me</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ThemeTogglerButton<span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>app.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">,</span> themes<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ThemeTogglerButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-toggler-button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        theme<span class=\"token operator\">:</span>\n          state<span class=\"token punctuation\">.</span>theme <span class=\"token operator\">===</span> themes<span class=\"token punctuation\">.</span>dark\n            <span class=\"token operator\">?</span> themes<span class=\"token punctuation\">.</span>light\n            <span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// L\u2019\u00e9tat local contient aussi la fonction de mise \u00e0 jour donc elle va</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// \u00eatre pass\u00e9e au fournisseur de contexte</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      theme<span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      toggleTheme<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleTheme<span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// L\u2019\u00e9tat local entier est pass\u00e9 au fournisseur</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeTogglerButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<h3 id=\"consuming-multiple-contexts\"><a class=\"anchor\" href=\"/react/context#consuming-multiple-contexts\"></a>Consommer plusieurs Contextes </h3>\n<p>Pour conserver un rafra\u00eechissement rapide du contexte, React a besoin que chaque consommateur de contexte soit un n\u0153ud \u00e0 part dans l\u2019arborescence.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Contexte de th\u00e8me, clair par d\u00e9faut</span>\n<span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Contexte d\u2019utilisateur authentifi\u00e9</span>\n<span class=\"token keyword\">const</span> UserContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Invit\u00e9'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>signedInUser<span class=\"token punctuation\">,</span> theme<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Le composant App qui donne acc\u00e8s aux diff\u00e9rentes valeurs des contextes</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>signedInUser<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Sidebar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Un composant peut consommer plusieurs contextes</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">theme</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Si plusieurs valeurs de contexte sont souvent utilis\u00e9es ensemble, vous voudrez peut-\u00eatre cr\u00e9er votre propre composant avec prop de rendu qui fournira les deux.</p>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/context#caveats\"></a>Limitations </h2>\n<p>Dans la mesure o\u00f9 le contexte utilise une identit\u00e9 r\u00e9f\u00e9rentielle pour d\u00e9terminer quand se rafra\u00eechir, il y a des cas pi\u00e9geux qui peuvent d\u00e9clencher des rafra\u00eechissements involontaires pour les consommateurs lorsque le parent d\u2019un fournisseur se rafra\u00eechit. Par exemple, le code ci-dessous va rafra\u00eechir chaque consommateur, le <code class=\"language-javascript\">Provider</code> se rafra\u00eechissant lui-m\u00eame parce qu\u2019un nouvel objet est cr\u00e9\u00e9 \u00e0 chaque fois pour <code class=\"language-javascript\">value</code>\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>something<span class=\"token operator\">:</span> <span class=\"token string\">'quelque chose'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Pour contourner ce probl\u00e8me, placez la valeur dans l\u2019\u00e9tat du parent\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>something<span class=\"token operator\">:</span> <span class=\"token string\">'quelque chose'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"legacy-api\"><a class=\"anchor\" href=\"/react/context#legacy-api\"></a>API historique </h2>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React fournissait auparavant une API de contextes exp\u00e9rimentale. L\u2019ancienne API restera prise en charge par toutes les versions 16.x, mais les applications qui l\u2019utilisent devraient migrer vers la nouvelle version. L\u2019API historique sera supprim\u00e9e dans une future version majeure de React. Lisez la <a href=\"/react/legacy-context\">documentation sur l\u2019API historique de contexte ici</a>.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/context.md\">Edit this page</a></p></div></article>", "path": "/react/context", "nav": ["/react/code-splitting", "/react/error-boundaries"]}, {"key": "P\u00e9rim\u00e8tres d\u2019erreurs", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Auparavant, les erreurs JavaScript au sein des composants avaient l\u2019habitude de corrompre l\u2019\u00e9tat interne de React, et de causer des <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/4026\">erreurs</a> <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6895\">assez</a> <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/8579\">incompr\u00e9hensibles</a> lors des rendus suivants. Ces erreurs \u00e9taient toujours caus\u00e9es par une erreur ant\u00e9rieure dans le code applicatif et comme React ne proposait alors aucun moyen de les g\u00e9rer correctement dans les composants, il n\u2019avait pas la possibilit\u00e9 de se r\u00e9tablir.</p>\n<h2 id=\"introducing-error-boundaries\"><a class=\"anchor\" href=\"/react/error-boundaries#introducing-error-boundaries\"></a>L\u2019arriv\u00e9e des p\u00e9rim\u00e8tres d\u2019erreurs </h2>\n<p>Une erreur JavaScript au sein d\u2019une partie de l\u2019interface utilisateur (UI) ne devrait pas casser l\u2019ensemble de l\u2019application. Pour r\u00e9soudre ce probl\u00e8me, React 16 a introduit un nouveau concept appel\u00e9 \u00ab\u00a0P\u00e9rim\u00e8tres d\u2019erreurs\u00a0\u00bb <em>(Error Boundaries, NdT)</em>.</p>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs sont des composants React qui <strong>interceptent les erreurs JavaScript n\u2019importe o\u00f9 au sein de leur arbre de composants enfants, enregistrent ces erreurs, et affichent une UI de repli</strong> \u00e0 la place de l\u2019arbre de composants qui a plant\u00e9. Les p\u00e9rim\u00e8tres d\u2019erreurs interceptent les erreurs survenant au rendu, dans les m\u00e9thodes de cycle de vie, ainsi que dans les constructeurs de tous les \u00e9l\u00e9ments de leur arborescence.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs n\u2019interceptent <strong>pas</strong> les erreurs qui surviennent dans\u00a0:</p>\n<ul>\n<li>Les gestionnaires d\u2019\u00e9v\u00e9nements (<a href=\"/react/error-boundaries#how-about-event-handlers\">en savoir plus</a>).</li>\n<li>Le code asynchrone (par exemple les fonctions de rappel de <code class=\"language-javascript\">setTimeout</code> ou <code class=\"language-javascript\">requestAnimationFrame</code>).</li>\n<li>Le rendu c\u00f4t\u00e9 serveur.</li>\n<li>Les erreurs lev\u00e9es dans le composant du p\u00e9rim\u00e8tre d\u2019erreur lui-m\u00eame (plut\u00f4t qu\u2019au sein de ses enfants).</li>\n</ul>\n</div>\n<p>Une classe de composant devient un p\u00e9rim\u00e8tre d\u2019erreur si elle d\u00e9finit au moins une des m\u00e9thodes de cycle de vie <a href=\"/react/react-component#static-getderivedstatefromerror\"><code class=\"language-javascript\">static getDerivedStateFromError()</code></a> ou <a href=\"/react/react-component#componentdidcatch\"><code class=\"language-javascript\">componentDidCatch()</code></a>. Utilisez <code class=\"language-javascript\">static getDerivedStateFromError()</code> pour afficher une UI de repli lorsqu\u2019une erreur est lev\u00e9e. Utilisez <code class=\"language-javascript\">componentDidCatch()</code> pour enregistrer les informations relatives \u00e0 l\u2019erreur.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Mettez \u00e0 jour l'\u00e9tat, de fa\u00e7on \u00e0 montrer l'UI de repli au prochain rendu.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> errorInfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Vous pouvez aussi enregistrer l'erreur au sein d'un service de rapport.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">logErrorToMyService</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> errorInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Vous pouvez afficher n'importe quelle UI de repli.</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Something went wrong.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez alors l\u2019utiliser comme un composant classique\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyWidget</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs fonctionnent comme un bloc JavaScript <code class=\"language-javascript\">catch {}</code>, mais pour les composants. Seuls les composants \u00e0 base de classe peuvent \u00eatre des p\u00e9rim\u00e8tres d\u2019erreurs. En pratique, vous voudrez g\u00e9n\u00e9ralement d\u00e9finir un seul composant de p\u00e9rim\u00e8tre d\u2019erreur puis l\u2019utiliser partout dans votre application.</p>\n<p>Notez bien que <strong>les p\u00e9rim\u00e8tres d\u2019erreurs ne d\u00e9tectent que les erreurs pr\u00e9sentes en dessous d\u2019eux dans l\u2019arbre des composants</strong>. Un p\u00e9rim\u00e8tre d\u2019erreur ne peut intercepter une erreur survenant dans son propre code. Si un p\u00e9rim\u00e8tre d\u2019erreur plante en tentant d\u2019afficher son message d\u2019erreur, l\u2019erreur se propagera alors au p\u00e9rim\u00e8tre d\u2019erreur le plus proche au-dessus de lui dans l\u2019arbre. L\u00e0 aussi, c\u2019est similaire \u00e0 la fa\u00e7on dont le bloc <code class=\"language-javascript\">catch {}</code> fonctionne en JavaScript.</p>\n<h2 id=\"live-demo\"><a class=\"anchor\" href=\"/react/error-boundaries#live-demo\"></a>D\u00e9monstration interactive </h2>\n<p>Jetez un coup d\u2019\u0153il sur <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/wqvxGa?editors=0010\">cet exemple de d\u00e9claration et d\u2019utilisation d\u2019un p\u00e9rim\u00e8tre d\u2019erreur</a> avec <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/09/26/react-v16.0.html\">React 16</a>.</p>\n<h2 id=\"where-to-place-error-boundaries\"><a class=\"anchor\" href=\"/react/error-boundaries#where-to-place-error-boundaries\"></a>O\u00f9 placer les p\u00e9rim\u00e8tres d\u2019erreurs\u00a0? </h2>\n<p>La granularit\u00e9 des p\u00e9rim\u00e8tres d\u2019erreurs est \u00e0 votre discr\u00e9tion. Vous pourriez enrober les composants racines de routage pour afficher \u00e0 l\u2019utilisateur un message du type \u00ab\u00a0Quelque chose s\u2019est mal pass\u00e9\u00a0\u00bb, \u00e0 l\u2019image de ce qui est souvent fait par les frameworks c\u00f4t\u00e9 serveur. Vous pourriez aussi enrober des \u00e9l\u00e9ments d\u2019interface pr\u00e9cis avec un p\u00e9rim\u00e8tre d\u2019erreur afin de les emp\u00eacher de planter le reste de l\u2019application.</p>\n<h2 id=\"new-behavior-for-uncaught-errors\"><a class=\"anchor\" href=\"/react/error-boundaries#new-behavior-for-uncaught-errors\"></a>Nouveau comportement pour les erreurs non-rattrap\u00e9es </h2>\n<p>Ce changement a un impact important. <strong>\u00c0 compter de React 16, les erreurs qui ne sont pas intercept\u00e9es par un p\u00e9rim\u00e8tre d\u2019erreur entra\u00eeneront le d\u00e9montage de l\u2019int\u00e9gralit\u00e9 de l\u2019arbre des composants</strong>.</p>\n<p>Cette d\u00e9cision a \u00e9t\u00e9 d\u00e9battue, mais l\u2019exp\u00e9rience nous a montr\u00e9 qu\u2019il est bien pire de laisser en place une interface corrompue que de la supprimer compl\u00e8tement. Par exemple, dans un produit tel que Messenger, laisser visible une interface d\u00e9grad\u00e9e peut amener l\u2019utilisateur \u00e0 envoyer un message \u00e0 la mauvaise personne. De la m\u00eame fa\u00e7on, pour une application de paiement, afficher un mauvais montant est bien pire que de ne rien afficher du tout.</p>\n<p>Cette modification signifie que lorsque vous migrez vers React 16, vous d\u00e9couvrirez probablement des plantages dans votre application qui \u00e9taient jusque-l\u00e0 pass\u00e9s inaper\u00e7us. L\u2019ajout de p\u00e9rim\u00e8tres d\u2019erreurs permet d\u2019offrir une meilleure exp\u00e9rience utilisateur en cas de probl\u00e8me.</p>\n<p>Par exemple, Facebook Messanger enrobe le contenu de la barre lat\u00e9rale, du panneau d\u2019information, du journal de conversation, ainsi que de la saisie de message dans des p\u00e9rim\u00e8tres d\u2019erreurs distincts. Si l\u2019un des composants de ces zones d\u2019interface plante, les autres continueront de fonctionner normalement.</p>\n<p>Nous vous encourageons \u00e9galement \u00e0 utiliser des services de rapport d\u2019erreurs JavaScript (ou \u00e0 construire le v\u00f4tre) afin de mieux conna\u00eetre les exceptions non g\u00e9r\u00e9es d\u00e8s qu\u2019elles apparaissent en production, et donc de pouvoir les corriger.</p>\n<h2 id=\"component-stack-traces\"><a class=\"anchor\" href=\"/react/error-boundaries#component-stack-traces\"></a>Traces de piles des composants </h2>\n<p>En mode d\u00e9veloppement, React 16 affiche dans la console toutes les erreurs qui apparaissent durant le rendu, m\u00eame si l\u2019application les cache accidentellement. En plus du message d\u2019erreur et de la trace de pile <em>(stack trace, NdT)</em> JavaScript, il fournit \u00e9galement la trace de pile du composant. Vous pouvez d\u00e9sormais voir exactement o\u00f9 l\u2019erreur est apparue dans l\u2019arbre des composants\u00a0:</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/f1276837b03821b43358d44c14072945/c3a47/error-boundaries-stack-trace.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/f1276837b03821b43358d44c14072945/1e088/error-boundaries-stack-trace.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>Vous pouvez \u00e9galement voir les noms des fichiers et les num\u00e9ros de lignes dans la trace de pile du composant. C\u2019est le fonctionnement par d\u00e9faut pour les projets cr\u00e9\u00e9s avec <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a>\u00a0:</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/45611d4fdbd152829b28ae2348d6dcba/6dd26/error-boundaries-stack-trace-line-numbers.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/45611d4fdbd152829b28ae2348d6dcba/1e088/error-boundaries-stack-trace-line-numbers.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>Si vous n\u2019utilisez pas Create React App, vous pouvez ajouter <a class=\"external-link\" href=\"https://www.npmjs.com/package/@babel/plugin-transform-react-jsx-source\">cette extension</a> manuellement dans votre configuration Babel. Remarquez que c\u2019est con\u00e7u pour le d\u00e9veloppement et <strong>ne doit pas \u00eatre activ\u00e9 en production</strong>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les noms des composants affich\u00e9s dans la trace de pile d\u00e9pendent de la propri\u00e9t\u00e9 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Function/name\"><code class=\"language-javascript\">Function.name</code></a>. Si vous devez prendre en charge des navigateurs ou des dispositifs plus anciens qui ne proposent pas \u00e7a nativement (par exemple IE\u00a011), vous pouvez envisager d\u2019inclure le polyfill <a class=\"external-link\" href=\"https://github.com/JamesMGreene/Function.name\"><code class=\"language-javascript\">function.name-polyfill</code></a> dans votre application. Autrement, vous pouvez \u00e9galement d\u00e9finir explicitement la propri\u00e9t\u00e9 <a href=\"/react/react-component#displayname\"><code class=\"language-javascript\">displayName</code></a> sur tous vos composants.</p>\n</div>\n<h2 id=\"how-about-trycatch\"><a class=\"anchor\" href=\"/react/error-boundaries#how-about-trycatch\"></a>Et pourquoi pas try / catch\u00a0? </h2>\n<p>Les <code class=\"language-javascript\">try</code> / <code class=\"language-javascript\">catch</code> sont super, mais ne marchent qu\u2019avec du code imp\u00e9ratif\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">showButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mais les composants React sont d\u00e9claratifs et sp\u00e9cifient <em>ce qui</em> doit \u00eatre rendu\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs respectent la nature d\u00e9clarative de React, et se comportent sans surprises. Par exemple, m\u00eame si une erreur survient dans une m\u00e9thode <code class=\"language-javascript\">componentDidUpdate</code> suite \u00e0 un <code class=\"language-javascript\">setState</code> quelque part au fin fond de l\u2019arbre des composants, elle se propagera correctement jusqu\u2019au p\u00e9rim\u00e8tre d\u2019erreur le plus proche.</p>\n<h2 id=\"how-about-event-handlers\"><a class=\"anchor\" href=\"/react/error-boundaries#how-about-event-handlers\"></a>Et les gestionnaires d\u2019\u00e9v\u00e9nements\u00a0? </h2>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs n\u2019interceptent <strong>pas</strong> les erreurs qui surviennent au sein des gestionnaires d\u2019\u00e9v\u00e9nements.</p>\n<p>React n\u2019a pas besoin de p\u00e9rim\u00e8tres d\u2019erreurs pour g\u00e9rer les erreurs dans les gestionnaires d\u2019\u00e9v\u00e9nements. Contrairement aux m\u00e9thodes de rendu ou de cycle de vie, les gestionnaires d\u2019\u00e9v\u00e9nements ne sont pas appel\u00e9s pendant le rendu. Du coup m\u00eame si ces gestionnaires l\u00e8vent une erreur, React saura tout de m\u00eame quoi afficher \u00e0 l\u2019\u00e9cran.</p>\n<p>Si vous avez besoin d\u2019intercepter une erreur au sein d\u2019un gestionnaire d\u2019\u00e9v\u00e9nements, il suffit d\u2019utiliser un classique <code class=\"language-javascript\">try</code> / <code class=\"language-javascript\">catch</code> JavaScript\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> error<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Faites ici quelque chose qui va lever une erreur</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Une erreur a \u00e9t\u00e9 intercept\u00e9e.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez que l\u2019exemple ci-dessus illustre un comportement JavaScript classique et n\u2019utilise aucun p\u00e9rim\u00e8tre d\u2019erreur.</p>\n<h2 id=\"naming-changes-from-react-15\"><a class=\"anchor\" href=\"/react/error-boundaries#naming-changes-from-react-15\"></a>Changements de nommage par rapport \u00e0 React 15 </h2>\n<p>React 15 disposait d\u2019une prise en charge tr\u00e8s limit\u00e9e des p\u00e9rim\u00e8tres d\u2019erreurs sous un nom de m\u00e9thode diff\u00e9rent\u00a0: <code class=\"language-javascript\">unstable_handleError</code>. Cette m\u00e9thode ne fonctionne plus, et vous devrez la remplacer par <code class=\"language-javascript\">componentDidCatch</code> dans votre code \u00e0 partir de la premi\u00e8re version b\u00eata de React 16.</p>\n<p>Pour ce changement, nous fournissons un <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#error-boundaries\">codemod</a> qui vous permet de migrer automatiquement votre code.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/error-boundaries.md\">Edit this page</a></p></div></article>", "path": "/react/error-boundaries", "nav": ["/react/context", "/react/forwarding-refs"]}, {"key": "Transfert de refs", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Le transfert de ref est une technique permettant de d\u00e9l\u00e9guer automatiquement une <a href=\"/react/refs-and-the-dom\">ref</a> d\u2019un composant \u00e0 l\u2019un de ses enfants. \u00c7a n\u2019est g\u00e9n\u00e9ralement pas n\u00e9cessaire pour la plupart des composants dans une application. Cependant, \u00e7a peut \u00eatre utile pour certains types de composants, particuli\u00e8rement dans les biblioth\u00e8ques de composants r\u00e9utilisables. Les sc\u00e9narios les plus fr\u00e9quents sont d\u00e9crits ci-dessous.</p>\n<h2 id=\"forwarding-refs-to-dom-components\"><a class=\"anchor\" href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\"></a>Transfert de refs vers des composants du DOM </h2>\n<p>Prenons un composant <code class=\"language-javascript\">FancyButton</code> qui affiche l\u2019\u00e9l\u00e9ment DOM natif <code class=\"language-javascript\">button</code>\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Les composants React masquent leurs d\u00e9tails d\u2019impl\u00e9mentation, y compris leur rendu.\nLes autres composants utilisant <code class=\"language-javascript\">FancyButton</code> <strong>n\u2019auront g\u00e9n\u00e9ralement pas besoin</strong> <a href=\"/react/refs-and-the-dom\">d\u2019obtenir une ref</a> sur l\u2019\u00e9l\u00e9ment DOM interne <code class=\"language-javascript\">button</code>. C\u2019est une bonne chose, car \u00e7a emp\u00eache les composants de trop s\u2019appuyer sur la structure DOM les uns et des autres.</p>\n<p>Bien qu\u2019une telle encapsulation soit souhaitable pour les composants applicatifs tels que <code class=\"language-javascript\">FeedStory</code> ou <code class=\"language-javascript\">Comment</code>, elle peut \u00eatre g\u00eanante pour les composants hautement r\u00e9utilisables, tels que <code class=\"language-javascript\">FancyButton</code> ou <code class=\"language-javascript\">MyTextInput</code>. Ces composants ont tendance \u00e0 \u00eatre utilis\u00e9s un peu partout dans l\u2019application de mani\u00e8re similaire \u00e0 un <code class=\"language-javascript\">button</code> ou un <code class=\"language-javascript\">input</code>, et l\u2019acc\u00e8s \u00e0 leurs n\u0153uds DOM peut s\u2019av\u00e9rer n\u00e9cessaire pour la gestion du focus, de la s\u00e9lection ou des animations.</p>\n<p><strong>Le transfert de ref est une fonctionnalit\u00e9 optionnelle qui permet \u00e0 certains composants de prendre une <code class=\"language-javascript\">ref</code> qu\u2019ils re\u00e7oivent et de la passer plus bas dans l\u2019arbre (en d\u2019autres termes, la \u00ab\u00a0transf\u00e9rer\u00a0\u00bb) \u00e0 un composant enfant.</strong></p>\n<p>Dans l\u2019exemple ci-dessous, <code class=\"language-javascript\">FancyButton</code> utilise <code class=\"language-javascript\">React.forwardRef</code> pour obtenir la <code class=\"language-javascript\">ref</code> qui lui est pass\u00e9e, puis la transf\u00e8re au <code class=\"language-javascript\">button</code> DOM qu\u2019il affiche\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> FancyButton <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Vous pouvez maintenant obtenir une ref directement attach\u00e9e au bouton DOM :</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyButton</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>De cette fa\u00e7on, les composants utilisant <code class=\"language-javascript\">FancyButton</code> peuvent obtenir une ref sur le n\u0153ud DOM <code class=\"language-javascript\">button</code> sous-jacent et y acc\u00e9der si n\u00e9cessaire, comme s\u2019ils utilisaient directement un <code class=\"language-javascript\">button</code> DOM.</p>\n<p>Voici une explication \u00e9tape par \u00e9tape de ce qui se passe dans l\u2019exemple ci-dessus\u00a0:</p>\n<ol>\n<li>Nous cr\u00e9ons une <a href=\"/react/refs-and-the-dom\">ref React</a> en appelant <code class=\"language-javascript\">React.createRef</code> et l\u2019affectons \u00e0 une variable <code class=\"language-javascript\">ref</code>.</li>\n<li>Nous passons notre <code class=\"language-javascript\">ref</code> \u00e0 <code class=\"language-javascript\">&lt;FancyButton ref={ref}&gt;</code> en la sp\u00e9cifiant comme un attribut JSX.</li>\n<li>React transmet la <code class=\"language-javascript\">ref</code> \u00e0 la fonction <code class=\"language-javascript\">(props, ref) =&gt; ...</code> \u00e0 l\u2019int\u00e9rieur de <code class=\"language-javascript\">forwardRef</code> comme deuxi\u00e8me argument.</li>\n<li>Nous transf\u00e9rons cet argument <code class=\"language-javascript\">ref</code> au <code class=\"language-javascript\">&lt;button ref={ref}&gt;</code> en le sp\u00e9cifiant comme un attribut JSX.</li>\n<li>Quand la ref est li\u00e9e, <code class=\"language-javascript\">ref.current</code> pointera vers le n\u0153ud DOM <code class=\"language-javascript\">button</code>.</li>\n</ol>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le second argument <code class=\"language-javascript\">ref</code> n\u2019existe que quand vous d\u00e9finissez un composant avec l\u2019appel \u00e0 <code class=\"language-javascript\">React.forwardRef</code>. Les fonctions composants habituelles et les composants \u00e0 base de classes ne re\u00e7oivent pas l\u2019argument <code class=\"language-javascript\">ref</code>, et la ref n\u2019est pas non plus disponible dans les props du composant.</p>\n<p>Le transfert de refs n\u2019est pas limit\u00e9 aux composants DOM. Vous pouvez aussi transf\u00e9rer des refs vers des instances de classe de composant.</p>\n</div>\n<h2 id=\"note-for-component-library-maintainers\"><a class=\"anchor\" href=\"/react/forwarding-refs#note-for-component-library-maintainers\"></a>Note pour les mainteneurs de biblioth\u00e8ques de composants </h2>\n<p><strong>Lorsque vous commencez \u00e0 utiliser <code class=\"language-javascript\">forwardRef</code> dans une biblioth\u00e8que de composants, vous devez le traiter comme une rupture de compatibilit\u00e9 ascendante et publier une nouvelle version majeure de votre biblioth\u00e8que.</strong> En effet, votre biblioth\u00e8que a probablement un comportement diff\u00e9rent (par exemple la cible d\u2019affectation des refs et la nature des types export\u00e9s), et \u00e7a pourrait casser les applications et autres biblioth\u00e8ques qui d\u00e9pendent de l\u2019ancien comportement.</p>\n<p>L\u2019application conditionnelle de <code class=\"language-javascript\">React.forwardRef</code> lorsqu\u2019elle existe est \u00e9galement d\u00e9conseill\u00e9e pour les m\u00eames raisons\u00a0: \u00e7a modifie le comportement de votre biblioth\u00e8que et pourrait casser les applications de vos utilisateurs lorsqu\u2019ils mettent \u00e0 jour React.</p>\n<h2 id=\"forwarding-refs-in-higher-order-components\"><a class=\"anchor\" href=\"/react/forwarding-refs#forwarding-refs-in-higher-order-components\"></a>Transfert des refs dans les composants d\u2019ordre sup\u00e9rieur </h2>\n<p>Cette technique peut aussi \u00eatre particuli\u00e8rement utile avec les <a href=\"/react/higher-order-components\">composants d\u2019ordre sup\u00e9rieur</a> <em>(Higher-Order Components ou HOC, NdT)</em>. Commen\u00e7ons par un exemple de HOC qui journalise les props du composant dans la console\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Anciennes props :'</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Nouvelles props :'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> LogProps<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Le HOC <code class=\"language-javascript\">logProps</code> transmet toutes les <code class=\"language-javascript\">props</code> au composant qu\u2019il enrobe, ainsi le r\u00e9sultat affich\u00e9 sera la m\u00eame. Par exemple, nous pouvons utiliser ce HOC pour lister toutes les props transmises \u00e0 notre composant <em>fancy button</em>\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FancyButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Plut\u00f4t que d'exporter FancyButton, nous exportons LogProps.</span>\n<span class=\"token comment\">// Cependant, \u00e7a affichera tout de m\u00eame un FancyButton.</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span>FancyButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n</div></p>\n<p>Il y a une limitation dans l\u2019exemple ci-dessus\u00a0: les refs ne seront pas transf\u00e9r\u00e9es. C\u2019est parce que <code class=\"language-javascript\">ref</code> n\u2019est pas une prop. Comme <code class=\"language-javascript\">key</code>, elle est g\u00e9r\u00e9e diff\u00e9remment par React. Si vous ajoutez une ref \u00e0 un HOC, la ref fera r\u00e9f\u00e9rence au composant conteneur ext\u00e9rieur, et non au composant enrob\u00e9.</p>\n<p>\u00c7a signifie que les refs destin\u00e9es \u00e0 notre composant <code class=\"language-javascript\">FancyButton</code> seront en r\u00e9alit\u00e9 attach\u00e9es au composant <code class=\"language-javascript\">LogProps</code>\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> FancyButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./FancyButton'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token comment\">// Le composant FancyButton que nous avons import\u00e9 est le HOC LogProps.  M\u00eame si</span>\n<span class=\"token comment\">// l\u2019affichage sera le m\u00eame, notre ref visera LogProps au lieu du composant</span>\n<span class=\"token comment\">// FancyButton !  \u00c7a signifie par exemple que nous ne pouvons pas appeler</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span>\n  <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Cliquez ici<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">handleClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Heureusement, nous pouvons explicitement transf\u00e9rer les refs au composant <code class=\"language-javascript\">FancyButton</code> interne \u00e0 l\u2019aide de l\u2019API <code class=\"language-javascript\">React.forwardRef</code>. Celle-ci accepte une fonction de rendu qui re\u00e7oit les arguments <code class=\"language-javascript\">props</code> et <code class=\"language-javascript\">ref</code> et renvoie un n\u0153ud React. Par exemple\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Anciennes props :'</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Nouvelles props :'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>forwardedRef<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span></span>\n      <span class=\"token comment\">// Affecte la prop personnalis\u00e9e \"forwardedRef\" en tant que ref</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>forwardedRef<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Remarquez le deuxi\u00e8me param\u00e8tre `ref` fourni par `React.forwardRef`.  Nous</span>\n  <span class=\"token comment\">// pouvons le passer \u00e0 LogProps comme une prop normale, par exemple</span>\n  <span class=\"token comment\">// `forwardedRef`. Et il peut ensuite \u00eatre attach\u00e9 au composant.</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"displaying-a-custom-name-in-devtools\"><a class=\"anchor\" href=\"/react/forwarding-refs#displaying-a-custom-name-in-devtools\"></a>Affichage d\u2019un nom personnalis\u00e9 dans les DevTools </h2>\n<p><code class=\"language-javascript\">React.forwardRef</code> accepte une fonction de rendu. Les outils de d\u00e9veloppement React <em>(React DevTools, NdT)</em> utilisent cette fonction pour d\u00e9terminer quoi afficher pour le composant de transfert de ref.</p>\n<p>Par exemple, le composant suivant appara\u00eetra sous le nom \u201d<em>ForwardRef</em>\u201d dans les DevTools\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Si vous nommez la fonction de rendu, les DevTools incluront \u00e9galement son nom (par exemple, \u201d<em>ForwardRef(myFunction)</em>\u201d)\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Vous pouvez m\u00eame d\u00e9finir la propri\u00e9t\u00e9 <code class=\"language-javascript\">displayName</code> de la fonction pour y inclure le composant que vous enrobez\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Donne \u00e0 ce composant un nom d\u2019affichage plus utile dans les DevTools.</span>\n  <span class=\"token comment\">// exemple : \"ForwardRef(logProps(MyComponent))\"</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> Component<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">||</span> Component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  forwardRef<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">logProps(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>forwardRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/forwarding-refs.md\">Edit this page</a></p></div></article>", "path": "/react/forwarding-refs", "nav": ["/react/error-boundaries", "/react/fragments"]}, {"key": "Fragments", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>En React, il est courant pour un composant de renvoyer plusieurs \u00e9l\u00e9ments. Les fragments nous permettent de grouper une liste d\u2019enfants sans ajouter de n\u0153ud suppl\u00e9mentaire au DOM.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildA</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildB</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildC</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il existe aussi une nouvelle <a href=\"/react/fragments#short-syntax\">syntaxe concise</a> pour les d\u00e9clarer.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/fragments#motivation\"></a>Motivation </h2>\n<p>Il est courant qu\u2019un composant renvoie une liste d\u2019enfants. Prenez cette exemple de bout de code React\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Table</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Columns</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">&lt;Columns /&gt;</code> aurait besoin de renvoyer plusieurs \u00e9l\u00e9ments <code class=\"language-javascript\">&lt;td&gt;</code> pour que le HTML obtenu soit valide. Mais si une div parente \u00e9tait utilis\u00e9e dans le <code class=\"language-javascript\">render()</code> de <code class=\"language-javascript\">&lt;Columns /&gt;</code>, alors le HTML r\u00e9sultat serait invalide.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce code donne en sortie le <code class=\"language-javascript\">&lt;Table /&gt;</code> suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Les fragments r\u00e9solvent ce probl\u00e8me.</p>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/fragments#usage\"></a>Usage </h2>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce qui donne en sortie le <code class=\"language-javascript\">&lt;Table /&gt;</code> correct suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h3 id=\"short-syntax\"><a class=\"anchor\" href=\"/react/fragments#short-syntax\"></a>Syntaxe concise </h3>\n<p>Il existe une nouvelle syntaxe plus concise, que vous pouvez utiliser pour d\u00e9clarer des fragments. \u00c7a ressemble \u00e0 des balises vides\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez utiliser <code class=\"language-javascript\">&lt;&gt;\u2026&lt;/&gt;</code> de la m\u00eame mani\u00e8re que n\u2019importe quel \u00e9l\u00e9ment, \u00e0 ceci pr\u00e8s que cette syntaxe n\u2019accepte ni cl\u00e9s ni attributs.</p>\n<h3 id=\"keyed-fragments\"><a class=\"anchor\" href=\"/react/fragments#keyed-fragments\"></a>Les fragments \u00e0 cl\u00e9 </h3>\n<p>Les fragments d\u00e9clar\u00e9s explicitement avec la syntaxe <code class=\"language-javascript\">&lt;React.Fragment&gt;</code> peuvent avoir des cl\u00e9s <em>(key, NdT)</em>. Un cas d\u2019utilisation consisterait \u00e0 faire correspondre une collection \u00e0 un tableau de fragments\u2014par exemple pour cr\u00e9er une liste de descriptions\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token comment\">// Sans la `key`, React produira un avertissement sp\u00e9cifique</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">key</code> est le seul attribut qui peut \u00eatre pass\u00e9 \u00e0 <code class=\"language-javascript\">Fragment</code>. \u00c0 l\u2019avenir, nous prendrons peut-\u00eatre en charge des attributs suppl\u00e9mentaires, tels que des gestionnaires d\u2019\u00e9v\u00e9nements\u00a0.</p>\n<h3 id=\"live-demo\"><a class=\"anchor\" href=\"/react/fragments#live-demo\"></a>D\u00e9mo interactive </h3>\n<p>Vous pouvez essayer la nouvelle syntaxe JSX de fragment avec ce <a class=\"external-link\" href=\"https://codepen.io/reactjs/pen/VrEbjE?editors=1000\">CodePen</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/fragments.md\">Edit this page</a></p></div></article>", "path": "/react/fragments", "nav": ["/react/forwarding-refs", "/react/higher-order-components"]}, {"key": "Composants d\u2019ordre sup\u00e9rieur", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Un composant d\u2019ordre sup\u00e9rieur <em>(Higher-Order Component ou HOC, NdT)</em> est une technique avanc\u00e9e de React qui permet de r\u00e9utiliser la logique de composants. Les HOC ne font pas partie de l\u2019API de React \u00e0 proprement parler, mais d\u00e9coulent de sa nature compositionnelle.</p>\n<p>Concr\u00e8tement, <strong>un composant d\u2019ordre sup\u00e9rieur est une fonction qui accepte un composant et renvoie un nouveau composant.</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">higherOrderComponent</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>L\u00e0 o\u00f9 un composant transforme des props en interface utilisateur (UI), un composant d\u2019ordre sup\u00e9rieur transforme un composant en un autre composant.</p>\n<p>Les HOC sont courants dans des biblioth\u00e8ques tierces de React, comme <a class=\"external-link\" href=\"https://github.com/reduxjs/react-redux/blob/master/docs/api/connect.md#connect\"><code class=\"language-javascript\">connect</code></a> dans Redux et <a class=\"external-link\" href=\"http://facebook.github.io/relay/docs/en/fragment-container.html\"><code class=\"language-javascript\">createFragmentContainer</code></a> dans Relay.</p>\n<p>Dans ce guide, nous verrons pourquoi les composants d\u2019ordre sup\u00e9rieurs sont utiles, et comment cr\u00e9er le v\u00f4tre.</p>\n<h2 id=\"use-hocs-for-cross-cutting-concerns\"><a class=\"anchor\" href=\"/react/higher-order-components#use-hocs-for-cross-cutting-concerns\"></a>Utiliser les HOC pour les questions transversales </h2>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Auparavant, nous recommandions d\u2019employer des <em>mixins</em> pour g\u00e9rer les questions transversales. Depuis, nous nous sommes rendus compte que les <em>mixins</em> cr\u00e9ent plus de probl\u00e8mes qu\u2019ils n\u2019en r\u00e9solvent. Vous pouvez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">lire le d\u00e9tail</a> des raisons qui nous ont fait renoncer aux <em>mixins</em>, et de la fa\u00e7on dont vous pouvez faire de m\u00eame pour vos composants existants.</p>\n</div>\n<p>Les composants sont le principal moyen de r\u00e9utiliser du code en React. Cependant, vous remarquerez que les composants classiques ne conviennent pas \u00e0 tous les mod\u00e8les.</p>\n<p>Imaginez que vous ayez cr\u00e9\u00e9 un composant <code class=\"language-javascript\">CommentList</code> qui s\u2019abonne \u00e0 une source externe de donn\u00e9es pour afficher une liste de commentaires\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CommentList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// `DataSource` est une source de donn\u00e9es quelconque</span>\n      comments<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// On s\u2019abonne aux modifications</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// On se d\u00e9sabonne</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Met \u00e0 jour l\u2019\u00e9tat local quand la source de donn\u00e9es est modifi\u00e9e</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      comments<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comment</span></span> <span class=\"token attr-name\">comment</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Plus tard, vous cr\u00e9ez un composant <code class=\"language-javascript\">BlogPost</code> qui s\u2019abonne \u00e0 un unique article, et dont la structure est similaire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPost</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      blogPost<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      blogPost<span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextBlock</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>blogPost<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">CommentList</code> et <code class=\"language-javascript\">BlogPost</code> ne sont pas identiques\u00a0: ils appellent des m\u00e9thodes diff\u00e9rentes sur <code class=\"language-javascript\">DataSource</code>, et ont des affichages distincts. Pourtant une grande partie de leur impl\u00e9mentation est la m\u00eame\u00a0:</p>\n<ul>\n<li>Au montage <em>(quand le composant entre dans la couche d\u2019affichage, NdT)</em>, ils ajoutent un \u00e9couteur d\u2019\u00e9v\u00e9nements \u00e0 <code class=\"language-javascript\">DataSource</code>.</li>\n<li>Dans l\u2019\u00e9couteur, ils appellent <code class=\"language-javascript\">setState</code> quand la source de donn\u00e9es est modifi\u00e9e.</li>\n<li>Au d\u00e9montage <em>(quand le composant sort de la couche d\u2019affichage, NdT)</em>, ils enl\u00e8vent l\u2019\u00e9couteur d\u2019\u00e9v\u00e9nements.</li>\n</ul>\n<p>Vous imaginez bien que dans une appli importante, ce motif d\u2019abonnement \u00e0 une <code class=\"language-javascript\">DataSource</code> et d\u2019appel \u00e0 <code class=\"language-javascript\">setState</code> sera r\u00e9current. Il nous faut une abstraction qui nous permette de d\u00e9finir cette logique en un seul endroit et de la r\u00e9utiliser pour de nombreux composants. C\u2019est l\u00e0 que les composants d\u2019ordre sup\u00e9rieur sont particuli\u00e8rement utiles.</p>\n<p>Nous pouvons \u00e9crire une fonction qui cr\u00e9e des composants qui s\u2019abonnent \u00e0 une <code class=\"language-javascript\">DataSource</code>, comme <code class=\"language-javascript\">CommentList</code> et <code class=\"language-javascript\">BlogPost</code>. La fonction acceptera parmi ses arguments un composant initial, qui recevra les donn\u00e9es suivies en props. Appelons cette fonction <code class=\"language-javascript\">withSubscription</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> CommentListWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  CommentList<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> BlogPostWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  BlogPost<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Le premier param\u00e8tre est le composant initial. Le second charge les donn\u00e9es qui nous int\u00e9ressent, en fonction de la <code class=\"language-javascript\">DataSource</code> et des props existantes.</p>\n<p>Lorsque <code class=\"language-javascript\">CommentListWithSubscription</code> et <code class=\"language-javascript\">BlogPostWithSubscription</code> s\u2019affichent, <code class=\"language-javascript\">CommentList</code> et <code class=\"language-javascript\">BlogPost</code> re\u00e7oivent une prop <code class=\"language-javascript\">data</code> qui contient les donn\u00e9es les plus r\u00e9centes issues de la <code class=\"language-javascript\">DataSource</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Cette fonction accepte un composant...</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent<span class=\"token punctuation\">,</span> selectData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... et renvoie un autre composant...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... qui s\u2019occupe de l'abonnement...</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... et affiche le composant enrob\u00e9 avec les donn\u00e9es \u00e0 jour !</span>\n      <span class=\"token comment\">// Remarquez qu\u2019on passe aussi toute autre prop re\u00e7ue.</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez qu\u2019un HOC ne modifie pas le composant qu\u2019on lui passe, et ne recourt pas non plus \u00e0 l\u2019h\u00e9ritage pour copier son comportement. Un HOC <em>compose</em> le composant initial en l\u2019<em>enrobant</em> dans un composant conteneur. Il s\u2019agit d\u2019une fonction pure, sans effets de bord.</p>\n<p>Et voil\u00e0\u00a0! Le composant enrob\u00e9 re\u00e7oit toutes les props du conteneur ainsi qu\u2019une nouvelle prop, <code class=\"language-javascript\">data</code>, qu\u2019il emploie pour produire son r\u00e9sultat. Le HOC ne se pr\u00e9occupe pas de savoir comment ou pourquoi les donn\u00e9es sont utilis\u00e9es, et le composant enrob\u00e9 ne se pr\u00e9occupe pas de savoir d\u2019o\u00f9 viennent les donn\u00e9es.</p>\n<p>Puisque <code class=\"language-javascript\">withSubscription</code> est juste une fonction, vous pouvez lui d\u00e9finir autant ou aussi peu de param\u00e8tres que vous le souhaitez. Par exemple, vous pourriez rendre configurable le nom de la prop <code class=\"language-javascript\">data</code>, afin d\u2019isoler encore davantage le HOC et le composant enrob\u00e9. Ou alors, vous pourriez accepter un argument qui configure <code class=\"language-javascript\">shouldComponentUpdate</code>, ou un autre qui configure la source de donn\u00e9es. Tout \u00e7a est possible parce que le HOC a un contr\u00f4le total sur la fa\u00e7on dont le composant est d\u00e9fini.</p>\n<p>Comme pour les composants, le rapport entre <code class=\"language-javascript\">withSubscription</code> et le composant enrob\u00e9 se base enti\u00e8rement sur les props. \u00c7a facilite l\u2019\u00e9change d\u2019un HOC pour un autre, du moment qu\u2019ils fournissent les m\u00eames props au composant enrob\u00e9. \u00c7a peut s\u2019av\u00e9rer utile si vous changez de biblioth\u00e8que pour charger vos donn\u00e9es, par exemple.</p>\n<h2 id=\"dont-mutate-the-original-component-use-composition\"><a class=\"anchor\" href=\"/react/higher-order-components#dont-mutate-the-original-component-use-composition\"></a>Ne modifiez pas le composant initial\u00a0: composez-le. </h2>\n<p>R\u00e9sistez \u00e0 la tentation de modifier le prototype d\u2019un composant (ou de le modifier de quelque fa\u00e7on que ce soit) dans un HOC.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">InputComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">InputComponent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">componentDidUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Props actuelles : '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Props pr\u00e9c\u00e9dentes : '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Le fait que le composant initial soit renvoy\u00e9 est un signe qu\u2019il a \u00e9t\u00e9 modifi\u00e9.</span>\n  <span class=\"token keyword\">return</span> InputComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// EnhancedComponent fera un log \u00e0 chaque fois qu\u2019il re\u00e7oit des props.</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span>InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ce genre d\u2019approche pose quelques probl\u00e8mes. Pour commencer, le composant initial ne peut pas \u00eatre r\u00e9utilis\u00e9 ind\u00e9pendamment du composant am\u00e9lior\u00e9. Plus important encore, si vous appliquez un autre HOC sur <code class=\"language-javascript\">EnhancedComponent</code> qui modifie <em>aussi</em> <code class=\"language-javascript\">componentDidUpdate</code>, les fonctionnalit\u00e9s du premier HOC seront perdues\u00a0! Enfin, ce HOC ne fonctionnera pas avec des fonctions composants, qui n\u2019ont pas de m\u00e9thodes de cycle de vie.</p>\n<p>Les HOC qui modifient le composant enrob\u00e9 sont une abstraction foireuse\u00a0: leurs utilisateurs doivent savoir comment ils sont impl\u00e9ment\u00e9s afin d\u2019\u00e9viter des conflits avec d\u2019autres HOC.</p>\n<p>Plut\u00f4t que la mutation, les HOC devraient utiliser la composition, en enrobant le composant initial dans un composant conteneur.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Props actuelles : '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Props pr\u00e9c\u00e9dentes : '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Enrobe le composant initial dans un conteneur, sans le modifier. Mieux !</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce HOC a la m\u00eame fonctionnalit\u00e9 que la version modifiante, tout en \u00e9vitant le risque de conflits. Il fonctionne tout aussi bien avec les composants \u00e0 base de classe et les fonctions composants. Et puisqu\u2019il s\u2019agit d\u2019une fonction pure, il est composable avec d\u2019autres HOC voire m\u00eame avec lui-m\u00eame.</p>\n<p>Vous avez peut-\u00eatre remarqu\u00e9 des ressemblances entre les HOC et le motif des <strong>composants conteneurs</strong>. Les composants conteneurs participent \u00e0 des strat\u00e9gies de s\u00e9paration de responsabilit\u00e9s entre les pr\u00e9occupations de haut et de bas niveau. Les conteneurs se pr\u00e9occupent par exemple des abonnements et de l\u2019\u00e9tat, et passent des props \u00e0 d\u2019autres composants qui se pr\u00e9occupent par exemple d\u2019afficher l\u2019UI. Les HOC utilisent des conteneurs dans leur impl\u00e9mentation. Vous pouvez voir les HOC comme des d\u00e9finitions param\u00e9trables de composants conteneurs.</p>\n<h2 id=\"convention-pass-unrelated-props-through-to-the-wrapped-component\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-pass-unrelated-props-through-to-the-wrapped-component\"></a>Convention\u00a0: transmettez les props annexes au composant enrob\u00e9 </h2>\n<p>Les HOC ajoutent des fonctionnalit\u00e9s \u00e0 un composant. Ils ne devraient pas drastiquement modifier son contrat. On s\u2019attend \u00e0 ce que le composant renvoy\u00e9 par un HOC ait une interface semblable au composant initial.</p>\n<p>Les HOC devraient transmettre les props sans rapport avec leur propre fonctionnement. La plupart des HOC ont une m\u00e9thode de rendu qui ressemble \u00e0 \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Filtre les props suppl\u00e9mentaires propres \u00e0 ce HOC</span>\n  <span class=\"token comment\">// qui ne devraient pas \u00eatre transmises</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> extraProp<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>passThroughProps <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Injecte les props dans le composant enrob\u00e9. Il s\u2019agit en g\u00e9n\u00e9ral</span>\n  <span class=\"token comment\">// de valeurs de l\u2019\u00e9tat local ou de m\u00e9thodes d\u2019instance.</span>\n  <span class=\"token keyword\">const</span> injectedProp <span class=\"token operator\">=</span> someStateOrInstanceMethod<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Transmet les props au composant enrob\u00e9</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span>\n      <span class=\"token attr-name\">injectedProp</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>injectedProp<span class=\"token punctuation\">}</span></span>\n      <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">passThroughProps</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette convention am\u00e9liore la flexibilit\u00e9 et la r\u00e9utilisabilit\u00e9 de nos HOC.</p>\n<h2 id=\"convention-maximizing-composability\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-maximizing-composability\"></a>Convention\u00a0: maximisez la composabilit\u00e9 </h2>\n<p>Tous les HOC n\u2019ont pas la m\u00eame interface. Ils n\u2019acceptent parfois qu\u2019un seul argument, le composant enrob\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> NavbarWithRouter <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Navbar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Mais en g\u00e9n\u00e9ral, les HOC acceptent des arguments suppl\u00e9mentaires. Dans cet exemple tir\u00e9 de Relay, un objet de configuration <code class=\"language-javascript\">config</code> est transmis pour sp\u00e9cifier les d\u00e9pendances d\u2019un composant aux donn\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> CommentWithRelay <span class=\"token operator\">=</span> Relay<span class=\"token punctuation\">.</span><span class=\"token function\">createContainer</span><span class=\"token punctuation\">(</span>Comment<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>La signature la plus courante pour un HOC ressemble \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// `connect` de React Redux</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">,</span> commentActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Pardon\u00a0?!</em> Il est plus facile de voir ce qui se passe si on d\u00e9cortique l\u2019appel.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// connect est une fonction qui renvoie une autre fonction</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentListSelector<span class=\"token punctuation\">,</span> commentListActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// La fonction renvoy\u00e9e est un HOC, qui renvoie un composant connect\u00e9 au store Redux</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Autrement dit, <code class=\"language-javascript\">connect</code> est une fonction d\u2019ordre sup\u00e9rieur\u2026 qui renvoie un composant d\u2019ordre sup\u00e9rieur\u00a0!</p>\n<p>Cette forme peut sembler d\u00e9routante ou superflue, pourtant elle a une propri\u00e9t\u00e9 utile. Les HOC n\u2019acceptant qu\u2019un argument comme celui que renvoie la fonction <code class=\"language-javascript\">connect</code> ont une signature <code class=\"language-javascript\">Composant =&gt; Composant</code>. Les fonctions dont le type de donn\u00e9es est le m\u00eame en sortie qu\u2019en entr\u00e9e sont beaucoup plus faciles \u00e0 composer.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Plut\u00f4t que de faire ceci...</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ... vous pouvez utiliser un utilitaire de composition de fonction.</span>\n<span class=\"token comment\">// compose(f, g, h) est l\u2019\u00e9quivalent de (...args) =&gt; f(g(h(...args)))</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Ces deux-l\u00e0 sont des HOC n\u2019acceptant qu\u2019un argument.</span>\n  withRouter<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span></code></pre></div>\n<p>(C\u2019est aussi cette propri\u00e9t\u00e9 qui permet \u00e0 <code class=\"language-javascript\">connect</code> et \u00e0 d\u2019autres HOC du m\u00eame type d\u2019\u00eatre utilis\u00e9s comme d\u00e9corateurs, une proposition exp\u00e9rimentale JavaScript.)</p>\n<p>La fonction utilitaire <code class=\"language-javascript\">compose</code> est fournie par de nombreuses biblioth\u00e8ques tierces, dont lodash (sous le nom <a class=\"external-link\" href=\"https://lodash.com/docs/#flowRight\"><code class=\"language-javascript\">lodash.flowRight</code></a>), <a class=\"external-link\" href=\"https://redux.js.org/api/compose\">Redux</a>, et <a class=\"external-link\" href=\"https://ramdajs.com/docs/#compose\">Ramda</a>.</p>\n<h2 id=\"convention-wrap-the-display-name-for-easy-debugging\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-wrap-the-display-name-for-easy-debugging\"></a>Convention\u00a0: enrobez le <code class=\"language-javascript\">displayName</code> pour faciliter le d\u00e9bogage </h2>\n<p>Tout comme n\u2019importe quel autre composant, les composants conteneurs cr\u00e9\u00e9s par des HOC apparaissent dans les <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools\">Outils de d\u00e9veloppement React</a>. Pour faciliter votre d\u00e9bogage, donnez-leur un nom affichable qui indique qu\u2019ils sont le r\u00e9sultat d\u2019un HOC.</p>\n<p>Le technique la plus r\u00e9pandue consiste \u00e0 enrober le nom d\u2019affichage du composant enrob\u00e9. Par exemple, si votre composant d\u2019ordre sup\u00e9rieur s\u2019appelle <code class=\"language-javascript\">withSubscription</code>, et que le nom d\u2019affichage du composant enrob\u00e9 est <code class=\"language-javascript\">CommentList</code>, utilisez le nom d\u2019affichage <code class=\"language-javascript\">WithSubscription(CommentList)</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">WithSubscription</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">}</span>\n  WithSubscription<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">WithSubscription(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> WithSubscription<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> WrappedComponent<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">||</span> WrappedComponent<span class=\"token punctuation\">.</span>name <span class=\"token operator\">||</span> <span class=\"token string\">'Component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/higher-order-components#caveats\"></a>Limitations </h2>\n<p>L\u2019utilisation de composants d\u2019ordre sup\u00e9rieur est sujette \u00e0 quelques limitations qui ne sont pas tout de suite \u00e9videntes si vous d\u00e9butez avec React.</p>\n<h3 id=\"dont-use-hocs-inside-the-render-method\"><a class=\"anchor\" href=\"/react/higher-order-components#dont-use-hocs-inside-the-render-method\"></a>Pas de HOC \u00e0 l\u2019int\u00e9rieur de la m\u00e9thode de rendu </h3>\n<p>L\u2019algorithme de comparaison de React (qu\u2019on appelle la r\u00e9conciliation) utilise l\u2019identit\u00e9 des composants pour d\u00e9terminer s\u2019il faut mettre \u00e0 jour l\u2019arborescence existante ou la jeter et en monter une nouvelle. Si le composant renvoy\u00e9 par <code class=\"language-javascript\">render</code> est identique (<code class=\"language-javascript\">===</code>) au composant du rendu pr\u00e9c\u00e9dent, React met r\u00e9cursivement \u00e0 jour l\u2019arborescence en la comparant avec la nouvelle. S\u2019ils ne sont pas identiques, l\u2019ancienne arborescence est int\u00e9gralement d\u00e9mont\u00e9e.</p>\n<p>En g\u00e9n\u00e9ral, vous ne devriez pas avoir \u00e0 y penser. Mais dans le cadre des HOC c\u2019est important, puisque \u00e7a signifie que vous ne pouvez pas appliquer un HOC au sein de la m\u00e9thode de rendu d\u2019un composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Une nouvelle version de EnhancedComponent est cr\u00e9\u00e9e \u00e0 chaque rendu</span>\n  <span class=\"token comment\">// EnhancedComponent1 !== EnhancedComponent2</span>\n  <span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// \u00c7a entra\u00eene un d\u00e9montage/remontage complet \u00e0 chaque fois !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EnhancedComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il ne s\u2019agit pas uniquement d\u2019un probl\u00e8me de performances\u00a0: remonter un composant signifie que l\u2019\u00e9tat local de ce composant ainsi que ceux de tous ses enfants seront perdus.</p>\n<p>Appliquez plut\u00f4t les HOC \u00e0 l\u2019ext\u00e9rieur de la d\u00e9finition d\u2019un composant, afin de cr\u00e9er le composant enrob\u00e9 une seule fois. Son identit\u00e9 sera alors constante d\u2019un rendu \u00e0 l\u2019autre. C\u2019est g\u00e9n\u00e9ralement ce que vous voulez, de toutes fa\u00e7ons.</p>\n<p>Dans les rares cas o\u00f9 vous avez besoin d\u2019appliquer un HOC de fa\u00e7on dynamique, vous pouvez le faire au sein des m\u00e9thodes de cycle de vie d\u2019un composant ou dans son constructeur.</p>\n<h3 id=\"static-methods-must-be-copied-over\"><a class=\"anchor\" href=\"/react/higher-order-components#static-methods-must-be-copied-over\"></a>Les m\u00e9thodes statiques doivent \u00eatre copi\u00e9es </h3>\n<p>Il est parfois utile de d\u00e9finir une m\u00e9thode statique dans un composant React. Par exemple, les conteneurs Relay exposent une m\u00e9thode statique <code class=\"language-javascript\">getFragment</code> pour simplifier la composition de fragments GraphQL.</p>\n<p>Cependant, quand vous appliquez un HOC \u00e0 un composant, le composant initial est enrob\u00e9 par un composant conteneur. \u00c7a signifie que le nouveau composant ne comporte aucune des m\u00e9thodes statiques du composant initial.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// D\u00e9finit une m\u00e9thode statique</span>\nWrappedComponent<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">staticMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Applique un HOC</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Le composant am\u00e9lior\u00e9 n\u2019a pas de m\u00e9thode statique</span>\n<span class=\"token keyword\">typeof</span> EnhancedComponent<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Pour r\u00e9soudre \u00e7a, vous pouvez copier les m\u00e9thodes dans le conteneur avant de le renvoyer\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Doit savoir exactement quelles m\u00e9thodes recopier :(</span>\n  Enhance<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">=</span> WrappedComponent<span class=\"token punctuation\">.</span>staticMethod<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le probl\u00e8me, c\u2019est que \u00e7a exige que vous sachiez exactement quelles m\u00e9thodes doivent \u00eatre recopi\u00e9es. Vous devriez plut\u00f4t utiliser <a class=\"external-link\" href=\"https://github.com/mridgway/hoist-non-react-statics\">hoist-non-react-statics</a> pour copier automatiquement toutes les m\u00e9thodes statiques\u00a0qui ne viennent pas de React\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> hoistNonReactStatics <span class=\"token keyword\">from</span> <span class=\"token string\">'hoist-non-react-statics'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">hoistNonReactStatics</span><span class=\"token punctuation\">(</span>Enhance<span class=\"token punctuation\">,</span> WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Une autre solution consiste \u00e0 exporter les m\u00e9thodes statiques de fa\u00e7on s\u00e9par\u00e9e du composant lui-m\u00eame.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Plut\u00f4t que...</span>\nMyComponent<span class=\"token punctuation\">.</span>someFunction <span class=\"token operator\">=</span> someFunction<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... exportez les m\u00e9thodes s\u00e9par\u00e9ment...</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... et dans le module qui les utilise, importez les deux.</span>\n<span class=\"token keyword\">import</span> MyComponent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent.js'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"refs-arent-passed-through\"><a class=\"anchor\" href=\"/react/higher-order-components#refs-arent-passed-through\"></a>Les refs ne sont pas transmises </h3>\n<p>Bien que que la convention pour les composants d\u2019ordre sup\u00e9rieur soit de transmettre toutes les props au composant enrob\u00e9, \u00e7a ne marche pas pour les refs. C\u2019est parce que <code class=\"language-javascript\">ref</code> n\u2019est pas vraiment une prop\u00a0: comme <code class=\"language-javascript\">key</code>, React la traite de fa\u00e7on particuli\u00e8re. Si vous ajoutez une ref \u00e0 un \u00e9l\u00e9ment dont le composant r\u00e9sulte d\u2019un HOC, la ref fait r\u00e9f\u00e9rence \u00e0 une instance du composant conteneur ext\u00e9rieur, et non au composant enrob\u00e9.</p>\n<p>La solution \u00e0 ce probl\u00e8me r\u00e9side dans l\u2019utilisation de l\u2019API <code class=\"language-javascript\">React.forwardRef</code> (introduite dans React 16.3). <a href=\"/react/forwarding-refs\">Vous pouvez en apprendre davantage dans la section sur la transmission des refs</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/higher-order-components.md\">Edit this page</a></p></div></article>", "path": "/react/higher-order-components", "nav": ["/react/fragments", "/react/integrating-with-other-libraries"]}, {"key": "Int\u00e9gration avec d\u2019autres biblioth\u00e8ques", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React peut \u00eatre utilis\u00e9 dans n\u2019importe quelle application web. Il peut \u00eatre int\u00e9gr\u00e9 \u00e0 d\u2019autres applications et, avec un peu de soin, d\u2019autres applications peuvent \u00eatre int\u00e9gr\u00e9es \u00e0 React. Ce guide examine certains des cas d\u2019utilisation les plus courants, en se concentrant sur l\u2019int\u00e9gration avec <a class=\"external-link\" href=\"https://jquery.com/\">jQuery</a> et <a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a>, mais les m\u00eames id\u00e9es peuvent \u00eatre appliqu\u00e9es \u00e0 l\u2019int\u00e9gration de composants \u00e0 n\u2019importe quel code existant.</p>\n<h2 id=\"integrating-with-dom-manipulation-plugins\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-dom-manipulation-plugins\"></a>Int\u00e9gration aux plugins de manipulation DOM </h2>\n<p>React ignore les modifications apport\u00e9es au DOM en dehors de React. Il d\u00e9termine les mises \u00e0 jour en fonction de sa propre repr\u00e9sentation interne et, si les m\u00eames n\u0153uds du DOM sont manipul\u00e9s par une autre biblioth\u00e8que, React s\u2019emm\u00eale les pinceaux et ne dispose d\u2019aucun moyen de se r\u00e9tablir.</p>\n<p>\u00c7a ne signifie pas qu\u2019il est impossible ni m\u00eame n\u00e9cessairement difficile de combiner React avec d\u2019autres moyens d\u2019affecter le DOM, vous devez simplement \u00eatre attentifs \u00e0 ce que chacun fait.</p>\n<p>Le moyen le plus simple d\u2019\u00e9viter les conflits consiste \u00e0 emp\u00eacher le composant React de mettre \u00e0 jour l\u2019\u00e9l\u00e9ment \u00ab\u00a0partag\u00e9\u00a0\u00bb. Vous pouvez faire \u00e7a en utilisant des \u00e9l\u00e9ments que React n\u2019aura aucune raison de mettre \u00e0 jour, comme une <code class=\"language-javascript\">&lt;div /&gt;</code> vide.</p>\n<h3 id=\"how-to-approach-the-problem\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#how-to-approach-the-problem\"></a>Comment aborder le probl\u00e8me </h3>\n<p>Pour illustrer \u00e7a, esquissons un enrobage pour un plugin g\u00e9n\u00e9rique jQuery.</p>\n<p>Nous attacherons une <a href=\"/react/refs-and-the-dom\">ref</a> \u00e0 l\u2019\u00e9l\u00e9ment racine DOM. Dans <code class=\"language-javascript\">componentDidMount</code>, nous obtiendrons une r\u00e9f\u00e9rence qui pourra \u00eatre pass\u00e9e au plugin jQuery.</p>\n<p>Pour emp\u00eacher React de toucher au DOM apr\u00e8s le montage, nous renverrons une <code class=\"language-javascript\">&lt;div /&gt;</code> vide depuis la m\u00e9thode <code class=\"language-javascript\">render()</code>. L\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;div /&gt;</code> n\u2019a pas de propri\u00e9t\u00e9s ni d\u2019enfants, donc React n\u2019a aucune raison de le mettre \u00e0 jour, laissant le plugin jQuery libre de g\u00e9rer cette partie du DOM\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SomePlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">somePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">somePlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notez que nous avons d\u00e9fini les deux <a href=\"/react/react-component#the-component-lifecycle\">m\u00e9thodes de cycle de vie</a> <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentWillUnmount</code> . De nombreux plugins jQuery attachent des gestionnaires d\u2019\u00e9v\u00e9nements au DOM, il est donc important de les d\u00e9tacher dans <code class=\"language-javascript\">componentWillUnmount</code>. Si le plugin ne fournit pas de m\u00e9thode de nettoyage, vous devrez probablement fournir la v\u00f4tre, en vous souvenant de supprimer tous les gestionnaires d\u2019\u00e9v\u00e9nements enregistr\u00e9s par le plugin pour \u00e9viter les fuites de m\u00e9moire.</p>\n<h3 id=\"integrating-with-jquery-chosen-plugin\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-jquery-chosen-plugin\"></a>Int\u00e9gration avec le plugin jQuery Chosen </h3>\n<p>Pour un exemple plus concret de ces concepts, \u00e9crivons un enrobage minimal pour le plugin <a class=\"external-link\" href=\"https://harvesthq.github.io/chosen/\">Chosen</a>, qui enrichit les champs <code class=\"language-javascript\">&lt;select&gt;</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>\u00c7a n\u2019est pas parce que c\u2019est possible qu\u2019il s\u2019agit de la meilleure approche pour les applications React. Nous vous encourageons \u00e0 utiliser les composants React lorsque vous le pouvez. Les composants React sont plus faciles \u00e0 r\u00e9utiliser dans les applications React et permettent souvent de mieux contr\u00f4ler leur comportement et leur apparence.</p>\n</div>\n<p>Tout d\u2019abord, regardons ce que Chosen fait au DOM.</p>\n<p>Si vous l\u2019appelez sur un n\u0153ud DOM <code class=\"language-javascript\">&lt;select&gt;</code>, il lit les attributs du n\u0153ud DOM d\u2019origine, le masque avec du style en ligne, puis ajoute un n\u0153ud DOM distinct avec sa propre repr\u00e9sentation visuelle juste apr\u00e8s le <code class=\"language-javascript\">&lt;select&gt;</code>. Ensuite, il d\u00e9clenche des \u00e9v\u00e9nements jQuery pour nous informer des modifications.</p>\n<p>Disons que nous visons cette API pour notre composant React d\u2019enrobage <code class=\"language-javascript\">&lt;Chosen&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chosen</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">vanille</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">chocolat</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">fraise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Chosen</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous allons l\u2019impl\u00e9menter en tant que <a href=\"/react/uncontrolled-components\">composant non-contr\u00f4l\u00e9</a> pour plus de simplicit\u00e9.</p>\n<p>Pour commencer, nous allons cr\u00e9er un composant vide avec une m\u00e9thode <code class=\"language-javascript\">render()</code> o\u00f9 nous renvoyons <code class=\"language-javascript\">&lt;select&gt;</code> enrob\u00e9 dans une <code class=\"language-javascript\">&lt;div&gt;</code>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Chosen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez comment nous avons enrob\u00e9 <code class=\"language-javascript\">&lt;select&gt;</code> dans une <code class=\"language-javascript\">&lt;div&gt;</code> suppl\u00e9mentaire. C\u2019est n\u00e9cessaire car Chosen ajoutera un autre \u00e9l\u00e9ment DOM juste apr\u00e8s le n\u0153ud <code class=\"language-javascript\">&lt;select&gt;</code> que nous lui aurons transmis. Cependant, en ce qui concerne React, <code class=\"language-javascript\">&lt;div&gt;</code> n\u2019a toujours qu\u2019un seul enfant. C\u2019est de cette mani\u00e8re que nous nous assurons que les mises \u00e0 jour React n\u2019entreront pas en conflit avec le n\u0153ud DOM suppl\u00e9mentaire ajout\u00e9 par Chosen. Si vous modifiez le DOM en-dehors du flux React, il est important que vous vous assuriez que React n\u2019ait aucune raison de toucher \u00e0 ces n\u0153uds du DOM.</p>\n<p>Ensuite, nous allons impl\u00e9menter les m\u00e9thodes de cycle de vie. Nous devons initialiser Chosen avec la r\u00e9f\u00e9rence du n\u0153ud <code class=\"language-javascript\">&lt;select&gt;</code> dans <code class=\"language-javascript\">componentDidMount</code>, et nettoyer le tout dans <code class=\"language-javascript\">componentWillUnmount</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/qmqeQx?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<p>Notez que React n\u2019attribue aucune signification particuli\u00e8re au champ <code class=\"language-javascript\">this.el</code>. \u00c7a ne fonctionne que parce que nous avons d\u00e9j\u00e0 affect\u00e9 une <code class=\"language-javascript\">ref</code> \u00e0 ce champ dans la m\u00e9thode <code class=\"language-javascript\">render()</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00c7a suffit pour afficher notre composant, mais nous souhaitons \u00e9galement \u00eatre inform\u00e9s des modifications de valeur. Pour ce faire, nous nous abonnerons \u00e0 l\u2019\u00e9v\u00e9nement jQuery <code class=\"language-javascript\">change</code> sur le<code class=\"language-javascript\">&lt;select&gt;</code> g\u00e9r\u00e9 par Chosen.</p>\n<p>Nous ne transmettrons pas <code class=\"language-javascript\">this.props.onChange</code> directement \u00e0 Chosen, car les props du composant peuvent changer avec le temps, ce qui inclut les gestionnaires d\u2019\u00e9v\u00e9nements. Au lieu de \u00e7a, nous allons d\u00e9clarer une m\u00e9thode <code class=\"language-javascript\">handleChange()</code> qui appelle <code class=\"language-javascript\">this.props.onChange</code>, et l\u2019utiliserons pour nous abonner \u00e0 l\u2019\u00e9v\u00e9nement jQuery <code class=\"language-javascript\">change</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/bWgbeE?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<p>Enfin, il reste une derni\u00e8re chose \u00e0 faire. Dans React, les props peuvent changer avec le temps. Par exemple, le composant <code class=\"language-javascript\">&lt;Chosen&gt;</code> peut avoir diff\u00e9rents enfants si l\u2019\u00e9tat du composant parent change. \u00c7a signifie qu\u2019aux points d\u2019int\u00e9gration, il est important de mettre \u00e0 jour manuellement le DOM en r\u00e9ponse aux mises \u00e0 jour des props, car nous ne laissons plus React g\u00e9rer le DOM pour nous.</p>\n<p>La documentation de Chosen sugg\u00e8re que nous pouvons utiliser l\u2019API <code class=\"language-javascript\">trigger()</code> de jQuery pour l\u2019informer des modifications apport\u00e9es \u00e0 l\u2019\u00e9l\u00e9ment DOM d\u2019origine. Nous laisserons React se charger de la mise \u00e0 jour de <code class=\"language-javascript\">this.props.children</code> dans <code class=\"language-javascript\">&lt;select&gt;</code>, mais nous ajouterons \u00e9galement une m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentDidUpdate()</code> notifiant Chosen de tout changement dans la liste des enfants:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chosen:updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>De cette fa\u00e7on, Chosen saura mettre \u00e0 jour son \u00e9l\u00e9ment DOM lorsque les enfants de <code class=\"language-javascript\">&lt;select&gt;</code> g\u00e9r\u00e9s par React changent.</p>\n<p>L\u2019impl\u00e9mentation compl\u00e8te du composant <code class=\"language-javascript\">Chosen</code> ressemble \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Chosen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chosen:updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/xdgKOz?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<h2 id=\"integrating-with-other-view-libraries\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-other-view-libraries\"></a>Int\u00e9gration \u00e0 d\u2019autres biblioth\u00e8ques de vues </h2>\n<p>React peut \u00eatre int\u00e9gr\u00e9 \u00e0 d\u2019autres applications gr\u00e2ce \u00e0 la flexibilit\u00e9 de <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a>.</p>\n<p>Bien que React soit couramment utilis\u00e9 au d\u00e9marrage pour charger un seul composant racine React dans le DOM, <code class=\"language-javascript\">ReactDOM.render()</code> peut \u00e9galement \u00eatre appel\u00e9 plusieurs fois pour afficher des parties ind\u00e9pendantes de l\u2019interface utilisateur (UI), qui peuvent \u00eatre aussi petites qu\u2019un bouton ou aussi grandes qu\u2019une application.</p>\n<p>En fait, c\u2019est exactement comme \u00e7a que React est utilis\u00e9 chez Facebook. \u00c7a nous permet d\u2019\u00e9crire des applications en React morceau par morceau, et de les combiner avec nos gabarits existants g\u00e9n\u00e9r\u00e9s par le serveur et d\u2019autres codes c\u00f4t\u00e9 client.</p>\n<h3 id=\"replacing-string-based-rendering-with-react\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#replacing-string-based-rendering-with-react\"></a>Remplacement d\u2019un rendu bas\u00e9 cha\u00eenes par React </h3>\n<p>Une pratique courante dans les anciennes applications web consiste \u00e0 d\u00e9crire des fragments du DOM sous forme de cha\u00eene et \u00e0 les ins\u00e9rer dans le DOM comme suit\u00a0: <code class=\"language-javascript\">$el.html(htmlString)</code>. Ces points d\u2019insertion dans une base de code sont parfaits pour introduire React. Il suffit de r\u00e9\u00e9crire le rendu bas\u00e9 sur une cha\u00eene sous la forme d\u2019un composant React.</p>\n<p>Donc, l\u2019impl\u00e9mentation jQuery suivante\u2026</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;button id=\"btn\"&gt;Dis bonjour&lt;/button&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u2026 pourrait \u00eatre r\u00e9\u00e9crite en utilisant un composant React\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Dis bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c0 partir de l\u00e0, vous pouvez int\u00e9grer plus de logique dans le composant et commencer \u00e0 adopter des pratiques React plus courantes. Par exemple, dans les composants, il est pr\u00e9f\u00e9rable de ne pas compter sur les ID, car un m\u00eame composant peut \u00eatre affich\u00e9 plusieurs fois. Nous utiliserons plut\u00f4t le <a href=\"/react/handling-events\">syst\u00e8me d\u2019\u00e9v\u00e9nements React</a> et enregistrerons le gestionnaire de clics directement sur l\u2019\u00e9l\u00e9ment React <code class=\"language-javascript\">&lt;button&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Dis bonjour</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HelloButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/RVKbvW?editors=1010\"><strong>Essayez dans CodePen</strong></a></p>\n<p>Vous pouvez avoir autant de composants isol\u00e9s que vous le souhaitez et utiliser <code class=\"language-javascript\">ReactDOM.render()</code> pour les restituer dans diff\u00e9rents conteneurs DOM. Au fur et \u00e0 mesure que vous convertissez les parties de votre application en React, vous pourrez les combiner en composants plus volumineux et d\u00e9placer une partie des appels \u00e0 <code class=\"language-javascript\">ReactDOM.render()</code> plus haut dans la hi\u00e9rarchie.</p>\n<h3 id=\"embedding-react-in-a-backbone-view\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#embedding-react-in-a-backbone-view\"></a>Incorporer React dans une vue Backbone </h3>\n<p>Les vues <a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a> utilisent g\u00e9n\u00e9ralement des cha\u00eenes HTML ou des fonctions de gabarit produisant des cha\u00eenes pour cr\u00e9er le contenu de leurs \u00e9l\u00e9ments DOM. Ce processus peut \u00e9galement \u00eatre remplac\u00e9 par le rendu d\u2019un composant React.</p>\n<p>Ci-dessous, nous allons cr\u00e9er une vue Backbone appel\u00e9e <code class=\"language-javascript\">ParagraphView</code>. La fonction <code class=\"language-javascript\">render()</code> de Backbone sera remplac\u00e9e pour afficher un composant React <code class=\"language-javascript\">&lt;Paragraph&gt;</code> dans l\u2019\u00e9l\u00e9ment DOM fourni par Backbone (<code class=\"language-javascript\">this.el</code>). Ici aussi, nous utilisons  <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">ReactDOM.render()</code></a>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> ParagraphView <span class=\"token operator\">=</span> Backbone<span class=\"token punctuation\">.</span>View<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Paragraph</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    Backbone<span class=\"token punctuation\">.</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gWgOYL?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<p>Il est important que nous appelions \u00e9galement <code class=\"language-javascript\">ReactDOM.unmountComponentAtNode()</code> dans la m\u00e9thode <code class=\"language-javascript\">remove</code> afin que React d\u00e9sinscrive les gestionnaires d\u2019\u00e9v\u00e9nements et les autres ressources associ\u00e9es \u00e0 l\u2019arborescence des composants lorsqu\u2019ils sont d\u00e9tach\u00e9s.</p>\n<p>Lorsqu\u2019un composant est supprim\u00e9 <em>depuis</em> une arborescence React, le nettoyage est effectu\u00e9 automatiquement, mais comme nous supprimons l\u2019arborescence compl\u00e8te \u00e0 la main, nous devons appeler cette m\u00e9thode.</p>\n<h2 id=\"integrating-with-model-layers\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-model-layers\"></a>Int\u00e9gration avec des couches mod\u00e8les </h2>\n<p>Bien qu\u2019il soit g\u00e9n\u00e9ralement recommand\u00e9 d\u2019utiliser un flux de donn\u00e9es unidirectionnel tel que <a href=\"/react/lifting-state-up\">l\u2019\u00e9tat de React</a>, <a class=\"external-link\" href=\"https://facebook.github.io/flux/\">Flux</a> ou <a class=\"external-link\" href=\"https://redux.js.org/\">Redux</a>, les composants React peuvent utiliser une couche de mod\u00e8le provenant d\u2019autres frameworks et biblioth\u00e8ques.</p>\n<h3 id=\"using-backbone-models-in-react-components\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#using-backbone-models-in-react-components\"></a>Utiliser les mod\u00e8les Backbone dans les composants React </h3>\n<p>Le moyen le plus simple de consommer des mod\u00e8les et des collections <a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a> \u00e0 partir d\u2019un composant React consiste \u00e0 \u00e9couter les divers \u00e9v\u00e9nements de modification et \u00e0 forcer manuellement une mise \u00e0 jour.</p>\n<p>Les composants responsables de l\u2019affichage des mod\u00e8les \u00e9couteraient les \u00e9v\u00e9nements <code class=\"language-javascript\">'change'</code>, tandis que les composants responsables de l\u2019affichage des collections \u00e9couteraient les \u00e9v\u00e9nements <code class=\"language-javascript\">'add'</code> et <code class=\"language-javascript\">'remove'</code>. Dans les deux cas, appelez <a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">this.forceUpdate()</code></a> pour rafra\u00eechir le composant avec les nouvelles donn\u00e9es.</p>\n<p>Dans l\u2019exemple ci-dessous, le composant <code class=\"language-javascript\">List</code> affiche une collection Backbone, en utilisant le composant <code class=\"language-javascript\">Item</code> pour restituer des \u00e9l\u00e9ments individuels.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">List</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'remove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'remove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">model</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">.</span>cid<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/GmrREm?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<h3 id=\"extracting-data-from-backbone-models\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#extracting-data-from-backbone-models\"></a>Extraction de donn\u00e9es \u00e0 partir des mod\u00e8les Backbone </h3>\n<p>L\u2019approche ci-dessus n\u00e9cessite que vos composants React soient conscients des mod\u00e8les et des collections Backbone. Si vous envisagez par la suite de migrer vers une autre solution de gestion de donn\u00e9es, vous voudrez peut-\u00eatre concentrer les connaissances sur Backbone dans le moins possible de parties du code.</p>\n<p>Une solution \u00e0 ce probl\u00e8me consiste \u00e0 extraire les attributs du mod\u00e8le sous forme de donn\u00e9es simples \u00e0 chaque modification, et \u00e0 conserver cette logique en un seul endroit. Ce qui suit est <a href=\"/react/higher-order-components\">un composant d\u2019ordre sup\u00e9rieur</a> qui extrait tous les attributs d\u2019un mod\u00e8le Backbone et les stocke dans son \u00e9tat, pour finalement passer les donn\u00e9es au composant enrob\u00e9.</p>\n<p>De cette fa\u00e7on, seul le composant d\u2019ordre sup\u00e9rieur doit conna\u00eetre les d\u00e9tails du mod\u00e8le Backbone, et la plupart des composants de l\u2019application peuvent rester ind\u00e9pendants de Backbone.</p>\n<p>Dans l\u2019exemple ci-dessous, nous allons copier les attributs du mod\u00e8le pour former l\u2019\u00e9tat initial. Nous nous abonnons \u00e0 l\u2019\u00e9v\u00e9nement <code class=\"language-javascript\">change</code> (et nous nous d\u00e9sabonnons lors du d\u00e9montage), et lorsque l\u2019\u00e9v\u00e9nement survient, nous mettons \u00e0 jour l\u2019\u00e9tat avec les attributs actuels du mod\u00e8le. Enfin, nous nous assurons que si la propri\u00e9t\u00e9 <code class=\"language-javascript\">model</code> elle-m\u00eame change, nous n\u2019oublions pas de nous d\u00e9sabonner de l\u2019ancien mod\u00e8le et de nous abonner au nouveau.</p>\n<p>Notez que cet exemple n\u2019est pas exhaustif en ce qui concerne l\u2019utilisation de Backbone, mais il devrait vous donner une id\u00e9e de la mani\u00e8re g\u00e9n\u00e9rique de l\u2019aborder\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">connectToBackboneModel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BackboneComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillReceiveProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>model <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        nextProps<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">model</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">changedAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> propsExceptModel <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">delete</span> propsExceptModel<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">propsExceptModel</span><span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">state</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour montrer comment l\u2019utiliser, connectons un composant <code class=\"language-javascript\">NameInput</code> React \u00e0 un mod\u00e8le Backbone et mettons \u00e0 jour son attribut <code class=\"language-javascript\">firstName</code> chaque fois que la saisie change\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NameInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      Je m\u2019appelle </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> BackboneNameInput <span class=\"token operator\">=</span> <span class=\"token function\">connectToBackboneModel</span><span class=\"token punctuation\">(</span>NameInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'firstName'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BackboneNameInput</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">handleChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span></span>    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Backbone<span class=\"token punctuation\">.</span>Model</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Frodo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Example</span></span> <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/PmWwwa?editors=0010\"><strong>Essayez dans CodePen</strong></a></p>\n<p>Cette technique ne se limite pas \u00e0 Backbone. Vous pouvez utiliser React avec n\u2019importe quelle biblioth\u00e8que de mod\u00e8les en vous abonnant \u00e0 ses modifications dans les m\u00e9thodes de cycle de vie et, \u00e9ventuellement, en copiant les donn\u00e9es dans l\u2019\u00e9tat local React.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/integrating-with-other-libraries.md\">Edit this page</a></p></div></article>", "path": "/react/integrating-with-other-libraries", "nav": ["/react/higher-order-components", "/react/jsx-in-depth"]}, {"key": "JSX dans le d\u00e9tail", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Fondamentalement, JSX fournit juste du sucre syntaxique pour la fonction <code class=\"language-javascript\">React.createElement(component, props, ...children)</code>.</p>\n<p>Le code JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">shadowSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Cliquez ici\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyButton</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>est compil\u00e9 en\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  MyButton<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> shadowSize<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Cliquez ici'</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Il est aussi possible d\u2019utiliser la balise auto-fermante si il n\u2019y a pas d\u2019enfants. Donc\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sidebar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>est compil\u00e9 en\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>className<span class=\"token operator\">:</span> <span class=\"token string\">'sidebar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Si vous souhaitez voir comment certains \u00e9l\u00e9ments JSX sp\u00e9cifiques sont compil\u00e9s en JavaScript, vous pouvez utiliser <a class=\"external-link\" href=\"https://babeljs.io/repl/#?presets=react&amp;code_lz=GYVwdgxgLglg9mABACwKYBt1wBQEpEDeAUIogE6pQhlIA8AJjAG4B8AEhlogO5xnr0AhLQD0jVgG4iAXyJA\">le compilateur Babel en ligne</a>.</p>\n<h2 id=\"specifying-the-react-element-type\"><a class=\"anchor\" href=\"/react/jsx-in-depth#specifying-the-react-element-type\"></a>Sp\u00e9cifier le type d\u2019un \u00e9l\u00e9ment React </h2>\n<p>La premi\u00e8re partie d\u2019une balise JSX d\u00e9termine le type de l\u2019\u00e9l\u00e9ment React en question.</p>\n<p>Les types commen\u00e7ant par une lettre majuscule indiquent que la balise JSX fait r\u00e9f\u00e9rence \u00e0 un composant React. Ces balises sont compil\u00e9es en r\u00e9f\u00e9rences directes \u00e0 la variable nomm\u00e9e, donc si vous utilisez l\u2019expression JSX  <code class=\"language-javascript\">&lt;Foo /&gt;</code>, l\u2019identifiant <code class=\"language-javascript\">Foo</code> doit \u00eatre pr\u00e9sent dans la port\u00e9e.</p>\n<h3 id=\"react-must-be-in-scope\"><a class=\"anchor\" href=\"/react/jsx-in-depth#react-must-be-in-scope\"></a>React doit \u00eatre pr\u00e9sent dans la port\u00e9e </h3>\n<p>\u00c9tant donn\u00e9 que JSX se compile en appels \u00e0 <code class=\"language-javascript\">React.createElement</code>, la biblioth\u00e8que <code class=\"language-javascript\">React</code> doit aussi \u00eatre pr\u00e9sente dans la port\u00e9e de votre code JSX.</p>\n<p>Par exemple, les deux imports sont n\u00e9cessaires dans le code ci-dessous m\u00eame si <code class=\"language-javascript\">React</code> et <code class=\"language-javascript\">CustomButton</code> ne sont pas directement r\u00e9f\u00e9renc\u00e9s depuis JavaScript\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> CustomButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./CustomButton'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">WarningButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// return React.createElement(CustomButton, {color: 'red'}, null);</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si vous n\u2019utilisez pas un <em>bundler</em> JavaScript mais que vous chargez React \u00e0 partir d\u2019une balise <code class=\"language-javascript\">&lt;script&gt;</code>, il est d\u00e9j\u00e0 dans la port\u00e9e en tant que variable globale <code class=\"language-javascript\">React</code>.</p>\n<h3 id=\"using-dot-notation-for-jsx-type\"><a class=\"anchor\" href=\"/react/jsx-in-depth#using-dot-notation-for-jsx-type\"></a>Utiliser la notation \u00e0 points pour un type JSX </h3>\n<p>Vous pouvez \u00e9galement r\u00e9f\u00e9rencer un composant React en utilisant la notation \u00e0 points dans JSX. C\u2019est pratique si vous avez un seul module qui exporte de nombreux composants React. Par exemple si <code class=\"language-javascript\">MyComponents.DatePicker</code> est un composant, vous pouvez directement l\u2019utiliser dans JSX comme ceci\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MyComponents <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">DatePicker</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DatePicker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Imaginez un s\u00e9lecteur de dates </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> ici.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlueDatePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponents.DatePicker</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"user-defined-components-must-be-capitalized\"><a class=\"anchor\" href=\"/react/jsx-in-depth#user-defined-components-must-be-capitalized\"></a>Les composants utilisateurs doivent commencer par une majuscule </h3>\n<p>Quand un \u00e9l\u00e9ment commence par une lettre minuscule il fait r\u00e9f\u00e9rence \u00e0 un composant natif tel que <code class=\"language-javascript\">&lt;div&gt;</code> ou <code class=\"language-javascript\">&lt;span&gt;</code>, ce qui donne une cha\u00eene de caract\u00e8res <code class=\"language-javascript\">'div'</code> ou <code class=\"language-javascript\">'span'</code> pass\u00e9e \u00e0 <code class=\"language-javascript\">React.createElement</code>. Les types qui commencent par une lettre majuscule comme <code class=\"language-javascript\">&lt;Foo /&gt;</code> sont compil\u00e9s en <code class=\"language-javascript\">React.createElement(Foo)</code> et correspondent \u00e0 un composant d\u00e9fini ou import\u00e9 dans votre fichier JavaScript.</p>\n<p>Nous recommandons de nommer vos composants avec une initiale majuscule. Si vous avez un composant qui d\u00e9marre avec une lettre minuscule, affectez-le \u00e0 une variable avec une initiale majuscule avant de l\u2019utiliser dans votre JSX.</p>\n<p>Par exemple, ce code ne s\u2019ex\u00e9cutera pas comme pr\u00e9vu\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Faux ! C\u2019est un composant, il devrait commencer par une lettre majuscule :</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Correct ! Cette utilisation de &lt;div&gt; fonctionne car div est une balise HTML valide :</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Faux ! React pense que &lt;hello /&gt; est une balise HTML car il ne commence pas par une majuscule :</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hello</span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour corriger \u00e7a, nous allons renommer <code class=\"language-javascript\">hello</code> en <code class=\"language-javascript\">Hello</code> et utiliser <code class=\"language-javascript\">&lt;Hello /&gt;</code> lorsqu\u2019on y fait r\u00e9f\u00e9rence\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Correct ! C\u2019est un composant, il doit avoir une initiale majuscule :</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Correct ! Cette utilisation de &lt;div&gt; fonctionne car div est une balise HTML valide :</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Correct ! React sait que &lt;Hello /&gt; est un composant car il commence par une majuscule.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"choosing-the-type-at-runtime\"><a class=\"anchor\" href=\"/react/jsx-in-depth#choosing-the-type-at-runtime\"></a>Choix du type au moment de l\u2019ex\u00e9cution </h3>\n<p>Vous ne pouvez pas utiliser une expression g\u00e9n\u00e9rale pour le type d\u2019un \u00e9l\u00e9ment React. Si vous voulez utiliser une expression pour d\u00e9finir le type d\u2019un \u00e9l\u00e9ment, affectez-la d\u2019abord \u00e0 une variable dont l\u2019initiale est majuscule. \u00c7a arrive en g\u00e9n\u00e9ral lorsque vous voulez afficher un composant diff\u00e9rent en fonction d\u2019une prop\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  photo<span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  video<span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Faux ! Un type JSX ne peut pas \u00eatre une expression.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span> story<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour corriger \u00e7a, nous allons d\u2019abord affecter le type \u00e0 une variable dont l\u2019identifiant commence par une majuscule\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  photo<span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  video<span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Correct ! Un type JSX peut \u00eatre une variable commen\u00e7ant par une majuscule.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> SpecificStory <span class=\"token operator\">=</span> components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SpecificStory</span></span> <span class=\"token attr-name\">story</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"props-in-jsx\"><a class=\"anchor\" href=\"/react/jsx-in-depth#props-in-jsx\"></a>Les props en JSX </h2>\n<p>Il y a diff\u00e9rents moyens de d\u00e9finir les props en JSX.</p>\n<h3 id=\"javascript-expressions-as-props\"><a class=\"anchor\" href=\"/react/jsx-in-depth#javascript-expressions-as-props\"></a>Les expressions JavaScript comme props </h3>\n<p>Vous pouvez passer n\u2019importe quelle expression JavaScript comme prop, en l\u2019entourant avec des accolades <code class=\"language-javascript\">{}</code>. Par exemple, dans ce code JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">foo</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Pour <code class=\"language-javascript\">MyComponent</code>, la valeur de <code class=\"language-javascript\">props.foo</code> sera <code class=\"language-javascript\">10</code> parce que l\u2019expression <code class=\"language-javascript\">1 + 2 + 3 + 4</code> est calcul\u00e9e.</p>\n<p>Les instructions <code class=\"language-javascript\">if</code> et les boucles <code class=\"language-javascript\">for</code> ne sont pas des expressions en JavaScript, donc elle ne peuvent pas \u00eatre directement utilis\u00e9es en JSX. Au lieu de \u00e7a, vous pouvez les mettre dans le code environnant. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberDescriber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> description<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">pair</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">impair</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> est un nombre </span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez en apprendre davantage sur les <a href=\"/react/conditional-rendering\">conditions</a> et les <a href=\"/react/lists-and-keys\">boucles</a> au sein des sections correspondantes de la documentation.</p>\n<h3 id=\"string-literals\"><a class=\"anchor\" href=\"/react/jsx-in-depth#string-literals\"></a>Les litt\u00e9raux cha\u00eenes </h3>\n<p>Vous pouvez passer un litt\u00e9ral cha\u00eene comme prop. Les deux expressions JSX ci-dessous sont \u00e9quivalentes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello world<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Quand vous passez un litt\u00e9ral cha\u00eene, sa valeur subit un \u00e9chappement HTML inverse. Ces deux expressions JSX sont donc \u00e9quivalentes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token entity named-entity\">&amp;lt;</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'&lt;3'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Ce comportement n\u2019est en g\u00e9n\u00e9ral pas pertinent (au sens o\u00f9 vous n\u2019avez pas \u00e0 vous en soucier particuli\u00e8rement), ce n\u2019est mentionn\u00e9 ici que par souci d\u2019exhaustivit\u00e9.</p>\n<h3 id=\"props-default-to-true\"><a class=\"anchor\" href=\"/react/jsx-in-depth#props-default-to-true\"></a>Les props valent <code class=\"language-javascript\">true</code> par d\u00e9faut </h3>\n<p>Si vous n\u2019affectez aucune valeur \u00e0 une prop, sa valeur par d\u00e9faut sera <code class=\"language-javascript\">true</code>. Ces deux expressions JSX sont \u00e9quivalentes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>En g\u00e9n\u00e9ral, nous d\u00e9conseillons cette syntaxe qui <em>ne passe pas</em> de valeur \u00e0 une <em>prop</em>, car \u00e7a peut \u00eatre confondu avec <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Initialisateur_objet\">la notation ES6 de propri\u00e9t\u00e9s concises</a> <code class=\"language-javascript\">{foo}</code> qui est l\u2019abr\u00e9viation de <code class=\"language-javascript\">{foo: foo}</code> et non de <code class=\"language-javascript\">{foo: true}</code>. Ce comportement existe uniquement par souci de coh\u00e9rence avec HTML.</p>\n<h3 id=\"spread-attributes\"><a class=\"anchor\" href=\"/react/jsx-in-depth#spread-attributes\"></a>D\u00e9composition des props </h3>\n<p>Si vous avez d\u00e9j\u00e0 un objet <code class=\"language-javascript\">props</code> et souhaitez l\u2019utiliser en JSX, vous pouvez utiliser l\u2019op\u00e9rateur de d\u00e9composition <em>(spread operator, NdT)</em> <code class=\"language-javascript\">...</code> pour passer l\u2019ensemble de l\u2019objet props. Ces deux composants sont \u00e9quivalents\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">firstName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Ben<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lastName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hector<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Ben'</span><span class=\"token punctuation\">,</span> lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Hector'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez \u00e9galement choisir certaines props que votre composant utilisera en passant toutes les autres props avec l\u2019op\u00e9rateur de <em>rest</em>.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> kind<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>other <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> className <span class=\"token operator\">=</span> kind <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"PrimaryButton\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"SecondaryButton\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">other</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">kind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cliqu\u00e9 !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Bonjour monde !</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dans l\u2019exemple ci-dessus, la prop <code class=\"language-javascript\">kind</code> est extraite pour le composant principal et <em>n\u2019est pas</em> pass\u00e9e \u00e0 l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;button&gt;</code> du DOM.\nToutes les autres props sont pass\u00e9es via l\u2019objet <code class=\"language-javascript\">...other</code>, ce qui rend ce composant tr\u00e8s flexible. Vous pouvez voir qu\u2019il passe les props <code class=\"language-javascript\">onClick</code> et <code class=\"language-javascript\">children</code>.</p>\n<p>La d\u00e9composition des props peut \u00eatre utile, mais elle permet aussi de passer trop facilement des props inutiles aux composants, ou de passer des attributs HTML invalides au DOM. Nous vous conseillons d\u2019utiliser cette syntaxe avec parcimonie.</p>\n<h2 id=\"children-in-jsx\"><a class=\"anchor\" href=\"/react/jsx-in-depth#children-in-jsx\"></a>Les \u00e9l\u00e9ments enfants en JSX </h2>\n<p>Dans les expressions JSX qui comportent une balise ouvrante et une balise fermante, le contenu entre ces deux balises est pass\u00e9 comme une prop sp\u00e9ciale\u00a0: <code class=\"language-javascript\">props.children</code>. Il existe plusieurs moyens pour passer ces enfants\u00a0:</p>\n<h3 id=\"string-literals-1\"><a class=\"anchor\" href=\"/react/jsx-in-depth#string-literals-1\"></a>Litt\u00e9raux cha\u00eenes </h3>\n<p>Vous pouvez mettre une cha\u00eene de caract\u00e8res entre une balise ouvrante et une fermante et <code class=\"language-javascript\">props.children</code> sera juste cette cha\u00eene de caract\u00e8res. C\u2019est utile pour la plupart des \u00e9l\u00e9ments HTML natifs. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>C\u2019est du JSX valide, et <code class=\"language-javascript\">props.children</code> dans <code class=\"language-javascript\">MyComponent</code> sera simplement la cha\u00eene de caract\u00e8res <code class=\"language-javascript\">\"Bonjour monde\u00a0!\"</code>. Le HTML subit un \u00e9chappement inverse, donc vous pouvez g\u00e9n\u00e9ralement \u00e9crire du JSX de la m\u00eame fa\u00e7on que vous \u00e9crivez du HTML, c\u2019est-\u00e0-dire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>Ce contenu est valide en HTML <span class=\"token entity named-entity\">&amp;amp;</span> en JSX.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>JSX supprime les espaces en d\u00e9but et en fin de ligne. Il supprime \u00e9galement les lignes vides. Les sauts de lignes adjacents aux balises sont retir\u00e9s\u00a0; les sauts de lignes apparaissant au sein de litt\u00e9raux cha\u00eenes sont ramen\u00e9s \u00e0 une seule espace. Du coup, tous les codes ci-dessous donnent le m\u00eame r\u00e9sultat\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Bonjour monde\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Bonjour\n  monde\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n  Bonjour monde\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h3 id=\"jsx-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#jsx-children\"></a>\u00c9l\u00e9ments JSX enfants </h3>\n<p>Vous pouvez fournir des \u00e9l\u00e9ments JSX suppl\u00e9mentaires en tant qu\u2019enfants. C\u2019est utile pour afficher des composants imbriqu\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyFirstComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySecondComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Vous pouvez m\u00e9langer diff\u00e9rents types d\u2019enfants, comme par exemple des litt\u00e9raux cha\u00eenes et des \u00e9l\u00e9ments JSX. L\u00e0 encore, JSX est similaire \u00e0 HTML, de sorte que le code suivant est valide tant en HTML qu\u2019en JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  Voici une liste :\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\u00c9l\u00e9ment 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>\u00c9l\u00e9ment 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Un composant React peut aussi renvoyer un tableau d\u2019\u00e9l\u00e9ments\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Pas besoin d\u2019enrober les \u00e9l\u00e9ments de la liste dans un \u00e9l\u00e9ment suppl\u00e9mentaire !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// N'oubliez pas les \"keys\" :)</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Premier \u00e9l\u00e9ment</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>B<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Deuxi\u00e8me \u00e9l\u00e9ment</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>C<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Troisi\u00e8me \u00e9l\u00e9ment</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"javascript-expressions-as-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#javascript-expressions-as-children\"></a>Les expressions JavaScript comme enfants </h3>\n<p>Vous pouvez passer n\u2019importe quelle expression JavaScript en tant qu\u2019enfant, en l\u2019enrobant avec des accolades <code class=\"language-javascript\">{}</code>. Ainsi, ces expressions sont \u00e9quivalentes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>C\u2019est souvent utile pour afficher une liste d\u2019expressions JSX de longueur quelconque. Par exemple, ce code affiche une liste HTML\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Item</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'finir la doc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'envoyer la pr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tanner Chris pour une revue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les expressions JavaScript peuvent \u00eatre m\u00e9lang\u00e9es avec d\u2019autres types d\u2019enfants. C\u2018est souvent utile en remplacement de gabarits textuels\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>addressee<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"functions-as-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#functions-as-children\"></a>Les fonctions comme enfants </h3>\n<p>En temps normal, les expressions Javascript ins\u00e9r\u00e9es dans JSX produiront une cha\u00eene, un \u00e9l\u00e9ment React ou une liste de ces types. Cependant, <code class=\"language-javascript\">props.children</code> fonctionne exactement comme n\u2019importe quelle prop dans le sens o\u00f9 elle peut passer n\u2019importe quel genre de donn\u00e9es, pas seulement celles que React sait afficher.</p>\n<p>Par exemple, si vous avez un composant personnalis\u00e9, vous pouvez lui faire accepter une fonction de rappel dans <code class=\"language-javascript\">props.children</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Appelle la fonction de rappel children \u00e0 raison de numTimes fois</span>\n<span class=\"token comment\">// afin de produire une r\u00e9p\u00e9tition du composant</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> props<span class=\"token punctuation\">.</span>numTimes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListOfTenThings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Repeat</span></span> <span class=\"token attr-name\">numTimes</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Ceci est l'\u00e9l\u00e9ment </span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> de la liste</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Repeat</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les enfants pass\u00e9s \u00e0 un composant personnalis\u00e9 peuvent \u00eatre n\u2019importe quoi, du moment que ce composant les transforme en quelque chose que React peut comprendre avant le rendu. Cette utilisation n\u2019est pas courante, mais elle fonctionne si vous voulez \u00e9tendre ce dont JSX est capable.</p>\n<h3 id=\"booleans-null-and-undefined-are-ignored\"><a class=\"anchor\" href=\"/react/jsx-in-depth#booleans-null-and-undefined-are-ignored\"></a>Les bool\u00e9ens ainsi que <code class=\"language-javascript\">null</code> et <code class=\"language-javascript\">undefined</code> sont ignor\u00e9s </h3>\n<p><code class=\"language-javascript\">false</code>, <code class=\"language-javascript\">null</code>, <code class=\"language-javascript\">undefined</code>, et <code class=\"language-javascript\">true</code> sont des enfants valides. Ils ne sont simplement pas exploit\u00e9s. Ces expressions JSX produiront toutes la m\u00eame chose\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00c7a peut \u00eatre utile pour afficher des \u00e9l\u00e9ments React de fa\u00e7on conditionnelle. Ce JSX produit un composant <code class=\"language-javascript\">&lt;Header /&gt;</code> uniquement si <code class=\"language-javascript\">showHeader</code> est \u00e0 <code class=\"language-javascript\">true</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>showHeader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Une mise en garde s\u2019impose\u00a0: certaines valeurs <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Glossaire/Falsy\"><em>falsy</em></a>, comme le nombre <code class=\"language-javascript\">0</code>, sont tout de m\u00eame affich\u00e9es par React. Par exemple, ce code ne se comportera pas comme vous l\u2019esp\u00e9rez car il affichera <code class=\"language-javascript\">0</code> lorsque <code class=\"language-javascript\">props.messages</code> est un tableau vide\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Pour corriger \u00e7a, assurez-vous que l\u2019expression avant <code class=\"language-javascript\">&amp;&amp;</code> est toujours un bool\u00e9en\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>R\u00e9ciproquement, si vous voulez qu\u2019une valeur comme <code class=\"language-javascript\">false</code>, <code class=\"language-javascript\">true</code>, <code class=\"language-javascript\">null</code>, ou <code class=\"language-javascript\">undefined</code> soit bien affich\u00e9e, vous devez d\u2019abord la <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/String#Conversion_en_String\">convertir en cha\u00eene</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  Ma variable Javascript est </span><span class=\"token punctuation\">{</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>myVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/jsx-in-depth.md\">Edit this page</a></p></div></article>", "path": "/react/jsx-in-depth", "nav": ["/react/integrating-with-other-libraries", "/react/optimizing-performance"]}, {"key": "Optimiser les performances", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>En interne, React fait appel \u00e0 diff\u00e9rentes techniques intelligentes pour minimiser le nombre d\u2019op\u00e9rations co\u00fbteuses sur le DOM n\u00e9cessaires \u00e0 la mise \u00e0 jour de l\u2019interface utilisateur (UI). Pour de nombreuses applications, utiliser React offrira une UI rapide sans avoir \u00e0 fournir beaucoup de travail pour optimiser les performances. N\u00e9anmoins, il existe plusieurs fa\u00e7ons d\u2019acc\u00e9l\u00e9rer votre application React.</p>\n<h2 id=\"use-the-production-build\"><a class=\"anchor\" href=\"/react/optimizing-performance#use-the-production-build\"></a>Utiliser la version de production </h2>\n<p>Si vous mesurez ou rencontrez des probl\u00e8mes de performances dans vos applications React, assurez-vous que vous testez bien la version minifi\u00e9e de production.</p>\n<p>Par d\u00e9faut, React int\u00e8gre de nombreux avertissements pratiques. Ces avertissements sont tr\u00e8s utiles lors du d\u00e9veloppement. Toutefois, ils rendent React plus gros et plus lent, vous devez donc vous assurer que vous utilisez bien une version de production lorsque vous d\u00e9ployez l\u2019application.</p>\n<p>Si vous n\u2019\u00eates pas s\u00fbr\u00b7e que votre processus de construction est correctement configur\u00e9, vous pouvez le v\u00e9rifier en installant <a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=fr\">l\u2019extension React Developer Tools pour Chrome</a>. Si vous visitez un site avec React en production, l\u2019ic\u00f4ne aura un fond sombre\u00a0:</p>\n<p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/d0f767f80866431ccdec18f200ca58f1/0a47e/devtools-prod.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/d0f767f80866431ccdec18f200ca58f1/0a47e/devtools-prod.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Si vous visitez un site avec React dans sa version de d\u00e9veloppement, l\u2019ic\u00f4ne aura un fond rouge\u00a0:</p>\n<p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/e434ce2f7e64f63e597edf03f4465694/0a47e/devtools-dev.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/e434ce2f7e64f63e597edf03f4465694/0a47e/devtools-dev.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>L\u2019id\u00e9e, c\u2019est que vous utilisiez le mode d\u00e9veloppement lorsque vous travaillez sur votre application, et le mode production lorsque vous la d\u00e9ployez pour vos utilisateurs.</p>\n<p>Vous trouverez ci-dessous les instructions pour proc\u00e9der \u00e0 la construction de votre application pour la production.</p>\n<h3 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/optimizing-performance#create-react-app\"></a>Create React App </h3>\n<p>Si votre projet est construit avec <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/\">Create React App</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">npm run build</code></pre></div>\n<p>Cela g\u00e9n\u00e8rera la version de production de votre application dans le r\u00e9pertoire <code class=\"language-javascript\">build/</code> de votre projet.</p>\n<p>Rappelez-vous que cela n\u2019est n\u00e9cessaire qu\u2019avant le d\u00e9ploiement en production. Lors du d\u00e9veloppement, utilisez <code class=\"language-javascript\">npm start</code>.</p>\n<h3 id=\"single-file-builds\"><a class=\"anchor\" href=\"/react/optimizing-performance#single-file-builds\"></a>Versions de production officielles </h3>\n<p>Nous mettons \u00e0 disposition des versions de React et de React DOM pr\u00eates pour la production sous la forme de fichiers uniques\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Rappelez-vous que seuls les fichiers React finissant par <code class=\"language-javascript\">.production.min.js</code> sont adapt\u00e9s \u00e0 la production.</p>\n<h3 id=\"brunch\"><a class=\"anchor\" href=\"/react/optimizing-performance#brunch\"></a>Brunch </h3>\n<p>Pour obtenir la version de production la plus efficace avec Brunch, installez l\u2019extension <a class=\"external-link\" href=\"https://github.com/brunch/terser-brunch\"><code class=\"language-javascript\">terser-brunch</code></a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\"># Si vous utilisez npm\u00a0:\nnpm install --save-dev terser-brunch\n\n# Si vous utilisez Yarn\u00a0:\nyarn add --dev terser-brunch</code></pre></div>\n<p>Ensuite, pour cr\u00e9er la version de production, ajoutez l\u2019option <code class=\"language-javascript\">-p</code> \u00e0 la commande <code class=\"language-javascript\">build</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">brunch build -p</code></pre></div>\n<p>N\u2019oubliez pas que cela n\u2019est n\u00e9cessaire que pour g\u00e9n\u00e9rer votre version de production. Vous ne devez pas utiliser l\u2019argument <code class=\"language-javascript\">-p</code> ni l\u2019extension lors des phases de d\u00e9veloppement, car \u00e7a masquerait les avertissements utiles de React et ralentirait notablement la construction de l\u2019application.</p>\n<h3 id=\"browserify\"><a class=\"anchor\" href=\"/react/optimizing-performance#browserify\"></a>Browserify </h3>\n<p>Pour obtenir la version de production la plus efficace avec Browserify, installez quelques extensions\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\"># Si vous utilisez npm\u00a0:\nnpm install --save-dev envify terser uglifyify\n\n# Si vous utilisez Yarn\u00a0:\nyarn add --dev envify terser uglifyify</code></pre></div>\n<p>Pour cr\u00e9er la version de production, assurez-vous d\u2019ajouter ces transformations <strong>(l\u2019ordre a son importance)</strong>\u00a0:</p>\n<ul>\n<li>La transformation <a class=\"external-link\" href=\"https://github.com/hughsk/envify\"><code class=\"language-javascript\">envify</code></a> s\u2019assure que l\u2019environnement est correctement d\u00e9fini. D\u00e9finissez-la globalement (<code class=\"language-javascript\">-g</code>).</li>\n<li>La transformation <a class=\"external-link\" href=\"https://github.com/hughsk/uglifyify\"><code class=\"language-javascript\">uglifyify</code></a> supprime les imports de d\u00e9veloppement. D\u00e9finissez-la \u00e9galement au niveau global (<code class=\"language-javascript\">-g</code>).</li>\n<li>Enfin, le <em>bundle</em> qui en r\u00e9sulte est transmis \u00e0 <a class=\"external-link\" href=\"https://github.com/terser-js/terser\"><code class=\"language-javascript\">terser</code></a> pour \u00eatre obfusqu\u00e9 (<a class=\"external-link\" href=\"https://github.com/hughsk/uglifyify#motivationusage\">les raisons sont d\u00e9taill\u00e9es ici</a>).</li>\n</ul>\n<p>Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">browserify ./index.js \\\n  -g [ envify --NODE_ENV production ] \\\n  -g uglifyify \\\n  | terser --compress --mangle &gt; ./bundle.js</code></pre></div>\n<p>Rappelez-vous que vous n\u2019avez \u00e0 faire cela que pour la version de production. Vous ne devez pas appliquer ces extensions en d\u00e9veloppement, car cela masquerait des avertissements utiles de React et ralentirait la construction.</p>\n<h3 id=\"rollup\"><a class=\"anchor\" href=\"/react/optimizing-performance#rollup\"></a>Rollup </h3>\n<p>Pour obtenir la version de production la plus efficace avec Rollup, installez quelques extensions\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token comment\"># Si vous utilisez npm :</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-terser\n\n<span class=\"token comment\"># Si vous utilisez Yarn :</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-terser</code></pre></div>\n<p>Pour cr\u00e9er la version de production, assurez-vous d\u2019ajouter ces transformations <strong>(l\u2019ordre a son importance)</strong>\u00a0:</p>\n<ul>\n<li>L\u2019extension <a class=\"external-link\" href=\"https://github.com/rollup/rollup-plugin-replace\"><code class=\"language-javascript\">replace</code></a> s\u2019assure que l\u2019environnement est correctement configur\u00e9.</li>\n<li>L\u2019extension <a class=\"external-link\" href=\"https://github.com/rollup/rollup-plugin-commonjs\"><code class=\"language-javascript\">commonjs</code></a> prend en charge CommonJS au sein de Rollup.</li>\n<li>L\u2019extension <a class=\"external-link\" href=\"https://github.com/TrySound/rollup-plugin-terser\"><code class=\"language-javascript\">terser</code></a> r\u00e9alise la compression et obfusque le bundle final.</li>\n</ul>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-replace'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'process.env.NODE_ENV'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-commonjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-terser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Pour une configuration compl\u00e8te, <a class=\"external-link\" href=\"https://gist.github.com/Rich-Harris/cb14f4bc0670c47d00d191565be36bf0\">vous pouvez consulter ce gist</a>.</p>\n<p>Rappelez-vous que vous n\u2019avez \u00e0 faire cela que pour la version de production. Vous ne devez pas utiliser les extensions <code class=\"language-javascript\">terser</code> ou <code class=\"language-javascript\">replace</code> avec une valeur <code class=\"language-javascript\">'production'</code> en d\u00e9veloppement, car cela masquerait des avertissements utiles de React et ralentirait la construction.</p>\n<h3 id=\"webpack\"><a class=\"anchor\" href=\"/react/optimizing-performance#webpack\"></a>webpack </h3>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez Create React App, merci de suivre <a href=\"/react/optimizing-performance#create-react-app\">les instructions ci-dessus</a>.<br/>\nCette section n\u2019est utile que si vous configurez webpack vous-m\u00eame.</p>\n</div>\n<p>Webpack v4+ minifera automatiquement votre code en mode production.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> TerserPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n  optimization<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    minimizer<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/* additional options here */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous pouvez en apprendre davantage sur le sujet en consultant la <a class=\"external-link\" href=\"https://webpack.js.org/guides/production/\">documentation webpack</a>.</p>\n<p>Rappelez-vous que vous n\u2019avez \u00e0 faire cela que pour la version de production. Vous ne devez pas utiliser <code class=\"language-javascript\">TerserPlugin</code> en d\u00e9veloppement, car cela masquerait des avertissements utiles de React et ralentirait la construction.</p>\n<h2 id=\"profiling-components-with-the-chrome-performance-tab\"><a class=\"anchor\" href=\"/react/optimizing-performance#profiling-components-with-the-chrome-performance-tab\"></a>Profilage des composants avec l\u2019onglet Performance de Chrome </h2>\n<p>En mode de <strong>d\u00e9veloppement</strong>, vous pouvez voir comment les composants sont mont\u00e9s, mis \u00e0 jour et d\u00e9mont\u00e9s en utilisant les outils de performances dans les navigateurs qui les prennent en charge. Par exemple\u00a0:</p>\n<center>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/64d522b74fb585f1abada9801f85fa9d/1ac66/react-perf-chrome-timeline.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/64d522b74fb585f1abada9801f85fa9d/1ac66/react-perf-chrome-timeline.png\">Image link</a>\n</span>\n</span>\n</a>\n</center>\n<p>Pour faire \u00e7a avec Chrome\u00a0:</p>\n<ol>\n<li><strong>D\u00e9sactivez temporairement toutes les extensions de Chrome, en particulier React DevTools</strong>. Elles peuvent consid\u00e9rablement impacter les r\u00e9sutats\u00a0!</li>\n<li>Assurez-vous d\u2019utiliser l\u2019application en mode de d\u00e9veloppement.</li>\n<li>Ouvrez l\u2019onglet <strong><em><a class=\"external-link\" href=\"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/timeline-tool\">Performances</a></em></strong> dans les DevTools de Chrome et appuyez sur <strong><em>Record</em></strong>.</li>\n<li>Effectuez les op\u00e9rations que vous voulez analyser. N\u2019enregistrez pas plus de 20 secondes, car Chrome pourrait se bloquer.</li>\n<li>Arr\u00eatez l\u2019enregistrement.</li>\n<li>Les \u00e9v\u00e9nements React seront regroup\u00e9s sous l\u2019\u00e9tiquette <strong><em>User Timing</em></strong>.</li>\n</ol>\n<p>Pour une pr\u00e9sentation plus d\u00e9taill\u00e9e, consultez <a class=\"external-link\" href=\"https://calibreapp.com/blog/react-performance-profiling-optimization\">cet article de Ben Schwarz</a>.</p>\n<p>Veuillez noter que <strong>ces r\u00e9sultats sont relatifs et que les composants seront rendus plus rapidement en production</strong>. N\u00e9anmoins, \u00e7a devrait vous aider \u00e0 comprendre quand des \u00e9l\u00e9ments d\u2019interface sont mis \u00e0 jour par erreur, ainsi que la profondeur et la fr\u00e9quence des mises \u00e0 jour de l\u2019UI.</p>\n<p>Pour le moment, Chrome, Edge et IE sont les seuls navigateurs prenant en charge cette fonctionnalit\u00e9, mais comme nous utilisons <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\">l\u2019API standard User Timing</a>, nous nous attendons \u00e0 ce que d\u2019autres navigateurs la prennent en charge.</p>\n<h2 id=\"profiling-components-with-the-devtools-profiler\"><a class=\"anchor\" href=\"/react/optimizing-performance#profiling-components-with-the-devtools-profiler\"></a>Profilage des composants avec le DevTools Profiler </h2>\n<p><code class=\"language-javascript\">react-dom</code> 16.5+ et <code class=\"language-javascript\">react-native</code> 0.57+ offrent des capacit\u00e9s de profilage avanc\u00e9es en mode de d\u00e9veloppement avec le Profiler de l\u2019extension React DevTools.\nVous trouverez un aper\u00e7u du profileur sur le billet de blog <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/09/10/introducing-the-react-profiler.html\"><em>\u00ab\u00a0D\u00e9couvrez le profileur React\u00a0\u00bb</em></a>.\nUne pr\u00e9sentation vid\u00e9o du profileur est \u00e9galement <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=nySib7ipZdk\">disponible sur YouTube</a>.</p>\n<p>Si vous n\u2019avez pas encore install\u00e9 l\u2019extension React DevTools, vous pourrez la trouver ici\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=fr\">L\u2019extension pour le navigateur Chrome</a>.</li>\n<li><a class=\"external-link\" href=\"https://addons.mozilla.org/en-GB/firefox/addon/react-devtools/\">L\u2019extension pour le navigateur Firefox</a>.</li>\n<li><a class=\"external-link\" href=\"https://www.npmjs.com/package/react-devtools\">Le module pour Node.js</a>.</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Un module de profilage pour la production de <code class=\"language-javascript\">react-dom</code> existe aussi dans <code class=\"language-javascript\">react-dom/profiling</code>.\nPour en savoir plus sur l\u2019utilisation de ce module, rendez-vous \u00e0 l\u2019adresse <a class=\"external-link\" href=\"https://fb.me/react-profiling\">fb.me/react-profiling</a>.</p>\n</div>\n<h2 id=\"virtualize-long-lists\"><a class=\"anchor\" href=\"/react/optimizing-performance#virtualize-long-lists\"></a>Virtualiser les listes longues </h2>\n<p>Si votre application g\u00e9n\u00e8re d\u2019importantes listes de donn\u00e9es (des centaines ou des milliers de lignes), nous vous conseillons d\u2019utiliser la technique de \u00ab\u00a0fen\u00eatrage\u00a0\u00bb <em>(windowing, NdT)</em>. Cette technique consiste \u00e0 n\u2019afficher \u00e0 tout instant qu\u2019un petit sous-ensemble des lignes, ce qui permet de diminuer consid\u00e9rablement le temps n\u00e9cessaire au rendu des composants ainsi que le nombre de n\u0153uds DOM cr\u00e9\u00e9s.</p>\n<p><a class=\"external-link\" href=\"https://react-window.now.sh/\">react-window</a> et <a class=\"external-link\" href=\"https://bvaughn.github.io/react-virtualized/\">react-virtualized</a> sont des biblioth\u00e8ques populaires de gestion du fen\u00eatrage. Elles fournissent diff\u00e9rents composants r\u00e9utilisables pour afficher des listes, des grilles et des donn\u00e9es tabulaires. Vous pouvez \u00e9galement cr\u00e9er votre propre composant, comme <a class=\"external-link\" href=\"https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3\">l\u2019a fait Twitter</a>, si vous voulez quelque chose de plus adapt\u00e9 \u00e0 vos cas d\u2019usage sp\u00e9cifiques.</p>\n<h2 id=\"avoid-reconciliation\"><a class=\"anchor\" href=\"/react/optimizing-performance#avoid-reconciliation\"></a>\u00c9viter la r\u00e9conciliation </h2>\n<p>React construit et maintient une repr\u00e9sentation interne de l\u2019UI produite, repr\u00e9sentation qui inclut les \u00e9l\u00e9ments React renvoy\u00e9s par vos composants. Elle permet \u00e0 React d\u2019\u00e9viter la cr\u00e9ation de n\u0153uds DOM superflus et l\u2019acc\u00e8s excessif aux n\u0153uds existants, dans la mesure o\u00f9 ces op\u00e9rations sont plus lentes que sur des objets JavaScript. On y fait parfois r\u00e9f\u00e9rence en parlant de \u00ab\u00a0DOM virtuel\u00a0\u00bb, mais \u00e7a fonctionne de la m\u00eame fa\u00e7on avec React Native.</p>\n<p>Quand les props ou l\u2019\u00e9tat local d\u2019un composant changent, React d\u00e9cide si une mise \u00e0 jour du DOM est n\u00e9cessaire en comparant l\u2019\u00e9l\u00e9ment renvoy\u00e9 avec l\u2019\u00e9l\u00e9ment du rendu pr\u00e9c\u00e9dent. Quand ils ne sont pas \u00e9gaux, React met \u00e0 jour le DOM.</p>\n<p>M\u00eame si React ne met \u00e0 jour que les n\u0153uds DOM modifi\u00e9s, refaire un rendu prend un certain temps. Dans la plupart des cas ce n\u2019est pas un probl\u00e8me, mais si le ralentissement est perceptible, vous pouvez acc\u00e9l\u00e9rer le processus en surchargeant la m\u00e9thode <code class=\"language-javascript\">shouldComponentUpdate</code> du cycle de vie, qui est d\u00e9clench\u00e9e avant le d\u00e9marrage du processus de rafra\u00eechissement. L\u2019impl\u00e9mentation par d\u00e9faut de cette m\u00e9thode renvoie <code class=\"language-javascript\">true</code>, laissant ainsi React faire la mise \u00e0 jour\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si vous savez que dans certaines situations votre composant n\u2019a pas besoin d\u2019\u00eatre mis \u00e0 jour, vous pouvez plut\u00f4t renvoyer <code class=\"language-javascript\">false</code> depuis <code class=\"language-javascript\">shouldComponentUpdate</code> afin de sauter le rendu, et donc l\u2019appel \u00e0 la m\u00e9thode <code class=\"language-javascript\">render()</code> sur ce composant et ses enfants.</p>\n<p>Le plus souvent, plut\u00f4t que d\u2019\u00e9crire manuellement <code class=\"language-javascript\">shouldComponentUpdate()</code>, vous pouvez plut\u00f4t choisir d\u2019\u00e9tendre <a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a>. \u00c7a revient \u00e0 impl\u00e9menter <code class=\"language-javascript\">shouldComponentUpdate()</code> avec une comparaison superficielle des propri\u00e9t\u00e9s et \u00e9tat actuels et pr\u00e9c\u00e9dents.</p>\n<h2 id=\"shouldcomponentupdate-in-action\"><a class=\"anchor\" href=\"/react/optimizing-performance#shouldcomponentupdate-in-action\"></a>shouldComponentUpdate en action </h2>\n<p>Voici un sous-arbre de composants. Pour chacun, <code class=\"language-javascript\">SCU</code> indique ce que <code class=\"language-javascript\">shouldComponentUpdate</code> renvoie, et <code class=\"language-javascript\">vDOMEq</code> indique si les \u00e9l\u00e9ments renvoy\u00e9s \u00e9taient \u00e9quivalents. Enfin, la couleur du cercle indique si le composant doit \u00eatre r\u00e9concili\u00e9 ou non.</p>\n<p></p><figure>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/5ee1bdf4779af06072a17b7a0654f6db/cd039/should-component-update.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/5ee1bdf4779af06072a17b7a0654f6db/cd039/should-component-update.png\">Image link</a>\n</span>\n</span>\n</a>\n</figure><p></p>\n<p>Puisque <code class=\"language-javascript\">shouldComponentUpdate</code> a renvoy\u00e9 <code class=\"language-javascript\">false</code> pour le sous-arbre d\u2019origine C2, React n\u2019a pas tent\u00e9 de faire le rendu de C2, et n\u2019a pas invoqu\u00e9 non plus <code class=\"language-javascript\">shouldComponentUpdate</code> sur C4 et C5.</p>\n<p>Pour C1 et C3, <code class=\"language-javascript\">shouldComponentUpdate</code> a renvoy\u00e9 <code class=\"language-javascript\">true</code>, React a donc d\u00fb descendre dans les feuilles de l\u2019arbre et les v\u00e9rifier. Pour C6, <code class=\"language-javascript\">shouldComponentUpdate</code> a renvoy\u00e9 <code class=\"language-javascript\">true</code>, et puisque les \u00e9l\u00e9ments renvoy\u00e9s n\u2019\u00e9taient pas \u00e9quivalents, React a d\u00fb mettre \u00e0 jour le DOM.</p>\n<p>Le dernier cas int\u00e9ressant concerne C8. React a d\u00fb faire le rendu de ce composant, mais puisque les \u00e9l\u00e9ments React renvoy\u00e9s \u00e9taient \u00e9quivalents \u00e0 ceux du rendu pr\u00e9c\u00e9dent, il n\u2019\u00e9tait pas n\u00e9cessaire de mettre \u00e0 jour le DOM.</p>\n<p>Remarquez que React n\u2019a d\u00fb modifier le DOM que pour C6, ce qui \u00e9tait in\u00e9vitable. Pour C8, il s\u2019en est dispens\u00e9 suite \u00e0 la comparaison des \u00e9l\u00e9ments React renvoy\u00e9s, et pour le sous-arbre de C2 ainsi que pour C7, il n\u2019a m\u00eame pas eu \u00e0 comparer les \u00e9l\u00e9ments car nous avons abandonn\u00e9 au niveau de <code class=\"language-javascript\">shouldComponentUpdate</code>, et <code class=\"language-javascript\">render</code> n\u2019a pas \u00e9t\u00e9 appel\u00e9e.</p>\n<h2 id=\"examples\"><a class=\"anchor\" href=\"/react/optimizing-performance#examples\"></a>Exemples </h2>\n<p>Si la seule fa\u00e7on de changer pour votre composant provient d\u2019une modification de <code class=\"language-javascript\">props.color</code> ou <code class=\"language-javascript\">state.count</code>, alors vous devez v\u00e9rifier ces valeurs dans <code class=\"language-javascript\">shouldComponentUpdate</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color <span class=\"token operator\">!==</span> nextProps<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">!==</span> nextState<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Compteur : </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans ce code, <code class=\"language-javascript\">shouldComponentUpdate</code> v\u00e9rifie simplement si <code class=\"language-javascript\">props.color</code> ou <code class=\"language-javascript\">state.count</code> ont chang\u00e9. Dans le cas contraire, le composant n\u2019est pas mis \u00e0 jour. Si votre composant devient plus complexe, vous pourriez utiliser une approche similaire en proc\u00e9dant \u00e0 une \u00ab\u00a0comparaison superficielle\u00a0\u00bb <em>(shallow comparison, NdT)</em> de tous les champs de <code class=\"language-javascript\">props</code> et <code class=\"language-javascript\">state</code> afin de d\u00e9terminer si le composant doit \u00eatre mis \u00e0 jour. Ce mod\u00e8le est suffisamment fr\u00e9quent pour que React nous y aide\u00a0: on h\u00e9rite simplement de <code class=\"language-javascript\">React.PureComponent</code>. Ce code est donc une fa\u00e7on plus simple de r\u00e9aliser la m\u00eame chose\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Compteur : </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La plupart du temps, vous pouvez utiliser <code class=\"language-javascript\">React.PureComponent</code> au lieu de red\u00e9finir <code class=\"language-javascript\">shouldComponentUpdate</code> vous-m\u00eame. Il ne r\u00e9alise qu\u2019une comparaison superficielle, vous ne pouvez donc pas l\u2019utiliser si les propri\u00e9t\u00e9s ou l\u2019\u00e9tat sont modifi\u00e9s d\u2019une fa\u00e7on qui \u00e9chapperait \u00e0 ce type de comparaison.</p>\n<p>\u00c7a peut devenir un probl\u00e8me avec des structures de donn\u00e9es plus complexes. Supposons, par exemple, que vous voulez qu\u2019un composant <code class=\"language-javascript\">ListOfWords</code> affiche une liste de mots s\u00e9par\u00e9s par des virgules, avec un composant parent <code class=\"language-javascript\">WordAdder</code> qui vous permet d\u2019ajouter un mot \u00e0 la liste d\u2019un simple clic. Ce code <em>ne fonctionnera pas</em> correctement\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListOfWords</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordAdder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      words<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Cette section comporte une mauvaise pratique qui entra\u00eenera un bug.</span>\n    <span class=\"token keyword\">const</span> words <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">;</span>\n    words<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>words<span class=\"token operator\">:</span> words<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListOfWords</span></span> <span class=\"token attr-name\">words</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le probl\u00e8me est que <code class=\"language-javascript\">PureComponent</code> va faire une comparaison r\u00e9f\u00e9rentielle entre l\u2019ancienne et la nouvelle valeur de <code class=\"language-javascript\">this.props.words</code>. Dans la mesure o\u00f9 ce code modifie directement le tableau <code class=\"language-javascript\">words</code> dans la m\u00e9thode <code class=\"language-javascript\">handleClick</code> de <code class=\"language-javascript\">WordAdder</code>, l\u2019ancienne et la nouvelle valeurs de <code class=\"language-javascript\">this.props.words</code> sont consid\u00e9r\u00e9es comme \u00e9quivalentes (m\u00eame objet en m\u00e9moire), bien que les mots dans le tableau aient \u00e9t\u00e9 modifi\u00e9s. Le composant <code class=\"language-javascript\">ListOfWords</code> ne sera pas mis \u00e0 jour, m\u00eame s\u2019il devrait afficher de nouveaux mots.</p>\n<h2 id=\"the-power-of-not-mutating-data\"><a class=\"anchor\" href=\"/react/optimizing-performance#the-power-of-not-mutating-data\"></a>La puissance des donn\u00e9es immuables </h2>\n<p>La fa\u00e7on la plus simple d\u2019\u00e9viter ce probl\u00e8me consiste \u00e0 \u00e9viter de modifier directement les valeurs que vous utilisez dans les props ou l\u2019\u00e9tat local. Par exemple, la m\u00e9thode <code class=\"language-javascript\">handleClick</code> au-dessus pourrait \u00eatre r\u00e9\u00e9crite en utilisant <code class=\"language-javascript\">concat</code> comme suit\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    words<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ES6 offre la <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Syntaxe_d%C3%A9composition\">syntaxe de d\u00e9composition</a> <em>(spread operator, NdT)</em> pour les tableaux, ce qui facilite ce type d\u2019op\u00e9ration. Si vous utilisez Create React App, cette syntaxe est disponible par d\u00e9faut.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    words<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">,</span> <span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>D\u2019une mani\u00e8re similaire, vous pouvez r\u00e9\u00e9crire du code qui modifie des objets en \u00e9vitant la mutation. Par exemple, supposons que nous ayons un objet nomm\u00e9 <code class=\"language-javascript\">colormap</code> et que nous voulions \u00e9crire une fonction qui change la valeur de <code class=\"language-javascript\">colormap.right</code> en <code class=\"language-javascript\">'blue'</code>. Nous pourrions l\u2019\u00e9crire ainsi\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  colormap<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour \u00e9crire cela en \u00e9vitant de modifier l\u2019objet original, nous pouvons utiliser la m\u00e9thode <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Object/assign\">Object.assign</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> colormap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>right<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">updateColorMap</code> renvoie d\u00e9sormais un nouvel objet, plut\u00f4t que de modifier l\u2019ancien. <code class=\"language-javascript\">Object.assign</code> fait partie d\u2019ES6 et n\u00e9cessite un polyfill.</p>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Syntaxe_d%C3%A9composition\">La syntaxe de d\u00e9composition des objets</a> facilite la mise \u00e0 jour d\u2019objets sans pour autant les modifier\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>colormap<span class=\"token punctuation\">,</span> right<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette fonctionnalit\u00e9 est apparue dans JavaScript avec ES2018.</p>\n<p>Si vous utilisez Create React App, la m\u00e9thode <code class=\"language-javascript\">Object.assign</code> et la syntaxe de d\u00e9composition d\u2019objets sont toutes deux disponibles par d\u00e9faut.</p>\n<p>Lorsque vous faites face \u00e0 des objets profond\u00e9ment imbriqu\u00e9s, les mettre \u00e0 jour de mani\u00e8re immuable peut se r\u00e9v\u00e9ler compliqu\u00e9. Si vous faites face \u00e0 ce probl\u00e8me, tournez-vous vers <a class=\"external-link\" href=\"https://github.com/mweststrate/immer\">Immer</a> ou <a class=\"external-link\" href=\"http://github.com/kolodny/immutability-helper\">immutability-helper</a>. Ces librairies vous permettent d\u2019\u00e9crire du code tr\u00e8s lisible sans perdre les b\u00e9n\u00e9fices de l\u2019immuabilit\u00e9.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/optimizing-performance.md\">Edit this page</a></p></div></article>", "path": "/react/optimizing-performance", "nav": ["/react/jsx-in-depth", "/react/portals"]}, {"key": "Portails", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les portails fournissent une excellente solution pour afficher des composants enfants dans un n\u0153ud DOM qui existe en dehors de la hi\u00e9rarchie DOM du composant parent.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Le premier argument (<code class=\"language-javascript\">child</code>) peut \u00eatre n\u2019importe quel <a href=\"/react/react-component#render\">enfant affichable par React</a>, comme un \u00e9l\u00e9ment, une chaine de caract\u00e8res ou un fragment. Le second argument (<code class=\"language-javascript\">container</code>) est un \u00e9l\u00e9ment du DOM.</p>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/portals#usage\"></a>Utilisation </h2>\n<p>D\u2019habitude, lorsque vous renvoyez un \u00e9l\u00e9ment depuis le rendu d\u2019un composant, cet \u00e9l\u00e9ment est mont\u00e9 dans le DOM en tant qu\u2019enfant du plus proche parent\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React monte une nouvelle div et affiche les enfants \u00e0 l\u2019int\u00e9rieur de celle-ci</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cependant il est parfois utile d\u2019ins\u00e9rer un enfant \u00e0 un autre emplacement du DOM\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React *ne cr\u00e9e pas* une nouvelle div, mais affiche les enfants dans `domNode`.</span>\n  <span class=\"token comment\">// `domNode` peut \u00eatre n\u2019importe quel \u00e9l\u00e9ment valide du DOM, peu importe sa position.</span>\n  <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    domNode</span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Un cas typique d\u2019utilisation des portails survient lorsqu\u2019un composant parent poss\u00e8de un style <code class=\"language-javascript\">overflow: hidden</code> ou <code class=\"language-javascript\">z-index</code> et que l\u2019enfant a besoin de \u00ab\u00a0sortir de son conteneur\u00a0\u00bb  visuellement. C\u2019est par exemple le cas des bo\u00eetes de dialogues, des pop-ups ou encore des infobulles.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Lorsque vous travaillez avec les portails, gardez en t\u00eate que la <a href=\"/react/accessibility#programmatically-managing-focus\">gestion du focus du clavier</a> devient tr\u00e8s importante.</p>\n<p>Pour les fen\u00eatres modales, assurez-vous que tout le monde puisse interagir avec celles-ci en suivant les r\u00e8gles <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal\">WAI-ARIA Modal Authoring Practices du W3C</a> (en anglais).</p>\n</div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/yzMaBd\"><strong>Essayer dans CodePen</strong></a></p>\n<h2 id=\"event-bubbling-through-portals\"><a class=\"anchor\" href=\"/react/portals#event-bubbling-through-portals\"></a>La propagation des \u00e9v\u00e9nements dans les portails </h2>\n<p>M\u00eame si un portail peut \u00eatre plac\u00e9 n\u2019importe o\u00f9 dans l\u2019arborescence DOM, il se comporte comme un enfant React normal \u00e0 tous les autres points de vue. Les fonctionnalit\u00e9s comme le contexte se comportent exactement de la m\u00eame fa\u00e7on, ind\u00e9pendamment du fait que l\u2019enfant soit un portail, car le portail existe toujours dans <em>l\u2019arborescence React</em>, ind\u00e9pendamment de sa position dans <em>l\u2019arborescence DOM</em>.</p>\n<p>\u00c7a concerne aussi la propagation montante des \u00e9v\u00e9nements. Un \u00e9v\u00e9nement d\u00e9clench\u00e9 \u00e0 l\u2019int\u00e9rieur d\u2019un portail sera propag\u00e9 aux anc\u00eatres dans <em>l\u2019arborescence React</em>, m\u00eame si ces \u00e9l\u00e9ments ne sont pas ses anc\u00eatres dans <em>l\u2019arborescence DOM</em>. Prenons par exemple le code HTML suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app-root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Un composant <code class=\"language-javascript\">Parent</code> dans <code class=\"language-javascript\">#app-root</code> pourrait attraper un \u00e9v\u00e9nement montant non-intercept\u00e9 provenant du n\u0153ud fr\u00e8re <code class=\"language-javascript\">#modal-root</code>.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Ces deux conteneurs sont fr\u00e8res dans le DOM</span>\n<span class=\"token keyword\">const</span> appRoot <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app-root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> modalRoot <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'modal-root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Modal</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// L\u2019\u00e9l\u00e9ment portail est ins\u00e9r\u00e9 dans l\u2019arborescence DOM une fois</span>\n    <span class=\"token comment\">// que les enfants du Modal sont mont\u00e9s, ce qui signifie que</span>\n    <span class=\"token comment\">// les enfants seront mont\u00e9s sur un n\u0153ud DOM d\u00e9tach\u00e9.</span>\n    <span class=\"token comment\">// Si un composant enfant n\u00e9cessite d\u2019\u00eatre attach\u00e9 au DOM</span>\n    <span class=\"token comment\">// d\u00e8s le montage, par exemple pour mesurer un n\u0153ud DOM ou</span>\n    <span class=\"token comment\">// utiliser 'autoFocus' dans un n\u0153ud descendant, ajoutez un \u00e9tat</span>\n    <span class=\"token comment\">// \u00e0 la modale et affichez uniquement les enfants une fois la</span>\n    <span class=\"token comment\">// modale ins\u00e9r\u00e9e dans le DOM.</span>\n    modalRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    modalRoot<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>clicks<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// La fonction se d\u00e9clenchera lorsque le bouton dans l\u2019enfant sera cliqu\u00e9,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// permettant la mise \u00e0 jour de l\u2019\u00e9tat du parent, m\u00eame si le bouton</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// n\u2019en est pas un descendant direct dans le DOM.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      clicks<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>clicks <span class=\"token operator\">+</span> <span class=\"token number\">1</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Nombre de clics : </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>clicks<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Ouvrez les outils de d\u00e9veloppement de votre navigateur</span>\n<span class=\"token plain-text\">          pour observer que ce bouton n\u2019est pas un enfant de la div</span>\n<span class=\"token plain-text\">          qui \u00e9coute les \u00e9v\u00e9nements de clic.</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Modal</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Modal</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Lors de clics sur ce bouton, l\u2019\u00e9v\u00e9nement sera propag\u00e9 au parent</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// car il n\u2019y a pas d'attribut 'onClick' d\u00e9fini ici.</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Parent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> appRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jGBWpE\"><strong>Essayer dans CodePen</strong></a></p>\n<p>Attraper un \u00e9v\u00e9nement en cours de propagation depuis un portail dans un composant parent autorise le d\u00e9veloppement d\u2019abstractions plus flexibles qui ne sont pas forc\u00e9ment li\u00e9es aux portails. Par exemple, si vous affichez un composant <code class=\"language-javascript\">&lt;Modal /&gt;</code>, le parent peut capturer ses \u00e9v\u00e9nements, que le parent soit impl\u00e9ment\u00e9 \u00e0 base de portails ou non.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/portals.md\">Edit this page</a></p></div></article>", "path": "/react/portals", "nav": ["/react/optimizing-performance", "/react/profiler"]}, {"key": "Profileur", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Le <code class=\"language-javascript\">Profiler</code> mesure \u00e0 quelle fr\u00e9quence une application React r\u00e9alise son rendu, et d\u00e9termine le \u00ab\u00a0co\u00fbt\u00a0\u00bb de ces rendus.  L\u2019objectif est de vous aider \u00e0 identifier les parties d\u2019une application qui sont lentes et pourraient b\u00e9n\u00e9ficier <a href=\"/react/hooks-faq#how-to-memoize-calculations\">d\u2019optimisations telles que la m\u00e9mo\u00efsation</a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le profilage p\u00e9nalise l\u00e9g\u00e8rement les performances effectives, il est donc <strong>d\u00e9sactiv\u00e9 dans <a href=\"/react/optimizing-performance#use-the-production-build\">le build de production</a></strong>.</p>\n<p>Pour activer le profilage en production, React fournit un build de production sp\u00e9cifique avec le profilage\nactiv\u00e9.  Vous pouvez apprendre comment l\u2019utiliser sur <a class=\"external-link\" href=\"https://fb.me/react-profiling\">fb.me/react-profiling</a>.</p>\n</div>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/profiler#usage\"></a>Utilisation </h2>\n<p>Un <code class=\"language-javascript\">Profiler</code> peut \u00eatre ajout\u00e9 n\u2019importe o\u00f9 dans l\u2019arborescence React pour mesurer le co\u00fbt de rendu de la partie de l\u2019arbre qu\u2019il entoure.  Il n\u00e9cessite deux props\u00a0: un <code class=\"language-javascript\">id</code> (cha\u00eene de caract\u00e8res) et une fonction de rappel <code class=\"language-javascript\">onRender</code> que React appellera d\u00e8s qu\u2019un composant au sein de l\u2019arborescence enrob\u00e9e \u00ab\u00a0finalise\u00a0\u00bb <em>(\u201ccommits\u201d, NdT)</em> une mise \u00e0 jour.</p>\n<p>Par exemple, pour profiler le composant <code class=\"language-javascript\">Navigation</code> et ses descendants, on ferait ceci\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Navigation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Navigation</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous pouvez utiliser plusieurs composants <code class=\"language-javascript\">Profiler</code> pour mesurer diff\u00e9rentes parties d\u2019une m\u00eame application\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Navigation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Navigation</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Main<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Les composants <code class=\"language-javascript\">Profiler</code> peuvent par ailleurs \u00eatre imbriqu\u00e9s pour mesurer diff\u00e9rents p\u00e9rim\u00e8tres dans une m\u00eame partie de l\u2019arborescence\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Panel<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Panel</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>PreviewPane<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PreviewPane</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Panel</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>M\u00eame si <code class=\"language-javascript\">Profiler</code> est un composant l\u00e9ger, il ne devrait \u00eatre utilis\u00e9 que lorsqu\u2019il est n\u00e9cessaire, car chaque utilisation entra\u00eene une p\u00e9nalit\u00e9 en termes de processeur et de m\u00e9moire pour l\u2019application.</p>\n</div>\n<h2 id=\"onrender-callback\"><a class=\"anchor\" href=\"/react/profiler#onrender-callback\"></a>Fonction de rappel <code class=\"language-javascript\">onRender</code> </h2>\n<p>Le <code class=\"language-javascript\">Profiler</code> n\u00e9cessite une fonction <code class=\"language-javascript\">onRender</code> dans ses props.  React appelle cette fonction d\u00e8s qu\u2019un composant dans l\u2019arbre profil\u00e9 \u00ab\u00a0finalise\u00a0\u00bb <em>(\u201ccommits\u201d, NdT)</em> une mise \u00e0 jour.  La fonction re\u00e7oit des param\u00e8tres d\u00e9rivant ce qui vient de faire l\u2018objet d\u2019un rendu, et le temps que \u00e7a a pris.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onRenderCallback</span><span class=\"token punctuation\">(</span>\n  id<span class=\"token punctuation\">,</span> <span class=\"token comment\">// la prop \"id\" du Profiler dont l\u2019arborescence vient d\u2019\u00eatre mise \u00e0 jour</span>\n  phase<span class=\"token punctuation\">,</span> <span class=\"token comment\">// soit \"mount\" (si on est au montage) soit \"update\" (pour une mise \u00e0 jour)</span>\n  actualDuration<span class=\"token punctuation\">,</span> <span class=\"token comment\">// temps pass\u00e9 \u00e0 faire le rendu de la mise \u00e0 jour finalis\u00e9e</span>\n  baseDuration<span class=\"token punctuation\">,</span> <span class=\"token comment\">// temps estim\u00e9 du rendu pour l\u2019ensemble du sous-arbre sans m\u00e9mo\u00efsation</span>\n  startTime<span class=\"token punctuation\">,</span> <span class=\"token comment\">// horodatage du d\u00e9but de rendu de cette mise \u00e0 jour par React</span>\n  commitTime<span class=\"token punctuation\">,</span> <span class=\"token comment\">// horodatage de la finalisation de cette mise \u00e0 jour par React</span>\n  interactions <span class=\"token comment\">// Un Set des interactions qui constituent cette mise \u00e0 jour</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Agr\u00e8ge ou logue les mesures de rendu\u2026</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Examinons chaque argument d\u2019un peu plus pr\u00e8s\u2026</p>\n<ul>\n<li><strong><code class=\"language-javascript\">id: string</code></strong> -\nla prop <code class=\"language-javascript\">id</code> du <code class=\"language-javascript\">Profiler</code> dont l\u2019arbre vient d\u2019\u00eatre finalis\u00e9.\nOn s\u2019en sert pour identifier la partie de l\u2019arbre qui vient d\u2019\u00eatre finalis\u00e9e si on utilise plusieurs profileurs.</li>\n<li><strong><code class=\"language-javascript\">phase: \"mount\" | \"update\"</code></strong> -\nnous permet de savoir si l\u2019arbre vient d\u2019\u00eatre mont\u00e9 (premier rendu) ou si c\u2019est un nouveau rendu suite \u00e0 une modification des props, de l\u2019\u00e9tat local ou de hooks.</li>\n<li><strong><code class=\"language-javascript\">actualDuration: number</code></strong> -\ntemps pass\u00e9 \u00e0 faire le rendu du <code class=\"language-javascript\">Profiler</code> et de ses descendants lors de la mise \u00e0 jour courante.\nNous permet de voir dans quelle mesure le sous-arbre tire parti de la m\u00e9mo\u00efsation (ex. <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a>, <a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a>, <a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate</code></a>).\nDans l\u2019id\u00e9al cette valeur devrait d\u00e9cro\u00eetre significativement apr\u00e8s le montage initial, car de nombreux descendants ne devraient n\u00e9cessiter un nouveau rendu que si leurs propres props changent.</li>\n<li><strong><code class=\"language-javascript\">baseDuration: number</code></strong> -\ndur\u00e9e du <code class=\"language-javascript\">render</code> le plus r\u00e9cent qui revisitait l\u2019ensemble des composants dans l\u2019arbre enrob\u00e9 par le <code class=\"language-javascript\">Profiler</code>.\nCette valeur nous permet d\u2019estimer un sc\u00e9nario du pire (ex. le montage initial ou un arbre sans m\u00e9mo\u00efsation).</li>\n<li><strong><code class=\"language-javascript\">startTime: number</code></strong> -\nhorodatage du d\u00e9but du rendu de la mise \u00e0 jour courante par React.</li>\n<li><strong><code class=\"language-javascript\">commitTime: number</code></strong> -\nhorodatage de la finalisation de la mise \u00e0 jour courante par React.\nCette valeur est partag\u00e9e entre tous les profileurs d\u2019une m\u00eame finalisation, ce qui permet de les regrouper si on le souhaite.</li>\n<li><strong><code class=\"language-javascript\">interactions: Set</code></strong> -\nun <code class=\"language-javascript\">Set</code> des <a class=\"external-link\" href=\"https://fb.me/react-interaction-tracing\">\u00ab\u00a0interactions\u00a0\u00bb</a> qui ont \u00e9t\u00e9 pist\u00e9es lors de la planification de la mise \u00e0 jour (ex. lors des appels \u00e0 <code class=\"language-javascript\">render</code> ou <code class=\"language-javascript\">setState</code>).</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous pouvez utiliser les interactions pour identifier la cause d\u2019une mise \u00e0 jour, m\u00eame si l\u2019API pour le pistage des interactions est encore exp\u00e9rimentale.</p>\n<p>Vous pouvez en apprendre davantage sur <a class=\"external-link\" href=\"https://fb.me/react-interaction-tracing\">fb.me/react-interaction-tracing</a>.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-profiler.md\">Edit this page</a></p></div></article>", "path": "/react/profiler", "nav": ["/react/portals", "/react/react-without-es6"]}, {"key": "React sans ES6", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>En temps normal, pour d\u00e9finir un composant React, vous utilisez une classe Javascript ordinaire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si vous n\u2019utilisez pas encore ES6, vous pouvez utiliser le module <code class=\"language-javascript\">create-react-class</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Greeting <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c0 quelques exceptions pr\u00e8s, l\u2019API des classes ES6 est similaire a <code class=\"language-javascript\">createReactClass()</code>.</p>\n<h2 id=\"declaring-default-props\"><a class=\"anchor\" href=\"/react/react-without-es6#declaring-default-props\"></a>D\u00e9clarer des props par d\u00e9faut </h2>\n<p>Dans les fonctions et les classes ES6, <code class=\"language-javascript\">defaultProps</code> est d\u00e9fini en tant que propri\u00e9t\u00e9 sur le composant lui-m\u00eame\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\nGreeting<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Marie'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Avec <code class=\"language-javascript\">createReactClass()</code>, vous aurez besoin de d\u00e9finir <code class=\"language-javascript\">getDefaultProps()</code> en tant que fonction dans l\u2019objet pass\u00e9 en argument\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> Greeting <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getDefaultProps</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'Marie'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"setting-the-initial-state\"><a class=\"anchor\" href=\"/react/react-without-es6#setting-the-initial-state\"></a>D\u00e9finir l\u2019\u00e9tat initial </h2>\n<p>Dans les classes ES6, vous pouvez d\u00e9finir l\u2019\u00e9tat local initial en affectant <code class=\"language-javascript\">this.state</code> dans le constructeur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Avec <code class=\"language-javascript\">createReactClass()</code>, vous devez fournir une m\u00e9thode <code class=\"language-javascript\">getInitialState</code> qui renvoie l\u2019\u00e9tat initial\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> Counter <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"autobinding\"><a class=\"anchor\" href=\"/react/react-without-es6#autobinding\"></a>Liaison automatique des m\u00e9thodes </h2>\n<p>Dans les composants React d\u00e9clar\u00e9s en tant que classes ES6, les m\u00e9thodes suivent la m\u00eame s\u00e9mantique que dans toute classe ES6. \u00c7a signifie qu\u2019elles ne vont pas automatiquement lier <code class=\"language-javascript\">this</code> a l\u2019instance. Pour ce faire, vous devez utiliser <code class=\"language-javascript\">.bind(this)</code> dans le constructeur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SayHello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// La ligne ci-dessous est importante !</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Nous pouvons utiliser `this.handleClick` comme gestionnaire d\u2019\u00e9v\u00e9nements,</span>\n    <span class=\"token comment\">// car il est li\u00e9 a l'instance courante.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Dis bonjour\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tout \u00e7a n\u2019est pas n\u00e9cessaire avec <code class=\"language-javascript\">createReactClass()</code>, car elle lie toutes les m\u00e9thodes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> SayHello <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">handleClick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Dis bonjour\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>L\u2019\u00e9criture de classes ES6 n\u00e9cessite un peu plus de code g\u00e9n\u00e9rique pour les gestionnaires d\u2019\u00e9v\u00e9nements, mais en contrepartie \u00e7a am\u00e9liore l\u00e9g\u00e8rement les performances pour les grosses applications.</p>\n<p>Si vous n\u2019arrivez pas \u00e0 tol\u00e9rer ce code g\u00e9n\u00e9rique, vous pouvez activer dans Babel la proposition de syntaxe <strong>exp\u00e9rimentale</strong> <a class=\"external-link\" href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">Propri\u00e9t\u00e9s de classes</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SayHello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span> <span class=\"token string\">'Bonjour !'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ATTENTION : cette syntaxe est exp\u00e9rimentale !</span>\n  <span class=\"token comment\">// Recourir \u00e0 une fonction fl\u00e9ch\u00e9e va lier la m\u00e9thode \u00e0 l'instance :</span>\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Dis bonjour\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez bien que la syntaxe ci-dessus est <strong>exp\u00e9rimentale</strong> et qu\u2019elle pourrait \u00eatre amen\u00e9e \u00e0 changer, ou que la proposition de syntaxe ne soit pas int\u00e9gr\u00e9e au langage.</p>\n<p>Si vous pr\u00e9f\u00e9rez la prudence, quelques options s\u2019offrent \u00e0 vous\u00a0:</p>\n<ul>\n<li>Lier les m\u00e9thodes \u00e0 l\u2019instance dans le constructeur.</li>\n<li>Utiliser des fonctions fl\u00e9ch\u00e9es, ex. <code class=\"language-javascript\">onClick={(e) =&gt; this.handleClick(e)}</code>.</li>\n<li>Continuer \u00e0 utiliser <code class=\"language-javascript\">createReactClass</code>.</li>\n</ul>\n<h2 id=\"mixins\"><a class=\"anchor\" href=\"/react/react-without-es6#mixins\"></a>Mixins </h2>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>ES6 est sorti sans prise en charge des <em>mixins</em>. C\u2019est pour cette raison qu\u2019ils ne sont pas pris en charge quand vous utilisez React avec les classes ES6.</p>\n<p><strong>Nous avons aussi trouv\u00e9 pas mal de probl\u00e8mes dans les bases de code utilisant les mixins, du coup <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">nous recommandons de ne pas les utiliser \u00e0 l\u2019avenir</a>.</strong></p>\n<p>Cette section n\u2019existe qu\u2019\u00e0 titre de r\u00e9f\u00e9rence.</p>\n</div>\n<p>Des composants tr\u00e8s diff\u00e9rents les uns des autres peuvent partager des fonctionnalit\u00e9s communes. On parle souvent de <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Cross-cutting_concern\">questions transversales</a> <em>(cross-cutting concerns, NdT)</em>. <code class=\"language-javascript\">createReactClass</code> vous permet d\u2019utiliser un syst\u00e8me historique de <code class=\"language-javascript\">mixins</code> pour \u00e7a.</p>\n<p>Un cas d\u2019usage courant concerne un composant qui veut se mettre \u00e0 jour \u00e0 intervalle r\u00e9gulier. C\u2019est facile d\u2019utiliser <code class=\"language-javascript\">setInterval()</code>, mais il est important de d\u00e9sactiver l\u2019horloge quand vous n\u2019en avez plus besoin afin d\u2019\u00e9conomiser la m\u00e9moire. React fournit des <a href=\"/react/react-component#the-component-lifecycle\">m\u00e9thodes de cycle de vie</a> qui vous notifient quand un composant est sur le point d\u2019\u00eatre cr\u00e9\u00e9 ou d\u00e9truit. Cr\u00e9ons un <em>mixin</em> basique qui utilise ces m\u00e9thodes afin de fournir une fonction <code class=\"language-javascript\">setInterval()</code> simple d\u2019emploi, qui se nettoiera automatiquement lorsque le composant est d\u00e9truit.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> SetIntervalMixin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">componentWillMount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">setInterval</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">componentWillUnmount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>clearInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> TickTock <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  mixins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>SetIntervalMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Utiliser le mixin</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>seconds<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">componentDidMount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Appelle la m\u00e9thode du mixin</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">tick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>seconds<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seconds <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Votre composant React tourne depuis </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seconds<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> secondes.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TickTock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si un composant utilise plusieurs mixins et que de nombreux mixins d\u00e9finissent la m\u00eame m\u00e9thode de cycle de vie (par exemple pour effectuer un nettoyage \u00e0 la destruction du composant), vous avez la garantie que toutes ces m\u00e9thodes de cycle de vie seront appel\u00e9es. Les m\u00e9thodes d\u00e9finies dans les mixins sont ex\u00e9cut\u00e9es dans l\u2019ordre dans lequel les mixins ont \u00e9t\u00e9 list\u00e9s, suivies par l\u2019appel de la m\u00e9thode homonyme \u00e9ventuelle du composant lui-m\u00eame.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/react-without-es6.md\">Edit this page</a></p></div></article>", "path": "/react/react-without-es6", "nav": ["/react/profiler", "/react/react-without-jsx"]}, {"key": "React sans JSX", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Vous n\u2019\u00eates pas oblig\u00e9\u00b7e d\u2019employer JSX pour utiliser React. React sans JSX vous dispense de configurer votre environnement de travail pour g\u00e9rer la compilation de votre code.</p>\n<p>Chaque \u00e9l\u00e9ment JSX n\u2019est rien de plus que du sucre syntaxique pour <code class=\"language-javascript\">React.createElement(component, props, ...children)</code>. Par cons\u00e9quent, tout ce que vous pouvez faire avec JSX peut aussi \u00eatre r\u00e9alis\u00e9 en Javascript brut.</p>\n<p>Prenons par exemple ce code \u00e9crit avec JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>monde<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Il peut \u00eatre compil\u00e9 vers ce code qui n\u2019utilise pas JSX\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bonjour </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>toWhat<span class=\"token operator\">:</span> <span class=\"token string\">'monde'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si vous voulez voir plus d\u2019exemples de conversion de code JSX en JavaScript brut, vous pouvez essayer <a class=\"external-link\" href=\"https://babeljs.io/repl/#?presets=react&amp;code_lz=GYVwdgxgLglg9mABACwKYBt1wBQEpEDeAUIogE6pQhlIA8AJjAG4B8AEhlogO5xnr0AhLQD0jVgG4iAXyJA\">le compilateur Babel en ligne</a>.</p>\n<p>Le composant peut \u00eatre soit une cha\u00eene de caract\u00e8res, soit une sous-classe de <code class=\"language-javascript\">React.Component</code>, soit une fonction simple.</p>\n<p>Si vous n\u2019avez pas envie de taper <code class=\"language-javascript\">React.createElement</code> \u00e0 chaque fois, vous pouvez \u00e0 la place cr\u00e9er un raccourci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>createElement<span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bonjour, monde'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si vous utilisez un tel raccourci pour <code class=\"language-javascript\">React.createElement</code>, utiliser React sans JSX devient presque aussi pratique.</p>\n<p>Dans le m\u00eame esprit, vous pouvez aller regarder des projets tels que <a class=\"external-link\" href=\"https://github.com/mlmorg/react-hyperscript\"><code class=\"language-javascript\">react-hyperscript</code></a> ou <a class=\"external-link\" href=\"https://github.com/ohanhi/hyperscript-helpers\"><code class=\"language-javascript\">hyperscript-helpers</code></a>, qui proposent une syntaxe encore plus concise.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/react-without-jsx.md\">Edit this page</a></p></div></article>", "path": "/react/react-without-jsx", "nav": ["/react/react-without-es6", "/react/reconciliation"]}, {"key": "R\u00e9conciliation", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React fournit une API d\u00e9clarative afin que vous n\u2019ayez pas \u00e0 vous soucier de savoir ce qui change exactement lors de chaque mise \u00e0 jour. \u00c7a facilite grandement l\u2019\u00e9criture d\u2019applications, mais la mani\u00e8re dont React s\u2019y prend n\u2019est pas forc\u00e9ment \u00e9vidente. Cet article explique les choix que nous avons faits dans l\u2019algorithme de comparaison de fa\u00e7on \u00e0 rendre pr\u00e9visibles les mises \u00e0 jour des composants tout en restant suffisamment rapide pour des applications \u00e0 hautes performances.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/reconciliation#motivation\"></a>Raisons </h2>\n<p>Quand vous utilisez React, \u00e0 chaque instant pr\u00e9cis vous pouvez consid\u00e9rer que la fonction <code class=\"language-javascript\">render()</code> cr\u00e9e un arbre d\u2019\u00e9l\u00e9ments React. Lors de la mise \u00e0 jour suivante de l\u2019\u00e9tat local ou des props, cette fonction <code class=\"language-javascript\">render()</code> renverra un arbre diff\u00e9rent d\u2019\u00e9l\u00e9ments React. React doit alors d\u00e9terminer comment mettre efficacement \u00e0 jour l\u2019interface utilisateur (UI) pour qu\u2019elle corresponde \u00e0 l\u2019arbre le plus r\u00e9cent.</p>\n<p>Il existe des solutions g\u00e9n\u00e9riques \u00e0 ce probl\u00e8me algorithmique consistant \u00e0 g\u00e9n\u00e9rer le nombre minimal d\u2019op\u00e9rations pour transformer un arbre en un autre. N\u00e9anmoins, <a class=\"external-link\" href=\"http://grfia.dlsi.ua.es/ml/algorithms/references/editsurvey_bille.pdf\">les algorithmes \u00e0 la pointe de l\u2019\u00e9tat de l\u2019art</a> (en anglais) ont une complexit\u00e9 de l\u2019ordre de <em>O(n<sup>3</sup>)</em> o\u00f9 <em>n</em> est le nombre d\u2019\u00e9l\u00e9ments dans l\u2019arbre.</p>\n<p>Si nous les utilisions dans React, l\u2019affichage de 1\u00a0000 \u00e9l\u00e9ments n\u00e9cessiterait environ un milliard d\u2019op\u00e9rations. C\u2019est beaucoup trop co\u00fbteux. React impl\u00e9mente plut\u00f4t un algorithme heuristique en <em>O(n)</em> bas\u00e9 sur deux hypoth\u00e8ses\u00a0:</p>\n<ol>\n<li>Deux \u00e9l\u00e9ments de types diff\u00e9rents produiront des arbres diff\u00e9rents.</li>\n<li>Le d\u00e9veloppeur peut indiquer quels \u00e9l\u00e9ments peuvent \u00eatre stables d\u2019un rendu \u00e0 l\u2019autre gr\u00e2ce \u00e0 la prop <code class=\"language-javascript\">key</code>.</li>\n</ol>\n<p>En pratique, ces hypoth\u00e8ses sont valables dans presque tous les cas.</p>\n<h2 id=\"the-diffing-algorithm\"><a class=\"anchor\" href=\"/react/reconciliation#the-diffing-algorithm\"></a>L\u2019algorithme de comparaison </h2>\n<p>En comparant deux arbres, React va commencer par comparer les \u00e9l\u00e9ments racines. Le comportement est diff\u00e9rent selon le type des \u00e9l\u00e9ments racines.</p>\n<h3 id=\"elements-of-different-types\"><a class=\"anchor\" href=\"/react/reconciliation#elements-of-different-types\"></a>\u00c9l\u00e9ments de types diff\u00e9rents </h3>\n<p>Chaque fois que les \u00e9l\u00e9ments racines ont des types diff\u00e9rents, React va d\u00e9truire l\u2019ancien arbre et reconstruire le nouvel arbre \u00e0 partir de z\u00e9ro. Passer de <code class=\"language-javascript\">&lt;a&gt;</code> \u00e0 <code class=\"language-javascript\">&lt;img&gt;</code>, ou de <code class=\"language-javascript\">&lt;Article&gt;</code> \u00e0 <code class=\"language-javascript\">&lt;Comment&gt;</code>, ou de <code class=\"language-javascript\">&lt;Button&gt;</code> \u00e0 <code class=\"language-javascript\">&lt;div&gt;</code>\u00a0: tous aboutiront \u00e0 une reconstruction compl\u00e8te.</p>\n<p>Lors de la destruction d\u2019un arbre, les anciens n\u0153uds DOM sont d\u00e9truits. Les instances des composants re\u00e7oivent <code class=\"language-javascript\">componentWillUnmount()</code>. Lors de la construction d\u2019un nouvel arbre, les nouveaux n\u0153uds sont ins\u00e9r\u00e9s dans le DOM. Les instances de composants re\u00e7oivent <code class=\"language-javascript\">UNSAFE_componentWillMount()</code> puis <code class=\"language-javascript\">componentDidMount()</code>. Tous les \u00e9tats associ\u00e9s \u00e0 l\u2019ancien arbre sont perdus.</p>\n<p>Tous les composants au-dessous de la racine seront \u00e9galement d\u00e9mont\u00e9s et leur \u00e9tat d\u00e9truit. Par exemple, en comparant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Counter</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Counter</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00c7a d\u00e9truira l\u2019ancien <code class=\"language-javascript\">Counter</code> puis en remontera un nouveau.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les m\u00e9thodes suivantes sont consid\u00e9r\u00e9es d\u00e9pr\u00e9ci\u00e9es et vous devriez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">les \u00e9viter</a> dans vos nouveaux codes\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">UNSAFE_componentWillMount()</code></li>\n</ul>\n</div>\n<h3 id=\"dom-elements-of-the-same-type\"><a class=\"anchor\" href=\"/react/reconciliation#dom-elements-of-the-same-type\"></a>\u00c9l\u00e9ments DOM de m\u00eame type </h3>\n<p>Lors de la comparaison entre deux \u00e9l\u00e9ments DOM React de m\u00eame type, React examine les attributs des deux, conserve le m\u00eame n\u0153ud DOM sous-jacent, et ne met \u00e0 jour que les attributs modifi\u00e9s. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>before<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>after<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>En comparant ces deux \u00e9l\u00e9ments, React sait qu\u2019il ne faut modifier que le <code class=\"language-javascript\">className</code> du n\u0153ud DOM sous-jacent.</p>\n<p>Lors d\u2019une mise \u00e0 jour du <code class=\"language-javascript\">style</code>, React l\u00e0 aussi sait ne mettre \u00e0 jour que les propri\u00e9t\u00e9s qui ont chang\u00e9. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{color:</span> <span class=\"token attr-name\">'red',</span> <span class=\"token attr-name\"><span class=\"token namespace\">fontWeight:</span></span> <span class=\"token attr-name\">'bold'}}</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{color:</span> <span class=\"token attr-name\">'green',</span> <span class=\"token attr-name\"><span class=\"token namespace\">fontWeight:</span></span> <span class=\"token attr-name\">'bold'}}</span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Lors de la conversion entre les deux \u00e9l\u00e9ments, React sait qu\u2019il ne doit modifier que le style <code class=\"language-javascript\">color</code> et pas <code class=\"language-javascript\">fontWeight</code>.</p>\n<p>Apr\u00e8s avoir manipul\u00e9 le n\u0153ud DOM, React applique le m\u00eame traitement sur les enfants.</p>\n<h3 id=\"component-elements-of-the-same-type\"><a class=\"anchor\" href=\"/react/reconciliation#component-elements-of-the-same-type\"></a>\u00c9l\u00e9ments composants de m\u00eame type </h3>\n<p>Lorsqu\u2019un composant est mis \u00e0 jour, l\u2019instance reste la m\u00eame, afin que l\u2019\u00e9tat soit maintenu d\u2019un rendu \u00e0 l\u2019autre. React met \u00e0 jour les props de l\u2019instance de composant sous-jacente pour correspondre au nouvel \u00e9l\u00e9ment, et appelle <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code>, <code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> et <code class=\"language-javascript\">componentDidUpdate()</code> dessus.</p>\n<p>Ensuite, la m\u00e9thode <code class=\"language-javascript\">render()</code> est appel\u00e9e et l\u2019algorithme de comparaison reprend entre son r\u00e9sultat pr\u00e9c\u00e9dent et le nouveau.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les m\u00e9thodes suivantes sont consid\u00e9r\u00e9es d\u00e9pr\u00e9ci\u00e9es et vous devriez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">les \u00e9viter</a> dans vos nouveaux codes\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code></li>\n<li><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></li>\n</ul>\n</div>\n<h3 id=\"recursing-on-children\"><a class=\"anchor\" href=\"/react/reconciliation#recursing-on-children\"></a>Traitement r\u00e9cursif sur les enfants </h3>\n<p>Par d\u00e9faut, lorsqu\u2019il traite les enfants d\u2019un n\u0153ud DOM, React parcourt simultan\u00e9ment les deux listes d\u2019enfants et g\u00e9n\u00e8re une modification chaque fois qu\u2019il y a une diff\u00e9rence.</p>\n<p>Par exemple, lors de l\u2019ajout d\u2019un \u00e9l\u00e9ment \u00e0 la fin des enfants, la conversion entre les deux arbres fonctionne bien\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>first<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>second<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>first<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>second<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>third<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React fera correspondre les deux arbres <code class=\"language-javascript\">&lt;li&gt;first&lt;/li&gt;</code>, les deux arbres <code class=\"language-javascript\">&lt;li&gt;second&lt;/li&gt;</code>, et ins\u00e9rera l\u2019arbre <code class=\"language-javascript\">&lt;li&gt;third&lt;/li&gt;</code>.</p>\n<p>Si vous l\u2019impl\u00e9mentez de fa\u00e7on na\u00efve, l\u2019insertion d\u2019un \u00e9l\u00e9ment au d\u00e9but aura de moins bonnes performances. Par exemple, la conversion entre ces deux arbres fonctionnera assez mal\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Connecticut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React va modifier chaque enfant plut\u00f4t que de r\u00e9aliser qu\u2019il pouvait garder les sous-arbres <code class=\"language-javascript\">&lt;li&gt;Duke&lt;/li&gt;</code> et <code class=\"language-javascript\">&lt;li&gt;Villanova&lt;/li&gt;</code> intacts. Cette inefficacit\u00e9 peut \u00eatre un probl\u00e8me.</p>\n<h3 id=\"keys\"><a class=\"anchor\" href=\"/react/reconciliation#keys\"></a>Cl\u00e9s </h3>\n<p>Afin de r\u00e9soudre ce probl\u00e8me, React prend en charge l\u2019attribut <code class=\"language-javascript\">key</code>. Quand des enfants ont cette cl\u00e9, React l\u2019utilise pour faire correspondre les enfants de l\u2019arbre d\u2019origine avec les enfants de l\u2019arbre suivant. Par exemple, l\u2019ajout d\u2019une <code class=\"language-javascript\">key</code> dans notre exemple inefficace peut rendre la conversion de l\u2019arbre plus efficace\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2015<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2016<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2014<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Connecticut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2015<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2016<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00c0 pr\u00e9sent, React sait que l\u2019\u00e9l\u00e9ment avec la cl\u00e9 <code class=\"language-javascript\">'2014'</code> est nouveau, et que les \u00e9l\u00e9ments avec les cl\u00e9s <code class=\"language-javascript\">'2015'</code> et <code class=\"language-javascript\">'2016'</code> ont juste \u00e9t\u00e9 d\u00e9plac\u00e9s.</p>\n<p>En pratique, trouver une cl\u00e9 n\u2019est g\u00e9n\u00e9ralement pas difficile. L\u2019\u00e9l\u00e9ment que vous allez afficher peut d\u00e9j\u00e0 disposer d\u2019un identifiant unique, la cl\u00e9 provenant alors de vos donn\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Quand ce n\u2019est pas le cas, vous pouvez ajouter une nouvelle propri\u00e9t\u00e9 d\u2019identification \u00e0 votre mod\u00e8le, ou hacher certaines parties de votre contenu pour g\u00e9n\u00e9rer une cl\u00e9. La cl\u00e9 n\u2019a besoin d\u2019\u00eatre unique que parmi ses \u00e9l\u00e9ments fr\u00e8res, et non au niveau global.</p>\n<p>En dernier recours, vous pouvez utiliser l\u2019index de l\u2019\u00e9l\u00e9ment dans un tableau comme cl\u00e9. Cela fonctionne correctement si les \u00e9l\u00e9ments ne sont jamais r\u00e9ordonn\u00e9s et s\u2019il n\u2019y a ni insertion ni suppression, dans le cas contraire ce serait assez lent.</p>\n<p>Les tris peuvent \u00e9galement causer des probl\u00e8mes avec les \u00e9tats des composants quand les index sont utilis\u00e9s comme des cl\u00e9s. Les instances des composants sont mises \u00e0 jour et r\u00e9utilis\u00e9es en fonction de leur cl\u00e9. Si la cl\u00e9 est un index, d\u00e9placer un \u00e9l\u00e9ment changera sa cl\u00e9. En cons\u00e9quence, l\u2019\u00e9tat local des composants utilis\u00e9s pour des saisies non-contr\u00f4l\u00e9es peut s\u2019emm\u00ealer et \u00eatre mis \u00e0 jour de mani\u00e8re inattendue.</p>\n<p>Voici <a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/reconciliation/index-used-as-key\">un exemple sur CodePen des probl\u00e8mes qui peuvent \u00eatre caus\u00e9s en utilisant des index comme cl\u00e9s</a>. Voil\u00e0 <a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/reconciliation/no-index-used-as-key\">une version mise \u00e0 jour du m\u00eame exemple montrant comment, en \u00e9vitant d'utiliser les index comme cl\u00e9s, on r\u00e9soudra ces probl\u00e8mes de r\u00e9ordonnancement, de tri et d'insertion</a>.</p>\n<h2 id=\"tradeoffs\"><a class=\"anchor\" href=\"/react/reconciliation#tradeoffs\"></a>Compromis </h2>\n<p>Rappelez-vous bien que l\u2019algorithme de r\u00e9conciliation est un d\u00e9tail d\u2019impl\u00e9mentation. React pourrait rafra\u00eechir  l\u2019ensemble de l\u2019application \u00e0 chaque action\u00a0; le r\u00e9sultat final serait le m\u00eame. Pour \u00eatre clair, rafra\u00eechir dans ce contexte signifie appeler <code class=\"language-javascript\">render</code> sur tous les composants, \u00e7a ne signifie pas que React les d\u00e9montera et remontera. Il n\u2019appliquera que les diff\u00e9rences obtenues en suivant les r\u00e8gles \u00e9nonc\u00e9es dans les sections pr\u00e9c\u00e9dentes.</p>\n<p>Nous affinons r\u00e9guli\u00e8rement les heuristiques afin d\u2019acc\u00e9l\u00e9rer les cas d\u2019usage courants. Dans l\u2019impl\u00e9mentation actuelle, vous pouvez exprimer le fait qu\u2019un sous-arbre a \u00e9t\u00e9 d\u00e9plac\u00e9 parmi ses fr\u00e8res, mais vous ne pouvez pas dire qu\u2019il a \u00e9t\u00e9 d\u00e9plac\u00e9 ailleurs. L\u2019algorithme va refaire le rendu de l\u2019ensemble du sous-arbre.</p>\n<p>Puisque React se repose sur des heuristiques, si les hypoth\u00e8ses derri\u00e8re celles-ci s\u2019av\u00e8rent erron\u00e9es, \u00e7a r\u00e9duira les performances.</p>\n<ol>\n<li>L\u2019algorithme n\u2019essaiera pas de faire correspondre des sous-arbres de types de composants diff\u00e9rents. Si vous \u00eates amen\u00e9\u00b7e \u00e0 alterner entre deux types de composants au rendu tr\u00e8s similaire, vous devriez peut-\u00eatre en faire un type unique. En pratique, nous ne consid\u00e9rons pas \u00e7a comme un probl\u00e8me.</li>\n<li>Les cl\u00e9s doivent \u00eatre stables, pr\u00e9visibles et uniques. Des cl\u00e9s instables (comme celles produites par <code class=\"language-javascript\">Math.random()</code>) entra\u00eeneront la re-cr\u00e9ation superflue de nombreuses instances de composants et de n\u0153uds DOM, ce qui peut d\u00e9grader les performances et perdre l\u2019\u00e9tat local des composants enfants.</li>\n</ol></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reconciliation.md\">Edit this page</a></p></div></article>", "path": "/react/reconciliation", "nav": ["/react/react-without-jsx", "/react/refs-and-the-dom"]}, {"key": "Les refs et le DOM", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les refs fournissent un moyen d\u2019acc\u00e9der aux n\u0153uds du DOM ou \u00e9l\u00e9ments React cr\u00e9\u00e9s dans la m\u00e9thode de rendu.</p>\n<p>Dans le flux de donn\u00e9es habituel de React, les <a href=\"/react/components-and-props\">props</a> constituent le seul moyen pour des composants parents d\u2019interagir avec leurs enfants.  Pour modifier un enfant, vous le rafra\u00eechissez avec de nouvelles props.  Ceci dit, dans certains cas vous aurez besoin de modifier un enfant de fa\u00e7on imp\u00e9rative, hors du flux de donn\u00e9es normal.  L\u2019enfant \u00e0 modifier pourrait \u00eatre une instance d\u2019un composant React ou un \u00e9l\u00e9ment DOM.  Dans les deux cas, React vous fournit une \u00e9chappatoire.</p>\n<h3 id=\"when-to-use-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#when-to-use-refs\"></a>Quand utiliser les refs </h3>\n<p>Voici quelques cas d\u2019usages tout trouv\u00e9s pour les refs\u00a0:</p>\n<ul>\n<li>G\u00e9rer le focus, la s\u00e9lection du texte, ou la lecture de m\u00e9dia.</li>\n<li>Lancer des animations imp\u00e9ratives.</li>\n<li>S\u2019interfacer avec des biblioth\u00e8ques DOM tierces.</li>\n</ul>\n<p>Evitez d\u2019utiliser les refs pour tout ce qui peut \u00eatre fait d\u00e9clarativement.</p>\n<p>Par exemple, au lieu d\u2019exposer les m\u00e9thodes <code class=\"language-javascript\">open()</code> et <code class=\"language-javascript\">close()</code>dans un composant <code class=\"language-javascript\">Dialog</code>, vous pouvez lui passer une prop <code class=\"language-javascript\">isOpen</code>.</p>\n<h3 id=\"dont-overuse-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#dont-overuse-refs\"></a>N\u2019abusez pas des refs </h3>\n<p>Vous serez peut-\u00eatre enclin\u00b7e \u00e0 toujours commencer par une ref pour \u00ab\u00a0faire le boulot\u00a0\u00bb dans votre appli. Si tel est le cas, examinez d\u2019un \u0153il critique votre hi\u00e9rarchie de composants pour d\u00e9terminer lesquels sont cens\u00e9s poss\u00e9der l\u2019\u00e9tat.  Vous remarquerez souvent que l\u2019\u00e9tat serait mieux g\u00e9r\u00e9 plus haut dans la hi\u00e9rarchie. Voyez le guide <a href=\"/react/lifting-state-up\">Faire remonter l\u2019\u00e9tat</a> pour des exemples.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les exemples ci-dessous ont \u00e9t\u00e9 mis \u00e0 jour pour utiliser l\u2019API <code class=\"language-javascript\">React.createRef()</code> introduite dans React 16.3. Si vous utilisez une version pr\u00e9c\u00e9dente de React, nous recommandons d\u2019utiliser <a href=\"/react/refs-and-the-dom#callback-refs\">les refs avec fonctions de rappel</a> \u00e0 la place.</p>\n</div>\n<h3 id=\"creating-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#creating-refs\"></a>Cr\u00e9er des refs </h3>\n<p>Les refs sont cr\u00e9\u00e9es en utilisant <code class=\"language-javascript\">React.createRef()</code> et attach\u00e9es aux \u00e9l\u00e9ments React via l\u2019attribut <code class=\"language-javascript\">ref</code>. Les refs sont souvent affect\u00e9es \u00e0 une propri\u00e9t\u00e9 d\u2019instance quand un composant est construit et peuvent donc \u00eatre r\u00e9f\u00e9renc\u00e9es \u00e0 travers le composant.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"accessing-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#accessing-refs\"></a>Acc\u00e9der aux refs </h3>\n<p>Quand une ref est pass\u00e9e \u00e0 un \u00e9l\u00e9ment dans <code class=\"language-javascript\">render</code>, une r\u00e9f\u00e9rence au n\u0153ud devient accessible via l\u2019attribut <code class=\"language-javascript\">current</code> de la ref.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></code></pre></div>\n<p>La valeur de la ref change suivant le type de n\u0153ud\u00a0:</p>\n<ul>\n<li>Quand l\u2019attribut <code class=\"language-javascript\">ref</code> est utilis\u00e9 sur un \u00e9l\u00e9ment HTML, la <code class=\"language-javascript\">ref</code> cr\u00e9\u00e9e dans le constructeur avec <code class=\"language-javascript\">React.createRef()</code> re\u00e7oit l\u2019\u00e9l\u00e9ment DOM sous-jacent dans sa propri\u00e9t\u00e9 <code class=\"language-javascript\">current</code>.</li>\n<li>Quand l\u2019attribut <code class=\"language-javascript\">ref</code> est utilis\u00e9 sur un composant de classe personnalis\u00e9e, l\u2019objet <code class=\"language-javascript\">ref</code> re\u00e7oit l\u2019instance du composant cr\u00e9\u00e9e dans son <code class=\"language-javascript\">current</code>.</li>\n<li><strong>Vous ne pouvez pas utiliser l\u2019attribut <code class=\"language-javascript\">ref</code> sur les fonctions composants</strong> parce qu\u2019elles n\u2019ont pas d\u2019instance.</li>\n</ul>\n<p>Les exemples ci-dessous illustrent les diff\u00e9rences.</p>\n<h4 id=\"adding-a-ref-to-a-dom-element\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#adding-a-ref-to-a-dom-element\"></a>Ajouter une ref \u00e0 un \u00e9l\u00e9ment du DOM </h4>\n<p>Ce code utilise une <code class=\"language-javascript\">ref</code> pour stocker une r\u00e9f\u00e9rence \u00e0 un n\u0153ud du DOM\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Cr\u00e9e une r\u00e9f\u00e9rence pour stocker l\u2019\u00e9l\u00e9ment DOM textInput</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Donne explicitement le focus au champ texte en utilisant l\u2019API DOM native.</span>\n    <span class=\"token comment\">// Remarque : nous utilisons `current` pour cibler le n\u0153ud DOM</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Dit \u00e0 React qu\u2019on veut associer la ref `textInput` cr\u00e9\u00e9e</span>\n    <span class=\"token comment\">// dans le constructeur avec le `&lt;input&gt;`.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Donner le focus au champ texte<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React affectera l\u2019\u00e9l\u00e9ment DOM \u00e0 la propri\u00e9t\u00e9 <code class=\"language-javascript\">current</code> quand le composant sera mont\u00e9, et la remettra \u00e0 <code class=\"language-javascript\">null</code> lorsqu\u2019il sera d\u00e9mont\u00e9. La <code class=\"language-javascript\">ref</code> est mise \u00e0 jour avant le d\u00e9clenchement des m\u00e9thodes de cycle de vie <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>.</p>\n<h4 id=\"adding-a-ref-to-a-class-component\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#adding-a-ref-to-a-class-component\"></a>Ajouter une ref \u00e0 un composant \u00e0 base de classe </h4>\n<p>Si on voulait enrober le <code class=\"language-javascript\">CustomTextInput</code> ci-dessus pour simuler un clic imm\u00e9diatement apr\u00e8s le montage, on pourrait utiliser une ref pour acc\u00e9der au champ personnalis\u00e9 et appeler manuellement sa m\u00e9thode <code class=\"language-javascript\">focusTextInput</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoFocusTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il faut noter que \u00e7a ne fonctionne que si <code class=\"language-javascript\">CustomTextInput</code> est d\u00e9clar\u00e9 comme une classe\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"refs-and-function-components\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#refs-and-function-components\"></a>Les refs et les fonctions composants </h4>\n<p>Par d\u00e9faut, <strong>vous ne pouvez pas utiliser l\u2019attribut <code class=\"language-javascript\">ref</code> sur les fonctions composants</strong> parce qu\u2019elles n\u2019ont pas d\u2019instance.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyFunctionComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \u00c7a ne fonctionnera pas !</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyFunctionComponent</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si vous voulez permettre \u00e0 vos utilisateurs de passer une <code class=\"language-javascript\">ref</code> \u00e0 votre fonction composant, vous pouvez utiliser<a href=\"/react/forwarding-refs\"><code class=\"language-javascript\">forwardRef</code></a> (peut-\u00eatre combin\u00e9 \u00e0 un <a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a>), ou vous pouvez convertir votre composant pour \u00eatre \u00e0 base de classe.</p>\n<p>Vous pouvez n\u00e9anmoins <strong>utiliser l\u2019attribut <code class=\"language-javascript\">ref</code> dans une fonction composant</strong>, tant que vous vous r\u00e9f\u00e9rez \u00e0 un \u00e9l\u00e9ment DOM ou un composant \u00e0 base de classe\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// textInput doit \u00eatre d\u00e9clar\u00e9 ici pour que la ref puisse s\u2019y r\u00e9f\u00e9rer</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> textInput <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Donner le focus au champ texte<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"exposing-dom-refs-to-parent-components\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#exposing-dom-refs-to-parent-components\"></a>Exposer les refs DOM aux composants parents </h3>\n<p>Dans de rares cas, un composant parent pourrait vouloir acc\u00e9der aux n\u0153uds DOM d\u2019un enfant. C\u2019est g\u00e9n\u00e9ralement d\u00e9conseill\u00e9 car \u00e7a brise l\u2019encapsulation, mais c\u2019est parfois utile pour g\u00e9rer le focus, mesurer les dimensions ou la position d\u2019un n\u0153ud DOM enfant.</p>\n<p>M\u00eame si vous pourriez <a href=\"/react/refs-and-the-dom#adding-a-ref-to-a-class-component\">ajouter une ref \u00e0 un composant enfant</a>, ce n\u2019est pas une solution id\u00e9ale car vous n\u2019obtiendriez qu\u2019une instance de composant plut\u00f4t qu\u2019un n\u0153ud DOM. De plus, \u00e7a ne fonctionnerait pas avec les fonctions composants.</p>\n<p>Si vous utilisez React 16.3 ou une version ult\u00e9rieure, nous recommandons d\u2019utiliser <a href=\"/react/forwarding-refs\">le transfert de refs</a> pour ce genre de cas. <strong>Le transfert de refs permet \u00e0 un composant de choisir d\u2019exposer une ref \u00e0 un de ses enfants comme \u00e9tant la sienne</strong>. Vous trouverez un exemple d\u00e9taill\u00e9 de la fa\u00e7on d\u2019exposer un n\u0153ud DOM enfant \u00e0 un composant parent <a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">dans la documentation du transfert de refs</a>.</p>\n<p>Si vous utilisez React 16.2 ou une version ant\u00e9rieure, ou si vous avez besoin de plus de flexibilit\u00e9 que ce que permet le transfert de refs, vous pouvez utiliser <a class=\"external-link\" href=\"https://gist.github.com/gaearon/1a018a023347fe1c2476073330cc5509\">cette approche alternative</a> et passer explicitement une ref via une autre prop.</p>\n<p>Autant que possible, nous d\u00e9conseillons d\u2019exposer les n\u0153uds DOM, mais \u00e7a peut \u00eatre une \u00e9chappatoire utile. Remarquez que cette approche exige la modification du code du composant enfant. Si vous n\u2019avez pas cette possibilit\u00e9, votre seule option consiste \u00e0 utiliser <a href=\"/react/react-dom#finddomnode\"><code class=\"language-javascript\">findDOMNode()</code></a>, mais c\u2019est d\u00e9conseill\u00e9 et d\u00e9pr\u00e9ci\u00e9 en <a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\">mode strict</a>.</p>\n<h3 id=\"callback-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#callback-refs\"></a>Refs avec fonctions de rappel </h3>\n<p>React propose une autre fa\u00e7on de d\u00e9finir des refs appel\u00e9e \u00ab\u00a0refs avec fonctions de rappel\u00a0\u00bb, qui permet un contr\u00f4le plus fin sur l\u2019affectation et le nettoyage des refs.</p>\n<p>Plut\u00f4t que de passer un attribut <code class=\"language-javascript\">ref</code> cr\u00e9\u00e9 par <code class=\"language-javascript\">createRef()</code>, vous pouvez passer une fonction. La fonction r\u00e9cup\u00e8re l\u2019instance du composant React ou l\u2019\u00e9l\u00e9ment du DOM HTML comme argument, qui peut \u00eatre stock\u00e9 et acc\u00e9d\u00e9 depuis ailleurs.</p>\n<p>L\u2019exemple ci-dessous impl\u00e9mente une approche fr\u00e9quente\u00a0: utiliser la fonction de rappel <code class=\"language-javascript\">ref</code> pour stocker une r\u00e9f\u00e9rence \u00e0 un n\u0153ud DOM dans une propri\u00e9t\u00e9 d\u2019instance.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTextInputRef</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">element</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">focusTextInput</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Donne le focus au champ texte en utilisant l\u2019API DOM native.</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Focus automatique sur le champ au montage</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Utilise la fonction de rappel `ref` pour stocker une r\u00e9f\u00e9rence \u00e0 l\u2019\u00e9l\u00e9ment</span>\n    <span class=\"token comment\">// DOM du champ texte dans une propri\u00e9t\u00e9 d\u2019instance (ex. this.textInput)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setTextInputRef<span class=\"token punctuation\">}</span></span></span>        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Donner le focus au champ texte<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput<span class=\"token punctuation\">}</span></span></span>        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React appellera la fonction de rappel <code class=\"language-javascript\">ref</code> avec l\u2019\u00e9l\u00e9ment DOM quand le composant sera mont\u00e9, puis avec <code class=\"language-javascript\">null</code> quand il sera d\u00e9mont\u00e9. Les refs sont toujours mises \u00e0 jour avant l\u2019ex\u00e9cution de <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>.</p>\n<p>Vous pouvez passer une fonction de rappel de ref d\u2019un composant \u00e0 l\u2019autre comme vous le feriez avec les objets refs cr\u00e9\u00e9s par <code class=\"language-javascript\">React.createRef()</code>.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">inputRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span></span>      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans l\u2019exemple ci-dessus, <code class=\"language-javascript\">Parent</code> passe sa fonction de rappel de ref dans la propri\u00e9t\u00e9 <code class=\"language-javascript\">inputRef</code> du <code class=\"language-javascript\">CustomTextInput</code>, et <code class=\"language-javascript\">CustomTextInput</code> passe la m\u00eame fonction dans l\u2019attribut sp\u00e9cial <code class=\"language-javascript\">ref</code> \u00e0 l\u2019<code class=\"language-javascript\">&lt;input&gt;</code>. Au final, <code class=\"language-javascript\">this.inputElement</code> dans <code class=\"language-javascript\">Parent</code> recevra le n\u0153ud DOM correspondant \u00e0 l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;input&gt;</code> dans <code class=\"language-javascript\">CustomTextInput</code>.</p>\n<h3 id=\"legacy-api-string-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#legacy-api-string-refs\"></a>API historique\u00a0: refs textuelles </h3>\n<p>Si vous avez travaill\u00e9 avec React par le pass\u00e9, vous avez peut-\u00eatre l\u2019habitude d\u2019une ancienne API o\u00f9 l\u2019attribut <code class=\"language-javascript\">ref</code> \u00e9tait une cha\u00eene de caract\u00e8res du genre <code class=\"language-javascript\">\"textInput\"</code>, et le n\u0153ud DOM \u00e9tait accessible via <code class=\"language-javascript\">this.refs.textInput</code>. Nous recommandons de ne plus utiliser cette approche en raison de <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/8333#issuecomment-271648615\">plusieurs probl\u00e8mes</a>\u00a0; elle est d\u00e9pr\u00e9ci\u00e9e et <strong>sera probablement supprim\u00e9e dans une version future</strong>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez actuellement la syntaxe <code class=\"language-javascript\">this.refs.textInput</code> pour acc\u00e9der aux refs, nous vous conseillons d\u2019utiliser soit <a href=\"/react/refs-and-the-dom#callback-refs\">l\u2019approche avec fonction de rappel</a> soit <a href=\"/react/refs-and-the-dom#creating-refs\">l\u2019API <code class=\"language-javascript\">createRef</code></a>.</p>\n</div>\n<h3 id=\"caveats-with-callback-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#caveats-with-callback-refs\"></a>Limitations des refs avec fonctions de rappels </h3>\n<p>Si la fonction de rappel <code class=\"language-javascript\">ref</code> est d\u00e9finie \u00e0 la vol\u00e9e, elle sera appel\u00e9e deux fois \u00e0 chaque mise \u00e0 jour, d\u2019abord avec <code class=\"language-javascript\">null</code> puis avec l\u2019\u00e9l\u00e9ment DOM. C\u2019est parce qu\u2019une nouvelle instance de la fonction est cr\u00e9\u00e9e \u00e0 chaque affichage, et React a besoin de nettoyer l\u2019ancienne ref avant d\u2019affecter la nouvelle. Vous pouvez \u00e9viter \u00e7a en d\u00e9finissant la fonction de rappel <code class=\"language-javascript\">ref</code> comme une m\u00e9thode li\u00e9e de la classe, m\u00eame si \u00e7a ne devrait pas \u00eatre g\u00eanant la plupart du temps.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/refs-and-the-dom.md\">Edit this page</a></p></div></article>", "path": "/react/refs-and-the-dom", "nav": ["/react/reconciliation", "/react/render-props"]}, {"key": "Props de rendu", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Le terme <a class=\"external-link\" href=\"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\">\u00ab\u00a0prop de rendu\u00a0\u00bb</a> <em>(render prop, NdT)</em> fait r\u00e9f\u00e9rence \u00e0 une technique qui consiste \u00e0 partager du code entre des composants React en utilisant une prop dont la valeur est une fonction.</p>\n<p>Un composant avec une prop de rendu prend une fonction qui renvoie un \u00e9l\u00e9ment React et l\u2019appelle au lieu d\u2019impl\u00e9menter sa propre logique de rendu.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DataProvider</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour </span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Des biblioth\u00e8ques telles que <a class=\"external-link\" href=\"https://reacttraining.com/react-router/web/api/Route/render-func\">React Router</a>, <a class=\"external-link\" href=\"https://github.com/paypal/downshift\">Downshift</a> et <a class=\"external-link\" href=\"https://github.com/jaredpalmer/formik\">Formik</a> utilisent ces props de rendu.</p>\n<p>Dans cette page, nous verrons en quoi les props de rendu sont pratiques, et comment vous pouvez \u00e9crire les v\u00f4tres.</p>\n<h2 id=\"use-render-props-for-cross-cutting-concerns\"><a class=\"anchor\" href=\"/react/render-props#use-render-props-for-cross-cutting-concerns\"></a>Utiliser les props de rendu pour des questions transversales </h2>\n<p>Les composants sont l\u2019unit\u00e9 de base de r\u00e9utilisation de code dans React, mais il n\u2019est pas toujours \u00e9vident de partager l\u2019\u00e9tat ou le comportement contenu dans un composant avec d\u2019autres composants qui auraient besoin de ce m\u00eame \u00e9tat.</p>\n<p>Par exemple, le composant suivant piste la position de la souris dans une application web\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">La position actuelle de la souris est (</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token plain-text\">)</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lorsque le curseur se d\u00e9place sur l\u2019\u00e9cran, le composant affiche ses coordonn\u00e9es (x,y) dans un \u00e9l\u00e9ment <code class=\"language-javascript\">&lt;p&gt;</code>.</p>\n<p>La question qui se pose maintenant est\u00a0: comment pouvons-nous r\u00e9utiliser ce comportement dans un autre composant\u00a0? En d\u2019autres termes, si un autre composant a besoin de conna\u00eetre la position du curseur, pouvons-nous encapsuler ce comportement pour pouvoir facilement le partager avec ce composant\u00a0?</p>\n<p>Puisque les composants sont l\u2019unit\u00e9 de r\u00e9utilisation de code dans React, essayons de refactoriser un peu le code pour pouvoir utiliser un composant <code class=\"language-javascript\">&lt;Mouse&gt;</code> qui encapsule le comportement dont nous avons besoin ailleurs.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Le composant &lt;Mouse&gt; encapsule le comportement dont nous avons besoin...</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ...mais comment afficher autre chose qu'un &lt;p&gt; ? */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">La position actuelle de la souris est (</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token plain-text\">)</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le composant <code class=\"language-javascript\">&lt;Mouse&gt;</code> encapsule maintenant tous les comportements associ\u00e9s \u00e0 l\u2019\u00e9coute des \u00e9v\u00e9nements <code class=\"language-javascript\">mousemove</code> et \u00e0 la sauvegarde de la position (x, y) du curseur, mais il n\u2019est pas encore tout \u00e0 fait r\u00e9utilisable.</p>\n<p>Par exemple, supposons que nous avons un composant <code class=\"language-javascript\">&lt;Cat&gt;</code> qui affiche une image de chat pourchassant une souris sur l\u2019\u00e9cran. Nous pourrions utiliser une prop <code class=\"language-javascript\">mouse</code>, comme dans <code class=\"language-javascript\">&lt;Cat mouse={{ x, y }}&gt;</code>, pour transmettre au composant les coordonn\u00e9es de la souris pour qu\u2019il sache o\u00f9 positionner l\u2019image sur l\u2019\u00e9cran.</p>\n<p>Au premier essai, vous tenteriez peut-\u00eatre d\u2019afficher <code class=\"language-javascript\">&lt;Cat&gt;</code> <em>dans la m\u00e9thode <code class=\"language-javascript\">render</code> de <code class=\"language-javascript\">&lt;Mouse&gt;</code></em>, comme ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mouse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mouse<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/cat.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> position<span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseWithCat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          Nous pourrions simplement remplacer le &lt;p&gt; par un &lt;Cat&gt; ici...\n          mais nous devrions alors cr\u00e9er un composant s\u00e9par\u00e9\n          &lt;MouseWithSomethingElse&gt; chaque fois que nous voudrions l'utiliser.\n          &lt;MouseWithCat&gt; n'est donc pas si r\u00e9utilisable que \u00e7a pour le moment.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MouseWithCat</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette approche fonctionnera dans notre cas particulier, mais nous n\u2019avons pas atteint notre objectif qui consiste \u00e0 vraiment encapsuler le comportement de fa\u00e7on r\u00e9utilisable. En effet, chaque fois que nous aurons besoin de la position de la souris pour un cas d\u2019utilisation diff\u00e9rent, nous devrons cr\u00e9er un nouveau composant (pour ainsi dire un autre <code class=\"language-javascript\">&lt;MouseWithCat&gt;</code>) sp\u00e9cifique \u00e0 ce cas.</p>\n<p>C\u2019est l\u00e0 que la prop de rendu entre en sc\u00e8ne\u00a0: au lieu d\u2019\u00e9crire en dur un composant <code class=\"language-javascript\">&lt;Cat&gt;</code> dans un composant <code class=\"language-javascript\">&lt;Mouse&gt;</code>, et changer le r\u00e9sultat de l\u2019affichage, nous pouvons cr\u00e9er <code class=\"language-javascript\">&lt;Mouse&gt;</code> avec une prop qui prendra une fonction permettant de d\u00e9terminer dynamiquement ce qui doit \u00eatre affich\u00e9\u00a0: une prop de rendu.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mouse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mouse<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/cat.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> position<span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          Au lieu de fournir une repr\u00e9sentation statique de ce qu\u2019affiche &lt;Mouse&gt;,\n          utilisez la prop `render` pour d\u00e9terminer dynamiquement quoi afficher.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dor\u00e9navant, au lieu de cloner le composant <code class=\"language-javascript\">&lt;Mouse&gt;</code> et d\u2019\u00e9crire en dur quelque chose d\u2019autre dans sa m\u00e9thode <code class=\"language-javascript\">render</code> pour s\u2019adapter \u00e0 un cas d\u2019utilisation, nous fournissons une prop <code class=\"language-javascript\">render</code> que <code class=\"language-javascript\">&lt;Mouse&gt;</code> peut utiliser pour d\u00e9terminer dynamiquement quoi afficher.</p>\n<p>Plus concr\u00e8tement, <strong>une prop de rendu est une prop de type fonction qu\u2019un composant utilise pour savoir quoi afficher.</strong></p>\n<p>Cette technique facilite \u00e9norm\u00e9ment le partage d\u2019un comportement. Pour r\u00e9cup\u00e9rer ce comportement, il suffit d\u2019afficher un <code class=\"language-javascript\">&lt;Mouse&gt;</code> avec une prop <code class=\"language-javascript\">render</code> qui lui dit quoi afficher avec les coordonn\u00e9es (x, y) actuelles du curseur.</p>\n<p>Un point int\u00e9ressant \u00e0 noter concernant les props de rendu est que vous pouvez impl\u00e9menter la plupart des <a href=\"/react/higher-order-components\">composants d\u2019ordre sup\u00e9rieur</a> <em>(Higher-Order Components, ou HOC, NdT)</em> en utilisant un composant classique avec une prop de rendu. Par exemple, si vous pr\u00e9f\u00e9rez avoir un HOC <code class=\"language-javascript\">withMouse</code> au lieu d\u2019un composant<code class=\"language-javascript\">&lt;Mouse&gt;</code>, vous pouvez facilement en cr\u00e9er un en utilisant un composant <code class=\"language-javascript\">&lt;Mouse&gt;</code> avec une prop de rendu\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Si, pour une raison ou une autre, vous voulez vraiment utiliser un HOC, vous pouvez</span>\n<span class=\"token comment\">// facilement en cr\u00e9er un en utilisant un composant classique avec une prop de rendu !</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withMouse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">this</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Utiliser une prop de rendu rend donc possible l\u2019utilisation des deux m\u00e9thodes.</p>\n<h2 id=\"using-props-other-than-render\"><a class=\"anchor\" href=\"/react/render-props#using-props-other-than-render\"></a>Utiliser d\u2019autres props que <code class=\"language-javascript\">render</code> </h2>\n<p>Il est important de se rappeler que <em>ce n\u2019est pas parce que la technique s\u2019appelle \u00ab\u00a0props de rendu\u00a0\u00bb qu\u2019il est obligatoire d\u2019utiliser une prop appel\u00e9e <code class=\"language-javascript\">render</code> pour la mettre en \u0153uvre</em>. En fait, <a class=\"external-link\" href=\"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\"><em>n\u2019importe quelle</em> prop utilis\u00e9e par un composant pour savoir quoi renvoyer est techniquement une \u00ab\u00a0prop de rendu\u00a0\u00bb</a>.</p>\n<p>M\u00eame si les exemples ci-dessus utilisent <code class=\"language-javascript\">render</code>, nous pourrions tout aussi simplement utiliser la prop <code class=\"language-javascript\">children</code>\u00a0!</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">children</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">La position de la souris est </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Et rappelez-vous, la propri\u00e9t\u00e9 <code class=\"language-javascript\">children</code> n\u2019a en fait pas besoin d\u2019\u00eatre nomm\u00e9e dans la liste des \u00ab\u00a0attributs\u00a0\u00bb de votre \u00e9l\u00e9ment JSX. Au lieu de \u00e7a, vous pouvez l\u2019utiliser directement <em>dans</em> l\u2019\u00e9l\u00e9ment\u00a0!</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">La position de la souris est </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mouse</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Vous pouvez d\u00e9couvrir l\u2019utilisation de cette technique dans l\u2019API <a class=\"external-link\" href=\"https://github.com/chenglou/react-motion\">react-motion</a>.</p>\n<p>Comme cette technique est un peu inhabituelle, vous aurez probablement envie de pr\u00e9ciser que <code class=\"language-javascript\">children</code> devrait \u00eatre une fonction dans vos <code class=\"language-javascript\">propTypes</code> au moment de concevoir votre API de cette fa\u00e7on.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">Mouse<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/render-props#caveats\"></a>Limitations </h2>\n<h3 id=\"be-careful-when-using-render-props-with-reactpurecomponent\"><a class=\"anchor\" href=\"/react/render-props#be-careful-when-using-render-props-with-reactpurecomponent\"></a>Soyez prudent\u00b7e lors de l\u2019utilisation de props de rendu avec React.PureComponent </h3>\n<p>Utiliser une prop de rendu peut contrebalancer l\u2019avantage apport\u00e9 par l\u2019utilisation de <a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a> si vous cr\u00e9ez la fonction dans une m\u00e9thode <code class=\"language-javascript\">render</code>. C\u2019est d\u00fb au fait que la comparaison superficielle des props renverra toujours <code class=\"language-javascript\">false</code> pour les nouvelles props, et que dans ce cas chaque <code class=\"language-javascript\">render</code> g\u00e9n\u00e8rera justement une nouvelle valeur pour la prop de rendu.</p>\n<p>Pour revenir sur l\u2019exemple de notre composant <code class=\"language-javascript\">&lt;Mouse&gt;</code>, si <code class=\"language-javascript\">Mouse</code> \u00e9tendait <code class=\"language-javascript\">React.PureComponent</code> au lieu de <code class=\"language-javascript\">React.Component</code>, notre exemple ressemblerait \u00e0 \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// M\u00eame impl\u00e9mentation que plus haut...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          Il ne faut pas faire \u00e7a ! La valeur de la prop `render`\n          sera diff\u00e9rente \u00e0 chaque rendu.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans cet exemple, \u00e0 chaque fois que <code class=\"language-javascript\">&lt;MouseTracker&gt;</code> s\u2019affiche, une nouvelle fonction est g\u00e9n\u00e9r\u00e9e comme valeur de la prop <code class=\"language-javascript\">&lt;Mouse render&gt;</code>, ce qui annule l\u2019optimisation recherch\u00e9e \u00e0 la base quand on a fait en sorte que <code class=\"language-javascript\">&lt;Mouse&gt;</code> \u00e9tende <code class=\"language-javascript\">React.PureComponent</code>\u00a0!</p>\n<p>Pour \u00e9viter ce probl\u00e8me; vous pouvez parfois d\u00e9finir la prop comme une m\u00e9thode d\u2019instance, de la fa\u00e7on suivante\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// D\u00e9finie comme une m\u00e9thode d\u2019instance, `this.renderTheCat` se r\u00e9f\u00e8rera</span>\n  <span class=\"token comment\">// toujours \u00e0 la *m\u00eame* fonction quand nous l\u2018utiliserons dans le rendu.</span>\n  <span class=\"token function\">renderTheCat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00e9placez votre souris sur l\u2019\u00e9cran !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderTheCat<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans les cas o\u00f9 vous ne pourriez pas d\u00e9finir la prop de mani\u00e8re statique (ex. parce qu\u2019elle utilise des valeurs locales \u00e0 <code class=\"language-javascript\">render</code>), <code class=\"language-javascript\">&lt;Mouse&gt;</code> devrait plut\u00f4t \u00e9tendre <code class=\"language-javascript\">React.Component</code>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/render-props.md\">Edit this page</a></p></div></article>", "path": "/react/render-props", "nav": ["/react/refs-and-the-dom", "/react/static-type-checking"]}, {"key": "Validation de types statique", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les syst\u00e8mes de typage statique tels que <a class=\"external-link\" href=\"https://flow.org/\">Flow</a> et <a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a> parviennent \u00e0 identifier certains types de probl\u00e8mes avant m\u00eame d\u2019ex\u00e9cuter votre code. Ils peuvent aussi am\u00e9liorer le processus de travail des d\u00e9veloppeurs en y ajoutant des assistances telles que l\u2019auto-compl\u00e9tion. C\u2019est pourquoi nous recommandons l\u2019utilisation de Flow ou TypeScript au lieu des <code class=\"language-javascript\">PropTypes</code> pour les grandes bases de code source.</p>\n<h2 id=\"flow\"><a class=\"anchor\" href=\"/react/static-type-checking#flow\"></a>Flow </h2>\n<p><a class=\"external-link\" href=\"https://flow.org/\">Flow</a> est un syst\u00e8me de typage statique pour votre code JavaScript. Il est d\u00e9velopp\u00e9 chez Facebook et souvent utilis\u00e9 avec React. Il permet d\u2019annoter les variables, fonctions et composants React avec une syntaxe sp\u00e9ciale de typage, et de d\u00e9celer pr\u00e9ventivement les erreurs. Vous pouvez lire <a class=\"external-link\" href=\"https://flow.org/en/docs/getting-started/\">cette introduction \u00e0 Flow</a> pour en apprendre les bases.</p>\n<p>Pour utiliser Flow, vous devrez\u00a0:</p>\n<ul>\n<li>Ajouter Flow comme d\u00e9pendance dans votre projet.</li>\n<li>Vous assurer que la syntaxe Flow soit bien enlev\u00e9e du code, une fois compil\u00e9.</li>\n<li>Ajouter les annotations de typage et lancer Flow pour les v\u00e9rifier.</li>\n</ul>\n<p>Nous allons vous expliquer ces \u00e9tapes en d\u00e9tail ci-dessous.</p>\n<h3 id=\"adding-flow-to-a-project\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-flow-to-a-project\"></a>Ajouter Flow \u00e0 un projet </h3>\n<p>Premi\u00e8rement, naviguez vers le dossier de votre projet dans le terminal (ou l\u2019invite de commandes). Vous allez devoir ex\u00e9cuter la commande suivante\u00a0:</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev flow-bin</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev flow-bin</code></pre></div>\n<p>Cette commande installe la derni\u00e8re version de Flow dans votre projet.</p>\n<p>Maintenant, ajoutez <code class=\"language-javascript\">flow</code> \u00e0 la section <code class=\"language-javascript\">\"scripts\"</code> de votre <code class=\"language-javascript\">package.json</code> afin de pouvoir l\u2019utiliser dans votre terminal\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"flow\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"flow\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Enfin, ex\u00e9cutez l\u2019une des commandes suivantes\u00a0:</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> run flow init</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run flow init</code></pre></div>\n<p>Cette commande va cr\u00e9er un fichier de configuration Flow qu\u2019il va falloir ajouter \u00e0 la gestion de versions de votre code source.</p>\n<h3 id=\"stripping-flow-syntax-from-the-compiled-code\"><a class=\"anchor\" href=\"/react/static-type-checking#stripping-flow-syntax-from-the-compiled-code\"></a>Retirer la syntaxe Flow du code compil\u00e9 </h3>\n<p>Flow est une extension du langage JavaScript avec une syntaxe sp\u00e9ciale pour les annotations de type. Cependant les navigateurs ne connaissent pas cette syntaxe. Nous devons donc nous assurer qu\u2019elle ne finisse pas dans le <em>bundle</em> de JavaScript compil\u00e9 qui sera \u00e0 terme envoy\u00e9 au navigateur.</p>\n<p>Le proc\u00e9d\u00e9 exact pour y arriver d\u00e9pend des outils que vous utilisez pour compiler votre code source JavaScript.</p>\n<h4 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/static-type-checking#create-react-app\"></a>Create React App </h4>\n<p>Si vous avez utilis\u00e9 <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a> pour initialiser votre projet, f\u00e9licitations\u00a0! Dans ce sc\u00e9nario, les annotations Flow sont d\u00e9j\u00e0 retir\u00e9es par d\u00e9faut, donc vous n\u2019avez rien \u00e0 faire de plus pour cette \u00e9tape.</p>\n<h4 id=\"babel\"><a class=\"anchor\" href=\"/react/static-type-checking#babel\"></a>Babel </h4>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Ces instructions <em>ne sont pas adapt\u00e9es</em> aux utilisateurs de Create React App. Bien que Create React App utilise Babel en interne, il est d\u00e9j\u00e0 configur\u00e9 pour comprendre Flow. Ne suivez cette \u00e9tape que si vous n\u2019utilisez <em>pas</em> Create React App.</p>\n</div>\n<p>Si vous avez configur\u00e9 Babel manuellement pour votre projet, il vous faudra ajouter un <em>preset</em> sp\u00e9cial pour prendre en charge Flow.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev @babel/preset-flow</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @babel/preset-flow</code></pre></div>\n<p>Ensuite, ajoutez le preset <code class=\"language-javascript\">flow</code> \u00e0 votre <a class=\"external-link\" href=\"https://babeljs.io/docs/usage/babelrc/\">configuration Babel</a>. Par exemple, si vous configurez Babel avec le ficher <code class=\"language-javascript\">.babelrc</code>, \u00e7a pourrait ressembler \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"@babel/preset-flow\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token string\">\"react\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>De cette fa\u00e7on, vous pourrez utiliser la syntaxe Flow dans votre code.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Il n\u2019est pas n\u00e9cessaire d\u2019avoir le preset <code class=\"language-javascript\">react</code> afin d\u2019utiliser Flow, mais ils sont souvent utilis\u00e9s ensemble. Flow comprend d\u00e9j\u00e0 quant \u00e0 lui la syntaxe JSX.</p>\n</div>\n<h4 id=\"other-build-setups\"><a class=\"anchor\" href=\"/react/static-type-checking#other-build-setups\"></a>Autres configurations </h4>\n<p>Si vous n\u2019utilisez ni Create React App, ni Babel, vous pouvez utiliser <a class=\"external-link\" href=\"https://github.com/flowtype/flow-remove-types\">flow-remove-types</a> pour enlever les annotations de type.</p>\n<h3 id=\"running-flow\"><a class=\"anchor\" href=\"/react/static-type-checking#running-flow\"></a>Ex\u00e9cuter Flow </h3>\n<p>Si vous avez bien suivi les instructions ci-dessus, vous devriez \u00eatre pr\u00eat\u00b7e \u00e0 ex\u00e9cuter Flow pour la premi\u00e8re fois.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> flow</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run flow</code></pre></div>\n<p>Vous devriez voir appara\u00eetre un message similaire \u00e0 celui-ci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">No errors!\n\u2728  Done in 0.17s.</code></pre></div>\n<h3 id=\"adding-flow-type-annotations\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-flow-type-annotations\"></a>Ajouter des annotations de type Flow </h3>\n<p>Par d\u00e9faut, Flow ne v\u00e9rifie que les fichiers qui contiennent cette annotation\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// @flow</span></code></pre></div>\n<p>Elle est habituellement plac\u00e9e au d\u00e9but du document. Essayez de l\u2019ajouter \u00e0 quelques fichiers dans votre projet, et ex\u00e9cutez <code class=\"language-javascript\">yarn flow</code> ou <code class=\"language-javascript\">npm run flow</code> pour voir si Flow a d\u00e9j\u00e0 d\u00e9couvert des probl\u00e8mes.</p>\n<p>Il existe aussi <a class=\"external-link\" href=\"https://flow.org/en/docs/config/options/#toc-all-boolean\">une option</a> pour forcer Flow \u00e0 v\u00e9rifier <em>tous</em> les fichiers, m\u00eame sans l\u2019annotation. \u00c7a peut \u00eatre trop pour des projets existants, mais raisonnable pour un nouveau projet si vous souhaitez le typer avec Flow de fa\u00e7on int\u00e9grale.</p>\n<p>Vous \u00eates par\u00e9\u00b7e\u00a0! Nous vous conseillons d\u2019aller voir les ressources suivantes pour en apprendre davantage sur Flow\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/types/\">Documentation Flow\u00a0: les annotations de type</a></li>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/editors/\">Documentation Flow\u00a0: \u00e9diteurs de code</a></li>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/react/\">Documentation Flow\u00a0: React</a></li>\n<li><a class=\"external-link\" href=\"https://medium.com/flow-type/linting-in-flow-7709d7a7e969\">Le linting avec Flow</a></li>\n</ul>\n<h2 id=\"typescript\"><a class=\"anchor\" href=\"/react/static-type-checking#typescript\"></a>TypeScript </h2>\n<p><a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a> est un langage de programmation d\u00e9velopp\u00e9 par Microsoft. C\u2019est un sur-ensemble typ\u00e9 de JavaScript, et il fournit son propre compilateur. \u00c9tant un langage typ\u00e9, TypeScript peut trouver des erreurs et bugs lors de la compilation, bien avant que l\u2019application ne soit d\u00e9ploy\u00e9e. Vous trouverez plus d\u2019informations sur l\u2019utilisation de TypeScript avec React <a class=\"external-link\" href=\"https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter\">ici</a>.</p>\n<p>Pour utiliser TypeScript, vous devez\u00a0:</p>\n<ul>\n<li>Ajouter la d\u00e9pendance TypeScript dans votre projet</li>\n<li>Configurer les options du compilateur TypeScript</li>\n<li>Utiliser les extensions appropri\u00e9es pour vos fichiers</li>\n<li>Ajouter les d\u00e9finitions de type pour les biblioth\u00e8ques que vous utilisez</li>\n</ul>\n<p>Voyons \u00e7a plus en d\u00e9tail.</p>\n<h3 id=\"using-typescript-with-create-react-app\"><a class=\"anchor\" href=\"/react/static-type-checking#using-typescript-with-create-react-app\"></a>Utiliser TypeScript avec Create React App </h3>\n<p>Create React App prend d\u00e9j\u00e0 en charge TypeScript.</p>\n<p>Pour cr\u00e9er un <strong>nouveau projet</strong> avec la prise en charge de TypeScript, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx create-react-app my-app --template typescript</code></pre></div>\n<p>Vous pouvez aussi l\u2019ajouter \u00e0 <strong>un projet Create React App existant</strong>, <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/docs/adding-typescript\">comme document\u00e9 ici</a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez Create React App, vous pouvez <strong>sauter le reste de cette page</strong>. Elle d\u00e9crit l\u2019installation manuelle qui ne s\u2019applique pas aux utilisateurs de Create React App.</p>\n</div>\n<h3 id=\"adding-typescript-to-a-project\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-typescript-to-a-project\"></a>Ajouter TypeScript \u00e0 un projet </h3>\n<p>On commence par ex\u00e9cuter une commande dans le terminal.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev typescript</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript</code></pre></div>\n<p>F\u00e9licitations\u00a0! Vous venez d\u2019installer la derni\u00e8re version de TypeScript dans votre projet. L\u2019installation de TypeScript rend disponible la commande <code class=\"language-javascript\">tsc</code>. Avant de traiter la configuration, ajoutons <code class=\"language-javascript\">tsc</code> \u00e0 la section <code class=\"language-javascript\">\"scripts\"</code> de notre <code class=\"language-javascript\">package.json</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"configuring-the-typescript-compiler\"><a class=\"anchor\" href=\"/react/static-type-checking#configuring-the-typescript-compiler\"></a>Configurer le compilateur TypeScript </h3>\n<p>Le compilateur ne nous aidera pas tant qu\u2019on ne lui aura pas dit quoi faire. En TypeScript, ces r\u00e8gles sont d\u00e9finies dans un fichier sp\u00e9cial appel\u00e9 <code class=\"language-javascript\">tsconfig.json</code>. Pour g\u00e9n\u00e9rer ce fichier\u00a0:</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> run tsc --init</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx tsc --init</code></pre></div>\n<p>Allez voir le <code class=\"language-javascript\">tsconfig.json</code> qui vient d\u2019\u00eatre g\u00e9n\u00e9r\u00e9\u00a0: vous voyez qu\u2019il y a de nombreuses options qu\u2019on peut utiliser pour configurer le compilateur. Pour une explication d\u00e9taill\u00e9e des options, voyez <a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\">cette page</a>.</p>\n<p>Parmi les nombreuses options, nous allons regarder <code class=\"language-javascript\">rootDir</code> et <code class=\"language-javascript\">outDir</code>. Conform\u00e9ment \u00e0 son r\u00f4le, le compilateur accepte des fichiers TypeScript et g\u00e9n\u00e8re des fichiers JavaScript. Mais nous ne voudrions pas confondre les fichiers sources avec le r\u00e9sultat de la compilation.</p>\n<p>Nous allons r\u00e9gler \u00e7a en deux \u00e9tapes\u00a0:</p>\n<ul>\n<li>D\u2019abord, r\u00e9organisons notre projet. Nous allons placer tout notre code source \u00e0 l\u2019int\u00e9rieur du dossier <code class=\"language-javascript\">src</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 index.ts\n\u2514\u2500\u2500 tsconfig.json</code></pre></div>\n<ul>\n<li>Ensuite, nous allons dire au compilateur o\u00f9 se trouve notre code source et o\u00f9 d\u00e9poser le r\u00e9sultat.</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// tsconfig.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>G\u00e9nial\u00a0! D\u00e9sormais, quand on ex\u00e9cute notre script, le compilateur va d\u00e9poser le JS g\u00e9n\u00e9r\u00e9 dans le dossier <code class=\"language-javascript\">build</code>. Le <a class=\"external-link\" href=\"https://github.com/Microsoft/TypeScript-React-Starter/blob/master/tsconfig.json\">TypeScript React Starter</a> fournit un <code class=\"language-javascript\">tsconfig.json</code> avec un bon ensemble de r\u00e8gles pour vous aider \u00e0 d\u00e9marrer.</p>\n<p>En r\u00e8gle g\u00e9n\u00e9rale, vous ne souhaitez pas enregistrer le JS g\u00e9n\u00e9r\u00e9 dans votre syst\u00e8me de gestion de versions, aussi veillez \u00e0 bien ajouter le dossier de sortie dans votre <code class=\"language-javascript\">.gitignore</code>.</p>\n<h3 id=\"file-extensions\"><a class=\"anchor\" href=\"/react/static-type-checking#file-extensions\"></a>Extensions de fichiers </h3>\n<p>Avec React, vous \u00e9crivez probablement vos composants dans un fichier <code class=\"language-javascript\">.js</code>. En TypeScript, il existe deux extensions de fichier\u00a0: <code class=\"language-javascript\">.ts</code> est l\u2019extension par d\u00e9faut, tandis que <code class=\"language-javascript\">.tsx</code> est une extension sp\u00e9ciale pour les fichiers qui contiennent du JSX.</p>\n<h3 id=\"running-typescript\"><a class=\"anchor\" href=\"/react/static-type-checking#running-typescript\"></a>Ex\u00e9cuter TypeScript </h3>\n<p>Si vous avez bien suivi les instructions ci-dessus, vous devriez pouvoir ex\u00e9cuter TypeScript pour la premi\u00e8re fois.</p>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> build</code></pre></div>\n<p>Si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run build</code></pre></div>\n<p>Si aucun message ne s\u2019affiche, \u00e7a veut dire que tout a bien fonctionn\u00e9.</p>\n<h3 id=\"type-definitions\"><a class=\"anchor\" href=\"/react/static-type-checking#type-definitions\"></a>D\u00e9finitions de types </h3>\n<p>Afin de pouvoir afficher les erreurs et conseils des autres modules, le compilateur a besoin de fichiers de d\u00e9clarations. Un fichier de d\u00e9clarations contient toutes les informations de typage d\u2019une biblioth\u00e8que. \u00c7a nous permet d\u2019utiliser dans notre projet des biblioth\u00e8ques JS telles que celles que l\u2019on trouve sur npm.</p>\n<p>Il y a deux fa\u00e7ons principales d\u2019obtenir les d\u00e9clarations de types d\u2019une biblioth\u00e8que\u00a0:</p>\n<p><strong>Inclue</strong> \u2013 La biblioth\u00e8que fournit d\u00e9j\u00e0 son fichier de d\u00e9clarations. \u00c7a nous arrange, il nous suffira d\u2019installer la biblioth\u00e8que et nous pourrons l\u2019utiliser sans tarder. Pour d\u00e9terminer si une biblioth\u00e8que contient ses types, cherchez un fichier <code class=\"language-javascript\">index.d.ts</code> dans son projet. Certaines biblioth\u00e8ques l\u2019annoncent dans leur <code class=\"language-javascript\">package.json</code> avec le champ <code class=\"language-javascript\">typings</code> ou <code class=\"language-javascript\">types</code>.</p>\n<p><strong><a class=\"external-link\" href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped</a></strong> \u2013 DefinitelyTyped est un \u00e9norme r\u00e9f\u00e9rentiel de d\u00e9clarations pour les biblioth\u00e8ques qui n\u2019incluent pas leur fichier de d\u00e9clarations. Les d\u00e9clarations sont faites par  tout le monde et g\u00e9r\u00e9es par Microsoft et des contributeurs en logiciel libre. React par exemple n\u2019inclut pas de fichier de d\u00e9clarations, mais on peut l\u2019obtenir sur DefinitelyTyped. Pour ce faire, ex\u00e9cutez cette commande dans votre terminal.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token comment\"># yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev @types/react\n\n<span class=\"token comment\"># npm</span>\n<span class=\"token function\">npm</span> i --save-dev @types/react</code></pre></div>\n<p><strong>D\u00e9clarations locales</strong> \u2013 Parfois, un module que vous souhaitez utiliser ne contient pas de d\u00e9clarations et n\u2019est pas non plus disponible sur DefinitelyTyped. Dans ce cas, on peut cr\u00e9er un fichier de d\u00e9clarations local. Cr\u00e9ez un fichier <code class=\"language-javascript\">declarations.d.ts</code> \u00e0 la racine de votre dossier source. Une d\u00e9claration simple pourrait ressembler \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-typescript\"><code class=\"language-javascript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'querystring'</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> object\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous \u00eates maintenant pr\u00eat\u00b7e \u00e0 \u00e9crire du code\u00a0! Nous vous conseillons de jeter un coup d\u2019\u0153il aux ressources suivantes pour en apprendre davantage sur TypeScript\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\">Documentation TypeScript\u00a0: les types de base</a></li>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html\">Documentation TypeScript\u00a0: migrer depuis JavaScript</a></li>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/react-&amp;-webpack.html\">Documentation TypeScript\u00a0: React et Webpack</a></li>\n</ul>\n<h2 id=\"reason\"><a class=\"anchor\" href=\"/react/static-type-checking#reason\"></a>Reason </h2>\n<p><a class=\"external-link\" href=\"https://reasonml.github.io/\">Reason</a> n\u2019est pas un nouveau langage, c\u2019est une nouvelle syntaxe et une bo\u00eete \u00e0 outils par-dessus le langage reconnu <a class=\"external-link\" href=\"https://ocaml.org/\">OCaml</a>. Reason donne \u00e0 OCaml une syntaxe qui plaira aux d\u00e9veloppeurs JavaScript, et s\u2019int\u00e8gre bien avec les processus de d\u00e9veloppement bas\u00e9s sur npm et Yarn que les d\u00e9veloppeurs utilisent quotidiennement.</p>\n<p>Reason est d\u00e9velopp\u00e9 chez Facebook, qui l\u2019utilise pour certains de ses produits tels que Messenger. Il est encore relativement exp\u00e9rimental mais a des <a class=\"external-link\" href=\"https://reasonml.github.io/reason-react/\">int\u00e9grations React d\u00e9di\u00e9es</a> maintenues par Facebook et par une <a class=\"external-link\" href=\"https://reasonml.github.io/docs/en/community.html\">communaut\u00e9 dynamique</a>.</p>\n<h2 id=\"kotlin\"><a class=\"anchor\" href=\"/react/static-type-checking#kotlin\"></a>Kotlin </h2>\n<p><a class=\"external-link\" href=\"https://kotlinlang.org/\">Kotlin</a> est un langage au typage statique d\u00e9velopp\u00e9 par JetBrains. Ses plateformes cibles sont entre autres la JVM, Android, LLVM et <a class=\"external-link\" href=\"https://kotlinlang.org/docs/reference/js-overview.html\">JavaScript</a>.</p>\n<p>JetBrains d\u00e9veloppe et maintient certains outils sp\u00e9cialement pour la communaut\u00e9 React\u00a0: des <a class=\"external-link\" href=\"https://github.com/JetBrains/kotlin-wrappers\">int\u00e9grations React</a> ainsi que <a class=\"external-link\" href=\"https://github.com/JetBrains/create-react-kotlin-app\">Create React Kotlin App</a>. Ce dernier est con\u00e7u pour vous aider \u00e0 commencer \u00e0 construire des applications React avec Kotlin sans avoir \u00e0 vous farcir une configuration de construction.</p>\n<h2 id=\"other-languages\"><a class=\"anchor\" href=\"/react/static-type-checking#other-languages\"></a>Autres langages </h2>\n<p>Remarquez qu\u2019il existe d\u2019autres langages au typage statique qui compilent vers JavaScript et sont donc compatibles avec React. Par exemple, <a class=\"external-link\" href=\"https://fable.io/\">F#/Fable</a> avec <a class=\"external-link\" href=\"https://elmish.github.io/react\">elmish-react</a>. Allez voir leurs sites respectifs pour plus d\u2019informations et n\u2019h\u00e9sitez pas \u00e0 ajouter sur cette page d\u2019autres langages au typage statique fonctionnant avec React\u00a0!</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/static-type-checking.md\">Edit this page</a></p></div></article>", "path": "/react/static-type-checking", "nav": ["/react/render-props", "/react/strict-mode"]}, {"key": "Mode strict", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p><code class=\"language-javascript\">StrictMode</code> est un outil pour d\u00e9tecter les probl\u00e8mes potentiels d\u2019une application. Tout comme <code class=\"language-javascript\">Fragment</code>, <code class=\"language-javascript\">StrictMode</code> n\u2019affiche rien. Il active des v\u00e9rifications et avertissements suppl\u00e9mentaires pour ses descendants.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les v\u00e9rifications du mode strict sont effectu\u00e9es uniquement durant le d\u00e9veloppement. <em>Elles n\u2019impactent pas la version utilis\u00e9e en production</em>.</p>\n</div>\n<p>Vous pouvez activer le mode strict pour n\u2019importe quelle partie du code de votre application. Par exemple\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ExampleApplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.StrictMode</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentOne</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentTwo</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.StrictMode</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Footer</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Dans l\u2019exemple ci-dessus, les v\u00e9rifications du mode strict ne seront <em>pas</em> appliqu\u00e9es pour les composants <code class=\"language-javascript\">Header</code> et <code class=\"language-javascript\">Footer</code>. En revanche, les composants <code class=\"language-javascript\">ComponentOne</code> et <code class=\"language-javascript\">ComponentTwo</code>, ainsi que tous leurs descendants, seront v\u00e9rifi\u00e9s.</p>\n<p>Actuellement, <code class=\"language-javascript\">StrictMode</code> est utilis\u00e9 pour\u00a0:</p>\n<ul>\n<li><a href=\"/react/strict-mode#identifying-unsafe-lifecycles\">Identifier les composants utilisant des m\u00e9thodes de cycle de vie d\u00e9pr\u00e9ci\u00e9es</a></li>\n<li><a href=\"/react/strict-mode#warning-about-legacy-string-ref-api-usage\">Signaler l\u2019utilisation d\u00e9pr\u00e9ci\u00e9e de l\u2019API ref \u00e0 base de cha\u00eene de caract\u00e8res</a></li>\n<li><a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\">Signaler l\u2019utilisation d\u00e9pr\u00e9ci\u00e9e de <code class=\"language-javascript\">findDOMNode</code></a></li>\n<li><a href=\"/react/strict-mode#detecting-unexpected-side-effects\">D\u00e9tecter des effets de bord inattendus</a></li>\n<li><a href=\"/react/strict-mode#detecting-legacy-context-api\">D\u00e9tecter l\u2019API d\u00e9pr\u00e9ci\u00e9e de Contexte</a> (ex. <code class=\"language-javascript\">childContextTypes</code>)</li>\n</ul>\n<p>D\u2019autres fonctionnalit\u00e9s seront ajout\u00e9es dans les futures versions de React.</p>\n<h3 id=\"identifying-unsafe-lifecycles\"><a class=\"anchor\" href=\"/react/strict-mode#identifying-unsafe-lifecycles\"></a>Identifier les m\u00e9thodes de cycle de vie d\u00e9pr\u00e9ci\u00e9es </h3>\n<p>Comme l\u2019explique <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">cet article de blog</a>, certaines m\u00e9thodes d\u00e9pr\u00e9ci\u00e9es de cycle de vie comportent des risques lorsqu\u2019elles sont utilis\u00e9es dans des applications React asynchrones. Qui plus est, si votre application utilise des biblioth\u00e8ques tierces, il devient difficile de s\u2019assurer que ces m\u00e9thodes ne sont pas utilis\u00e9es. Heureusement, le mode strict peut nous aider \u00e0 les identifier\u00a0!</p>\n<p>Lorsque le mode strict est actif, React constitue une liste de tous les composants \u00e0 base de classe utilisant les m\u00e9thodes de cycle de vie \u00e0 risque, et affiche dans la console un message d\u2019avertissement avec des informations \u00e0 propos de ces composants, comme ceci\u00a0:</p>\n<p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/e4fdbff774b356881123e69ad88eda88/1628f/strict-mode-unsafe-lifecycles-warning.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/e4fdbff774b356881123e69ad88eda88/1e088/strict-mode-unsafe-lifecycles-warning.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>En r\u00e9solvant les probl\u00e8mes identifi\u00e9s par le mode strict <em>aujourd\u2019hui</em>, vous pourrez plus facilement tirer parti du rendu concurrent qui arrivera dans les futures versions de React.</p>\n<h3 id=\"warning-about-legacy-string-ref-api-usage\"><a class=\"anchor\" href=\"/react/strict-mode#warning-about-legacy-string-ref-api-usage\"></a>Signaler l\u2019utilisation d\u00e9pr\u00e9ci\u00e9e de l\u2019API ref \u00e0 base de cha\u00eene de caract\u00e8res </h3>\n<p>Auparavant, React fournissait deux mani\u00e8res de g\u00e9rer les refs\u00a0: l\u2019API d\u00e9pr\u00e9ci\u00e9e \u00e0 base de cha\u00eene de caract\u00e8res et l\u2019API \u00e0 base de fonction de rappel. Bien que la premi\u00e8re ait \u00e9t\u00e9 la plus pratique des deux, elle avait <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/1373\">plusieurs inconv\u00e9nients</a>. Du coup, nous recommandions officiellement <a href=\"/react/refs-and-the-dom#legacy-api-string-refs\">d\u2019utiliser plut\u00f4t la forme \u00e0 base de fonction de rappel</a>.</p>\n<p>React 16.3 a ajout\u00e9 une troisi\u00e8me option qui offre le confort de la premi\u00e8re approche, mais sans ses inconv\u00e9nients\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Dans la mesure o\u00f9 les refs \u00e0 base d\u2019objets sont largement utilis\u00e9es comme substitut des refs \u00e0 base de cha\u00eenes de caract\u00e8res, le mode strict nous avertit d\u00e9sormais lors de l\u2019utilisation de ces derni\u00e8res.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les refs \u00e0 base de fonction de rappel continueront d\u2019\u00eatre prises en charge en plus de la nouvelle API <code class=\"language-javascript\">createRef</code>.</p>\n<p>Vous n\u2019avez pas besoin de remplacer les refs \u00e0 base de fonctions de rappel dans vos composants. Elles sont un peu plus flexibles et resteront donc prises en charge, \u00e0 titre de fonctionnalit\u00e9 avanc\u00e9e.</p>\n</div>\n<p><a href=\"/react/refs-and-the-dom\">Vous pouvez en apprendre davantage sur l\u2019API <code class=\"language-javascript\">createRef</code> ici.</a></p>\n<h3 id=\"warning-about-deprecated-finddomnode-usage\"><a class=\"anchor\" href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\"></a>Signaler l\u2019utilisation d\u00e9pr\u00e9ci\u00e9e de <code class=\"language-javascript\">findDOMNode</code> </h3>\n<p>React proposait autrefois <code class=\"language-javascript\">findDOMNode</code> pour rechercher dans l\u2019arborescence le n\u0153ud DOM associ\u00e9 \u00e0 une instance de classe. Normalement, vous n\u2019avez pas besoin de \u00e7a car vous pouvez <a href=\"/react/refs-and-the-dom#creating-refs\">attacher directement une ref \u00e0 un n\u0153ud du DOM</a>.</p>\n<p><code class=\"language-javascript\">findDOMNode</code> pouvait aussi \u00eatre utilis\u00e9e sur des composants \u00e0 base de classe, mais \u00e7a cassait l\u2019encapsulation en permettant \u00e0 un parent d\u2019exiger que certains enfants soient pr\u00e9sents dans le rendu. Cette technique g\u00eanait les refactorisations car un composant ne pouvait plus changer ses d\u00e9tails d\u2019impl\u00e9mentation en confiance, dans la mesure o\u00f9 des parents \u00e9taient susceptibles d\u2019obtenir un acc\u00e8s direct \u00e0 son n\u0153ud DOM. <code class=\"language-javascript\">findDOMNode</code> ne renvoie par ailleurs que le premier enfant, alors qu\u2019avec les Fragments un composant peut renvoyer plusieurs n\u0153uds DOM. <code class=\"language-javascript\">findDOMNode</code> est aussi une API temporalis\u00e9e\u00a0: sa valeur renvoy\u00e9e n\u2019est pas mise \u00e0 jour automatiquement, de sorte que si un composant enfant se rafra\u00eechit avec un autre n\u0153ud DOM, l\u2019API ne vous en informe pas. En d\u2019autres termes, <code class=\"language-javascript\">findDOMNode</code> ne fonctionnait que pour les composants renvoyant un unique n\u0153ud DOM qui ne changeait jamais.</p>\n<p>Pr\u00e9f\u00e9rez une approche explicite en passant une ref \u00e0 votre composant personnalis\u00e9 et en la transf\u00e9rant au DOM gr\u00e2ce au <a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">transfert de ref</a>.</p>\n<p>Vous pouvez \u00e9galement ajouter un n\u0153ud DOM d\u2019enrobage dans votre composant et lui associer une ref directement.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wrapper <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wrapper<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>En CSS, la propri\u00e9t\u00e9 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/CSS/display#display_contents\"><code class=\"language-javascript\">display: contents</code></a> peut \u00eatre utilis\u00e9e si vous ne voulez pas que le n\u0153ud fasse partie de la mise en page.</p>\n</div>\n<h3 id=\"detecting-unexpected-side-effects\"><a class=\"anchor\" href=\"/react/strict-mode#detecting-unexpected-side-effects\"></a>D\u00e9tecter les effets de bord inattendus </h3>\n<p>Conceptuellement, React fonctionne en deux \u00e9tapes\u00a0:</p>\n<ul>\n<li>La phase de <strong>rendu</strong> d\u00e9termine les modifications qui doivent \u00eatre retranscrites, par exemple dans le DOM. Lors de cette phase, React appelle <code class=\"language-javascript\">render</code> puis compare le r\u00e9sultat au rendu pr\u00e9c\u00e9dent.</li>\n<li>La phase de <strong>commit</strong> est celle de l\u2019application des modifications. (Dans le cas de React DOM, c\u2019est durant cette phase que React ins\u00e8re, modifie, et supprime des n\u0153uds du DOM.) C\u2019est \u00e9galement durant cette phase que React appelle des m\u00e9thodes de cycle de vie comme <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>.</li>\n</ul>\n<p>La phase de commit est le plus souvent tr\u00e8s rapide, mais le rendu peut \u00eatre lent. C\u2019est pourquoi le mode concurrent \u00e0 venir (qui n\u2019est pas encore activ\u00e9 par d\u00e9faut) d\u00e9coupe le travail de rendu en morceaux, suspendant et reprenant le travail pour \u00e9viter de bloquer le navigateur. \u00c7a signifie que React peut invoquer les m\u00e9thodes de cycle de vie de la phase de rendu plus d\u2019une fois avant le commit, ou les invoquer sans phase de commit du tout (\u00e0 cause d\u2019une erreur ou d\u2019une interruption de plus haute priorit\u00e9).</p>\n<p>Pour les composants \u00e0 base de classes, les m\u00e9thodes de cycle de vie de la phase de rendu sont les suivantes\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">constructor</code></li>\n<li><code class=\"language-javascript\">componentWillMount</code> (or <code class=\"language-javascript\">UNSAFE_componentWillMount</code>)</li>\n<li><code class=\"language-javascript\">componentWillReceiveProps</code> (or <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps</code>)</li>\n<li><code class=\"language-javascript\">componentWillUpdate</code> (or <code class=\"language-javascript\">UNSAFE_componentWillUpdate</code>)</li>\n<li><code class=\"language-javascript\">getDerivedStateFromProps</code></li>\n<li><code class=\"language-javascript\">shouldComponentUpdate</code></li>\n<li><code class=\"language-javascript\">render</code></li>\n<li>les fonctions de modifications pass\u00e9es \u00e0 <code class=\"language-javascript\">setState</code> (son premier argument)</li>\n</ul>\n<p>Vu que les m\u00e9thodes ci-dessus peuvent \u00eatre appel\u00e9es plus d\u2019une fois, il est imp\u00e9ratif qu\u2019elles ne contiennent pas d\u2019effets de bord. Ignorer cette r\u00e8gle peut entra\u00eener divers probl\u00e8mes, dont des fuites de m\u00e9moire et un \u00e9tat applicatif invalide. Malheureusement, il peut \u00eatre difficile de d\u00e9tecter ces probl\u00e8mes car ils sont souvent <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Algorithme_d%C3%A9terministe\">non-d\u00e9terministes</a>.</p>\n<p>Le mode strict ne d\u00e9tecte pas automatiquement ces effets de bord, mais il peut vous aider \u00e0 les rep\u00e9rer en les rendant un peu plus d\u00e9terministes. Il y parvient en invoquant volontairement deux fois les fonctions suivantes\u00a0:</p>\n<ul>\n<li>Les m\u00e9thodes <code class=\"language-javascript\">constructor</code>, <code class=\"language-javascript\">render</code> et <code class=\"language-javascript\">shouldComponentUpdate</code> des composants \u00e0 base de classe</li>\n<li>La m\u00e9thode statique <code class=\"language-javascript\">getDerivedStateFromProps</code> des composants \u00e0 base de classe</li>\n<li>Le corps des fonctions composants</li>\n<li>Les fonctions de mise \u00e0 jour d\u2019\u00e9tat (le premier argument pass\u00e9 \u00e0 <code class=\"language-javascript\">setState</code>)</li>\n<li>Les fonctions pass\u00e9es \u00e0 <code class=\"language-javascript\">useState</code>, <code class=\"language-javascript\">useMemo</code> ou <code class=\"language-javascript\">useReducer</code></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette fonctionnalit\u00e9 s\u2019applique uniquement en mode d\u00e9veloppement. <em>Les m\u00e9thodes de cycle de vie ne seront pas invoqu\u00e9es deux fois en mode production.</em></p>\n</div>\n<p>Par exemple, examinez le code suivant\u00a0:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TopLevelRoute</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    SharedApplicationState<span class=\"token punctuation\">.</span><span class=\"token function\">recordEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ExampleComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Au premier abord, ce code ne semble pas probl\u00e9matique. Cependant, si <code class=\"language-javascript\">SharedApplicationState.recordEvent</code> n\u2019est pas <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Idempotence#En_informatique\">idempotent</a>, alors l\u2019instanciation multiple de ce composant pourrait corrompre l\u2019\u00e9tat applicatif. Ce genre de bug subtil peut ne pas se manifester durant le d\u00e9veloppement, ou s\u2019av\u00e9rer tellement erratique qu\u2019il est n\u00e9glig\u00e9.</p>\n<p>En invoquant volontairement deux fois les m\u00e9thodes comme le constructeur d\u2019un composant, le mode strict facilite la d\u00e9tection de ces sch\u00e9mas.</p>\n<h3 id=\"detecting-legacy-context-api\"><a class=\"anchor\" href=\"/react/strict-mode#detecting-legacy-context-api\"></a>D\u00e9tecter l\u2019API d\u00e9pr\u00e9ci\u00e9e de Contexte </h3>\n<p>L\u2019API d\u00e9pr\u00e9ci\u00e9e de Contexte est source d\u2019erreur, et sera retir\u00e9e dans une future version majeure de React. Elle fonctionne toujours dans les versions 16.x mais le mode strict affichera ce message d\u2019avertissement\u00a0:</p>\n<p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/fca5c5e1fb2ef2e2d59afb100b432c12/51800/warn-legacy-context-in-strict-mode.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/fca5c5e1fb2ef2e2d59afb100b432c12/1e088/warn-legacy-context-in-strict-mode.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Lisez la <a href=\"/react/context\">documentation de la nouvelle API de Contexte</a> pour faciliter la migration vers cette nouvelle version.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/strict-mode.md\">Edit this page</a></p></div></article>", "path": "/react/strict-mode", "nav": ["/react/static-type-checking", "/react/typechecking-with-proptypes"]}, {"key": "Validation de types avec PropTypes", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">React.PropTypes</code> a \u00e9t\u00e9 d\u00e9plac\u00e9 dans un autre module depuis React v15.5. Merci de plut\u00f4t utiliser <a class=\"external-link\" href=\"https://www.npmjs.com/package/prop-types\">le module <code class=\"language-javascript\">prop-types</code></a>.</p>\n<p>Nous fournissons <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/04/07/react-v15.5.0.html#migrating-from-reactproptypes\">un script codemod</a> pour automatiser cette transition.</p>\n</div>\n<p>Au fur et \u00e0 mesure que votre application grandit, vous pouvez d\u00e9tecter un grand nombre de bugs gr\u00e2ce \u00e0 la validation de types. Dans certains cas, vous pouvez utiliser des extensions JavaScript comme <a class=\"external-link\" href=\"https://flow.org/\">Flow</a> ou <a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a> pour valider les types de toute votre application. Mais m\u00eame si vous ne les utilisez pas, React poss\u00e8de ses propres fonctionnalit\u00e9s de validation de types. Pour lancer la validation de types des props d\u2019un composant, vous pouvez ajouter la propri\u00e9t\u00e9 sp\u00e9ciale <code class=\"language-javascript\">propTypes</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">Greeting<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  name<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string</span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Dans cet exemple nous utilisons un composant \u00e0 base de classe, mais \u00e7a reste vrai pour les fonctions composants et les composants cr\u00e9\u00e9s avec <a class=\"external-link\" href=\"https://reactjs.org/docs/react-api.html#reactmemo\"><code class=\"language-javascript\">React.memo</code></a> ou <a class=\"external-link\" href=\"https://reactjs.org/docs/react-api.html#reactforwardref\"><code class=\"language-javascript\">React.forwardRef</code></a>.</p>\n<p><code class=\"language-javascript\">PropTypes</code> exporte un ensemble de validateurs qui peuvent \u00eatre utilis\u00e9s pour s\u2019assurer que la donn\u00e9e que vous recevez est valide. Dans cet exemple, nous utilisons <code class=\"language-javascript\">PropTypes.string</code>. Quand une valeur non valide est fournie \u00e0 une prop, un message d\u2019avertissement appara\u00eetra dans la console JavaScript. Pour des raisons de performances, <code class=\"language-javascript\">propTypes</code> n\u2019est v\u00e9rifi\u00e9e qu\u2019en mode d\u00e9veloppement.</p>\n<h3 id=\"proptypes\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#proptypes\"></a>PropTypes </h3>\n<p>Voici un exemple qui d\u00e9taille les diff\u00e9rents validateurs fournis\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Vous pouvez d\u00e9clarer qu'une prop est d'un certain type JS. Par d\u00e9faut,</span>\n  <span class=\"token comment\">// elles sont toutes optionnelles.</span>\n  optionalArray<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>\n  optionalBool<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n  optionalFunc<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span>\n  optionalNumber<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  optionalObject<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">,</span>\n  optionalString<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  optionalSymbol<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>symbol<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Tout ce qui peut appara\u00eetre dans le rendu : des nombres, des cha\u00eenes de</span>\n  <span class=\"token comment\">//  caract\u00e8res, des \u00e9l\u00e9ments ou des tableaux (ou fragments) contenant ces types.</span>\n  optionalNode<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Un \u00e9l\u00e9ment React.</span>\n  optionalElement<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Un type d\u2019\u00e9l\u00e9ment React (ex. MyComponent).</span>\n  optionalElementType<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>elementType<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Vous pouvez aussi d\u00e9clarer qu'une prop est une instance d'une classe.</span>\n  <span class=\"token comment\">// On utilise pour \u00e7a l'op\u00e9rateur JS instanceof.</span>\n  optionalMessage<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Vous pouvez vous assurer que votre prop est limit\u00e9e \u00e0 certaines</span>\n  <span class=\"token comment\">// valeurs sp\u00e9cifiques en la traitant comme une enum\u00e9ration.</span>\n  optionalEnum<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'News'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Photos'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Cette prop peut \u00eatre de n'importe lequel de ces trois types</span>\n  optionalUnion<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOfType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Un tableau avec des valeurs d'un certain type</span>\n  optionalArrayOf<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Un objet avec des valeurs d'un certain type</span>\n  optionalObjectOf<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">objectOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Un objet avec une forme sp\u00e9cifique</span>\n  optionalObjectWithShape<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">shape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    color<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An object with warnings on extra properties</span>\n  optionalObjectWithStrictShape<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">exact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    quantity<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Vous pouvez ajouter `isRequired` \u00e0 la fin de n'importe lequel des validateurs</span>\n  <span class=\"token comment\">// ci-dessus pour vous assurer qu'un message d'avertissement s'affiche lorsque</span>\n  <span class=\"token comment\">// la prop n'est pas fournie.</span>\n  requiredFunc<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Cette prop est requise et peut \u00eatre de n'importe quel type</span>\n  requiredAny<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Vous pouvez aussi sp\u00e9cifier un validateur personnalis\u00e9. Il devra renvoyer</span>\n  <span class=\"token comment\">// un objet Error si la validation \u00e9choue. N'utilisez pas de `console.warn`</span>\n  <span class=\"token comment\">// ou `throw`, car \u00e7a ne fonctionnera pas dans `oneOfType`.</span>\n  <span class=\"token function-variable function\">customProp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/matchme/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Vous pouvez aussi fournir un validateur personnalis\u00e9 \u00e0 `arrayOf` et `objectOf`.</span>\n  <span class=\"token comment\">// Il faudra renvoyer un objet Error si la validation \u00e9choue. Le validateur</span>\n  <span class=\"token comment\">// sera appel\u00e9 pour chaque cl\u00e9 du tableau ou de l'objet. Les deux premiers</span>\n  <span class=\"token comment\">// arguments du validateur sont le tableau ou l'objet lui-m\u00eame, et la cl\u00e9</span>\n  <span class=\"token comment\">// de la valeur actuelle.</span>\n  customArrayProp<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propValue<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> propFullName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/matchme/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>propValue<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propFullName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n          <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"requiring-single-child\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#requiring-single-child\"></a>Exiger un seul enfant </h3>\n<p>Avec <code class=\"language-javascript\">PropTypes.element</code>, vous pouvez sp\u00e9cifier qu\u2019un seul enfant peut \u00eatre pass\u00e9 \u00e0 un composant.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \u00c7a doit \u00eatre un \u00e9l\u00e9ment unique ou un avertissement sera affich\u00e9.</span>\n    <span class=\"token keyword\">const</span> children <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"default-prop-values\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#default-prop-values\"></a>Valeurs par d\u00e9faut des props </h3>\n<p>Vous pouvez d\u00e9finir des valeurs par d\u00e9faut pour vos <code class=\"language-javascript\">props</code> en utilisant la propri\u00e9t\u00e9 sp\u00e9ciale <code class=\"language-javascript\">defaultProps</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Sp\u00e9cifie les valeurs par d\u00e9faut des props :</span>\nGreeting<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'bel inconnu'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Affiche \u00ab Bonjour, bel inconnu \u00bb :</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si vous utilisez une transformation Babel telle que <a class=\"external-link\" href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">transform-class-properties</a> , vous pouvez aussi d\u00e9clarer <code class=\"language-javascript\">defaultProps</code> comme propri\u00e9t\u00e9 statique dans une classe de composant React. Cependant, cette syntaxe n\u2019a pas encore \u00e9t\u00e9 finalis\u00e9e et requiert une \u00e9tape de compilation suppl\u00e9mentaire pour fonctionner dans un navigateur. Pour plus d\u2019informations, voir la <a class=\"external-link\" href=\"https://github.com/tc39/proposal-static-class-features/\">proposition des aspects statiques de classe</a>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'bel inconnu'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les <code class=\"language-javascript\">defaultProps</code> seront utilis\u00e9es pour s\u2019assurer que <code class=\"language-javascript\">this.props.name</code> aura une valeur si elle n\u2019\u00e9tait pas sp\u00e9cifi\u00e9e par le composant parent. La validation de types des <code class=\"language-javascript\">propTypes</code> aura lieu apr\u00e8s que <code class=\"language-javascript\">defaultProps</code> est r\u00e9solu, la validation de types s\u2019applique donc \u00e9galement aux <code class=\"language-javascript\">defaultProps</code>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/typechecking-with-proptypes.md\">Edit this page</a></p></div></article>", "path": "/react/typechecking-with-proptypes", "nav": ["/react/strict-mode", "/react/uncontrolled-components"]}, {"key": "Composants non-contr\u00f4l\u00e9s", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Dans la plupart des cas, pour impl\u00e9menter des formulaires, nous recommandons d\u2019utiliser des <a href=\"/react/forms#controlled-components\">composants contr\u00f4l\u00e9s</a>. Dans un composant contr\u00f4l\u00e9, les donn\u00e9es du formulaires sont g\u00e9r\u00e9es par le composant React. L\u2019alternative est le composant non-contr\u00f4l\u00e9, o\u00f9 les donn\u00e9es sont g\u00e9r\u00e9es par le DOM.</p>\n<p>Au lieu d\u2019\u00e9crire un gestionnaire d\u2019\u00e9v\u00e9nements pour chaque mise \u00e0 jour de l\u2019\u00e9tat d\u2019un composant non-contr\u00f4l\u00e9, vous pouvez <a href=\"/react/refs-and-the-dom\">utiliser une ref</a>.</p>\n<p>Par exemple, ce code accepte une saisie de nom dans un composant non-contr\u00f4l\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Un nom a \u00e9t\u00e9 envoy\u00e9 : '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Nom :</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/WooRWa?editors=0010\"><strong>Essayer sur CodePen</strong></a></p>\n<p>Puisqu\u2019un composant non-contr\u00f4l\u00e9 garde la source de v\u00e9rit\u00e9 dans le DOM, il est parfois plus simple d\u2019int\u00e9grer du code React \u00e0 base de composants non-contr\u00f4l\u00e9s avec du code non-React. Le code peut \u00e9galement \u00eatre l\u00e9g\u00e8rement plus concis si vous souhaitez pondre un truc vite fait. Autrement, vous devriez utiliser les composants contr\u00f4l\u00e9s.</p>\n<p>Si dans une situation donn\u00e9e il n\u2019est pas toujours \u00e9vident de savoir quel type de composant utiliser, <a class=\"external-link\" href=\"https://goshakkk.name/controlled-vs-uncontrolled-inputs-react/\">cet article sur les champs contr\u00f4l\u00e9s ou non-contr\u00f4l\u00e9s</a> vous sera peut-\u00eatre utile.</p>\n<h3 id=\"default-values\"><a class=\"anchor\" href=\"/react/uncontrolled-components#default-values\"></a>Valeurs par d\u00e9faut </h3>\n<p>Dans le cycle de vie des rendus React, l\u2019attribut <code class=\"language-javascript\">value</code> des \u00e9l\u00e9ments du formulaire va \u00e9craser la valeur du DOM. Avec un composant non-contr\u00f4l\u00e9, vous souhaiterez plus souvent sp\u00e9cifier la valeur initiale et laisser les mises \u00e0 jours suivantes non-contr\u00f4l\u00e9es. Dans ces cas-l\u00e0, vous pouvez sp\u00e9cifier un attribut <code class=\"language-javascript\">defaultValue</code> plut\u00f4t que <code class=\"language-javascript\">value</code>.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Nom :</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">defaultValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Thierry<span class=\"token punctuation\">\"</span></span></span>          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Envoyer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans la m\u00eame s\u00e9rie, <code class=\"language-javascript\">&lt;input type=\"checkbox\"&gt;</code> et <code class=\"language-javascript\">&lt;input type=\"radio\"&gt;</code> ont un attribut <code class=\"language-javascript\">defaultChecked</code>, et <code class=\"language-javascript\">&lt;select&gt;</code> et <code class=\"language-javascript\">&lt;textarea&gt;</code> ont aussi <code class=\"language-javascript\">defaultValue</code>.</p>\n<h2 id=\"the-file-input-tag\"><a class=\"anchor\" href=\"/react/uncontrolled-components#the-file-input-tag\"></a>La balise <code class=\"language-javascript\">input type=\"file\"</code> </h2>\n<p>En HTML, un <code class=\"language-javascript\">&lt;input type=\"file\"&gt;</code> permet \u00e0 l\u2019utilisateur de s\u00e9lectionner un ou plusieurs fichiers depuis son appareil, et de les t\u00e9l\u00e9verser vers un serveur ou de les manipuler en JavaScript gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/File/Using_files_from_web_applications\">l\u2019API <em>File</em></a>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">&lt;input type=\"file\" /&gt;</code> est toujours un composant non-contr\u00f4l\u00e9 en React, puisque sa valeur ne peut \u00eatre d\u00e9finie que par l\u2019utilisateur et non programmatiquement.</p>\n<p>Vous devriez utiliser l\u2019API <em>File</em> pour interagir avec les fichiers. L\u2019exemple suivant montre comment cr\u00e9er une <a href=\"/react/refs-and-the-dom\">ref sur le n\u0153ud DOM</a> pour acc\u00e9der aux fichiers lors de l\u2019envoi du formulaire\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Fichier s\u00e9lectionn\u00e9 - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span></span>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n      <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Envoyer un fichier :</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Envoyer</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FileInput</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://fr.reactjs.org//redirect-to-codepen/uncontrolled-components/input-type-file\">Essayer sur CodePen</a></strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/uncontrolled-components.md\">Edit this page</a></p></div></article>", "path": "/react/uncontrolled-components", "nav": ["/react/typechecking-with-proptypes", "/react/web-components"]}, {"key": "Web Components", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React et <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/Web_Components\">les Web Components</a> sont con\u00e7us pour r\u00e9soudre des probl\u00e8mes diff\u00e9rents. Les Web Components offrent une encapsulation forte pour des composants r\u00e9utilisables, tandis que React fournit une biblioth\u00e8que d\u00e9clarative qui permet au DOM de rester synchronis\u00e9 avec vos donn\u00e9es. Les deux objectifs sont compl\u00e9mentaires. En tant que d\u00e9veloppeur\u00b7se, vous \u00eates libre d\u2019utiliser React dans vos Web Components, ou bien d\u2019utiliser des Web Components dans React, ou encore les deux \u00e0 la fois.</p>\n<p>La plupart des utilisateurs de React n\u2019utilisent pas les Web Components, mais vous voudrez peut-\u00eatre le faire, en particulier si vous utilisez des composants tiers d\u2019interface utilisateur (UI) \u00e9crits \u00e0 l\u2019aide de Web Components.</p>\n<h2 id=\"using-web-components-in-react\"><a class=\"anchor\" href=\"/react/web-components#using-web-components-in-react\"></a>Utiliser des Web Components dans React </h2>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloMessage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x-search</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x-search</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les Web Components exposent souvent une API imp\u00e9rative. Par exemple, un Web Component <code class=\"language-javascript\">video</code> peut exposer les fonctions <code class=\"language-javascript\">play()</code> et <code class=\"language-javascript\">pause()</code>. Pour acc\u00e9der \u00e0 l\u2019API imp\u00e9rative d\u2019un Web Component, vous devez utiliser une r\u00e9f\u00e9rence pour interagir directement avec le n\u0153ud du DOM. Si vous utilisez des Web Components tiers, la meilleure solution consiste \u00e0 \u00e9crire un composant React qui se comporte comme un enrobage pour votre Web Component.</p>\n<p>Les \u00e9v\u00e9nements \u00e9mis par un Web Component peuvent ne pas se propager correctement \u00e0 travers un arbre de composants de React.\nVous devrez attacher manuellement les gestionnaires d\u2019\u00e9v\u00e9nements afin de g\u00e9rer ces \u00e9v\u00e9nements au sein de vos composants React.</p>\n</div>\n<p>Une source habituelle de confusion r\u00e9side dans l\u2019utilisation par les Web Components de <code class=\"language-javascript\">class</code> au lieu de <code class=\"language-javascript\">className</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">BrickFlipbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>brick-flipbox</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Face</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Arri\u00e8re</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>brick-flipbox</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"using-react-in-your-web-components\"><a class=\"anchor\" href=\"/react/web-components#using-react-in-your-web-components\"></a>Utiliser React dans vos Web Components </h2>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">XSearch</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">connectedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mountPoint <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> mode<span class=\"token operator\">:</span> <span class=\"token string\">'open'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>mountPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.google.com/search?q='</span> <span class=\"token operator\">+</span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span> mountPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-search'</span><span class=\"token punctuation\">,</span> XSearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Ce code <strong>ne fonctionnera pas</strong> si vous transformez vos classes avec Babel. Consultez la discussion \u00e0 ce sujet sur <a class=\"external-link\" href=\"https://github.com/w3c/webcomponents/issues/587\">ce ticket</a>.\nInt\u00e9grez l\u2019adaptateur <a class=\"external-link\" href=\"https://github.com/webcomponents/polyfills/tree/master/packages/webcomponentsjs#custom-elements-es5-adapterjs\">custom-elements-es5-adapter</a> pr\u00e9alablement au chargement de vos Web Components afin de r\u00e9soudre ce probl\u00e8me.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/web-components.md\">Edit this page</a></p></div></article>", "path": "/react/web-components", "nav": ["/react/uncontrolled-components", "/react/react-api"]}]}, {"key": "R\u00e9f\u00e9rence de l'API", "values": [{"key": "React", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>L\u2019objet <code class=\"language-javascript\">React</code> est le point d\u2019entr\u00e9e de la biblioth\u00e8que React. Si vous chargez React depuis une balise <code class=\"language-javascript\">&lt;script&gt;</code>, ces API de haut-niveau sont disponibles depuis l\u2019objet global <code class=\"language-javascript\">React</code>. Si vous utilisez npm avec la syntaxe ES6, vous pouvez \u00e9crire\u00a0: <code class=\"language-javascript\">import React from 'react'</code>. Si vous utilisez npm avec la syntaxe ES5, vous pouvez \u00e9crire\u00a0: <code class=\"language-javascript\">var React = require('react')</code>.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-api#overview\"></a>Aper\u00e7u </h2>\n<h3 id=\"components\"><a class=\"anchor\" href=\"/react/react-api#components\"></a>Composants </h3>\n<p>Les composants React vous permettent de d\u00e9couper une interface utilisateur <em>(UI, pour User Interface, NdT)</em> en blocs ind\u00e9pendants et r\u00e9utilisables, ce qui vous permet de concevoir chaque partie en isolation. Un composant React peut \u00eatre d\u00e9fini en \u00e9tendant les classes <code class=\"language-javascript\">React.Component</code> ou <code class=\"language-javascript\">React.PureComponent</code>.</p>\n<ul>\n<li><a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a></li>\n<li><a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a></li>\n</ul>\n<p>Si vous n\u2019utilisez pas les classes ES6, vous pouvez utiliser le module <code class=\"language-javascript\">create-react-class</code> \u00e0 la place. Lisez <a href=\"/react/react-without-es6\">React sans ES6</a> pour plus de d\u00e9tails.</p>\n<p>Un composant React peut aussi \u00eatre d\u00e9fini via une fonction que l\u2019on pourra choisir d\u2019enrober avec <code class=\"language-javascript\">React.memo</code>\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a></li>\n</ul>\n<h3 id=\"creating-react-elements\"><a class=\"anchor\" href=\"/react/react-api#creating-react-elements\"></a>Cr\u00e9er des \u00e9l\u00e9ments React </h3>\n<p>Nous vous recommandons d\u2019<a href=\"/react/introducing-jsx\">utiliser JSX</a> pour d\u00e9finir \u00e0 quoi ressemblera votre UI. Tous les \u00e9l\u00e9ments JSX ne sont que du sucre syntaxique qui cache des appels \u00e0 <a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">React.createElement()</code></a>. Si vous utilisez JSX, vous ne devriez pas avoir besoin d\u2019appeler les m\u00e9thodes suivantes\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">createElement()</code></a></li>\n<li><a href=\"/react/react-api#createfactory\"><code class=\"language-javascript\">createFactory()</code></a></li>\n</ul>\n<p>Lisez <a href=\"/react/react-without-jsx\">React sans JSX</a> pour plus de d\u00e9tails.</p>\n<h3 id=\"transforming-elements\"><a class=\"anchor\" href=\"/react/react-api#transforming-elements\"></a>Transformer des \u00e9l\u00e9ments </h3>\n<p><code class=\"language-javascript\">React</code> propose plusieurs API pour manipuler les \u00e9l\u00e9ments\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-api#cloneelement\"><code class=\"language-javascript\">cloneElement()</code></a></li>\n<li><a href=\"/react/react-api#isvalidelement\"><code class=\"language-javascript\">isValidElement()</code></a></li>\n<li><a href=\"/react/react-api#reactchildren\"><code class=\"language-javascript\">React.Children</code></a></li>\n</ul>\n<h3 id=\"fragments\"><a class=\"anchor\" href=\"/react/react-api#fragments\"></a>Fragments </h3>\n<p><code class=\"language-javascript\">React</code> fournit \u00e9galement un composant particulier pour r\u00e9aliser le rendu de plusieurs \u00e9l\u00e9ments sans avoir \u00e0 les envelopper avec un autre.</p>\n<ul>\n<li><a href=\"/react/react-api#reactfragment\"><code class=\"language-javascript\">React.Fragment</code></a></li>\n</ul>\n<h3 id=\"refs\"><a class=\"anchor\" href=\"/react/react-api#refs\"></a>Refs </h3>\n<ul>\n<li><a href=\"/react/react-api#reactcreateref\"><code class=\"language-javascript\">React.createRef</code></a></li>\n<li><a href=\"/react/react-api#reactforwardref\"><code class=\"language-javascript\">React.forwardRef</code></a></li>\n</ul>\n<h3 id=\"suspense\"><a class=\"anchor\" href=\"/react/react-api#suspense\"></a>Suspense </h3>\n<p><em>Suspense</em> permet aux composants \u00ab\u00a0d\u2019attendre\u00a0\u00bb quelque chose avant de s\u2019afficher. Pour le moment, <em>Suspense</em> ne prend en charge qu\u2019un seul cas d\u2019usage\u00a0: <a href=\"/react/code-splitting#reactlazy\">le chargement dynamique de composants avec <code class=\"language-javascript\">React.lazy</code></a>. \u00c0 l\u2019avenir, il permettra de g\u00e9rer d\u2019autres cas d\u2019usages tels que le chargement de donn\u00e9es distantes.</p>\n<ul>\n<li><a href=\"/react/react-api#reactlazy\"><code class=\"language-javascript\">React.lazy</code></a></li>\n<li><a href=\"/react/react-api#reactsuspense\"><code class=\"language-javascript\">React.Suspense</code></a></li>\n</ul>\n<h3 id=\"hooks\"><a class=\"anchor\" href=\"/react/react-api#hooks\"></a>Hooks </h3>\n<p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils vous permettent d\u2019utiliser les \u00e9tats et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes. Les <em>Hooks</em> disposent de <a href=\"/react/hooks-intro\">leur propre documentation</a> et leur API est d\u00e9taill\u00e9e \u00e0 part\u00a0:</p>\n<ul>\n<li>\n<p><a href=\"/react/hooks-reference#basic-hooks\"><em>Hooks</em> de base</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a></li>\n<li><a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#additional-hooks\"><em>Hooks</em> suppl\u00e9mentaires</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a></li>\n<li><a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a></li>\n<li><a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a></li>\n<li><a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef</code></a></li>\n<li><a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a></li>\n<li><a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usedebugvalue\"><code class=\"language-javascript\">useDebugValue</code></a></li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-api#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"reactcomponent\"><a class=\"anchor\" href=\"/react/react-api#reactcomponent\"></a><code class=\"language-javascript\">React.Component</code> </h3>\n<p><code class=\"language-javascript\">React.Component</code> est la classe de base utilis\u00e9e pour cr\u00e9er des composants React avec la syntaxe des <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Classes\">classes ES6</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Rendez-vous sur <a href=\"/react/react-component\">la page de r\u00e9f\u00e9rence de l\u2019API <code class=\"language-javascript\">React.Component</code></a> pour voir la liste compl\u00e8te des m\u00e9thodes et propri\u00e9t\u00e9s de la classe de base <code class=\"language-javascript\">React.Component</code>.</p>\n\n<h3 id=\"reactpurecomponent\"><a class=\"anchor\" href=\"/react/react-api#reactpurecomponent\"></a><code class=\"language-javascript\">React.PureComponent</code> </h3>\n<p><code class=\"language-javascript\">React.PureComponent</code> est similaire \u00e0 <a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a>. La seule diff\u00e9rence est que <a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a> n\u2019impl\u00e9mente pas la m\u00e9thode <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a>, alors que <code class=\"language-javascript\">React.PureComponent</code> l\u2019impl\u00e9mente en r\u00e9alisant une comparaison de surface de l\u2019\u00e9tat et des propri\u00e9t\u00e9s.</p>\n<p>Si la fonction <code class=\"language-javascript\">render()</code> d\u2019un de vos composants React produit un rendu identique pour le m\u00eame \u00e9tat et les m\u00eames propri\u00e9t\u00e9s, le faire \u00e9tendre <code class=\"language-javascript\">React.PureComponent</code> devrait am\u00e9liorer les performances dans certains cas.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>La m\u00e9thode <code class=\"language-javascript\">shouldComponentUpdate()</code> de <code class=\"language-javascript\">React.PureComponent</code> r\u00e9alise une simple comparaison de surface. Avec des donn\u00e9es complexes, elle peut produire des faux n\u00e9gatifs si la structure de donn\u00e9es subit des changements profonds. Ne cr\u00e9ez des composants avec <code class=\"language-javascript\">PureComponent</code> que si vous avez des \u00e9tats et des props simples, et le cas \u00e9ch\u00e9ant utilisez <a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">forceUpdate()</code></a> si vous savez que vos donn\u00e9es ont chang\u00e9 en profondeur. Vous pouvez aussi envisager d\u2019utiliser des <a class=\"external-link\" href=\"https://facebook.github.io/immutable-js/\">objets immuables</a> pour simplifier la comparaison rapide de donn\u00e9es imbriqu\u00e9es.</p>\n<p>De plus, la m\u00e9thode <code class=\"language-javascript\">shouldComponentUpdate()</code> de <code class=\"language-javascript\">React.PureComponent</code> ignore la mise \u00e0 jour des propri\u00e9t\u00e9s de tout l\u2019arbre des composants enfants. Assurez-vous donc que tous les composants enfants sont \u00e9galement \u00ab\u00a0purs\u00a0\u00bb.</p>\n</div>\n\n<h3 id=\"reactmemo\"><a class=\"anchor\" href=\"/react/react-api#reactmemo\"></a><code class=\"language-javascript\">React.memo</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Faire le rendu en utilisant les props */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">React.memo</code> est un <a href=\"/react/higher-order-components\">composant d\u2019ordre sup\u00e9rieur</a>.</p>\n<p>Si vous avez un composant qui affiche toujours le m\u00eame r\u00e9sultat pour un m\u00eame jeu de propri\u00e9t\u00e9s, vous pouvez l\u2019enrober avec <code class=\"language-javascript\">React.memo</code>, ce qui m\u00e9mo\u00efsera le r\u00e9sultat et devrait augmenter les performances dans certains cas. Cela signifie que React sautera le rafra\u00eechissement du composant en r\u00e9utilisant son dernier rendu en date.</p>\n<p><code class=\"language-javascript\">React.memo</code> ne se pr\u00e9occupe que des modifications de props. Si votre fonction composant enrob\u00e9e par <code class=\"language-javascript\">React.memo</code> utilise un Hook <a href=\"/react/hooks-state\"><code class=\"language-javascript\">useState</code></a> ou <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a> dans son impl\u00e9mentation, des changements d\u2019\u00e9tat local ou de contexte entra\u00eeneront tout de m\u00eame un nouveau rendu.</p>\n<p>Par d\u00e9faut, seule une comparaison de surface des props sera faite. Si vous voulez g\u00e9rer cette comparaison vous-m\u00eame, vous pouvez fournir une fonction de comparaison personnalis\u00e9e en deuxi\u00e8me argument.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Faire le rendu en utilisant les props */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">areEqual</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/*\n  Renvoie `true` si passer l'objet nextProps \u00e0 la fonction de rendu\n  produira le m\u00eame r\u00e9sultat que de lui passer l'objet prevProps.\n  Renvoie `false` dans le cas contraire.\n  */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">,</span> areEqual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cette m\u00e9thode n\u2019est qu\u2019un outil d\u2019<strong><a href=\"/react/optimizing-performance\">optimisation des performances</a></strong>. Ne vous y fiez pas pour \u00ab\u00a0emp\u00eacher\u00a0\u00bb un rendu car cela peut causer des bugs.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Contrairement \u00e0 la m\u00e9thode <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> des composants cr\u00e9\u00e9s \u00e0 l\u2019aide de classes, la fonction <code class=\"language-javascript\">areEqual</code> renvoie <code class=\"language-javascript\">true</code> si les props sont \u00e9gales et <code class=\"language-javascript\">false</code> dans le cas contraire. C\u2019est donc l\u2019inverse de <code class=\"language-javascript\">shouldComponentUpdate</code>.</p>\n</div>\n\n<h3 id=\"createelement\"><a class=\"anchor\" href=\"/react/react-api#createelement\"></a><code class=\"language-javascript\">createElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  type<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>children<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode cr\u00e9e et renvoie un nouvel <a href=\"/react/rendering-elements\">\u00e9l\u00e9ment React</a> du type indiqu\u00e9. L\u2019argument <code class=\"language-javascript\">type</code> peut \u00eatre au choix\u00a0: une cha\u00eene contenant un nom de balise (tel que <code class=\"language-javascript\">'div'</code> ou <code class=\"language-javascript\">'span'</code>), un type de <a href=\"/react/components-and-props\">composant React</a> (une classe ou une fonction), ou encore un <a href=\"/react/react-api#reactfragment\">fragment React</a>.</p>\n<p>Tout code \u00e9crit avec <a href=\"/react/introducing-jsx\">JSX</a> sera converti de mani\u00e8re \u00e0 utiliser <code class=\"language-javascript\">React.createElement()</code>. Normalement vous ne devriez pas appeler <code class=\"language-javascript\">React.createElement()</code> si vous utilisez JSX. Lisez <a href=\"/react/react-without-jsx\">React sans JSX</a> pour en savoir plus.</p>\n\n<h3 id=\"cloneelement\"><a class=\"anchor\" href=\"/react/react-api#cloneelement\"></a><code class=\"language-javascript\">cloneElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">React.cloneElement(\n  element,\n  [props],\n  [...children]\n)</code></pre></div>\n<p>Cette m\u00e9thode clone et renvoie un nouvel \u00e9l\u00e9ment en utilisant <code class=\"language-javascript\">element</code> comme point de d\u00e9part. L\u2019\u00e9l\u00e9ment obtenu aura les props de l\u2019\u00e9l\u00e9ment originel augment\u00e9es par une fusion de surface des nouvelles props. Les nouveaux \u00e9l\u00e9ments enfants (<code class=\"language-javascript\">children</code>) remplaceront les anciens. Les <code class=\"language-javascript\">key</code> et <code class=\"language-javascript\">ref</code> issues de l\u2019\u00e9l\u00e9ment originel seront pr\u00e9serv\u00e9es.</p>\n<p><code class=\"language-javascript\">React.cloneElement()</code> est quasiment \u00e9quivalent \u00e0\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element.type</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">element</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>element.type</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Cependant elle pr\u00e9serve les <code class=\"language-javascript\">ref</code>. Concr\u00e8tement, \u00e7a signifie que si vous avez un enfant avec une <code class=\"language-javascript\">ref</code> associ\u00e9e, vous ne la volerez pas accidentellement \u00e0 votre anc\u00eatre. Vous aurez la m\u00eame <code class=\"language-javascript\">ref</code> associ\u00e9e au nouvel \u00e9l\u00e9ment.</p>\n<p>Cette API a \u00e9t\u00e9 introduite pour remplacer la m\u00e9thode d\u00e9pr\u00e9ci\u00e9e <code class=\"language-javascript\">React.addons.cloneWithProps()</code>.</p>\n\n<h3 id=\"createfactory\"><a class=\"anchor\" href=\"/react/react-api#createfactory\"></a><code class=\"language-javascript\">createFactory()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createFactory</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode renvoie une fonction qui produit des \u00e9l\u00e9ments React d\u2019un type donn\u00e9. Comme pour <a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">React.createElement()</code></a>, l\u2019argument <code class=\"language-javascript\">type</code> peut \u00eatre au choix\u00a0: une cha\u00eene contenant un nom de balise (tel que <code class=\"language-javascript\">'div'</code> ou <code class=\"language-javascript\">'span'</code>), un type de <a href=\"/react/components-and-props\">composant React</a> (une classe ou une fonction), ou encore un type de <a href=\"/react/react-api#reactfragment\">fragment React</a>.</p>\n<p>Cette fonction d\u2019aide est historique et nous vous encourageons plut\u00f4t \u00e0 utiliser JSX ou directement <code class=\"language-javascript\">React.createElement()</code>.</p>\n<p>Normalement vous ne devriez pas appeler <code class=\"language-javascript\">React.createFactory()</code> si vous utilisez JSX. Lisez <a href=\"/react/react-without-jsx\">React sans JSX</a> pour en savoir plus.</p>\n\n<h3 id=\"isvalidelement\"><a class=\"anchor\" href=\"/react/react-api#isvalidelement\"></a><code class=\"language-javascript\">isValidElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">isValidElement</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode v\u00e9rifie qu\u2019un objet est bien un \u00e9l\u00e9ment React. Elle renvoie <code class=\"language-javascript\">true</code> ou <code class=\"language-javascript\">false</code>.</p>\n\n<h3 id=\"reactchildren\"><a class=\"anchor\" href=\"/react/react-api#reactchildren\"></a><code class=\"language-javascript\">React.Children</code> </h3>\n<p><code class=\"language-javascript\">React.Children</code> fournit des utilitaires pour interagir avec la structure de donn\u00e9es opaque de <code class=\"language-javascript\">this.props.children</code>.</p>\n<h4 id=\"reactchildrenmap\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenmap\"></a><code class=\"language-javascript\">React.Children.map</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode ex\u00e9cute une fonction sur chacun des enfants directs contenus dans <code class=\"language-javascript\">children</code> avec le <code class=\"language-javascript\">this</code> en vigueur transmis dans l\u2019argument <code class=\"language-javascript\">thisArg</code>. Si <code class=\"language-javascript\">children</code> est un tableau, il sera parcouru et la fonction sera appel\u00e9e sur chacun des enfants du tableau. Si <code class=\"language-javascript\">children</code> est <code class=\"language-javascript\">null</code> ou <code class=\"language-javascript\">undefined</code>, la m\u00e9thode renverra <code class=\"language-javascript\">null</code> ou <code class=\"language-javascript\">undefined</code> plut\u00f4t qu\u2019un tableau.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si <code class=\"language-javascript\">children</code> est un <code class=\"language-javascript\">Fragment</code> il sera trait\u00e9 comme un unique enfant et ne sera pas parcouru.</p>\n</div>\n<h4 id=\"reactchildrenforeach\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenforeach\"></a><code class=\"language-javascript\">React.Children.forEach</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>M\u00eame chose que <a href=\"/react/react-api#reactchildrenmap\"><code class=\"language-javascript\">React.Children.map()</code></a> mais sans renvoyer de tableau.</p>\n<h4 id=\"reactchildrencount\"><a class=\"anchor\" href=\"/react/react-api#reactchildrencount\"></a><code class=\"language-javascript\">React.Children.count</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode renvoie le nombre total de composants pr\u00e9sents dans <code class=\"language-javascript\">children</code>, ce total \u00e9tant \u00e9gal au nombre de fois qu\u2019une fonction de rappel pass\u00e9e \u00e0 <code class=\"language-javascript\">map</code> ou <code class=\"language-javascript\">forEach</code> serait ex\u00e9cut\u00e9e.</p>\n<h4 id=\"reactchildrenonly\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenonly\"></a><code class=\"language-javascript\">React.Children.only</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode v\u00e9rifie que <code class=\"language-javascript\">children</code> n\u2019a qu\u2019un seul enfant (un \u00e9l\u00e9ment React) et le renvoie. Si ce n\u2019est pas le cas elle l\u00e8vera une erreur.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">React.Children.only()</code> n\u2019accepte pas la valeur de retour de <a href=\"/react/react-api#reactchildrenmap\"><code class=\"language-javascript\">React.Children.map()</code></a> car il s\u2019agit d\u2019un tableau et non d\u2019un \u00e9l\u00e9ment React.</p>\n</div>\n<h4 id=\"reactchildrentoarray\"><a class=\"anchor\" href=\"/react/react-api#reactchildrentoarray\"></a><code class=\"language-javascript\">React.Children.toArray</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode renvoie la structure de donn\u00e9e opaque de <code class=\"language-javascript\">children</code> sous la forme d\u2019un tableau lin\u00e9aris\u00e9 ou chaque enfant est dot\u00e9 d\u2019une <code class=\"language-javascript\">key</code>. C\u2019est utile si vous voulez manipuler une collection d\u2019enfants dans votre m\u00e9thode de rendu, en particulier si vous voulez r\u00e9organiser ou d\u00e9couper <code class=\"language-javascript\">this.props.children</code> avant de le passer \u00e0 d\u2019autres \u00e9l\u00e9ments.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">React.Children.toArray()</code> change les <code class=\"language-javascript\">key</code> pour pr\u00e9server la s\u00e9mantique des tableaux imbriqu\u00e9s pendant la lin\u00e9arisation des enfants. Pour cela, <code class=\"language-javascript\">toArray</code> pr\u00e9fixe chaque <code class=\"language-javascript\">key</code> dans le tableau qui sera renvoy\u00e9 de mani\u00e8re a ce que la <code class=\"language-javascript\">key</code> de chaque \u00e9l\u00e9ment soit associ\u00e9e au tableau originel qui les contient.</p>\n</div>\n\n<h3 id=\"reactfragment\"><a class=\"anchor\" href=\"/react/react-api#reactfragment\"></a><code class=\"language-javascript\">React.Fragment</code> </h3>\n<p>Le composant <code class=\"language-javascript\">React.Fragment</code> vous permet de renvoyer plusieurs \u00e9l\u00e9ments depuis une m\u00e9thode <code class=\"language-javascript\">render()</code> sans avoir \u00e0 cr\u00e9er un \u00e9l\u00e9ment DOM suppl\u00e9mentaire\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Du texte.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Un en-t\u00eate</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous pouvez \u00e9galement l\u2019utiliser via la syntaxe raccourcie <code class=\"language-javascript\">&lt;&gt;&lt;/&gt;</code> . Pour plus d\u2019information, lisez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/11/28/react-v16.2.0-fragment-support.html\"><em>React v16.2.0: Improved Support for Fragments</em></a> (en anglais).</p>\n<h3 id=\"reactcreateref\"><a class=\"anchor\" href=\"/react/react-api#reactcreateref\"></a><code class=\"language-javascript\">React.createRef</code> </h3>\n<p><code class=\"language-javascript\">React.createRef</code> cr\u00e9e une <a href=\"/react/refs-and-the-dom\"><code class=\"language-javascript\">ref</code></a> qui peut \u00eatre associ\u00e9e \u00e0 des \u00e9l\u00e9ments React via l\u2019attribut <code class=\"language-javascript\">ref</code>.\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h3 id=\"reactforwardref\"><a class=\"anchor\" href=\"/react/react-api#reactforwardref\"></a><code class=\"language-javascript\">React.forwardRef</code> </h3>\n<p><code class=\"language-javascript\">React.forwardRef</code> cr\u00e9e un composant React qui transf\u00e8re la valeur de l\u2019attribut <a href=\"/react/refs-and-the-dom\">ref</a> qu\u2019il re\u00e7oit \u00e0 un autre composant plus bas dans l\u2019arbre. Cette technique est assez inhabituelle mais elle est particuli\u00e8rement utile dans deux cas\u00a0:</p>\n<ul>\n<li><a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">Transf\u00e9rer une r\u00e9f\u00e9rence \u00e0 un composant DOM</a></li>\n<li><a href=\"/react/forwarding-refs#forwarding-refs-in-higher-order-components\">Transf\u00e9rer une r\u00e9f\u00e9rence au sein d\u2019un composant d\u2019ordre sup\u00e9rieur</a></li>\n</ul>\n<p><code class=\"language-javascript\">React.forwardRef</code> prend une fonction de rendu comme argument. React appellera cette fonction avec deux arguments <code class=\"language-javascript\">props</code> et <code class=\"language-javascript\">ref</code>. Cette fonction devrait renvoyer un n\u0153ud React.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> FancyButton <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// You can now get a ref directly to the DOM button:</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click me!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyButton</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Dans l\u2019exemple ci-avant, la fonction de rendu pass\u00e9e \u00e0 <code class=\"language-javascript\">React.forwardRef</code> recevra comme deuxi\u00e8me argument la <code class=\"language-javascript\">ref</code> initialement fournie \u00e0 l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;FancyButton ref={ref}&gt;</code>. Cette fonction va alors transf\u00e9rer la <code class=\"language-javascript\">ref</code> \u00e0 l\u2019\u00e9l\u00e9ment <code class=\"language-javascript\">&lt;button ref={ref}&gt;</code>.</p>\n<p>En cons\u00e9quence, apr\u00e8s que React aura attach\u00e9 la ref, <code class=\"language-javascript\">ref.current</code> pointera directement vers l\u2019instance de l\u2019\u00e9l\u00e9ment DOM de <code class=\"language-javascript\">&lt;button&gt;</code>.</p>\n<p>Pour en savoir plus, lisez <a href=\"/react/forwarding-refs\">Transf\u00e9rer les refs</a></p>\n<h3 id=\"reactlazy\"><a class=\"anchor\" href=\"/react/react-api#reactlazy\"></a><code class=\"language-javascript\">React.lazy</code> </h3>\n<p><code class=\"language-javascript\">React.lazy()</code> vous permet de d\u00e9finir un composant qui sera charg\u00e9 dynamiquement. Cela aide \u00e0 r\u00e9duire la taille du fichier initial en reportant \u00e0 plus tard le chargement des composants inutiles lors du rendu initial.</p>\n<p>Vous pouvez apprendre comment l\u2019utiliser en lisant <a href=\"/react/code-splitting#reactlazy\">la documentation sur la d\u00e9coupe du code</a>. Vous voudrez peut-\u00eatre aussi jeter un \u0153il \u00e0 <a class=\"external-link\" href=\"https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d\">cet article</a>, qui explique comment l\u2019utiliser en d\u00e9tail.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Ce composant est charg\u00e9 dynamiquement</span>\n<span class=\"token keyword\">const</span> SomeComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./SomeComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Notez bien que l\u2019affichage d\u2019un composant <code class=\"language-javascript\">lazy</code> a besoin d\u2019un composant <code class=\"language-javascript\">&lt;React.Suspense&gt;</code> plus haut dans l\u2019arbre de rendu. C\u2019est de cette mani\u00e8re que vous pouvez sp\u00e9cifier un indicateur de chargement.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Utiliser <code class=\"language-javascript\">React.lazy</code> avec un <code class=\"language-javascript\">import()</code> dynamique requiert une prise en charge des <em>Promises</em> par  l\u2019environnement JS. Vous aurez donc besoin d\u2019un <em>polyfill</em> pour IE11 et inf\u00e9rieurs.</p>\n</div>\n<h3 id=\"reactsuspense\"><a class=\"anchor\" href=\"/react/react-api#reactsuspense\"></a><code class=\"language-javascript\">React.Suspense</code> </h3>\n<p><code class=\"language-javascript\">React.Suspense</code> vous permet de d\u00e9finir un indicateur de chargement pour le cas o\u00f9 certains composants plus bas dans l\u2019arbre de rendu ne seraient pas encore pr\u00eats \u00e0 \u00eatre affich\u00e9s. Pour le moment le <strong>seul</strong> cas d\u2019usage pris en charge par <code class=\"language-javascript\">&lt;React.Suspense&gt;</code>, c\u2019est le chargement diff\u00e9r\u00e9 de composants via <a href=\"/react/react-api#reactlazy\"><code class=\"language-javascript\">React.lazy</code></a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Ce composant est charg\u00e9 dynamiquement</span>\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// Affiche &lt;Spinner&gt; jusqu'\u00e0 ce que &lt;OtherComponent&gt; soit charg\u00e9</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tout \u00e7a est d\u00e9taill\u00e9 dans <a href=\"/react/code-splitting#reactlazy\">notre guide sur la d\u00e9coupe du code</a>. Remarquez que les composants <code class=\"language-javascript\">lazy</code> peuvent \u00eatre profond\u00e9ment enfouis dans l\u2019arbre des descendants de <code class=\"language-javascript\">Suspense</code>\u2014ils n\u2019ont pas besoin d\u2019\u00eatre envelopp\u00e9s individuellement. La bonne pratique consiste \u00e0 placer un <code class=\"language-javascript\">&lt;Suspense&gt;</code> aux endroits o\u00f9 vous souhaitez voir un indicateur de chargement, et \u00e0 utiliser <code class=\"language-javascript\">lazy()</code> partout ou vous voulez d\u00e9couper votre code.</p>\n<p>Bien que ce ne soit pas le cas pour le moment, nous pr\u00e9voyons d\u2019\u00e9tendre les capacit\u00e9s de <code class=\"language-javascript\">Suspense</code> pour qu\u2019il puisse g\u00e9rer d\u2019autre sc\u00e9narios tel que le chargement de donn\u00e9es. Vous pourrez en savoir plus en jetant un coup d\u2019\u0153il \u00e0 <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/11/27/react-16-roadmap.html\">notre feuille de route</a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">React.lazy()</code> et <code class=\"language-javascript\">&lt;React.Suspense&gt;</code> ne sont pas encore pris en charge par <code class=\"language-javascript\">ReactDOMServer</code>. C\u2019est une limitation connue qui devrait \u00eatre r\u00e9solue \u00e0 l\u2019avenir.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-react.md\">Edit this page</a></p></div></article>", "path": "/react/react-api", "nav": ["/react/web-components", "/react/react-component"]}, {"key": "React.Component", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Cette page fournit une r\u00e9f\u00e9rence d\u00e9taill\u00e9e de l\u2019API pour la d\u00e9finition de composants React \u00e0 base de classes. Elle suppose que vous \u00eates \u00e0 l\u2019aise avec les concepts fondamentaux de React, tels que les <a href=\"/react/components-and-props\">Composants et props</a>, ainsi que l\u2019<a href=\"/react/state-and-lifecycle\">\u00c9tat et cycle de vie</a>. Si ce n\u2019est pas le cas, lisez ces pages avant de continuer.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-component#overview\"></a>Aper\u00e7u de l\u2019API </h2>\n<p>React vous permet de d\u00e9finir vos composants en tant que classes ou fonctions. Les composants d\u00e9finis par des classes fournissent pour le moment davantage de fonctionnalit\u00e9s, qui sont d\u00e9crites en d\u00e9tail dans cette page. Pour d\u00e9finir un composant React avec une classe, vous devez \u00e9tendre <code class=\"language-javascript\">React.Component</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La seule m\u00e9thode que vous <em>devez</em> d\u00e9finir dans une sous-classe de <code class=\"language-javascript\">React.Component</code> s\u2019appelle <a href=\"/react/react-component#render\"><code class=\"language-javascript\">render()</code></a>. Toutes les autres m\u00e9thodes d\u00e9crites sur cette page sont optionnelles.</p>\n<p><strong>Nous vous recommandons fortement de ne pas cr\u00e9er vos propres classes de base pour vos composants.</strong>  Dans les composants React, <a href=\"/react/composition-vs-inheritance\">la r\u00e9utilisation de code est obtenue principalement par composition plut\u00f4t que par h\u00e9ritage</a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React ne vous force pas \u00e0 utiliser la syntaxe de classes ES6. Si vous pr\u00e9f\u00e9rez l\u2019\u00e9viter, vous pouvez utiliser \u00e0 la place le module <code class=\"language-javascript\">create-react-class</code> ou une autre abstraction maison du m\u00eame genre. Allez faire un tour sur <a href=\"/react/react-without-es6\">React sans ES6</a> pour en apprendre davantage.</p>\n</div>\n<h3 id=\"the-component-lifecycle\"><a class=\"anchor\" href=\"/react/react-component#the-component-lifecycle\"></a>Le cycle de vie du composant </h3>\n<p>Chaque composant a plusieurs \u00ab\u00a0m\u00e9thodes de cycle de vie\u00a0\u00bb que vous pouvez surcharger pour ex\u00e9cuter du code \u00e0 des moments pr\u00e9cis du processus. <strong>Vous pouvez utiliser <a class=\"external-link\" href=\"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">ce diagramme de cycle de vie</a> comme aide-m\u00e9moire.</strong>  Dans la liste ci-dessous, les m\u00e9thodes de cycle de vie courantes sont indiqu\u00e9es en <strong>gras</strong>. Les autres sont l\u00e0 pour des cas d\u2019utilisation relativement rares.</p>\n<h4 id=\"mounting\"><a class=\"anchor\" href=\"/react/react-component#mounting\"></a>Montage </h4>\n<p>Les m\u00e9thodes suivantes sont appel\u00e9es dans cet ordre lorsqu\u2019une instance d\u2019un composant est cr\u00e9\u00e9e puis ins\u00e9r\u00e9e dans le DOM\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#constructor\"><strong><code class=\"language-javascript\">constructor()</code></strong></a></li>\n<li><a href=\"/react/react-component#static-getderivedstatefromprops\"><code class=\"language-javascript\">static getDerivedStateFromProps()</code></a></li>\n<li><a href=\"/react/react-component#render\"><strong><code class=\"language-javascript\">render()</code></strong></a></li>\n<li><a href=\"/react/react-component#componentdidmount\"><strong><code class=\"language-javascript\">componentDidMount()</code></strong></a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les m\u00e9thodes suivantes sont consid\u00e9r\u00e9es d\u00e9pr\u00e9ci\u00e9es et vous devriez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">les \u00e9viter</a> dans vos nouveaux codes\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#unsafe_componentwillmount\"><code class=\"language-javascript\">UNSAFE_componentWillMount()</code></a></li>\n</ul>\n</div>\n<h4 id=\"updating\"><a class=\"anchor\" href=\"/react/react-component#updating\"></a>Mise \u00e0 jour </h4>\n<p>Une mise \u00e0 jour est d\u00e9clench\u00e9e par des changements dans les props ou l\u2019\u00e9tat local. Les m\u00e9thodes suivantes sont appel\u00e9es dans cet ordre quand un composant se rafra\u00eechit\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#static-getderivedstatefromprops\"><code class=\"language-javascript\">static getDerivedStateFromProps()</code></a></li>\n<li><a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a></li>\n<li><a href=\"/react/react-component#render\"><strong><code class=\"language-javascript\">render()</code></strong></a></li>\n<li><a href=\"/react/react-component#getsnapshotbeforeupdate\"><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code></a></li>\n<li><a href=\"/react/react-component#componentdidupdate\"><strong><code class=\"language-javascript\">componentDidUpdate()</code></strong></a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les m\u00e9thodes suivantes sont consid\u00e9r\u00e9es d\u00e9pr\u00e9ci\u00e9es et vous devriez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">les \u00e9viter</a> dans vos nouveaux codes\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#unsafe_componentwillupdate\"><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></a></li>\n<li><a href=\"/react/react-component#unsafe_componentwillreceiveprops\"><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code></a></li>\n</ul>\n</div>\n<h4 id=\"unmounting\"><a class=\"anchor\" href=\"/react/react-component#unmounting\"></a>D\u00e9montage </h4>\n<p>La m\u00e9thode suivante est appel\u00e9e quand un composant est retir\u00e9 du DOM\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#componentwillunmount\"><strong><code class=\"language-javascript\">componentWillUnmount()</code></strong></a></li>\n</ul>\n<h4 id=\"error-handling\"><a class=\"anchor\" href=\"/react/react-component#error-handling\"></a>Gestion d\u2019erreurs </h4>\n<p>Ces m\u00e9thodes sont appel\u00e9es lorsqu\u2019une erreur survient au sein de n\u2019importe quel composant enfant lors de son rendu, dans une m\u00e9thode de cycle de vie, ou dans son constructeur.</p>\n<ul>\n<li><a href=\"/react/react-component#static-getderivedstatefromerror\"><code class=\"language-javascript\">static getDerivedStateFromError()</code></a></li>\n<li><a href=\"/react/react-component#componentdidcatch\"><code class=\"language-javascript\">componentDidCatch()</code></a></li>\n</ul>\n<h3 id=\"other-apis\"><a class=\"anchor\" href=\"/react/react-component#other-apis\"></a>Autres API </h3>\n<p>Chaque composant fournit par ailleurs quelques API suppl\u00e9mentaires\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-component#setstate\"><code class=\"language-javascript\">setState()</code></a></li>\n<li><a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">forceUpdate()</code></a></li>\n</ul>\n<h3 id=\"class-properties\"><a class=\"anchor\" href=\"/react/react-component#class-properties\"></a>Propri\u00e9t\u00e9s de classes </h3>\n<ul>\n<li><a href=\"/react/react-component#defaultprops\"><code class=\"language-javascript\">defaultProps</code></a></li>\n<li><a href=\"/react/react-component#displayname\"><code class=\"language-javascript\">displayName</code></a></li>\n</ul>\n<h3 id=\"instance-properties\"><a class=\"anchor\" href=\"/react/react-component#instance-properties\"></a>Propri\u00e9t\u00e9s d\u2019instances </h3>\n<ul>\n<li><a href=\"/react/react-component#props\"><code class=\"language-javascript\">props</code></a></li>\n<li><a href=\"/react/react-component#state\"><code class=\"language-javascript\">state</code></a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-component#reference\"></a>R\u00e9f\u00e9rence </h2>\n<h3 id=\"commonly-used-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#commonly-used-lifecycle-methods\"></a>M\u00e9thodes de cycle de vie couramment utilis\u00e9es </h3>\n<p>Les m\u00e9thodes de cette section couvrent la vaste majorit\u00e9 des cas d\u2019utilisation que vous rencontrerez en cr\u00e9ant des composants React. <strong>Pour une r\u00e9f\u00e9rence visuelle, jetez un \u0153il \u00e0 <a class=\"external-link\" href=\"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">ce diagramme de cycle de vie</a>.</strong></p>\n<h3 id=\"render\"><a class=\"anchor\" href=\"/react/react-component#render\"></a><code class=\"language-javascript\">render()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>La m\u00e9thode <code class=\"language-javascript\">render()</code> est la seule m\u00e9thode requise dans une classe de composant.</p>\n<p>Lorsqu\u2019elle est appel\u00e9e, elle examine en g\u00e9n\u00e9ral <code class=\"language-javascript\">this.props</code> et <code class=\"language-javascript\">this.state</code> et renvoie un des types suivants\u00a0:</p>\n<ul>\n<li><strong>\u00c9l\u00e9ments React.</strong>  Typiquement cr\u00e9\u00e9s via <a href=\"/react/introducing-jsx\">JSX</a>. Par exemple, <code class=\"language-javascript\">&lt;div /&gt;</code> et <code class=\"language-javascript\">&lt;MyComponent /&gt;</code> sont des \u00e9l\u00e9ments React qui demandent \u00e0 React de produire, respectivement, un n\u0153ud DOM et un autre composant d\u00e9fini par l\u2019utilisateur.</li>\n<li><strong>Tableaux et fragments.</strong>  Ils vous permettent de renvoyer plusieurs \u00e9l\u00e9ments racines depuis un rendu. Consultez la documentation des <a href=\"/react/fragments\">fragments</a> pour plus de d\u00e9tails.</li>\n<li><strong>Portails</strong>. Ils permettent d\u2019effectuer le rendu des enfants dans une autre partie du DOM. Consultez la documentation des <a href=\"/react/portals\">portails</a> pour plus de d\u00e9tails.</li>\n<li><strong>Cha\u00eenes de caract\u00e8res et nombres.</strong>  Ils deviennent des n\u0153uds textuels dans le DOM.</li>\n<li><strong>Bool\u00e9ens ou <code class=\"language-javascript\">null</code>.</strong>  Ils ne produisent rien. (\u00c7a existe principalement pour permettre des motifs de code tels que <code class=\"language-javascript\">return test &amp;&amp; &lt;Child /&gt;</code>, o\u00f9 <code class=\"language-javascript\">test</code> serait bool\u00e9en.)</li>\n</ul>\n<p>La fonction <code class=\"language-javascript\">render()</code> doit \u00eatre pure, c\u2019est-\u00e0-dire qu\u2019elle ne doit rien changer \u00e0 l\u2019\u00e9tat local du composant, doit renvoyer le m\u00eame r\u00e9sultat chaque fois qu\u2019elle est invoqu\u00e9e (dans des conditions identiques), et ne doit pas interagir directement avec le navigateur.</p>\n<p>Si vous avez besoin de telles interactions, faites-le plut\u00f4t dans <code class=\"language-javascript\">componentDidMount()</code> ou d\u2019autres m\u00e9thodes de cycle de vie. S\u2019assurer que <code class=\"language-javascript\">render()</code> reste pure facilite la compr\u00e9hension du fonctionnement des composants.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">render()</code> ne sera pas appel\u00e9e si <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> renvoie <code class=\"language-javascript\">false</code>.</p>\n</div>\n\n<h3 id=\"constructor\"><a class=\"anchor\" href=\"/react/react-component#constructor\"></a><code class=\"language-javascript\">constructor()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Si vous n\u2019initialisez pas d\u2019\u00e9tat local et ne liez pas de m\u00e9thodes, vous n\u2019avez pas besoin d\u2019impl\u00e9menter votre propre constructeur pour votre composant React.</strong></p>\n<p>Le constructeur d\u2019un composant React est appel\u00e9 avant que celui-ci soit mont\u00e9. Quand on impl\u00e9mente le constructeur d\u2019une sous-classe de <code class=\"language-javascript\">React.Component</code>, il faut commencer par appeler <code class=\"language-javascript\">super(props)</code> avant toute manipulation de <code class=\"language-javascript\">this</code>. Dans le cas contraire, outre une \u00e9ventuelle erreur de syntaxe ES6, <code class=\"language-javascript\">this.props</code> sera <code class=\"language-javascript\">undefined</code> dans le constructeur, ce qui peut causer des bugs.</p>\n<p>Les constructeurs React sont habituellement utilis\u00e9s pour deux raisons seulement\u00a0:</p>\n<ul>\n<li>Initialiser <a href=\"/react/state-and-lifecycle\">l\u2019\u00e9tat local</a> en affectant un objet \u00e0 <code class=\"language-javascript\">this.state</code>.</li>\n<li>Lier des m\u00e9thodes <a href=\"/react/handling-events\">gestionnaires d\u2019\u00e9v\u00e9nements</a> \u00e0 l\u2019instance.</li>\n</ul>\n<p>Vous <strong>ne devez pas appeler <code class=\"language-javascript\">setState()</code></strong> dans le <code class=\"language-javascript\">constructor()</code>. Au lieu de \u00e7a, si votre composant a besoin d\u2019utiliser l\u2019\u00e9tat local, <strong>affectez directement l\u2019\u00e9tat initial \u00e0 <code class=\"language-javascript\">this.state</code></strong> dans le constructeur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// N\u2019appelez pas `this.setState()` ici !</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> counter<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le constructeur est le seul endroit o\u00f9 vous devriez affecter directement une valeur \u00e0 <code class=\"language-javascript\">this.state</code>. Dans toutes les autres m\u00e9thodes, utilisez plut\u00f4t <code class=\"language-javascript\">this.setState()</code>.</p>\n<p>\u00c9vitez aussi de mettre en place des effets de bord ou abonnements dans le constructeur. Dans ces cas-l\u00e0, pr\u00e9f\u00e9rez <code class=\"language-javascript\">componentDidMount()</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><strong>\u00c9vitez de copier les props dans l\u2019\u00e9tat local\u00a0!  C\u2019est une erreur courante\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// Ne faites pas \u00e7a !</span>\n <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>color <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le probl\u00e8me est double\u00a0: d\u2019une part, c\u2019est superflu (vous pouvez plut\u00f4t utiliser directement <code class=\"language-javascript\">this.props.color</code>), d\u2019autre part \u00e7a cr\u00e9e des bugs (les mises \u00e0 jour de la prop <code class=\"language-javascript\">color</code> ne seront pas refl\u00e9t\u00e9es dans l\u2019\u00e9tat local).</p>\n<p><strong>N\u2019utilisez cette approche que si vous avez l\u2019intention d\u2019ignorer les mises \u00e0 jour de la prop.</strong>  Dans un tel cas, il serait judicieux de renommer la <code class=\"language-javascript\">prop</code> vers quelque chose comme <code class=\"language-javascript\">initialColor</code> ou <code class=\"language-javascript\">defaultColor</code>. Vous pouvez ensuite forcer le composant \u00e0 \u00ab\u00a0r\u00e9initialiser\u00a0\u00bb son \u00e9tat interne en <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\">changeant sa <code class=\"language-javascript\">key</code></a> lorsque c\u2019est n\u00e9cessaire.</p>\n<p>Pour apprendre quelle approche utiliser lorsque vous pensez qu\u2019une partie de votre \u00e9tat doit d\u00e9pendre des props, lisez notre <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">article sur l\u2019art d\u2019\u00e9viter un \u00e9tat d\u00e9riv\u00e9</a>.</p>\n</div>\n\n<h3 id=\"componentdidmount\"><a class=\"anchor\" href=\"/react/react-component#componentdidmount\"></a><code class=\"language-javascript\">componentDidMount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">componentDidMount()</code> est appel\u00e9e imm\u00e9diatement apr\u00e8s que le composant est mont\u00e9 (ins\u00e9r\u00e9 dans l\u2019arbre). C\u2019est ici que vous devriez placer les initialisations qui requi\u00e8rent l\u2019existence de n\u0153uds du DOM. Si vous avez besoin de charger des donn\u00e9es depuis un point d\u2019acc\u00e8s distant, c\u2019est aussi le bon endroit pour d\u00e9clencher votre requ\u00eate r\u00e9seau.</p>\n<p>C\u2019est enfin l\u00e0 que vous devriez mettre en place vos abonnements. Si vous en faites, n\u2019oubliez pas de vous d\u00e9sabonner dans <code class=\"language-javascript\">componentWillUnmount()</code>.</p>\n<p>Vous <strong>avez le droit d\u2019appeler <code class=\"language-javascript\">setState()</code> directement</strong> dans <code class=\"language-javascript\">componentDidMount()</code>. \u00c7a\u00a0d\u00e9clenchera un rendu suppl\u00e9mentaire, mais il surviendra avant que le navigateur ne mette \u00e0 jour l\u2019\u00e9cran. Ainsi, vous avez la garantie que m\u00eame si <code class=\"language-javascript\">render()</code> est appel\u00e9e deux fois dans ce cas pr\u00e9cis, l\u2019utilisateur ne verra pas l\u2019\u00e9tat interm\u00e9diaire. Utilisez toutefois cette fa\u00e7on de faire avec pr\u00e9caution parce qu\u2019elle nuit souvent \u00e0 la performance. Dans la plupart des cas, vous devriez plut\u00f4t pouvoir initialiser l\u2019\u00e9tat local dans le <code class=\"language-javascript\">constructor()</code>. Ceci \u00e9tant dit, dans certains cas tels que les bo\u00eetes de dialogues et infobulles, qui ont souvent besoin de mesurer un n\u0153ud du DOM avant d\u2019afficher quelque chose qui d\u00e9pend de leur taille ou de leur position, ce second rendu peut s\u2019av\u00e9rer n\u00e9cessaire.</p>\n\n<h3 id=\"componentdidupdate\"><a class=\"anchor\" href=\"/react/react-component#componentdidupdate\"></a><code class=\"language-javascript\">componentDidUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">componentDidUpdate()</code> est appel\u00e9e imm\u00e9diatement apr\u00e8s que la mise \u00e0 jour a eu lieu. Cette m\u00e9thode n\u2019est pas appel\u00e9e pour le rendu initial.</p>\n<p>Elle vous donne l\u2019opportunit\u00e9 de travailler sur le DOM une fois que le composant a \u00e9t\u00e9 mis \u00e0 jour. C\u2019est aussi un bon endroit pour faire des requ\u00eates r\u00e9seau, du moment que vous prenez soin de v\u00e9rifier que les props actuelles concern\u00e9es diff\u00e8rent des anciennes props (dans le sens o\u00f9 une requ\u00eate r\u00e9seau est peut-\u00eatre superflue si les props en question n\u2019ont pas chang\u00e9).</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Utilisation classique (pensez bien \u00e0 comparer les props) :</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>userID <span class=\"token operator\">!==</span> prevProps<span class=\"token punctuation\">.</span>userID<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous <strong>avez le droit d\u2019appeler <code class=\"language-javascript\">setState()</code> directement</strong> dans <code class=\"language-javascript\">componentDidUpdate()</code> mais notez bien que <strong>vous devez l\u2019enrober dans une condition</strong>, comme dans l\u2019exemple ci-dessus, ou vous obtiendrez l\u2019\u00e9quivalent d\u2019une boucle infinie. L\u00e0 aussi, vous d\u00e9clencherez un rendu suppl\u00e9mentaire qui, m\u00eame s\u2019il n\u2019est pas perceptible par l\u2019utilisateur, peut affecter la performance du composant. Si vous essayez de \u00ab\u00a0refl\u00e9ter\u00a0\u00bb dans l\u2019\u00e9tat local une prop venant de plus haut, voyez si vous ne pouvez pas plut\u00f4t utiliser directement la prop. Vous pouvez en apprendre davantage sur <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">les raisons pour lesquelles copier des props dans l\u2019\u00e9tat local est source de bugs</a>.</p>\n<p>Si votre composant impl\u00e9mente la m\u00e9thode de cycle de vie <code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> (ce qui est rare), la valeur retourn\u00e9e par celle-ci sera pass\u00e9e comme troisi\u00e8me argument <code class=\"language-javascript\">snapshot</code> \u00e0 <code class=\"language-javascript\">componentDidUpdate()</code>. Dans le cas inverse, cet argument sera <code class=\"language-javascript\">undefined</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">componentDidUpdate()</code> ne sera pas appel\u00e9e si <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> renvoie <code class=\"language-javascript\">false</code>.</p>\n</div>\n\n<h3 id=\"componentwillunmount\"><a class=\"anchor\" href=\"/react/react-component#componentwillunmount\"></a><code class=\"language-javascript\">componentWillUnmount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">componentWillUnmount()</code> est appel\u00e9e imm\u00e9diatement avant qu\u2019un composant soit d\u00e9mont\u00e9 ou d\u00e9truit. Mettez-y tout nettoyage n\u00e9cessaire, tel que l\u2019invalidation de minuteurs, l\u2019annulation de requ\u00eates r\u00e9seau, ou la r\u00e9siliation d\u2019abonnements effectu\u00e9s dans <code class=\"language-javascript\">componentDidMount()</code></p>\n<p>Vous <strong>ne devez pas appeler <code class=\"language-javascript\">setState()</code></strong> dans <code class=\"language-javascript\">componentWillUnmount()</code> car le composant ne sera de toutes fa\u00e7ons jamais r\u00e9-affich\u00e9. Une fois l\u2019instance du composant d\u00e9mont\u00e9e, elle ne sera plus jamais re-mont\u00e9e.</p>\n\n<h3 id=\"rarely-used-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#rarely-used-lifecycle-methods\"></a>M\u00e9thodes de cycle de vie rarement utilis\u00e9es </h3>\n<p>Les m\u00e9thodes de cette section sont li\u00e9es \u00e0 des cas d\u2019utilisation peu fr\u00e9quents. Elles peuvent s\u2019av\u00e9rer utiles de temps en temps, mais la plupart de vos composants n\u2019en auront sans doute jamais besoin. <strong>Vous pouvez voir la plupart de ces m\u00e9thods dans <a class=\"external-link\" href=\"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">ce diagramme de cycle de vie</a> en cochant la case \u00ab\u00a0Montrer les cycles de vie moins courants\u00a0\u00bb au-dessus.</strong></p>\n<h3 id=\"shouldcomponentupdate\"><a class=\"anchor\" href=\"/react/react-component#shouldcomponentupdate\"></a><code class=\"language-javascript\">shouldComponentUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">,</span> nextState<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Utilisez <code class=\"language-javascript\">shouldComponentUpdate()</code> pour indiquer \u00e0 React que la sortie d\u2019un composant n\u2019est pas affect\u00e9e par la modification en cours de l\u2019\u00e9tat local ou des props. Le comportement par d\u00e9faut consiste \u00e0 rafra\u00eechir \u00e0 chaque modification, et pour la vaste majorit\u00e9 des cas vous devriez en rester l\u00e0.</p>\n<p><code class=\"language-javascript\">shouldComponentUpdate()</code> est appel\u00e9e avant le rendu quand de nouvelles props ou un nouvel \u00e9tat local sont re\u00e7ues. Par d\u00e9faut, elle renvoie <code class=\"language-javascript\">true</code>. Cette m\u00e9thode n\u2019est pas appel\u00e9e avant le rendu initial ou lorsque <code class=\"language-javascript\">forceUpdate()</code> est utilis\u00e9e.</p>\n<p>Cette m\u00e9thode n\u2019existe qu\u2019en tant qu\u2019<strong><a href=\"/react/optimizing-performance\">optimisation de performance</a>.</strong>  Ne vous en servez pas pour \u00ab\u00a0emp\u00eacher\u00a0\u00bb un rafra\u00eechissement, car \u00e7a finirait par causer des bugs. <strong>Utilisez alors plut\u00f4t la classe de base pr\u00e9d\u00e9finie <a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">PureComponent</code></a></strong>. Celle-ci effectue une comparaison de surface des props et de l\u2019\u00e9tat local, ce qui r\u00e9duit les risques de sauter une mise \u00e0 jour n\u00e9cessaire.</p>\n<p>Si vous \u00eates certain\u00b7e de vouloir l\u2019\u00e9crire \u00e0 la main, vous pouvez comparer <code class=\"language-javascript\">this.props</code> avec <code class=\"language-javascript\">nextProps</code> et <code class=\"language-javascript\">this.state</code> avec <code class=\"language-javascript\">nextState</code>, et renvoyer <code class=\"language-javascript\">false</code> pour indiquer \u00e0 React de sauter la mise \u00e0 jour. Remarquez que renvoyer <code class=\"language-javascript\">false</code> n\u2019emp\u00eache pas les composants fils de se rafra\u00eechir quand <em>leur</em> \u00e9tat change.</p>\n<p>Nous vous d\u00e9conseillons de recourir \u00e0 une comparaison profonde ou \u00e0 <code class=\"language-javascript\">JSON.stringify()</code> dans <code class=\"language-javascript\">shouldComponentUpdate()</code>. Ce sont des techniques co\u00fbteuses qui d\u00e9graderont les performances.</p>\n<p>\u00c0 l\u2019heure actuelle, si <code class=\"language-javascript\">shouldComponentUpdate()</code> renvoie <code class=\"language-javascript\">false</code>, alors <a href=\"/react/react-component#unsafe_componentwillupdate\"><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></a>, <a href=\"/react/react-component#render\"><code class=\"language-javascript\">render()</code></a>, et <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate()</code></a> ne seront pas appel\u00e9es. \u00c0 l\u2019avenir React se r\u00e9serve le droit de consid\u00e9rer <code class=\"language-javascript\">shouldComponentUpdate()</code> comme \u00e9tant \u00ab\u00a0consultatif\u00a0\u00bb plut\u00f4t que contraignant, de sorte que renvoyer <code class=\"language-javascript\">false</code> pourrait tout de m\u00eame aboutir \u00e0 un rafra\u00eechissement du composant.</p>\n\n<h3 id=\"static-getderivedstatefromprops\"><a class=\"anchor\" href=\"/react/react-component#static-getderivedstatefromprops\"></a><code class=\"language-javascript\">static getDerivedStateFromProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">getDerivedStateFromProps</code> est appel\u00e9e juste avant d\u2019appeler la m\u00e9thode <code class=\"language-javascript\">render()</code>, aussi bien pour le montage initial que lors des mises \u00e0 jour ult\u00e9rieures. Elle doit renvoyer un objet qui mette \u00e0 jour l\u2019\u00e9tat, ou <code class=\"language-javascript\">null</code> faute de mise \u00e0 jour.</p>\n<p>Cette m\u00e9thode existe pour <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#when-to-use-derived-state\">les rares cas</a> o\u00f9 l\u2019\u00e9tat d\u00e9pend bien des changements de props au fil du temps. Par exemple, elle peut \u00eatre utile pour impl\u00e9menter un composant <code class=\"language-javascript\">&lt;Transition&gt;</code> qui comparerait les enfants pr\u00e9c\u00e9dents et suivants pour d\u00e9cider lesquels animer en entr\u00e9e et en sortie.</p>\n<p>D\u00e9river l\u2019\u00e9tat entra\u00eene g\u00e9n\u00e9ralement des composants au code verbeux et difficile \u00e0 suivre. <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">Assurez-vous qu\u2019une meilleure alternative n\u2019existe pas</a>\u00a0:</p>\n<ul>\n<li>Si vous avez besoin de <strong>r\u00e9aliser un effet de bord</strong> (par exemple, charger des donn\u00e9es ou d\u00e9rouler une animation) en r\u00e9ponse \u00e0 une modification des props, utilisez plut\u00f4t la m\u00e9thode de cycle de vie <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate</code></a>.</li>\n<li>Si vous voulez <strong>recalculer des donn\u00e9es seulement quand une prop change</strong>, <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\">utilisez plut\u00f4t un utilitaire de m\u00e9mo\u00efsation</a>.</li>\n<li>Si vous souhaitez <strong>\u00ab\u00a0r\u00e9initialiser\u00a0\u00bb une partie de l\u2019\u00e9tat local quand une prop change</strong>, voyez s\u2019il ne serait pas plut\u00f4t judicieux de rendre le composant <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component\">pleinement contr\u00f4l\u00e9</a> ou <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\">pleinement non-contr\u00f4l\u00e9 avec une <code class=\"language-javascript\">key</code></a>.</li>\n</ul>\n<p>Cette m\u00e9thode n\u2019a pas acc\u00e8s \u00e0 l\u2019instance de composant. Si vous le souhaitez, vous pouvez r\u00e9utiliser du code entre <code class=\"language-javascript\">getDerivedStateFromProps()</code> et les autres m\u00e9thodes de la classe en extrayant des fonctions pures appel\u00e9es avec les props et l\u2019\u00e9tat local du composant, pour les placer hors de la d\u00e9finition de la classe.</p>\n<p>Remarquez que cette m\u00e9thode est d\u00e9clench\u00e9e avant <em>chaque</em> rendu, quelle qu\u2019en soit la cause. C\u2019est le contraire de <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps</code>, qui n\u2019est d\u00e9clench\u00e9e que lorsque votre composant parent vous rafra\u00eechit, et non comme r\u00e9sultat d\u2019un <code class=\"language-javascript\">setState()</code> local.</p>\n\n<h3 id=\"getsnapshotbeforeupdate\"><a class=\"anchor\" href=\"/react/react-component#getsnapshotbeforeupdate\"></a><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> est appel\u00e9e juste avant que le rendu le plus r\u00e9cent ne soit valid\u00e9, par exemple envoy\u00e9 au DOM. Elle vous permet de capturer des infos du DOM courant (ex. la position de d\u00e9filement) avant qu\u2019il ne subisse d\u2019\u00e9ventuelles modifications. Toute valeur renvoy\u00e9e par cette m\u00e9thode de cycle de vie sera pass\u00e9e comme argument \u00e0 <code class=\"language-javascript\">componentDidUpdate()</code>.</p>\n<p>C\u2019est un cas d\u2019utilisation peu commun, mais il peut survenir dans des UI comme une discussion en ligne qui a besoin de g\u00e9rer la position de d\u00e9filement d\u2019une fa\u00e7on sp\u00e9cifique.</p>\n<p>Il faut renvoyer une valeur captur\u00e9e (ou <code class=\"language-javascript\">null</code>).</p>\n<p>Par exemple\u00a0:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ScrollingList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Sommes-nous en train d\u2019ajouter de nouveaux \u00e9l\u00e9ments \u00e0 la liste ?</span>\n    <span class=\"token comment\">// Sauvegardons la position de d\u00e9filement pour la recaler plus tard.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> list<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Si nous avons une valeur sauvegard\u00e9e, c\u2019est que nous venons d\u2019ajouter des</span>\n    <span class=\"token comment\">// \u00e9l\u00e9ments. Ajustons le d\u00e9filement pour que ces nouveaux \u00e9l\u00e9ments ne</span>\n    <span class=\"token comment\">// d\u00e9calent pas les anciens hors du champ de vision. (ici `snapshot` est la</span>\n    <span class=\"token comment\">// valeur renvoy\u00e9e par getSnapshotBeforeUpdate.)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snapshot <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> snapshot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ...contenu... */</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Dans l\u2019exemple ci-dessus, il est important qu\u2019on puisse lire la propri\u00e9t\u00e9 <code class=\"language-javascript\">scrollHeight</code> dans <code class=\"language-javascript\">getSnapshotBeforeUpdate</code>, parce qu\u2019il peut y avoir un d\u00e9lai entre les m\u00e9thodes de cycle de vie de la \u00ab\u00a0phase de rendu\u00a0\u00bb (comme <code class=\"language-javascript\">render</code>) et celles de la \u00ab\u00a0phase de commit\u00a0\u00bb (comme <code class=\"language-javascript\">getSnapshotBeforeUpdate</code> et <code class=\"language-javascript\">componentDidUpdate</code>).</p>\n\n<h3 id=\"error-boundaries\"><a class=\"anchor\" href=\"/react/react-component#error-boundaries\"></a>P\u00e9rim\u00e8tres d\u2019erreurs </h3>\n<p>Les <a href=\"/react/error-boundaries\">p\u00e9rim\u00e8tres d\u2019erreurs</a> <em>(error boundaries, NdT)</em> sont des composants React qui interceptent toute erreur JavaScript survenant dans l\u2019arbre de composants de leurs enfants, loguent ces erreurs, et affichent une UI de remplacement au lieu de l\u2019arbre de composants qui a plant\u00e9.</p>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs capturent les erreurs survenant dans le rendu, les m\u00e9thodes de cycle de vie, et les constructeurs de tout l\u2019arbre en-dessous d\u2019eux.</p>\n<p>Un composant bas\u00e9 classe devient un p\u00e9rim\u00e8tre d\u2019erreur s\u2019il d\u00e9finit au moins une des m\u00e9thodes de cycle de vie <code class=\"language-javascript\">static getDerivedStateFromError()</code> ou <code class=\"language-javascript\">componentDidCatch()</code>. Mettre \u00e0 jour votre \u00e9tat local au sein de ces m\u00e9thodes vous permet d\u2019intercepter une erreur JavaScript non g\u00e9r\u00e9e dans l\u2019arbre en-dessous de vous, et d\u2019afficher \u00e0 la place une UI de remplacement.</p>\n<p>N\u2019utilisez les p\u00e9rim\u00e8tres d\u2019erreurs que pour retomber sur vos pieds lors d\u2019exceptions inattendues\u00a0; <strong>ne les utilisez pas comme primitives de contr\u00f4le de flux.</strong></p>\n<p>Pour en apprendre davantage, lisez <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/07/26/error-handling-in-react-16.html\"><em>Gestion d\u2019Erreurs dans React 16</em></a>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les p\u00e9rim\u00e8tres d\u2019erreurs n\u2019interceptent que les erreurs dans les composants <strong>en-dessous</strong> d\u2019eux dans l\u2019arbre. Un p\u00e9rim\u00e8tre d\u2019erreur ne peut pas capturer une erreur survenue en son propre sein.</p>\n</div>\n<h3 id=\"static-getderivedstatefromerror\"><a class=\"anchor\" href=\"/react/react-component#static-getderivedstatefromerror\"></a><code class=\"language-javascript\">static getDerivedStateFromError()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode de cycle de vie est appel\u00e9e apr\u00e8s qu\u2019une erreur a \u00e9t\u00e9 lev\u00e9e par un composant descendant. Elle re\u00e7oit l\u2019erreur lev\u00e9e comme param\u00e8tre et doit renvoyer une valeur qui mette \u00e0 jour l\u2019\u00e9tat.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// On met \u00e0 jour l\u2019\u00e9tat afin que le prochain rendu affiche</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// l\u2019UI de remplacement.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Vous pouvez afficher ici n\u2019importe quelle UI de secours</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\u00c7a sent le br\u00fbl\u00e9.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">getDerivedStateFromError()</code> est appel\u00e9e pendant la \u00ab\u00a0phase de rendu\u00a0\u00bb, de sorte que les effets de bord y sont interdits. Si vous en avez besoin, utilisez plut\u00f4t <code class=\"language-javascript\">componentDidCatch()</code>.</p>\n</div>\n\n<h3 id=\"componentdidcatch\"><a class=\"anchor\" href=\"/react/react-component#componentdidcatch\"></a><code class=\"language-javascript\">componentDidCatch()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode de cycle de vie est appel\u00e9e apr\u00e8s qu\u2019une erreur a \u00e9t\u00e9 lev\u00e9e par un composant descendant. Elle re\u00e7oit deux arguments\u00a0:</p>\n<ol>\n<li><code class=\"language-javascript\">error</code> - L\u2019erreur qui a \u00e9t\u00e9 lev\u00e9e.</li>\n<li><code class=\"language-javascript\">info</code> - Un objet avec une propri\u00e9t\u00e9 <code class=\"language-javascript\">componentStack</code> contenant <a href=\"/react/error-boundaries#component-stack-traces\">des informations sur le composant qui a lev\u00e9 l\u2019erreur</a>.</li>\n</ol>\n<p><code class=\"language-javascript\">componentDidCatch()</code> est appel\u00e9e durant la \u00ab\u00a0phase de commit\u00a0\u00bb, donc les effets de bord y sont autoris\u00e9s. On peut l\u2019utiliser par exemple pour loguer les erreurs\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// On met \u00e0 jour l\u2019\u00e9tat afin que le prochain rendu affiche</span>\n    <span class=\"token comment\">// l\u2019UI de remplacement.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Exemple de `componentStack` :</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in ComponentThatThrows (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in ErrorBoundary (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in div (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in App</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">logComponentStackToMyService</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>componentStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Vous pouvez afficher ici n\u2019importe quelle UI de secours</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\u00c7a sent le br\u00fbl\u00e9.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si une erreur survient, vous pouvez d\u00e9clencher l\u2019affichage d\u2019une UI de remplacement avec <code class=\"language-javascript\">componentDidCatch()</code> en appelant <code class=\"language-javascript\">setState</code>, mais une future version de React d\u00e9pr\u00e9ciera cette possibilit\u00e9. Utilisez plut\u00f4t  <code class=\"language-javascript\">static getDerivedStateFromError()</code> pour d\u00e9clencher l\u2019affichage de l\u2019UI de remplacement.</p>\n</div>\n\n<h3 id=\"legacy-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#legacy-lifecycle-methods\"></a>M\u00e9thodes de cycle de vie d\u00e9pr\u00e9ci\u00e9es </h3>\n<p>Les m\u00e9thodes de cycle de vie ci-dessous sont \u00ab\u00a0historiques\u00a0\u00bb <em>(legacy, NdT)</em>, et \u00e0 ce titre sont consid\u00e9r\u00e9es comme d\u00e9pr\u00e9ci\u00e9es. Elles fonctionnent encore, mais nous les d\u00e9conseillons dans tout nouveau code. Vous pouvez en apprendre davantage sur la bonne fa\u00e7on de faire migrer ces m\u00e9thodes dans <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">cet article sur notre blog</a>.</p>\n<h3 id=\"unsafe_componentwillmount\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillmount\"></a><code class=\"language-javascript\">UNSAFE_componentWillMount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette m\u00e9thode de cycle de vie s\u2019appelait \u00e0 l\u2019origine <code class=\"language-javascript\">componentWillMount</code>. Ce nom continuera \u00e0 fonctionner jusqu\u2019\u00e0 la sortie de React 17. Utilisez le <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\">codemod <code class=\"language-javascript\">rename-unsafe-lifecycles</code></a> pour mettre \u00e0 jour automatiquement vos composants.</p>\n</div>\n<p><code class=\"language-javascript\">UNSAFE_componentWillMount()</code> est appel\u00e9e juste avant que le montage n\u2019ait lieu. Elle est appel\u00e9e avant <code class=\"language-javascript\">render()</code>, de sorte qu\u2019appeler <code class=\"language-javascript\">setState()</code> de fa\u00e7on synchrone au sein de cette m\u00e9thode ne d\u00e9clenchera pas un rendu suppl\u00e9mentaire. Mais g\u00e9n\u00e9ralement, nous conseillons plut\u00f4t d\u2019utiliser <code class=\"language-javascript\">constructor()</code> pour initialiser l\u2019\u00e9tat.</p>\n<p>\u00c9vitez d\u2019introduire des effets de bord ou d\u2019effectuer des abonnements dans cette m\u00e9thode. Pour de tels besoins, utilisez plut\u00f4t <code class=\"language-javascript\">componentDidMount()</code>.</p>\n<p>C\u2019est la seule m\u00e9thode de cycle de vie appel\u00e9e lors d\u2019un rendu c\u00f4t\u00e9 serveur.</p>\n\n<h3 id=\"unsafe_componentwillreceiveprops\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillreceiveprops\"></a><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillReceiveProps</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette m\u00e9thode de cycle de vie s\u2019appelait \u00e0 l\u2019origine <code class=\"language-javascript\">componentWillReceiveProps</code>. Ce nom continuera \u00e0 fonctionner jusqu\u2019\u00e0 la sortie de React 17. Utilisez le <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\">codemod <code class=\"language-javascript\">rename-unsafe-lifecycles</code></a> pour mettre \u00e0 jour automatiquement vos composants.</p>\n</div>\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Utiliser cette m\u00e9thode de cycle de vie aboutit le plus souvent \u00e0 des bugs de coh\u00e9rence.</p>\n<ul>\n<li>Si vous aviez besoin de <strong>r\u00e9aliser un effet de bord</strong> (par exemple, charger des donn\u00e9es ou d\u00e9rouler une animation) en r\u00e9ponse \u00e0 une modification des props, utilisez plut\u00f4t la m\u00e9thode de cycle de vie <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate</code></a>.</li>\n<li>Si vous utilisiez <code class=\"language-javascript\">componentWillReceiveProps</code> pour <strong>recalculer des donn\u00e9es seulement quand une prop change</strong>, <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\">utilisez plut\u00f4t un utilitaire de m\u00e9mo\u00efsation</a>.</li>\n<li>Si vous utilisiez <code class=\"language-javascript\">componentWillReceiveProps</code> pour <strong>\u00ab\u00a0r\u00e9initialiser\u00a0\u00bb une partie de l\u2019\u00e9tat local quand une prop change</strong>, voyez s\u2019il ne serait pas plut\u00f4t judicieux de rendre le composant <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component\">pleinement contr\u00f4l\u00e9</a> ou <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\">pleinement non-contr\u00f4l\u00e9 avec une <code class=\"language-javascript\">key</code></a>.</li>\n</ul>\n<p>Pour les autres cas, <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">suivez les recommandations de notre article de blog sur la d\u00e9rivation d\u2019\u00e9tat</a>.</p>\n</div>\n<p><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> est appel\u00e9e avant que le composant d\u00e9j\u00e0 mont\u00e9 re\u00e7oive de nouvelles props. Si vous avez besoin de mettre \u00e0 jour l\u2019\u00e9tat en r\u00e9ponse \u00e0 des changements de props (par exemple, pour le r\u00e9initialiser), vous pourriez comparer <code class=\"language-javascript\">this.props</code> et <code class=\"language-javascript\">nextProps</code>, et d\u00e9clencher des transitions d\u2019\u00e9tat local en utilisant <code class=\"language-javascript\">this.setState()</code> au sein de cette m\u00e9thode.</p>\n<p>Remarquez que si un composant parent d\u00e9clenche le rafra\u00eechissement du v\u00f4tre, cette m\u00e9thode sera appel\u00e9e m\u00eame si les props n\u2019ont pas chang\u00e9. Assurez-vous donc de comparer les valeurs actuelles et futures si vous voulez ne traiter que les modifications.</p>\n<p>React n\u2019appelle pas <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> avec les props initiales lors du <a href=\"/react/react-component#mounting\">montage</a>. Il ne l\u2019appelle que si au moins une partie des props du composant est susceptible de changer. Appeler <code class=\"language-javascript\">this.setState()</code> ne d\u00e9clenche g\u00e9n\u00e9ralement pas <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code>.</p>\n\n<h3 id=\"unsafe_componentwillupdate\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillupdate\"></a><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">,</span> nextState<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette m\u00e9thode de cycle de vie s\u2019appelait \u00e0 l\u2019origine <code class=\"language-javascript\">componentWillUpdate</code>. Ce nom continuera \u00e0 fonctionner jusqu\u2019\u00e0 la sortie de React 17. Utilisez le <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\">codemod <code class=\"language-javascript\">rename-unsafe-lifecycles</code></a> pour mettre \u00e0 jour automatiquement vos composants.</p>\n</div>\n<p><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> est appel\u00e9e juste avant le rendu, quand de nouvelles props ou un nouvel \u00e9tat ont \u00e9t\u00e9 re\u00e7us. C\u2019est l\u2019occasion de faire des travaux pr\u00e9paratoires avant que la mise \u00e0 jour n\u2019ait lieu. Cette m\u00e9thode n\u2019est pas appel\u00e9e avant le rendu initial.</p>\n<p>Remarquez que vous ne pouvez pas appeler <code class=\"language-javascript\">this.setState()</code> ici\u00a0; vous ne devez pas non plus faire quoi que ce soit (comme par exemple <em>dispatcher</em> une action Redux) qui entra\u00eenerait une mise \u00e0 jour d\u2019un composant React avant que <code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> ne se termine.</p>\n<p>En g\u00e9n\u00e9ral, cette m\u00e9thode peut \u00eatre remplac\u00e9e par <code class=\"language-javascript\">componentDidUpdate()</code>. Si vous y lisiez des donn\u00e9es provenant du DOM (par exemple, la position de d\u00e9filement), vous pouvez en d\u00e9placer le code dans <code class=\"language-javascript\">getSnapshotBeforeUpdate()</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> ne sera pas appel\u00e9e si <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> renvoie <code class=\"language-javascript\">false</code>.</p>\n</div>\n\n<h2 id=\"other-apis-1\"><a class=\"anchor\" href=\"/react/react-component#other-apis-1\"></a>Autres API </h2>\n<p>Contrairement aux m\u00e9thodes de cycle de vie ci-dessus (que React appelle pour vous), c\u2019est <em>vous</em> qui appelez les m\u00e9thodes ci-dessous depuis vos composants.</p>\n<p>Il n\u2019y en a que deux\u00a0: <code class=\"language-javascript\">setState()</code> et <code class=\"language-javascript\">forceUpdate()</code>.</p>\n<h3 id=\"setstate\"><a class=\"anchor\" href=\"/react/react-component#setstate\"></a><code class=\"language-javascript\">setState()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>updater<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">setState()</code> planifie des modifications \u00e0 l\u2019\u00e9tat local du composant, et indique \u00e0 React que ce composant et ses enfants ont besoin d\u2019\u00eatre rafra\u00eechis une fois l\u2019\u00e9tat mis \u00e0 jour. C\u2019est en g\u00e9n\u00e9ral ainsi qu\u2019on met \u00e0 jour l\u2019interface utilisateur en r\u00e9action \u00e0 des \u00e9v\u00e9nements ou r\u00e9ponses r\u00e9seau.</p>\n<p>Visualisez <code class=\"language-javascript\">setState()</code> comme une <em>demande</em> plut\u00f4t que comme une commande imm\u00e9diate qui mettrait \u00e0 jour le composant. Afin d\u2019am\u00e9liorer la performance per\u00e7ue, React peut diff\u00e9rer son traitement, pour ensuite mettre \u00e0 jour plusieurs composants en une seule passe. React ne garantit pas que les mises \u00e0 jour d\u2019\u00e9tat sont appliqu\u00e9es imm\u00e9diatement.</p>\n<p><code class=\"language-javascript\">setState()</code> ne met pas toujours imm\u00e9diatement le composant \u00e0 jour. Il peut regrouper les mises \u00e0 jour voire les diff\u00e9rer. En cons\u00e9quence, lire la valeur de <code class=\"language-javascript\">this.state</code> juste apr\u00e8s avoir appel\u00e9 <code class=\"language-javascript\">setState()</code> est une mauvaise id\u00e9e. Utilisez plut\u00f4t <code class=\"language-javascript\">componentDidUpdate</code> ou la fonction de rappel de <code class=\"language-javascript\">setState</code> (<code class=\"language-javascript\">setState(updater, callback)</code>), les deux b\u00e9n\u00e9ficiant d\u2019une garantie de d\u00e9clenchement apr\u00e8s que la mise \u00e0 jour aura \u00e9t\u00e9 appliqu\u00e9e. Si vous avez besoin de mettre \u00e0 jour l\u2019\u00e9tat sur base de sa valeur pr\u00e9c\u00e9dente, lisez plus bas comment fonctionne l\u2019argument <code class=\"language-javascript\">updater</code>.</p>\n<p><code class=\"language-javascript\">setState()</code> causera toujours un rendu, \u00e0 moins que <code class=\"language-javascript\">shouldComponentUpdate()</code> ne renvoie <code class=\"language-javascript\">false</code>. Si vous y utilisez des objets modifiables et que la logique de rendu conditionnel ne peut pas \u00eatre impl\u00e9ment\u00e9e dans <code class=\"language-javascript\">shouldComponentUpdate()</code>, appeler <code class=\"language-javascript\">setState()</code> seulement quand le nouvel \u00e9tat diff\u00e8re du pr\u00e9c\u00e9dent \u00e9vitera des rafra\u00eechissements superflus.</p>\n<p>Le premier argument <code class=\"language-javascript\">updater</code> est une fonction dont la signature est\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> stateChange</code></pre></div>\n<p><code class=\"language-javascript\">state</code> est une r\u00e9f\u00e9rence \u00e0 l\u2019\u00e9tat local du composant au moment o\u00f9 cette modification est appliqu\u00e9e. Cet \u00e9tat ne devrait pas \u00eatre modifi\u00e9 directement. Au lieu de \u00e7a, on repr\u00e9sente les changements \u00e0 apporter en construisant un nouvel objet bas\u00e9 sur les donn\u00e9es entrantes de <code class=\"language-javascript\">state</code> et <code class=\"language-javascript\">props</code>. Par exemple, imaginons que nous voulions incr\u00e9menter une valeur dans l\u2019\u00e9tat \u00e0 raison de <code class=\"language-javascript\">props.step</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>counter<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tant le <code class=\"language-javascript\">state</code> que le <code class=\"language-javascript\">props</code> re\u00e7us par la fonction de mise \u00e0 jour sont garantis \u00e0 jour au moment de l\u2019appel. La valeur de retour de la fonction est fusionn\u00e9e (en surface, pas r\u00e9cursivement) avec <code class=\"language-javascript\">state</code>.</p>\n<p>Le second argument de <code class=\"language-javascript\">setState()</code> est une fonction de rappel optionnelle qui sera ex\u00e9cut\u00e9e une fois que <code class=\"language-javascript\">setState</code> est termin\u00e9 et le composant rafra\u00eechi. D\u2019une fa\u00e7on g\u00e9n\u00e9rale, nous vous recommandons plut\u00f4t d\u2019utiliser <code class=\"language-javascript\">componentDidUpdate()</code> pour ce genre de besoin.</p>\n<p>Vous pouvez choisir de passer un objet au lieu d\u2019une fonction comme premier argument \u00e0 <code class=\"language-javascript\">setState()</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>stateChange<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>\u00c7a proc\u00e8de \u00e0 la fusion de surface de <code class=\"language-javascript\">stateChange</code> dans le nouvel \u00e9tat, par exemple pour ajuster la quantit\u00e9 d\u2019une ligne de commande dans un panier d\u2019achats\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>quantity<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette forme d\u2019appel \u00e0 <code class=\"language-javascript\">setState()</code> reste asynchrone, et des appels r\u00e9p\u00e9t\u00e9s au sein du m\u00eame cycle pourraient \u00eatre regroup\u00e9s. Ainsi, si vous tentez d\u2019incr\u00e9menter une quantit\u00e9 plus d\u2019une fois dans le m\u00eame cycle, vous obtiendrez l\u2019\u00e9quivalent de ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>\n  previousState<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>quantity<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>quantity<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Les appels ult\u00e9rieurs vont \u00e9craser les valeurs des appels pr\u00e9c\u00e9dents du m\u00eame cycle, de sorte que la quantit\u00e9 ne sera r\u00e9ellement incr\u00e9ment\u00e9e qu\u2019une fois. Lorsque l\u2019\u00e9tat suivant d\u00e9pend de l\u2019\u00e9tat en vigueur, nous vous recommandons de toujours utiliser la forme fonctionnelle du param\u00e8tre <code class=\"language-javascript\">updater</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>quantity<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pour explorer ce sujet plus en d\u00e9tail, vous pouvez consulter\u00a0:</p>\n<ul>\n<li><a href=\"/react/state-and-lifecycle\">Le guide \u00c9tat et cycle de vie</a></li>\n<li><a class=\"external-link\" href=\"https://stackoverflow.com/a/48610973/458193\">En profondeur\u00a0: Quand et pourquoi les appels \u00e0 <code class=\"language-javascript\">setState()</code> sont-ils regroup\u00e9s\u00a0?</a> (en anglais)</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/issues/11527#issuecomment-360199710\">En profondeur\u00a0: Pourquoi <code class=\"language-javascript\">this.state</code> ne d\u00e9clenche-t-il pas une mise \u00e0 jour imm\u00e9diate\u00a0?</a> (en anglais)</li>\n</ul>\n\n<h3 id=\"forceupdate\"><a class=\"anchor\" href=\"/react/react-component#forceupdate\"></a><code class=\"language-javascript\">forceUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">component<span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Par d\u00e9faut, lorsque l\u2019\u00e9tat local ou les props de votre composant changent, ce dernier se rafra\u00eechit. Si votre m\u00e9thode <code class=\"language-javascript\">render()</code> d\u00e9pend d\u2019autres donn\u00e9es, vous pouvez indiquer \u00e0 React que le composant a besoin d\u2019un rafra\u00eechissement en appelant <code class=\"language-javascript\">forceUpdate()</code>.</p>\n<p>Appeler <code class=\"language-javascript\">forceUpdate()</code> d\u00e9clenchera le <code class=\"language-javascript\">render()</code> du composant, en faisant l\u2019impasse sur <code class=\"language-javascript\">shouldComponentUpdate()</code>. \u00c7a d\u00e9clenchera les m\u00e9thodes usuelles de cycle de vie des composants enfants, y compris la m\u00e9thode <code class=\"language-javascript\">shouldComponentUpdate()</code> de chaque enfant. React continuera \u00e0 ne mettre \u00e0 jour le DOM que si le balisage change.</p>\n<p>De fa\u00e7on g\u00e9n\u00e9rale, vous devriez tout faire pour \u00e9viter de recourir \u00e0 <code class=\"language-javascript\">forceUpdate()</code>, et faire que votre <code class=\"language-javascript\">render()</code> ne lise que <code class=\"language-javascript\">this.props</code> et <code class=\"language-javascript\">this.state</code>.</p>\n\n<h2 id=\"class-properties-1\"><a class=\"anchor\" href=\"/react/react-component#class-properties-1\"></a>Propri\u00e9t\u00e9s de classes </h2>\n<h3 id=\"defaultprops\"><a class=\"anchor\" href=\"/react/react-component#defaultprops\"></a><code class=\"language-javascript\">defaultProps</code> </h3>\n<p><code class=\"language-javascript\">defaultProps</code> peut \u00eatre d\u00e9finie comme propri\u00e9t\u00e9 sur la classe du composant elle-m\u00eame, pour d\u00e9finir les valeurs par d\u00e9faut de props pour cette classe. On s\u2019en sert pour les props <code class=\"language-javascript\">undefined</code>, mais pas pour celles \u00e0 <code class=\"language-javascript\">null</code>. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\nCustomButton<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si <code class=\"language-javascript\">props.color</code> n\u2019est pas fournie, elle sera d\u00e9finie par d\u00e9faut \u00e0 <code class=\"language-javascript\">'blue'</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// props.color sera d\u00e9finie \u00e0 'blue'</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si <code class=\"language-javascript\">props.color</code> est d\u00e9finie \u00e0 <code class=\"language-javascript\">null</code>,  elle restera \u00e0 <code class=\"language-javascript\">null</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// props.color reste \u00e0 `null`</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n\n<h3 id=\"displayname\"><a class=\"anchor\" href=\"/react/react-component#displayname\"></a><code class=\"language-javascript\">displayName</code> </h3>\n<p>La cha\u00eene de caract\u00e8res <code class=\"language-javascript\">displayName</code> est utilis\u00e9e dans les messages de d\u00e9bogage. La plupart du temps, vous n\u2019avez pas besoin de la d\u00e9finir explicitement parce qu\u2019elle est d\u00e9duite du nom de la fonction ou classe qui d\u00e9finit le composant. Mais on peut vouloir la d\u00e9finir lorsqu\u2019on veut afficher un nom diff\u00e9rent pour des raisons de d\u00e9bogage ou lorsqu\u2019on cr\u00e9e un composant d\u2019ordre sup\u00e9rieur\u00a0: vous trouverez plus de d\u00e9tails dans <a href=\"/react/higher-order-components#convention-wrap-the-display-name-for-easy-debugging\">Enrober le nom d\u2019affichage pour faciliter le d\u00e9bogage</a>.</p>\n\n<h2 id=\"instance-properties-1\"><a class=\"anchor\" href=\"/react/react-component#instance-properties-1\"></a>Propri\u00e9t\u00e9s d\u2019instances </h2>\n<h3 id=\"props\"><a class=\"anchor\" href=\"/react/react-component#props\"></a><code class=\"language-javascript\">props</code> </h3>\n<p><code class=\"language-javascript\">this.props</code> contient les props d\u00e9finies par l\u2019appelant de ce composant. Consultez <a href=\"/react/components-and-props\">Composants et props</a> pour une introduction aux props.</p>\n<p>Cas particulier\u00a0: <code class=\"language-javascript\">this.props.children</code> est sp\u00e9ciale, g\u00e9n\u00e9ralement d\u00e9finie par les balises enfants dans l\u2019expression JSX plut\u00f4t que dans la balise du composant lui-m\u00eame.</p>\n<h3 id=\"state\"><a class=\"anchor\" href=\"/react/react-component#state\"></a><code class=\"language-javascript\">state</code> </h3>\n<p>L\u2019\u00e9tat local contient des donn\u00e9es sp\u00e9cifiques \u00e0 ce composant, qui sont susceptibles d\u2019\u00e9voluer avec le temps. C\u2019est vous qui d\u00e9finissez l\u2019\u00e9tat local, qui devrait \u00eatre un objet JavaScript brut.</p>\n<p>Lorsqu\u2019une valeur n\u2019est utilis\u00e9e ni par l\u2019affichage ni par le flux de donn\u00e9es (par exemple, un ID de minuteur), vous n\u2019avez pas \u00e0 la mettre dans l\u2019\u00e9tat local. Ce genre de valeurs peuvent \u00eatre stock\u00e9es comme champs de l\u2019instance de composant.</p>\n<p>Consultez <a href=\"/react/state-and-lifecycle\">\u00c9tat et cycle de vie</a> pour de plus amples informations sur l\u2019\u00e9tat local.</p>\n<p>Ne modifiez jamais <code class=\"language-javascript\">this.state</code> directement, car appeler <code class=\"language-javascript\">setState()</code> par la suite risque d\u2019\u00e9craser les modifications que vous auriez apport\u00e9es. Traitez <code class=\"language-javascript\">this.state</code> comme s\u2019il \u00e9tait immuable.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-react-component.md\">Edit this page</a></p></div></article>", "path": "/react/react-component", "nav": ["/react/react-api", "/react/react-dom"]}, {"key": "ReactDOM", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Si vous chargez React directement au moyen d\u2019une balise <code class=\"language-javascript\">&lt;script&gt;</code>, ces API de haut-niveau seront disponibles directement via la variable globale <code class=\"language-javascript\">ReactDOM</code>.  Si vous utilisez ES6 avec <code class=\"language-javascript\">npm</code>, vous pouvez \u00e9crire <code class=\"language-javascript\">import ReactDOM from 'react-dom'</code>.  Si vous utilisez ES5 avec npm, utilisez <code class=\"language-javascript\">var ReactDOM = require('react-dom')</code>.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-dom#overview\"></a>Aper\u00e7u </h2>\n<p>Le module <code class=\"language-javascript\">react-dom</code> fournit des m\u00e9thodes sp\u00e9cifiques au DOM que vous pouvez utiliser au niveau racine de votre appli et comme \u00e9chappatoire pour travailler hors du mod\u00e8le React si vous en avez besoin.  La plupart des composants ne devraient jamais avoir besoin d\u2019utiliser ce module.</p>\n<ul>\n<li><a href=\"/react/react-dom#render\"><code class=\"language-javascript\">render()</code></a></li>\n<li><a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">hydrate()</code></a></li>\n<li><a href=\"/react/react-dom#unmountcomponentatnode\"><code class=\"language-javascript\">unmountComponentAtNode()</code></a></li>\n<li><a href=\"/react/react-dom#finddomnode\"><code class=\"language-javascript\">findDOMNode()</code></a></li>\n<li><a href=\"/react/react-dom#createportal\"><code class=\"language-javascript\">createPortal()</code></a></li>\n</ul>\n<h3 id=\"browser-support\"><a class=\"anchor\" href=\"/react/react-dom#browser-support\"></a>Navigateurs pris en charge </h3>\n<p>React prend en charge tous les navigateurs populaires, y compris Internet Explorer\u00a09 et au-del\u00e0, m\u00eame si <a href=\"/react/javascript-environment-requirements\">certains polyfills sont n\u00e9cessaires</a> pour les navigateurs plus anciens tels qu\u2019IE\u00a09 et IE\u00a010.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Nous ne prenons pas en charge les navigateurs plus anciens qui n\u2019exposent pas les m\u00e9thodes ES5 mais vous verrez que vos applis peuvent y fonctionner si vous incluez des polyfills tels que <a class=\"external-link\" href=\"https://github.com/es-shims/es5-shim\">es5-shim et es5-sham</a> dans la page.  Ceci dit, vous serez alors livr\u00e9\u00b7e \u00e0 vous-m\u00eame en termes de support.</p>\n</div>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-dom#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"render\"><a class=\"anchor\" href=\"/react/react-dom#render\"></a><code class=\"language-javascript\">render()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Affiche un \u00e9l\u00e9ment React au sein du n\u0153ud DOM sp\u00e9cifi\u00e9 par <code class=\"language-javascript\">container</code> et renvoie une <a href=\"/react/more-about-refs\">r\u00e9f\u00e9rence</a> sur le composant (ou renvoie <code class=\"language-javascript\">null</code> pour les <a href=\"/react/components-and-props#function-and-class-components\">fonctions composants</a>).</p>\n<p>Si l\u2019\u00e9l\u00e9ment React \u00e9tait d\u00e9j\u00e0 affich\u00e9 dans <code class=\"language-javascript\">container</code>, cette m\u00e9thode effectuera plut\u00f4t une mise \u00e0 jour et ne modifiera le DOM que l\u00e0 o\u00f9 c\u2019est strictement n\u00e9cessaire pour refl\u00e9ter l\u2019\u00e9l\u00e9ment React \u00e0 jour.</p>\n<p>Si la fonction de rappel optionnelle est fournie, elle sera ex\u00e9cut\u00e9e apr\u00e8s que le composant est affich\u00e9 ou mis \u00e0 jour.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">ReactDOM.render()</code> contr\u00f4le le contenu du n\u0153ud conteneur que vous lui passez.  Tout \u00e9l\u00e9ment DOM existant \u00e0 l\u2019int\u00e9rieur sera potentiellement remplac\u00e9 au premier appel.  Les appels ult\u00e9rieurs utiliseront l\u2019algorithme de diff\u00e9rence DOM de React pour des mises \u00e0 jour efficaces.</p>\n<p><code class=\"language-javascript\">ReactDOM.render()</code> ne modifie pas le n\u0153ud conteneur lui-m\u00eame (seulement ses enfants).  Il peut arriver qu\u2019ins\u00e9rer un composant dans un n\u0153ud DOM existant n\u2019en modifie pas les enfants.</p>\n<p><code class=\"language-javascript\">ReactDOM.render()</code> renvoie pour le moment une r\u00e9f\u00e9rence sur l\u2019instance racine de composant React.  Toutefois, manipuler la valeur renvoy\u00e9e est consid\u00e9r\u00e9 comme d\u00e9pr\u00e9ci\u00e9, et vous devriez vous en abstenir dans la mesure o\u00f9 de futures versions de React pourraient g\u00e9rer le rendu de fa\u00e7on asynchrone dans certains cas.  Si vous avez besoin d\u2019une r\u00e9f\u00e9rence sur l\u2019instance racine de composant React, une meilleure solution consiste \u00e0 associer une <a href=\"/react/more-about-refs#callback-refs\">ref de rappel</a> \u00e0 l\u2019\u00e9l\u00e9ment racine.</p>\n<p>Utiliser <code class=\"language-javascript\">ReactDOM.render()</code> pour hydrater un conteneur rendu c\u00f4t\u00e9 serveur est une pratique d\u00e9pr\u00e9ci\u00e9e qui dispara\u00eetra avec React 17.  Utilisez plut\u00f4t la m\u00e9thode <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">hydrate()</code></a>.</p>\n</div>\n\n<h3 id=\"hydrate\"><a class=\"anchor\" href=\"/react/react-dom#hydrate\"></a><code class=\"language-javascript\">hydrate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">hydrate</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Similaire \u00e0 <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">render()</code></a>, mais sert \u00e0 hydrater un conteneur dont le HTML a d\u00e9j\u00e0 \u00e9t\u00e9 produit par <a href=\"/react/react-dom-server\"><code class=\"language-javascript\">ReactDOMServer</code></a>. React tentera alors d\u2019associer les gestionnaires d\u2019\u00e9v\u00e9nements au balisage existant.</p>\n<p>React s\u2019attend \u00e0 ce que le balisage produit soit identique entre le serveur et le client. Il peut g\u00e9rer des diff\u00e9rences de contenu textuel mais vous devriez consid\u00e9rer toute erreur de correspondance comme un bug et la corriger. En mode d\u00e9veloppement, React vous avertit de telles erreurs lors de l\u2019hydratation. Nous ne garantissons notamment pas que les \u00e9carts d\u2019attributs seront correctement r\u00e9solus. C\u2019est important pour les performances car dans la plupart des applications les erreurs de correspondance sont rares et faire une validation trop fine du balisage serait sans doute inutilement co\u00fbteux.</p>\n<p>Si un attribut ou contenu textuel sur un \u00e9l\u00e9ment pr\u00e9cis est forc\u00e9ment diff\u00e9rent entre le serveur et le client (par exemple, un horodatage), vous pouvez emp\u00eacher cet avertissement en ajoutant <code class=\"language-javascript\">suppressHydrationWarning={true}</code> \u00e0 l\u2019\u00e9l\u00e9ment. \u00c7a ne marche toutefois qu\u2019\u00e0 un niveau de profondeur et c\u2019est consid\u00e9r\u00e9 comme une \u00e9chappatoire. N\u2019en abusez pas.  \u00c0 moins qu\u2019il ne s\u2019agisse de contenu textuel, React ne tentera de toutes fa\u00e7ons pas de r\u00e9soudre la diff\u00e9rence qui pourrait rester incoh\u00e9rente jusqu\u2019aux prochaines mises \u00e0 jour.</p>\n<p>Si vous faites volontairement un rendu diff\u00e9rent entre le serveur et le client, vous pouvez proc\u00e9der \u00e0 un rendu en deux passes. Les composants qui ont un rendu serveur diff\u00e9rent peuvent lire une variable d\u2019\u00e9tat local du style <code class=\"language-javascript\">this.state.isClient</code>, que vous d\u00e9finirez \u00e0 <code class=\"language-javascript\">true</code> au sein de <code class=\"language-javascript\">componentDidMount()</code>. Ainsi, la premi\u00e8re passe de rendu affichera le m\u00eame contenu que celui du serveur, \u00e9vitant les \u00e9carts, mais une passe suppl\u00e9mentaire surviendra de fa\u00e7on synchrone juste apr\u00e8s l\u2019hydratation.  Remarquez que cette approche ralentira l\u2019initialisation de vos composants car ils devront faire un double rendu au d\u00e9marrage\u00a0: ne l\u2019employez qu\u2019avec pr\u00e9caution.</p>\n<p>Souvenez-vous que les connexions lentes ont un impact sur l\u2019exp\u00e9rience utilisateur. Le code JavaScript peut \u00eatre charg\u00e9 tr\u00e8s longtemps apr\u00e8s l\u2019affichage HTML initial de sorte que si vous affichez quelque chose de diff\u00e9rent lors du rendu cot\u00e9 client, la transition risque de d\u00e9sorienter l\u2019utilisateur. Ceci dit, si vous vous y prenez bien, il peut tout de m\u00eame \u00eatre utile de produire d\u2019abord une \u00ab\u00a0ossature\u00a0\u00bb de l\u2019application sur le serveur et de n\u2019ajouter certains \u00e9l\u00e9ments visuels suppl\u00e9mentaires qu\u2019une fois cot\u00e9 client.  Pour apprendre \u00e0 faire \u00e7a sans souffrir d\u2019\u00e9carts de balisage, relisez le paragraphe pr\u00e9c\u00e9dent.</p>\n\n<h3 id=\"unmountcomponentatnode\"><a class=\"anchor\" href=\"/react/react-dom#unmountcomponentatnode\"></a><code class=\"language-javascript\">unmountComponentAtNode()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Retire un composant React mont\u00e9 du DOM et nettoie ses gestionnaires d\u2019\u00e9v\u00e9nements et son \u00e9tat local.  Si aucun composant n\u2019\u00e9tait mont\u00e9 sur ce conteneur, appeler cette fonction ne fait rien.  Renvoie <code class=\"language-javascript\">true</code> si un composant a bien \u00e9t\u00e9 d\u00e9mont\u00e9 et <code class=\"language-javascript\">false</code> si aucun composant ne n\u00e9cessitait de d\u00e9montage.</p>\n\n<h3 id=\"finddomnode\"><a class=\"anchor\" href=\"/react/react-dom#finddomnode\"></a><code class=\"language-javascript\">findDOMNode()</code> </h3>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">findDOMNode</code> est une \u00e9chappatoire utilis\u00e9e pour acc\u00e9der au n\u0153ud du DOM associ\u00e9 au composant.  La plupart du temps, nous d\u00e9conseillons le recours \u00e0 cette \u00e9chappatoire parce qu\u2019elle rompt l\u2019abstraction du composant. <a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\">Elle est d\u2019ailleurs d\u00e9sormais d\u00e9pr\u00e9ci\u00e9e en mode strict.</a></p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Si le composant a \u00e9t\u00e9 mont\u00e9 dans le DOM, cette m\u00e9thode renvoie l\u2019\u00e9l\u00e9ment DOM (natif au navigateur) qui a servi de point de montage. \u00c7a peut \u00eatre utile pour lire des valeurs issues du DOM, telles que la valeur d\u2019un champ de formulaire, ou pour effectuer des mesures de tailles sur les n\u0153uds du DOM.  <strong>La plupart du temps, pr\u00e9f\u00e9rez associer une ref au n\u0153ud du DOM, et \u00e9vitez compl\u00e8tement <code class=\"language-javascript\">findDOMNode</code>.</strong></p>\n<p>Quand le rendu d\u2019un composant produit <code class=\"language-javascript\">null</code> ou <code class=\"language-javascript\">false</code>, <code class=\"language-javascript\">finDOMNode</code> renvoie <code class=\"language-javascript\">null</code>.  Quand \u00e7a produit une cha\u00eene de caract\u00e8re, <code class=\"language-javascript\">findDOMNode</code> renvoie le n\u0153ud DOM textuel qui contient cette valeur.  Depuis React 16, un composant peut renvoyer un fragment avec de multiples enfants, auquel cas <code class=\"language-javascript\">findDOMNode</code> renverra le n\u0153ud DOM correspondant au premier enfant non-vide.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">findDOMNode</code> ne fonctionne que sur des composants mont\u00e9s (c\u2019est-\u00e0-dire des composants qui ont \u00e9t\u00e9 plac\u00e9s dans le DOM).  Si vous tentez de l\u2019appeler sur un composant qui n\u2019a pas encore \u00e9t\u00e9 mont\u00e9 (par exemple en appelant <code class=\"language-javascript\">findDOMNode()</code> dans le <code class=\"language-javascript\">render()</code> initial d\u2019un composant), une exception sera lev\u00e9e.</p>\n<p><code class=\"language-javascript\">findDOMNode</code> ne peut pas \u00eatre utilis\u00e9e sur des fonctions composants.</p>\n</div>\n\n<h3 id=\"createportal\"><a class=\"anchor\" href=\"/react/react-dom#createportal\"></a><code class=\"language-javascript\">createPortal()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cr\u00e9e un portail.  Les portails fournissent un moyen d\u2019<a href=\"/react/portals\">afficher des enfants dans un n\u0153ud du DOM \u00e0 l\u2019ext\u00e9rieur de la hi\u00e9rarchie DOM du composant</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-react-dom.md\">Edit this page</a></p></div></article>", "path": "/react/react-dom", "nav": ["/react/react-component", "/react/react-dom-server"]}, {"key": "ReactDOMServer", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>L\u2019objet <code class=\"language-javascript\">ReactDOMServer</code> vous permet de produire sous forme de texte statique le balisage n\u00e9cessaire \u00e0 l\u2019affichage  de composants. En r\u00e8gle g\u00e9n\u00e9rale, on l\u2019utilise avec un serveur Node\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Modules ES</span>\n<span class=\"token keyword\">import</span> ReactDOMServer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/server'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// CommonJS</span>\n<span class=\"token keyword\">var</span> ReactDOMServer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom/server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-dom-server#overview\"></a>Aper\u00e7u </h2>\n<p>Les m\u00e9thodes suivantes peuvent \u00eatre utilis\u00e9es aussi bien dans des environnements navigateurs que serveurs\u00a0:</p>\n<ul>\n<li><a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString()</code></a></li>\n<li><a href=\"/react/react-dom-server#rendertostaticmarkup\"><code class=\"language-javascript\">renderToStaticMarkup()</code></a></li>\n</ul>\n<p>Les m\u00e9thodes suivantes d\u00e9pendent d\u2019un module (<code class=\"language-javascript\">stream</code>) <strong>disponible uniquement c\u00f4t\u00e9 serveur</strong>, elles ne fonctionneront donc pas dans un navigateur.</p>\n<ul>\n<li><a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream()</code></a></li>\n<li><a href=\"/react/react-dom-server#rendertostaticnodestream\"><code class=\"language-javascript\">renderToStaticNodeStream()</code></a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-dom-server#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"rendertostring\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostring\"></a><code class=\"language-javascript\">renderToString()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToString</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Produit le HTML initial d\u2019un \u00e9l\u00e9ment React, sous forme d\u2019une cha\u00eene de caract\u00e8res. Vous pouvez utiliser cette m\u00e9thode pour g\u00e9n\u00e9rer du HTML c\u00f4t\u00e9 serveur et le renvoyer en r\u00e9ponse \u00e0 la requ\u00eate initiale, afin d\u2019acc\u00e9l\u00e9rer le chargement des pages et de permettre aux moteurs de recherche d\u2019analyser vos pages dans une optique de r\u00e9f\u00e9rencement naturel <em>(SEO, NdT)</em>.</p>\n<p>Si vous appelez <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">ReactDOM.hydrate()</code></a> sur un n\u0153ud dont le balisage a d\u00e9j\u00e0 \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 par le serveur, React le conservera et se contentera d\u2019y attacher les gestionnaires d\u2019\u00e9v\u00e9nements, ce qui vous permettra d\u2019avoir une exp\u00e9rience de chargement initial des plus performantes.</p>\n\n<h3 id=\"rendertostaticmarkup\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostaticmarkup\"></a><code class=\"language-javascript\">renderToStaticMarkup()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToStaticMarkup</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Similaire \u00e0 <a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString</code></a>, si ce n\u2019est qu\u2019elle ne cr\u00e9e pas d\u2019attributs suppl\u00e9mentaires utilis\u00e9s par React en interne, tels que <code class=\"language-javascript\">data-reactroot</code>. \u00c7a peut \u00eatre pratique si vous souhaitez utiliser React comme simple g\u00e9n\u00e9rateur de pages statiques, car supprimer les attributs suppl\u00e9mentaires \u00e9conomise quelques octets.</p>\n<p>N\u2019utilisez pas cette m\u00e9thode si vous envisagez d\u2019utiliser React c\u00f4t\u00e9 client pour rendre le contenu interactif. Pr\u00e9f\u00e9rez <a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString</code></a> c\u00f4t\u00e9 serveur, et <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">ReactDOM.hydrate()</code></a> c\u00f4t\u00e9 client.</p>\n\n<h3 id=\"rendertonodestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertonodestream\"></a><code class=\"language-javascript\">renderToNodeStream()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToNodeStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Produit le HTML initial d\u2019un \u00e9l\u00e9ment React. Renvoie un <a class=\"external-link\" href=\"https://nodejs.org/api/stream.html#stream_readable_streams\">flux en lecture</a> (<code class=\"language-javascript\">Readable</code>) qui g\u00e9n\u00e8re une cha\u00eene de caract\u00e8res HTML. La sortie HTML de ce flux est identique \u00e0 ce que <a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">ReactDOMServer.renderToString</code></a> renverrait.  Vous pouvez utiliser cette m\u00e9thode pour g\u00e9n\u00e9rer du HTML c\u00f4t\u00e9 serveur et le renvoyer en r\u00e9ponse \u00e0 la requ\u00eate initiale, afin d\u2019acc\u00e9l\u00e9rer le chargement des pages et de permettre aux moteurs de recherche d\u2019analyser vos pages dans une optique de r\u00e9f\u00e9rencement naturel.</p>\n<p>Si vous appelez <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">ReactDOM.hydrate()</code></a> sur un n\u0153ud dont le balisage a d\u00e9j\u00e0 \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 par le serveur, React le conservera et se contentera d\u2019y attacher les gestionnaires d\u2019\u00e9v\u00e9nements, ce qui vous permettra d\u2019avoir une exp\u00e9rience de chargement initial des plus performantes.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>C\u00f4t\u00e9 serveur uniquement. Cette API n\u2019est pas disponible c\u00f4t\u00e9 navigateur.</p>\n<p>Le flux renvoy\u00e9 par cette m\u00e9thode est encod\u00e9 en UTF-8. Si vous avez besoin d\u2019un autre encodage, jetez un \u0153il au projet <a class=\"external-link\" href=\"https://www.npmjs.com/package/iconv-lite\">iconv-lite</a>, qui fournit des flux de transformation pour le transcodage de texte.</p>\n</div>\n\n<h3 id=\"rendertostaticnodestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostaticnodestream\"></a><code class=\"language-javascript\">renderToStaticNodeStream()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToStaticNodeStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Similaire \u00e0 <a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream</code></a>, si ce n\u2019est qu\u2019elle ne cr\u00e9e pas d\u2019attributs suppl\u00e9mentaires utilis\u00e9s par React en interne, tels que <code class=\"language-javascript\">data-reactroot</code>. \u00c7a peut \u00eatre pratique si vous souhaitez utiliser React comme simple g\u00e9n\u00e9rateur de pages statiques, car supprimer les attributs suppl\u00e9mentaires \u00e9conomise quelques octets.</p>\n<p>La sortie HTML de ce flux est identique \u00e0 ce que <a href=\"/react/react-dom-server#rendertostaticmarkup\"><code class=\"language-javascript\">ReactDOMServer.renderToStaticMarkup</code></a> renverrait.</p>\n<p>N\u2019utilisez pas cette m\u00e9thode si vous envisagez d\u2019utiliser React c\u00f4t\u00e9 client pour rendre le contenu interactif. Pr\u00e9f\u00e9rez <a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream</code></a> c\u00f4t\u00e9 serveur, et <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">ReactDOM.hydrate()</code></a> c\u00f4t\u00e9 client.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>C\u00f4t\u00e9 serveur uniquement. Cette API n\u2019est pas disponible c\u00f4t\u00e9 navigateur.</p>\n<p>Le flux renvoy\u00e9 par cette m\u00e9thode est encod\u00e9 en UTF-8. Si vous avez besoin d\u2019un autre encodage, jetez un \u0153il au projet <a class=\"external-link\" href=\"https://www.npmjs.com/package/iconv-lite\">iconv-lite</a>, qui fournit des flux de transformation pour le transcodage de texte.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-react-dom-server.md\">Edit this page</a></p></div></article>", "path": "/react/react-dom-server", "nav": ["/react/react-dom", "/react/dom-elements"]}, {"key": "\u00c9l\u00e9ments DOM", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React impl\u00e9mente un syst\u00e8me de DOM ind\u00e9pendant des navigateurs pour des raisons de performance et de compatibilit\u00e9 entre navigateurs. Nous en avons profit\u00e9 pour arrondir les angles des impl\u00e9mentations du DOM des navigateurs.</p>\n<p>En React, toutes les propri\u00e9t\u00e9s et tous les attributs du DOM (y compris les gestionnaires d\u2019\u00e9v\u00e9nements) doivent \u00eatre en <em>camelCase</em>. Par exemple, l\u2019attribut HTML <code class=\"language-javascript\">tabindex</code> correspond \u00e0 l\u2019attribut <code class=\"language-javascript\">tabIndex</code> en React. Les attributs <code class=\"language-javascript\">aria-*</code> et <code class=\"language-javascript\">data-*</code> sont l\u2019exception \u00e0 la r\u00e8gle, et doivent \u00eatre en minuscules. Par exemple, vous pouvez garder <code class=\"language-javascript\">aria-label</code> en tant que <code class=\"language-javascript\">aria-label</code>.</p>\n<h2 id=\"differences-in-attributes\"><a class=\"anchor\" href=\"/react/dom-elements#differences-in-attributes\"></a>Diff\u00e9rences dans les attributs </h2>\n<p>Un certain nombre d\u2019attributs diff\u00e8rent entre React et HTML\u00a0:</p>\n<h3 id=\"checked\"><a class=\"anchor\" href=\"/react/dom-elements#checked\"></a>checked </h3>\n<p>L\u2019attribut <code class=\"language-javascript\">checked</code> est accept\u00e9 par les composants <code class=\"language-javascript\">&lt;input&gt;</code> de type <code class=\"language-javascript\">checkbox</code> ou <code class=\"language-javascript\">radio</code>. Vous pouvez l\u2019utiliser pour d\u00e9finir si un composant est coch\u00e9 ou non. C\u2019est utile pour cr\u00e9er des composants contr\u00f4l\u00e9s. L\u2019\u00e9quivalent non-contr\u00f4l\u00e9 est <code class=\"language-javascript\">defaultChecked</code>, qui d\u00e9finit l\u2019\u00e9tat coch\u00e9 ou non du composant uniquement lorsqu\u2019il est mont\u00e9 pour la premi\u00e8re fois.</p>\n<h3 id=\"classname\"><a class=\"anchor\" href=\"/react/dom-elements#classname\"></a>className </h3>\n<p>Utilisez l\u2019attribut <code class=\"language-javascript\">className</code> pour sp\u00e9cifier une classe CSS. \u00c7a vaut pour tous les \u00e9l\u00e9ments DOM et SVG tels que <code class=\"language-javascript\">&lt;div&gt;</code>, <code class=\"language-javascript\">&lt;a&gt;</code>, et les autres.</p>\n<p>Si vous utilisez React avec les Web Components (ce qui est rare), utilisez plut\u00f4t l\u2019attribut <code class=\"language-javascript\">class</code>.</p>\n<h3 id=\"dangerouslysetinnerhtml\"><a class=\"anchor\" href=\"/react/dom-elements#dangerouslysetinnerhtml\"></a>dangerouslySetInnerHTML </h3>\n<p><code class=\"language-javascript\">dangerouslySetInnerHTML</code> est l\u2019\u00e9quivalent React de <code class=\"language-javascript\">innerHTML</code> dans le DOM des navigateurs. En r\u00e8gle g\u00e9n\u00e9rale, d\u00e9finir le HTML directement depuis le code est risqu\u00e9 car il est trop facile d\u2019exposer vos utilisateurs \u00e0 une attaque de type <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Cross-site_scripting\">cross-site scripting (XSS)</a>. C\u2019est pourquoi vous pouvez d\u00e9finir le HTML directement depuis React, mais vous devez taper <code class=\"language-javascript\">dangerouslySetInnerHTML</code> et passer un objet avec une cl\u00e9 <code class=\"language-javascript\">__html</code>, pour vous souvenir que c\u2019est dangereux. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">createMarkup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>__html<span class=\"token operator\">:</span> <span class=\"token string\">'Premier &amp;middot; Second'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">dangerouslySetInnerHTML</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">createMarkup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"htmlfor\"><a class=\"anchor\" href=\"/react/dom-elements#htmlfor\"></a>htmlFor </h3>\n<p>Puisque <code class=\"language-javascript\">for</code> est un mot r\u00e9serv\u00e9 en JavaScript, les \u00e9l\u00e9ments React utilisent plut\u00f4t <code class=\"language-javascript\">htmlFor</code>.</p>\n<h3 id=\"onchange\"><a class=\"anchor\" href=\"/react/dom-elements#onchange\"></a>onChange </h3>\n<p>L\u2019\u00e9v\u00e9nement <code class=\"language-javascript\">onChange</code> se comporte comme on s\u2019y attend\u00a0: \u00e0 chaque fois qu\u2019un champ de formulaire change, cet \u00e9v\u00e9nement est d\u00e9clench\u00e9. Nous utilisons d\u00e9lib\u00e9r\u00e9ment un comportement diff\u00e9rent de celui des navigateurs car le nom <code class=\"language-javascript\">onChange</code> est un faux-ami et React s\u2019appuie sur cet \u00e9v\u00e9nement pour traiter les saisies utilisateurs en temps r\u00e9el.</p>\n<h3 id=\"selected\"><a class=\"anchor\" href=\"/react/dom-elements#selected\"></a>selected </h3>\n<p>Si vous voulez signaler qu\u2019une option est s\u00e9lectionn\u00e9e, utilisez plut\u00f4t sa valeur dans le <code class=\"language-javascript\">value</code> de son <code class=\"language-javascript\">&lt;select&gt;</code>. Pour plus de d\u00e9tails, consultez <a href=\"/react/forms#the-select-tag\">\u00ab\u00a0La balise <code class=\"language-javascript\">select</code>\u00a0\u00bb</a>.</p>\n<h3 id=\"style\"><a class=\"anchor\" href=\"/react/dom-elements#style\"></a>style </h3>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Certains exemples dans la documentation utilisent <code class=\"language-javascript\">style</code> par souci de commodit\u00e9, mais <strong>utiliser l\u2019attribut <code class=\"language-javascript\">style</code> comme m\u00e9thode principale pour styler les \u00e9l\u00e9ments est g\u00e9n\u00e9ralement d\u00e9conseill\u00e9.</strong> Dans la plupart des cas, vous devriez plut\u00f4t utiliser <a href=\"/react/dom-elements#classname\"><code class=\"language-javascript\">className</code></a> pour r\u00e9f\u00e9rencer des classes d\u00e9finies dans une feuille de style CSS externe. Dans les applications React, on utilise plus fr\u00e9quemment <code class=\"language-javascript\">style</code> pour ajouter des styles calcul\u00e9s dynamiquement au moment de l\u2018affichage. Voir \u00e9galement <a href=\"/react/faq-styling\">FAQ\u00a0: styles et CSS</a>.</p>\n</div>\n<p>L\u2019attribut <code class=\"language-javascript\">style</code> accepte un objet JavaScript avec des propri\u00e9t\u00e9s en <code class=\"language-javascript\">camelCase</code> plut\u00f4t qu\u2019une cha\u00eene de caract\u00e8res CSS. C\u2019est conforme \u00e0 la propri\u00e9t\u00e9 JavaScript <code class=\"language-javascript\">style</code>, plus performant, et \u00e9vite des failles de s\u00e9curit\u00e9 XSS. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> divStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n  backgroundImage<span class=\"token operator\">:</span> <span class=\"token string\">'url('</span> <span class=\"token operator\">+</span> imgUrl <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>divStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notez que ces styles ne sont pas automatiquement pr\u00e9fix\u00e9s. Pour prendre en charge les navigateurs plus anciens vous devez fournir les propri\u00e9t\u00e9s de styles correspondantes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> divStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  WebkitTransition<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// notez le 'W' majuscule ici</span>\n  msTransition<span class=\"token operator\">:</span> <span class=\"token string\">'all'</span> <span class=\"token comment\">// 'ms' est le seul pr\u00e9fixe fournisseur en minuscules</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ComponentWithTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>divStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\u00c7a devrait fonctionner dans tous les navigateurs</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les cl\u00e9s de style sont en <code class=\"language-javascript\">camelCase</code> pour \u00eatre coh\u00e9rentes avec les propri\u00e9t\u00e9s des n\u0153uds du DOM (ex. <code class=\"language-javascript\">node.style.backgroundImage</code>). Les pr\u00e9fixes fournisseurs <a class=\"external-link\" href=\"https://www.andismith.com/blogs/2012/02/modernizr-prefixed/\">hormis <code class=\"language-javascript\">ms</code></a> doivent commencer avec une lettre majuscule. C\u2019est pour \u00e7a que <code class=\"language-javascript\">WebkitTransition</code> a un \u00ab\u00a0W\u00a0\u00bb majuscule.</p>\n<p>React ajoute automatiquement le suffixe \u00ab\u00a0px\u00a0\u00bb \u00e0 certaines propri\u00e9t\u00e9s num\u00e9riques de style. Si vous voulez une autre unit\u00e9 que \u00ab\u00a0px\u00a0\u00bb, sp\u00e9cifiez la valeur sous forme de cha\u00eene de caract\u00e8res avec l\u2019unit\u00e9 d\u00e9sir\u00e9e. Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Style r\u00e9sultat : '10px'</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Bonjour, monde !\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">// Style r\u00e9sultat : '10%'</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token operator\">:</span> <span class=\"token string\">'10%'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Bonjour, monde !\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Toutes les propri\u00e9t\u00e9s de style ne sont pas syst\u00e9matiquement converties en pixels pour autant. Certaines restent sans unit\u00e9 (ex. <code class=\"language-javascript\">zoom</code>, <code class=\"language-javascript\">order</code>, <code class=\"language-javascript\">flex</code>). La liste compl\u00e8te des propri\u00e9t\u00e9s sans unit\u00e9 peut-\u00eatre consult\u00e9e <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSProperty.js#L15-L59\">ici</a>.</p>\n<h3 id=\"suppresscontenteditablewarning\"><a class=\"anchor\" href=\"/react/dom-elements#suppresscontenteditablewarning\"></a>suppressContentEditableWarning </h3>\n<p>Normalement un avertissement appara\u00eet lorsqu\u2019un \u00e9l\u00e9ment avec des enfants est \u00e9galement marqu\u00e9 comme <code class=\"language-javascript\">contentEditable</code>, car \u00e7a ne fonctionnera pas. Cet attribut supprime cet avertissement. Ne l\u2019utilisez pas \u00e0 moins que vous ne soyez en train de d\u00e9velopper une biblioth\u00e8que comme <a class=\"external-link\" href=\"https://facebook.github.io/draft-js/\">Draft.js</a>, qui g\u00e8re <code class=\"language-javascript\">contentEditable</code> manuellement.</p>\n<h3 id=\"suppresshydrationwarning\"><a class=\"anchor\" href=\"/react/dom-elements#suppresshydrationwarning\"></a>suppressHydrationWarning </h3>\n<p>Si vous utilisez le rendu c\u00f4t\u00e9 serveur de React, normalement un avertissement appara\u00eet lorsque le serveur et le client produisent des contenus diff\u00e9rents. Cependant, dans certains cas rares, il est tr\u00e8s difficile\u2014voire impossible\u2014de garantir un contenu identique. Par exemple, les horodatages diff\u00e8rent g\u00e9n\u00e9ralement entre le serveur et le client.</p>\n<p>Si vous d\u00e9finissez <code class=\"language-javascript\">suppressHydrationWarning</code> \u00e0 <code class=\"language-javascript\">true</code>, React ne vous avertira pas des diff\u00e9rences dans les attributs et le contenu de cet \u00e9l\u00e9ment. \u00c7a ne fonctionne qu\u2019\u00e0 un niveau de profondeur, et c\u2019est con\u00e7u comme une \u00e9chappatoire. N\u2019en abusez pas. Pour en apprendre davantage sur la phase d\u2019hydratation, consultez la <a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">documentation de ReactDOM.hydrate()</code></a>.</p>\n<h3 id=\"value\"><a class=\"anchor\" href=\"/react/dom-elements#value\"></a>value </h3>\n<p>L\u2019attribut <code class=\"language-javascript\">value</code> est accept\u00e9 par les composants <code class=\"language-javascript\">&lt;input&gt;</code>, <code class=\"language-javascript\">&lt;select&gt;</code> et <code class=\"language-javascript\">&lt;textarea&gt;</code>. Vous pouvez l\u2019utiliser pour d\u00e9finir la valeur d\u2019un composant. C\u2019est utile pour cr\u00e9er des composants contr\u00f4l\u00e9s. <code class=\"language-javascript\">defaultValue</code> est l\u2019\u00e9quivalent non-contr\u00f4l\u00e9, qui d\u00e9finit la valeur du composant uniquement lorsqu\u2019il est mont\u00e9 pour la premi\u00e8re fois.</p>\n<h2 id=\"all-supported-html-attributes\"><a class=\"anchor\" href=\"/react/dom-elements#all-supported-html-attributes\"></a>Tous les attributs HTML pris en charge </h2>\n<p>Depuis React 16, tous les attributs standards ou <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2017/09/08/dom-attributes-in-react-16.html\">personnalis\u00e9s</a> sont pleinement pris en charge.</p>\n<p>React a toujours fourni une API de gestion du DOM pens\u00e9e pour JavaScript. \u00c9tant donn\u00e9 que les composants React acceptent autant les props personnalis\u00e9es que celles li\u00e9es au DOM, React utilise la convention <code class=\"language-javascript\">camelCase</code> tout comme les API DOM\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">tabIndex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>      <span class=\"token comment\">// Tout comme l'API DOM node.tabIndex</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token comment\">// Tout comme l'API DOM node.className</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">readOnly</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>  <span class=\"token comment\">// Tout comme l'API DOM node.readOnly</span></code></pre></div>\n<p>Ces props fonctionnent comme les attributs HTML correspondants, \u00e0 l\u2019exception des cas sp\u00e9ciaux document\u00e9s ci-dessus.</p>\n<p>Les attributs du DOM pris en charge par React incluent notamment\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">accept acceptCharset accessKey action allowFullScreen alt async autoComplete\nautoFocus autoPlay capture cellPadding cellSpacing challenge charSet checked\ncite classID className colSpan cols content contentEditable contextMenu controls\ncontrolsList coords crossOrigin data dateTime default defer dir disabled\ndownload draggable encType form formAction formEncType formMethod formNoValidate\nformTarget frameBorder headers height hidden high href hrefLang htmlFor\nhttpEquiv icon id inputMode integrity is keyParams keyType kind label lang list\nloop low manifest marginHeight marginWidth max maxLength media mediaGroup method\nmin minLength multiple muted name noValidate nonce open optimum pattern\nplaceholder poster preload profile radioGroup readOnly rel required reversed\nrole rowSpan rows sandbox scope scoped scrolling seamless selected shape size\nsizes span spellCheck src srcDoc srcLang srcSet start step style summary\ntabIndex target title type useMap value width wmode wrap</code></pre></div>\n<p>Dans le m\u00eame esprit, tous les attributs SVG sont pleinement pris en charge\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">accentHeight accumulate additive alignmentBaseline allowReorder alphabetic\namplitude arabicForm ascent attributeName attributeType autoReverse azimuth\nbaseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight\nclip clipPath clipPathUnits clipRule colorInterpolation\ncolorInterpolationFilters colorProfile colorRendering contentScriptType\ncontentStyleType cursor cx cy d decelerate descent diffuseConstant direction\ndisplay divisor dominantBaseline dur dx dy edgeMode elevation enableBackground\nend exponent externalResourcesRequired fill fillOpacity fillRule filter\nfilterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize\nfontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy\ng1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef\ngradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic\nimageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength\nkerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor\nlimitingConeAngle local markerEnd markerHeight markerMid markerStart\nmarkerUnits markerWidth mask maskContentUnits maskUnits mathematical mode\nnumOctaves offset opacity operator order orient orientation origin overflow\noverlinePosition overlineThickness paintOrder panose1 pathLength\npatternContentUnits patternTransform patternUnits pointerEvents points\npointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits\nr radius refX refY renderingIntent repeatCount repeatDur requiredExtensions\nrequiredFeatures restart result rotate rx ry scale seed shapeRendering slope\nspacing specularConstant specularExponent speed spreadMethod startOffset\nstdDeviation stemh stemv stitchTiles stopColor stopOpacity\nstrikethroughPosition strikethroughThickness string stroke strokeDasharray\nstrokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity\nstrokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor\ntextDecoration textLength textRendering to transform u1 u2 underlinePosition\nunderlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic\nvHanging vIdeographic vMathematical values vectorEffect version vertAdvY\nvertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing\nwritingMode x x1 x2 xChannelSelector xHeight xlinkActuate xlinkArcrole\nxlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlns xmlnsXlink xmlBase\nxmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan</code></pre></div>\n<p>Vous pouvez \u00e9galement utiliser des attributs personnalis\u00e9s du moment qu\u2019ils sont int\u00e9gralement en minuscules.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-dom-elements.md\">Edit this page</a></p></div></article>", "path": "/react/dom-elements", "nav": ["/react/react-dom-server", "/react/events"]}, {"key": "SyntheticEvent", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Ce guide de r\u00e9f\u00e9rence documente l\u2019enrobage <code class=\"language-javascript\">SyntheticEvent</code> qui fait partie du syst\u00e8me d\u2019\u00e9v\u00e9nements de React. Consultez le guide sur la <a href=\"/react/handling-events\">gestion d\u2019\u00e9v\u00e9nements</a> pour en savoir plus.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/events#overview\"></a>Aper\u00e7u </h2>\n<p>Vos gestionnaires d\u2019\u00e9v\u00e9nements recevront des instances de <code class=\"language-javascript\">SyntheticEvent</code>, un enrobage compatible tous navigateurs autour de l\u2019\u00e9v\u00e9nement natif du navigateur. Il fournit la m\u00eame interface que l\u2019\u00e9v\u00e9nement natif, comprenant notamment <code class=\"language-javascript\">stopPropagation()</code> et <code class=\"language-javascript\">preventDefault()</code>, \u00e0 ceci pr\u00e8s que ces \u00e9v\u00e9nements fonctionnent de fa\u00e7on identique sur tous les navigateurs.</p>\n<p>Si pour une raison ou une autre, vous avez besoin de l\u2019\u00e9v\u00e9nement sous-jacent du navigateur, utilisez l\u2019attribut <code class=\"language-javascript\">nativeEvent</code> pour le r\u00e9cup\u00e9rer. Les \u00e9v\u00e9nements synth\u00e9tiques diff\u00e8rent des \u00e9v\u00e9nements natifs du navigateur, avec lesquels ils n\u2019ont pas toujours de correspondance directe.  Par exemple pour <code class=\"language-javascript\">onMouseLeave</code>, <code class=\"language-javascript\">event.nativeEvent</code> r\u00e9f\u00e9rencera un \u00e9v\u00e9nement <code class=\"language-javascript\">mouseout</code>. Les correspondances effectives ne font pas partie de l\u2019API publique et sont susceptibles d\u2019\u00e9voluer \u00e0 tout moment. Tous les objets <code class=\"language-javascript\">SyntheticEvent</code> disposent des attributs suivants\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean bubbles\nboolean cancelable\nDOMEventTarget currentTarget\nboolean defaultPrevented\nnumber eventPhase\nboolean isTrusted\nDOMEvent nativeEvent\n<span class=\"token keyword\">void</span> <span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboolean <span class=\"token function\">isDefaultPrevented</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboolean <span class=\"token function\">isPropagationStopped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nDOMEventTarget target\nnumber timeStamp\nstring type</code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Depuis la version 0.14, renvoyer <code class=\"language-javascript\">false</code> depuis un gestionnaire d\u2019\u00e9v\u00e9nements n\u2019interrompt plus la propagation de l\u2019\u00e9v\u00e9nement. Pour ce faire, appelez explicitement <code class=\"language-javascript\">e.stopPropagation()</code> ou <code class=\"language-javascript\">e.preventDefault()</code>, selon le besoin.</p>\n</div>\n<h3 id=\"event-pooling\"><a class=\"anchor\" href=\"/react/events#event-pooling\"></a>Recyclage des \u00e9v\u00e9nements </h3>\n<p>Les objets <code class=\"language-javascript\">SyntheticEvent</code> sont recycl\u00e9s. En d\u2019autres termes, tout objet <code class=\"language-javascript\">SyntheticEvent</code> sera r\u00e9utilis\u00e9 et ses propri\u00e9t\u00e9s seront remises \u00e0 <code class=\"language-javascript\">null</code> une fois que la fonction de rappel de l\u2019\u00e9v\u00e9nement aura \u00e9t\u00e9 invoqu\u00e9e.\nReact agit ainsi pour am\u00e9liorer les performances.\nPar cons\u00e9\u00adquent, vous ne pouvez pas acc\u00e9der \u00e0 l\u2019\u00e9v\u00e9nement de fa\u00e7on asynchrone.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; objet nullifi\u00e9.</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; \"click\"</span>\n  <span class=\"token keyword\">const</span> eventType <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; \"click\"</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; null</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>eventType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; \"click\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Ne fonctionnera pas. this.state.clickEvent ne contiendra que des valeurs \u00e0 null.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>clickEvent<span class=\"token operator\">:</span> event<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Vous pouvez toutefois exporter les propri\u00e9t\u00e9s de l'\u00e9v\u00e9nement.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>eventType<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous souhaitez acc\u00e9der aux propri\u00e9t\u00e9s de l\u2019\u00e9v\u00e9nement de fa\u00e7on asynchrone, vous devez appeler sa m\u00e9thode <code class=\"language-javascript\">event.persist()</code>, ce qui le retirera du syst\u00e8me de recyclage, et permettra \u00e0 votre code de conserver sans probl\u00e8me des r\u00e9f\u00e9rences sur l\u2019\u00e9v\u00e9nement.</p>\n</div>\n<h2 id=\"supported-events\"><a class=\"anchor\" href=\"/react/events#supported-events\"></a>\u00c9v\u00e9nements pris en charge </h2>\n<p>React normalise les \u00e9v\u00e9nements pour qu\u2019ils aient les m\u00eames propri\u00e9t\u00e9s dans tous les navigateurs.</p>\n<p>Les gestionnaires d\u2019\u00e9v\u00e9nements ci-dessous sont d\u00e9clench\u00e9s par un \u00e9v\u00e9nement durant la phase de propagation. Pour inscrire un gestionnaire d\u2019\u00e9v\u00e9nements pour la phase de capture, ajoutez le suffixe <code class=\"language-javascript\">Capture</code> au nom de l\u2019\u00e9v\u00e9nement\u00a0; par exemple, vous utiliserez <code class=\"language-javascript\">onClickCapture</code> plut\u00f4t que <code class=\"language-javascript\">onClick</code> pour g\u00e9rer l\u2019\u00e9v\u00e9nement de clic durant la phase de capture.</p>\n<ul>\n<li><a href=\"/react/events#clipboard-events\">\u00c9v\u00e9nements de presse-papiers</a></li>\n<li><a href=\"/react/events#composition-events\">\u00c9v\u00e9nements de composition</a></li>\n<li><a href=\"/react/events#keyboard-events\">\u00c9v\u00e9nements du clavier</a></li>\n<li><a href=\"/react/events#focus-events\">\u00c9v\u00e9nements de focus</a></li>\n<li><a href=\"/react/events#form-events\">\u00c9v\u00e9nements de formulaires</a></li>\n<li><a href=\"/react/events#generic-events\">\u00c9v\u00e9nements g\u00e9n\u00e9riques</a></li>\n<li><a href=\"/react/events#mouse-events\">\u00c9v\u00e9nements de la souris</a></li>\n<li><a href=\"/react/events#pointer-events\">\u00c9v\u00e9nements du pointeur</a></li>\n<li><a href=\"/react/events#selection-events\">\u00c9v\u00e9nements de s\u00e9lection</a></li>\n<li><a href=\"/react/events#touch-events\">\u00c9v\u00e9nements d\u2019interaction tactile</a></li>\n<li><a href=\"/react/events#ui-events\">\u00c9v\u00e9nements visuels</a></li>\n<li><a href=\"/react/events#wheel-events\">\u00c9v\u00e9nements de la molette</a></li>\n<li><a href=\"/react/events#media-events\">\u00c9v\u00e9nements de m\u00e9dia</a></li>\n<li><a href=\"/react/events#image-events\">\u00c9v\u00e9nements d\u2019images</a></li>\n<li><a href=\"/react/events#animation-events\">\u00c9v\u00e9nements d\u2019animation</a></li>\n<li><a href=\"/react/events#transition-events\">\u00c9v\u00e9nements de transition</a></li>\n<li><a href=\"/react/events#other-events\">Autres \u00e9v\u00e9nements</a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/events#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"clipboard-events\"><a class=\"anchor\" href=\"/react/events#clipboard-events\"></a>\u00c9v\u00e9nements de presse-papiers </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onCopy onCut onPaste</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">DOMDataTransfer clipboardData</code></pre></div>\n\n<h3 id=\"composition-events\"><a class=\"anchor\" href=\"/react/events#composition-events\"></a>\u00c9v\u00e9nements de composition </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onCompositionEnd onCompositionStart onCompositionUpdate</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string data</code></pre></div>\n\n<h3 id=\"keyboard-events\"><a class=\"anchor\" href=\"/react/events#keyboard-events\"></a>\u00c9v\u00e9nements du clavier </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onKeyDown onKeyPress onKeyUp</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nnumber charCode\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nstring key\nnumber keyCode\nstring locale\nnumber location\nboolean metaKey\nboolean repeat\nboolean shiftKey\nnumber which</code></pre></div>\n<p>La propri\u00e9t\u00e9 <code class=\"language-javascript\">key</code> peut prendre n\u2019importe quelle valeur document\u00e9e dans la <a class=\"external-link\" href=\"https://www.w3.org/TR/uievents-key/#named-key-attribute-values\">sp\u00e9cification des \u00e9v\u00e9nements DOM de niveau 3</a>.</p>\n\n<h3 id=\"focus-events\"><a class=\"anchor\" href=\"/react/events#focus-events\"></a>\u00c9v\u00e9nements de focus </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onFocus onBlur</code></pre></div>\n<p>Ces \u00e9v\u00e9nements de focus fonctionnent sur tous les \u00e9l\u00e9ments du DOM de React, et pas uniquement sur les \u00e9l\u00e9ments du formulaire.</p>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">DOMEventTarget relatedTarget</code></pre></div>\n\n<h3 id=\"form-events\"><a class=\"anchor\" href=\"/react/events#form-events\"></a>\u00c9v\u00e9nements de formulaires </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onChange onInput onInvalid onReset onSubmit</code></pre></div>\n<p>Pour plus d\u2019informations sur l\u2019\u00e9v\u00e9nement onChange, consultez la documentation sur <a href=\"/react/forms\">les formulaires</a>.</p>\n\n<h3 id=\"generic-events\"><a class=\"anchor\" href=\"/react/events#generic-events\"></a>\u00c9v\u00e9nements g\u00e9n\u00e9riques </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onError onLoad</code></pre></div>\n\n<h3 id=\"mouse-events\"><a class=\"anchor\" href=\"/react/events#mouse-events\"></a>\u00c9v\u00e9nements de la souris </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit\nonDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\nonMouseMove onMouseOut onMouseOver onMouseUp</code></pre></div>\n<p>Les \u00e9v\u00e9nements <code class=\"language-javascript\">onMouseEnter</code> et <code class=\"language-javascript\">onMouseLeave</code> se propagent de l\u2019\u00e9l\u00e9ment qui vient d\u2019\u00eatre quitt\u00e9 par la souris \u00e0 celui sur lequel la souris arrive (au lieu d\u2019une propagation classique) et n\u2019ont pas de phase de capture.</p>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nnumber button\nnumber buttons\nnumber clientX\nnumber clientY\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nboolean metaKey\nnumber pageX\nnumber pageY\nDOMEventTarget relatedTarget\nnumber screenX\nnumber screenY\nboolean shiftKey</code></pre></div>\n\n<h3 id=\"pointer-events\"><a class=\"anchor\" href=\"/react/events#pointer-events\"></a>\u00c9v\u00e9nements du pointeur </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture\nonLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut</code></pre></div>\n<p>Les \u00e9v\u00e9nements <code class=\"language-javascript\">onPointerEnter</code> et <code class=\"language-javascript\">onPointerLeave</code> se propagent de l\u2019\u00e9l\u00e9ment qui vient d\u2019\u00eatre quitt\u00e9 par le pointeur \u00e0 celui sur lequel le pointeur arrive (au lieu d\u2019une propagation classique) et n\u2019ont pas de phase de capture.</p>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<p>Comme d\u00e9fini par la <a class=\"external-link\" href=\"https://www.w3.org/TR/pointerevents/\">sp\u00e9cification W3</a>, les \u00e9v\u00e9nements du pointeur \u00e9tendent les <a href=\"/react/events#mouse-events\">\u00e9v\u00e9nements de la souris</a> avec les propri\u00e9t\u00e9s suivantes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number pointerId\nnumber width\nnumber height\nnumber pressure\nnumber tangentialPressure\nnumber tiltX\nnumber tiltY\nnumber twist\nstring pointerType\nboolean isPrimary</code></pre></div>\n<p>Une remarque concernant la prise en charge tous navigateurs\u00a0:</p>\n<p>Les \u00e9v\u00e9nements du pointeur ne sont pas encore pris en charge par tous les navigateurs (au moment de l\u2019\u00e9criture de cet article, les navigateurs qui les prennent en charge comprennent Chrome, Firefox, Edge, et Internet Explorer). React ne fournit volontairement pas de <em>polyfill</em> pour les autres navigateurs, dans la mesure o\u00f9 un polyfill conforme au standard augmenterait significativement la taille du module <code class=\"language-javascript\">react-dom</code>.</p>\n<p>Si votre application n\u00e9cessite les \u00e9v\u00e9nements du pointeur, nous vous conseillons d\u2019ajouter un polyfill tiers pour les prendre en charge.</p>\n\n<h3 id=\"selection-events\"><a class=\"anchor\" href=\"/react/events#selection-events\"></a>\u00c9v\u00e9nements de s\u00e9lection </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onSelect</code></pre></div>\n\n<h3 id=\"touch-events\"><a class=\"anchor\" href=\"/react/events#touch-events\"></a>\u00c9v\u00e9nements d\u2019interaction tactile </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onTouchCancel onTouchEnd onTouchMove onTouchStart</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nDOMTouchList changedTouches\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nboolean metaKey\nboolean shiftKey\nDOMTouchList targetTouches\nDOMTouchList touches</code></pre></div>\n\n<h3 id=\"ui-events\"><a class=\"anchor\" href=\"/react/events#ui-events\"></a>\u00c9v\u00e9nements visuels </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onScroll</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number detail\nDOMAbstractView view</code></pre></div>\n\n<h3 id=\"wheel-events\"><a class=\"anchor\" href=\"/react/events#wheel-events\"></a>\u00c9v\u00e9nements de la molette </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onWheel</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number deltaMode\nnumber deltaX\nnumber deltaY\nnumber deltaZ</code></pre></div>\n\n<h3 id=\"media-events\"><a class=\"anchor\" href=\"/react/events#media-events\"></a>\u00c9v\u00e9nements de m\u00e9dia </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted\nonEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay\nonPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend\nonTimeUpdate onVolumeChange onWaiting</code></pre></div>\n\n<h3 id=\"image-events\"><a class=\"anchor\" href=\"/react/events#image-events\"></a>\u00c9v\u00e9nements d\u2019images </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onLoad onError</code></pre></div>\n\n<h3 id=\"animation-events\"><a class=\"anchor\" href=\"/react/events#animation-events\"></a>\u00c9v\u00e9nements d\u2019animation </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onAnimationStart onAnimationEnd onAnimationIteration</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string animationName\nstring pseudoElement\nfloat elapsedTime</code></pre></div>\n\n<h3 id=\"transition-events\"><a class=\"anchor\" href=\"/react/events#transition-events\"></a>\u00c9v\u00e9nements de transition </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onTransitionEnd</code></pre></div>\n<p>Propri\u00e9t\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string propertyName\nstring pseudoElement\nfloat elapsedTime</code></pre></div>\n\n<h3 id=\"other-events\"><a class=\"anchor\" href=\"/react/events#other-events\"></a>Autres \u00e9v\u00e9nements </h3>\n<p>Noms des \u00e9v\u00e9nements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onToggle</code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-events.md\">Edit this page</a></p></div></article>", "path": "/react/events", "nav": ["/react/dom-elements", "/react/test-utils"]}, {"key": "Utilitaires de test", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p><strong>Importation</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ReactTestUtils <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">var</span> ReactTestUtils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES5 avec npm</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/test-utils#overview\"></a>Aper\u00e7u </h2>\n<p><code class=\"language-javascript\">ReactTestUtils</code> facilite le test de composants React quel que soit votre framework de test. Chez Facebook, nous utilisons <a class=\"external-link\" href=\"https://facebook.github.io/jest/\">Jest</a> pour r\u00e9aliser facilement nos tests JavaScript. Pour bien d\u00e9marrer avec Jest, vous pouvez lire le <a class=\"external-link\" href=\"http://facebook.github.io/jest/docs/en/tutorial-react.html#content\">Tutoriel React</a> du site web de Jest.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Nous vous conseillons d\u2019utiliser <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a>. Cette biblioth\u00e8que est con\u00e7ue pour encourager l\u2019\u00e9criture de tests utilisant vos composants de fa\u00e7on similaire aux utilisateurs finaux.</p>\n<p>Par ailleurs, Airbnb propose un utilitaire de test appel\u00e9 <a class=\"external-link\" href=\"http://airbnb.io/enzyme/\">Enzyme</a>, qui permet de facilement exprimer des assertions, manipuler vos composants React et en explorer le r\u00e9sultat.</p>\n</div>\n<ul>\n<li><a href=\"/react/test-utils#act\"><code class=\"language-javascript\">act()</code></a></li>\n<li><a href=\"/react/test-utils#mockcomponent\"><code class=\"language-javascript\">mockComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iselement\"><code class=\"language-javascript\">isElement()</code></a></li>\n<li><a href=\"/react/test-utils#iselementoftype\"><code class=\"language-javascript\">isElementOfType()</code></a></li>\n<li><a href=\"/react/test-utils#isdomcomponent\"><code class=\"language-javascript\">isDOMComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iscompositecomponent\"><code class=\"language-javascript\">isCompositeComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iscompositecomponentwithtype\"><code class=\"language-javascript\">isCompositeComponentWithType()</code></a></li>\n<li><a href=\"/react/test-utils#findallinrenderedtree\"><code class=\"language-javascript\">findAllInRenderedTree()</code></a></li>\n<li><a href=\"/react/test-utils#scryrendereddomcomponentswithclass\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code></a></li>\n<li><a href=\"/react/test-utils#findrendereddomcomponentwithclass\"><code class=\"language-javascript\">findRenderedDOMComponentWithClass()</code></a></li>\n<li><a href=\"/react/test-utils#scryrendereddomcomponentswithtag\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code></a></li>\n<li><a href=\"/react/test-utils#findrendereddomcomponentwithtag\"><code class=\"language-javascript\">findRenderedDOMComponentWithTag()</code></a></li>\n<li><a href=\"/react/test-utils#scryrenderedcomponentswithtype\"><code class=\"language-javascript\">scryRenderedComponentsWithType()</code></a></li>\n<li><a href=\"/react/test-utils#findrenderedcomponentwithtype\"><code class=\"language-javascript\">findRenderedComponentWithType()</code></a></li>\n<li><a href=\"/react/test-utils#renderintodocument\"><code class=\"language-javascript\">renderIntoDocument()</code></a></li>\n<li><a href=\"/react/test-utils#simulate\"><code class=\"language-javascript\">Simulate</code></a></li>\n</ul>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/test-utils#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"act\"><a class=\"anchor\" href=\"/react/test-utils#act\"></a><code class=\"language-javascript\">act()</code> </h3>\n<p>Afin de pr\u00e9parer un composant aux assertions, il suffit d\u2019enrober le code qui se charge de son rendu et de ses mises \u00e0 jour au sein d\u2019une fonction de rappel qui sera pass\u00e9e \u00e0 <code class=\"language-javascript\">act()</code>. De cette mani\u00e8re, votre test s\u2019ex\u00e9cutera dans un environnement proche de celui de React dans le navigateur.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez <code class=\"language-javascript\">react-test-renderer</code>, ce dernier propose un export de <code class=\"language-javascript\">act</code> qui se comporte de la m\u00eame fa\u00e7on.</p>\n</div>\n<p>Prenons l\u2019exemple d\u2019un composant <code class=\"language-javascript\">Counter</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          Cliquez ici\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voici comment nous pouvons le tester\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'peut afficher et mettre \u00e0 jour un compteur'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Teste le premier affichage et l'appel \u00e0 componentDidMount</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 0 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 0 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Teste un second affichage et l'appel \u00e0 componentDidUpdate</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 1 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 1 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>N\u2019oubliez pas que l\u2019\u00e9mission d\u2019\u00e9v\u00e9nements DOM ne fonctionne que lorsque le conteneur DOM a \u00e9t\u00e9 ajout\u00e9 au <code class=\"language-javascript\">document</code>. Vous pouvez utiliser un utilitaire comme <a class=\"external-link\" href=\"https://testing-library.com/react\"><code class=\"language-javascript\">React Testing Library</code></a> afin de r\u00e9duire le volume de code g\u00e9n\u00e9rique.</p>\n<p>La page des <a href=\"/react/testing-recipes\"><code class=\"language-javascript\">recettes</code></a> contient de plus amples d\u00e9tails sur le fonctionnement de <code class=\"language-javascript\">act()</code>, avec des exemples d\u2019utilisation.</p>\n\n<h3 id=\"mockcomponent\"><a class=\"anchor\" href=\"/react/test-utils#mockcomponent\"></a><code class=\"language-javascript\">mockComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">mockComponent</span><span class=\"token punctuation\">(</span>\n  componentClass<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>mockTagName<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cette m\u00e9thode prend un module de composant simul\u00e9 et lui ajoute des m\u00e9thodes utiles pour lui permettre d\u2019\u00eatre utilis\u00e9 comme un composant React factice. Plut\u00f4t que de r\u00e9aliser un rendu classique, le composant va simplement devenir une balise <code class=\"language-javascript\">&lt;div&gt;</code> (ou toute autre balise si <code class=\"language-javascript\">mockTagName</code> est renseign\u00e9) contenant les enfants qui lui sont fournis.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">mockComponent()</code> est une API obsol\u00e8te. Nous recommandons plut\u00f4t de recourir \u00e0 <a class=\"external-link\" href=\"https://facebook.github.io/jest/docs/en/tutorial-react-native.html#mock-native-modules-using-jestmock\"><code class=\"language-javascript\">jest.mock()</code></a>.</p>\n</div>\n\n<h3 id=\"iselement\"><a class=\"anchor\" href=\"/react/test-utils#iselement\"></a><code class=\"language-javascript\">isElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isElement</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie <code class=\"language-javascript\">true</code> si <code class=\"language-javascript\">element</code> est un \u00e9l\u00e9ment React.</p>\n\n<h3 id=\"iselementoftype\"><a class=\"anchor\" href=\"/react/test-utils#iselementoftype\"></a><code class=\"language-javascript\">isElementOfType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isElementOfType</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie <code class=\"language-javascript\">true</code> si <code class=\"language-javascript\">element</code> est un \u00e9l\u00e9ment React dont le type est un <code class=\"language-javascript\">componentClass</code> React.</p>\n\n<h3 id=\"isdomcomponent\"><a class=\"anchor\" href=\"/react/test-utils#isdomcomponent\"></a><code class=\"language-javascript\">isDOMComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isDOMComponent</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie <code class=\"language-javascript\">true</code> si <code class=\"language-javascript\">instance</code> est un composant DOM (tel que <code class=\"language-javascript\">&lt;div&gt;</code> ou <code class=\"language-javascript\">&lt;span&gt;</code>).</p>\n\n<h3 id=\"iscompositecomponent\"><a class=\"anchor\" href=\"/react/test-utils#iscompositecomponent\"></a><code class=\"language-javascript\">isCompositeComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isCompositeComponent</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie <code class=\"language-javascript\">true</code> si <code class=\"language-javascript\">instance</code> est un composant d\u00e9fini par l\u2019utilisateur, via une classe ou une fonction.</p>\n\n<h3 id=\"iscompositecomponentwithtype\"><a class=\"anchor\" href=\"/react/test-utils#iscompositecomponentwithtype\"></a><code class=\"language-javascript\">isCompositeComponentWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isCompositeComponentWithType</span><span class=\"token punctuation\">(</span>\n  instance<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie <code class=\"language-javascript\">true</code> si <code class=\"language-javascript\">instance</code> est un composant dont le type est un <code class=\"language-javascript\">componentClass</code> React.</p>\n\n<h3 id=\"findallinrenderedtree\"><a class=\"anchor\" href=\"/react/test-utils#findallinrenderedtree\"></a><code class=\"language-javascript\">findAllInRenderedTree()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findAllInRenderedTree</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  test\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Parcourt tous les composants pr\u00e9sents dans <code class=\"language-javascript\">tree</code> en ne retenant que les composants pour lesquels <code class=\"language-javascript\">test(component)</code> renvoie <code class=\"language-javascript\">true</code>. Ce n\u2019est gu\u00e8re utile en soi, mais \u00e7a sert de base \u00e0 d\u2019autres utilitaires de test.</p>\n\n<h3 id=\"scryrendereddomcomponentswithclass\"><a class=\"anchor\" href=\"/react/test-utils#scryrendereddomcomponentswithclass\"></a><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedDOMComponentsWithClass</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  className\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve tous les \u00e9l\u00e9ments DOM des composants de l\u2019arbre de rendu qui sont des composants DOM dont la classe CSS correspond \u00e0 <code class=\"language-javascript\">className</code>.</p>\n\n<h3 id=\"findrendereddomcomponentwithclass\"><a class=\"anchor\" href=\"/react/test-utils#findrendereddomcomponentwithclass\"></a><code class=\"language-javascript\">findRenderedDOMComponentWithClass()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedDOMComponentWithClass</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  className\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Fonctionne comme <a href=\"/react/test-utils#scryrendereddomcomponentswithclass\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code></a>, mais cette m\u00e9thode s\u2019attend \u00e0 ne trouver qu\u2019un seul r\u00e9sultat, qu\u2019elle renverra. Si elle trouve un nombre d\u2019\u00e9l\u00e9ments diff\u00e9rent de un, elle l\u00e8vera une exception .</p>\n\n<h3 id=\"scryrendereddomcomponentswithtag\"><a class=\"anchor\" href=\"/react/test-utils#scryrendereddomcomponentswithtag\"></a><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedDOMComponentsWithTag</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  tagName\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve tous les \u00e9l\u00e9ments DOM parmi les composants de l\u2019arbre de rendu qui sont des composants DOM dont le nom de balise correspond \u00e0<code class=\"language-javascript\">tagName</code>.</p>\n\n<h3 id=\"findrendereddomcomponentwithtag\"><a class=\"anchor\" href=\"/react/test-utils#findrendereddomcomponentwithtag\"></a><code class=\"language-javascript\">findRenderedDOMComponentWithTag()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedDOMComponentWithTag</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  tagName\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Fonctionne comme <a href=\"/react/test-utils#scryrendereddomcomponentswithtag\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code></a>, mais cette m\u00e9thode s\u2019attend \u00e0 ne trouver qu\u2019un seul r\u00e9sultat, qu\u2019elle renverra. Si elle trouve un nombre d\u2019\u00e9l\u00e9ments diff\u00e9rent de un, elle l\u00e8vera une exception.</p>\n\n<h3 id=\"scryrenderedcomponentswithtype\"><a class=\"anchor\" href=\"/react/test-utils#scryrenderedcomponentswithtype\"></a><code class=\"language-javascript\">scryRenderedComponentsWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedComponentsWithType</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve toutes les instances des composants dont le type est <code class=\"language-javascript\">componentClass</code>.</p>\n\n<h3 id=\"findrenderedcomponentwithtype\"><a class=\"anchor\" href=\"/react/test-utils#findrenderedcomponentwithtype\"></a><code class=\"language-javascript\">findRenderedComponentWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedComponentWithType</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Fonctionne comme <a href=\"/react/test-utils#scryrenderedcomponentswithtype\"><code class=\"language-javascript\">scryRenderedComponentsWithType()</code></a>, mais cette m\u00e9thode s\u2019attend \u00e0 ne trouver qu\u2019un seul r\u00e9sultat, qu\u2019elle renverra. Si elle trouve un nombre d\u2019\u00e9l\u00e9ments diff\u00e9rent de un, elle l\u00e8vera une exception.</p>\n\n<h3 id=\"renderintodocument\"><a class=\"anchor\" href=\"/react/test-utils#renderintodocument\"></a><code class=\"language-javascript\">renderIntoDocument()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">renderIntoDocument</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>R\u00e9alise le rendu d\u2019un \u00e9l\u00e9ment React au sein d\u2019un n\u0153ud du DOM d\u00e9tach\u00e9 du document. <strong>Cette fonction n\u00e9cessite un DOM</strong>. C\u2019est en fait \u00e9quivalent \u00e0\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> domContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> domContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous aurez besoin d\u2019avoir <code class=\"language-javascript\">window</code>, <code class=\"language-javascript\">window.document</code> et <code class=\"language-javascript\">window.document.createElement</code> disponibles globalement <strong>avant</strong> votre import de <code class=\"language-javascript\">React</code>. Dans le cas contraire, React pensera qu\u2019il ne peut acc\u00e9der au DOM, et des m\u00e9thodes telles que <code class=\"language-javascript\">setState</code> ne fonctionneront pas.</p>\n</div>\n\n<h2 id=\"other-utilities\"><a class=\"anchor\" href=\"/react/test-utils#other-utilities\"></a>Autre utilitaires </h2>\n<h3 id=\"simulate\"><a class=\"anchor\" href=\"/react/test-utils#simulate\"></a><code class=\"language-javascript\">Simulate</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">Simulate<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>eventName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>eventData<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Simule l\u2019envoi d\u2019un \u00e9v\u00e9nement sur un n\u0153ud du DOM avec des donn\u00e9es optionnelles dans <code class=\"language-javascript\">eventData</code>.</p>\n<p><code class=\"language-javascript\">Simulate</code> dispose d\u2019une m\u00e9thode pour <a href=\"/react/events#supported-events\">chaque \u00e9v\u00e9nement que React comprend</a>.</p>\n<p><strong>Cliquer sur un \u00e9l\u00e9ment</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;button ref={(node) =&gt; this.button = node}&gt;...&lt;/button&gt;</span>\n<span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Changer la valeur d\u2019un champ de saisie puis presser ENTR\u00c9E.</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;input ref={(node) =&gt; this.textInput = node} /&gt;</span>\n<span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">;</span>\nnode<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'girafe'</span><span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">keyDown</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>key<span class=\"token operator\">:</span> <span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">,</span> keyCode<span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> which<span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous devrez fournir toute les propri\u00e9t\u00e9s d\u00e9di\u00e9es aux \u00e9v\u00e9nements que vous utilisez dans votre composant (par exemple keyCode, which, etc.) car React ne les cr\u00e9era pas pour vous.</p>\n</div>\n</div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/addons-test-utils.md\">Edit this page</a></p></div></article>", "path": "/react/test-utils", "nav": ["/react/events", "/react/test-renderer"]}, {"key": "Moteur de rendu de test", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p><strong>Importation</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">const</span> TestRenderer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES5 avec npm</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/test-renderer#overview\"></a>Aper\u00e7u </h2>\n<p>Ce paquet fournit un moteur de rendu <em>(dans la suite de cet article, pour des raisons de concision, nous emploierons le terme g\u00e9n\u00e9rique anglais renderer sans italiques, NdT)</em> capable de produire un rendu de composants React sous forme d\u2019objets JavaScript nus, sans d\u00e9pendre du DOM ou d\u2019un environnement mobile natif.</p>\n<p>Fondamentalement, ce paquet facilite la cr\u00e9ation d\u2019un instantan\u00e9 de la hi\u00e9rarchie produite par un renderer React DOM ou React Native (similaire \u00e0 un arbre DOM) sans recourir \u00e0 un navigateur ou \u00e0 <a class=\"external-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom</a>.</p>\n<p>Exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Link</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testRenderer <span class=\"token operator\">=</span> TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">page</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.facebook.com/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Facebook</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: 'a',</span>\n<span class=\"token comment\">//   props: { href: 'https://www.facebook.com/' },</span>\n<span class=\"token comment\">//   children: [ 'Facebook' ] }</span></code></pre></div>\n<p>Vous pouvez utiliser la fonctionnalit\u00e9 de test par instantan\u00e9s <em>(snapshot testing, NdT)</em> de Jest pour sauvegarder automatiquement une copie de l\u2019arbre JSON obtenu dans un fichier, puis v\u00e9rifier dans vos tests qu\u2019il n\u2019a pas chang\u00e9\u00a0: <a class=\"external-link\" href=\"https://jestjs.io/docs/en/snapshot-testing\">vous trouverez plus de d\u00e9tails ici</a>.</p>\n<p>Vous pouvez \u00e9galement explorer le r\u00e9sultat pour trouver des n\u0153uds sp\u00e9cifiques et v\u00e9rifier vos attentes les concernant.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SubComponent</span></span> <span class=\"token attr-name\">foo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Salut</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">SubComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sub<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Sous-Composant</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testRenderer <span class=\"token operator\">=</span> TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> testInstance <span class=\"token operator\">=</span> testRenderer<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByType</span><span class=\"token punctuation\">(</span>SubComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>className<span class=\"token operator\">:</span> <span class=\"token string\">\"sub\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Sous-Composant'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"testrenderer\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderer\"></a>TestRenderer </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testrenderercreate\"><code class=\"language-javascript\">TestRenderer.create()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendereract\"><code class=\"language-javascript\">TestRenderer.act()</code></a></li>\n</ul>\n<h3 id=\"testrenderer-instance\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderer-instance\"></a>Instance de <code class=\"language-javascript\">TestRenderer</code> </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testrenderertojson\"><code class=\"language-javascript\">testRenderer.toJSON()</code></a></li>\n<li><a href=\"/react/test-renderer#testrenderertotree\"><code class=\"language-javascript\">testRenderer.toTree()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererupdate\"><code class=\"language-javascript\">testRenderer.update()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererunmount\"><code class=\"language-javascript\">testRenderer.unmount()</code></a></li>\n<li><a href=\"/react/test-renderer#testrenderergetinstance\"><code class=\"language-javascript\">testRenderer.getInstance()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererroot\"><code class=\"language-javascript\">testRenderer.root</code></a></li>\n</ul>\n<h3 id=\"testinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testinstance\"></a>TestInstance </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testinstancefind\"><code class=\"language-javascript\">testInstance.find()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindbytype\"><code class=\"language-javascript\">testInstance.findByType()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindbyprops\"><code class=\"language-javascript\">testInstance.findByProps()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindall\"><code class=\"language-javascript\">testInstance.findAll()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindallbytype\"><code class=\"language-javascript\">testInstance.findAllByType()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindallbyprops\"><code class=\"language-javascript\">testInstance.findAllByProps()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceinstance\"><code class=\"language-javascript\">testInstance.instance</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancetype\"><code class=\"language-javascript\">testInstance.type</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceprops\"><code class=\"language-javascript\">testInstance.props</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceparent\"><code class=\"language-javascript\">testInstance.parent</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancechildren\"><code class=\"language-javascript\">testInstance.children</code></a></li>\n</ul>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/test-renderer#reference\"></a>R\u00e9f\u00e9rence de l\u2019API </h2>\n<h3 id=\"testrenderercreate\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderercreate\"></a><code class=\"language-javascript\">TestRenderer.create()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cr\u00e9e une instance de <code class=\"language-javascript\">TestRenderer</code> avec l\u2019\u00e9l\u00e9ment React pass\u00e9 en argument. \u00c7a n\u2019utilise pas un v\u00e9ritable DOM, mais \u00e7a ne l\u2019emp\u00eache pas de produire l\u2019arbre int\u00e9gral des composants en m\u00e9moire pour pouvoir v\u00e9rifier vos attentes dessus. Renvoie une <a href=\"/react/test-renderer#testrenderer-instance\">instance de TestRenderer</a>.</p>\n<h3 id=\"testrendereract\"><a class=\"anchor\" href=\"/react/test-renderer#testrendereract\"></a><code class=\"language-javascript\">TestRenderer.act()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">act</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>De la m\u00eame mani\u00e8re que l\u2019<a href=\"/react/test-utils#act\">utilitaire <code class=\"language-javascript\">act()</code> de <code class=\"language-javascript\">react-dom/test-utils</code></a>, <code class=\"language-javascript\">TestRenderer.act</code> pr\u00e9pare un composant permettant la v\u00e9rification d\u2019attentes. Utilisez cette version de <code class=\"language-javascript\">act()</code> pour englober les appels \u00e0 <code class=\"language-javascript\">TestRenderer.create</code> et <code class=\"language-javascript\">testRenderer.update</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>create<span class=\"token punctuation\">,</span> act<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.js'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Le composant test\u00e9</span>\n\n<span class=\"token comment\">// Fait le rendu du component</span>\n<span class=\"token keyword\">let</span> root<span class=\"token punctuation\">;</span> \n<span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  root <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Exprime des attentes sur la racine</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Met \u00e0 jour avec des props diff\u00e9rentes</span>\n<span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Exprime des attentes sur la racine</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"testrenderertojson\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderertojson\"></a><code class=\"language-javascript\">testRenderer.toJSON()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie un objet repr\u00e9sentant l\u2019arbre obtenu. Cet arbre contient uniquement les n\u0153uds sp\u00e9cifiques \u00e0 la plateforme comme <code class=\"language-javascript\">&lt;div&gt;</code> ou <code class=\"language-javascript\">&lt;View&gt;</code> avec leur props mais ne contient aucun composant \u00e9crit par l\u2019utilisateur. C\u2019est pratique pour le <a class=\"external-link\" href=\"http://facebook.github.io/jest/docs/en/snapshot-testing.html#snapshot-testing-with-jest\">test par instantan\u00e9s</a>.</p>\n<h3 id=\"testrenderertotree\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderertotree\"></a><code class=\"language-javascript\">testRenderer.toTree()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie un objet repr\u00e9sentant l\u2019arbre obtenu. Contrairement \u00e0 <code class=\"language-javascript\">toJSON()</code>, la repr\u00e9sentation y est plus d\u00e9taill\u00e9e et contient les composants \u00e9crits par l\u2019utilisateur. Vous n\u2019aurez probablement pas besoin de cette m\u00e9thode \u00e0 moins que vous n\u2019\u00e9criviez votre propre biblioth\u00e8que de v\u00e9rification d\u2019attentes construite au-dessus du renderer de test.</p>\n<h3 id=\"testrendererupdate\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererupdate\"></a><code class=\"language-javascript\">testRenderer.update()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Effectue \u00e0 nouveau le rendu de l\u2019arbre en m\u00e9moire, avec un nouvel \u00e9l\u00e9ment racine. \u00c7a simule une mise \u00e0 jour de l\u2019arbre React \u00e0 la racine. Si le nouvel \u00e9l\u00e9ment a le m\u00eame type et la m\u00eame cl\u00e9 que l\u2019\u00e9l\u00e9ment pr\u00e9c\u00e9dent, l\u2019arbre sera mis \u00e0 jour\u00a0; dans le cas contraire, un nouvel arbre sera re-mont\u00e9.</p>\n<h3 id=\"testrendererunmount\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererunmount\"></a><code class=\"language-javascript\">testRenderer.unmount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>D\u00e9monte l\u2019arbre en m\u00e9moire, en d\u00e9clenchant les \u00e9v\u00e9nements de cycle de vie appropri\u00e9s.</p>\n<h3 id=\"testrenderergetinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderergetinstance\"></a><code class=\"language-javascript\">testRenderer.getInstance()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Renvoie l\u2019instance correspondant \u00e0 l\u2019\u00e9l\u00e9ment racine, s\u2019il est disponible. \u00c7a ne marchera pas si l\u2019\u00e9l\u00e9ment racine est une fonction composant car celles-ci n\u2019ont pas d\u2019instance.</p>\n<h3 id=\"testrendererroot\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererroot\"></a><code class=\"language-javascript\">testRenderer.root</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span>root</code></pre></div>\n<p>Renvoie l\u2019objet \u00ab\u00a0instance de test\u00a0\u00bb racine, qui est utile pour faire des v\u00e9rifications d\u2019attentes \u00e0 propos de n\u0153uds sp\u00e9cifiques dans l\u2019arbre. Vous pouvez l\u2019utiliser pour trouver d\u2019autres \u00ab\u00a0instances de test\u00a0\u00bb pr\u00e9sentes plus profond dans l\u2019arbre.</p>\n<h3 id=\"testinstancefind\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefind\"></a><code class=\"language-javascript\">testInstance.find()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve une unique \u00ab\u00a0instance de test\u00a0\u00bb descendante pour laquelle <code class=\"language-javascript\">test(testInstance)</code> renvoie <code class=\"language-javascript\">true</code>. Si <code class=\"language-javascript\">test(testInstance)</code> ne renvoie pas <code class=\"language-javascript\">true</code> pour exactement une \u00ab\u00a0instance de test\u00a0\u00bb, une erreur est lev\u00e9e.</p>\n<h3 id=\"testinstancefindbytype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindbytype\"></a><code class=\"language-javascript\">testInstance.findByType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve une unique \u00ab\u00a0instance de test\u00a0\u00bb avec le <code class=\"language-javascript\">type</code> donn\u00e9. Si il n\u2019y a pas exactement une \u00ab\u00a0instance de test\u00a0\u00bb avec le <code class=\"language-javascript\">type</code> donn\u00e9, une erreur est lev\u00e9e.</p>\n<h3 id=\"testinstancefindbyprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindbyprops\"></a><code class=\"language-javascript\">testInstance.findByProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve une unique \u00ab\u00a0instance de test\u00a0\u00bb avec les <code class=\"language-javascript\">props</code> donn\u00e9es. Si il n\u2019y a pas exactement une \u00ab\u00a0instance de test\u00a0\u00bb avec les <code class=\"language-javascript\">props</code> donn\u00e9es, une erreur est lev\u00e9e.</p>\n<h3 id=\"testinstancefindall\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindall\"></a><code class=\"language-javascript\">testInstance.findAll()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve toutes les \u00ab\u00a0instances de test\u00a0\u00bb descendantes pour lesquelles <code class=\"language-javascript\">test(testInstance)</code> renvoie <code class=\"language-javascript\">true</code>.</p>\n<h3 id=\"testinstancefindallbytype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindallbytype\"></a><code class=\"language-javascript\">testInstance.findAllByType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve toutes les \u00ab\u00a0instances de test\u00a0\u00bb descendantes avec le <code class=\"language-javascript\">type</code> donn\u00e9.</p>\n<h3 id=\"testinstancefindallbyprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindallbyprops\"></a><code class=\"language-javascript\">testInstance.findAllByProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Trouve toutes les \u00ab\u00a0instances de test\u00a0\u00bb descendantes avec les <code class=\"language-javascript\">props</code> donn\u00e9es.</p>\n<h3 id=\"testinstanceinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceinstance\"></a><code class=\"language-javascript\">testInstance.instance</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>instance</code></pre></div>\n<p>L\u2019instance de composant correspondant \u00e0 cette \u00ab\u00a0instance de test\u00a0\u00bb. \u00c7a n\u2019est disponible que pour les composants \u00e0 base de classe, vu que les fonctions composants n\u2019ont pas d\u2019instances. \u00c7a correspond \u00e0 la valeur de <code class=\"language-javascript\">this</code> au sein du composant donn\u00e9.</p>\n<h3 id=\"testinstancetype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancetype\"></a><code class=\"language-javascript\">testInstance.type</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>type</code></pre></div>\n<p>Le type de composant correspondant \u00e0 cette \u00ab\u00a0instance de test\u00a0\u00bb. Par exemple, un composant <code class=\"language-javascript\">&lt;Button /&gt;</code> a pour type <code class=\"language-javascript\">Button</code>.</p>\n<h3 id=\"testinstanceprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceprops\"></a><code class=\"language-javascript\">testInstance.props</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>props</code></pre></div>\n<p>Les props correspondant \u00e0 cette \u00ab\u00a0instance de test\u00a0\u00bb. Par exemple, un composant <code class=\"language-javascript\">&lt;Button size=\"small\" /&gt;</code> a comme props <code class=\"language-javascript\">{size: 'small'}</code>.</p>\n<h3 id=\"testinstanceparent\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceparent\"></a><code class=\"language-javascript\">testInstance.parent</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>parent</code></pre></div>\n<p>L\u2019\u00ab\u00a0instance de test\u00a0\u00bb parente de cette \u00ab\u00a0instance de test\u00a0\u00bb.</p>\n<h3 id=\"testinstancechildren\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancechildren\"></a><code class=\"language-javascript\">testInstance.children</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>children</code></pre></div>\n<p>Les \u00ab\u00a0instances de test\u00a0\u00bb enfants de cette \u00ab\u00a0instance de test\u00a0\u00bb.</p>\n<h2 id=\"ideas\"><a class=\"anchor\" href=\"/react/test-renderer#ideas\"></a>Id\u00e9es </h2>\n<p>Vous pouvez passer la fonction <code class=\"language-javascript\">createNodeMock</code> \u00e0 <code class=\"language-javascript\">TestRenderer.create</code> comme option pour cr\u00e9er des simulations  personnalis\u00e9es de refs.\n<code class=\"language-javascript\">createNodeMock</code> accepte l\u2019\u00e9l\u00e9ment courant et doit retourner une imitation de ref.\nC\u2019est utile quand vous testez un composant qui utilise des refs.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> focused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nTestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">createNodeMock</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// simule une fonction focus</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function-variable function\">focus</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            focused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>focused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-test-renderer.md\">Edit this page</a></p></div></article>", "path": "/react/test-renderer", "nav": ["/react/test-utils", "/react/javascript-environment-requirements"]}, {"key": "Pr\u00e9-requis pour l'environnement JS", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React 16 d\u00e9pend des types de collections <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Map\">Map</a> et <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Set\">Set</a>. Si vous devez supporter des navigateurs et des appareils plus anciens, qui ne supportent pas ces objets natifs (par exemple IE &lt; 11) ou dont l\u2019impl\u00e9mentation n\u2019est pas conforme aux standards (par exemple IE 11), vous pouvez envisager d\u2019inclure un polyfill global dans votre application, comme <a class=\"external-link\" href=\"https://github.com/zloirock/core-js\">core-js</a> ou <a class=\"external-link\" href=\"https://babeljs.io/docs/usage/polyfill/\">babel-polyfill</a>.</p>\n<p>L\u2019utilisation d\u2019un polyfill pour supporter React 16 sur les anciens navigateurs internet, gr\u00e2ce \u00e0 core-js, peut ressembler \u00e0 ceci :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">'core-js/es/map'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'core-js/es/set'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>React d\u00e9pend aussi de <code class=\"language-javascript\">requestAnimationFrame</code> (y compris pour les environnements de test).<br/>\nVous pouvez utiliser le paquet <a class=\"external-link\" href=\"https://www.npmjs.com/package/raf\">raf</a> pour \u00e9muler <code class=\"language-javascript\">requestAnimationFrame</code> :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">'raf/polyfill'</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-javascript-environment-requirements.md\">Edit this page</a></p></div></article>", "path": "/react/javascript-environment-requirements", "nav": ["/react/test-renderer", "/react/glossary"]}, {"key": "Glossaire", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h2 id=\"single-page-application\"><a class=\"anchor\" href=\"/react/glossary#single-page-application\"></a>Single-page Application </h2>\n<p>Une <em>single-page application</em> (SPA) est une application qui charge une unique page HTML et toutes les ressources n\u00e9cessaires (telles que du JavaScript et des CSS) requises pour le fonctionnement de l\u2019application.  Aucune interaction sur la page ou les pages ult\u00e9rieures ne n\u00e9cessitera un nouvel aller-retour avec le serveur, ce qui signifie que la page n\u2019a pas besoin d\u2019\u00eatre rafra\u00eechie.</p>\n<p>M\u00eame si vous pouvez construire une SPA avec React, ce n\u2019est pas obligatoire.  React peut aussi \u00eatre utilis\u00e9 pour am\u00e9liorer de petites parties de sites existants en leur apportant une interactivit\u00e9 suppl\u00e9mentaire.  Le code \u00e9crit en React cohabite paisiblement tant avec le balisage produit par le serveur, au moyen de technologies telles que PHP, qu\u2019avec les autres biblioth\u00e8ques c\u00f4t\u00e9 client.  En fait, c\u2019est exactement ainsi que React est utilis\u00e9 chez Facebook.</p>\n<h2 id=\"es6-es2015-es2016-etc\"><a class=\"anchor\" href=\"/react/glossary#es6-es2015-es2016-etc\"></a>ES6, ES2015, ES2016, etc. </h2>\n<p>Ces acronymes font r\u00e9f\u00e9rence aux versions les plus r\u00e9centes du standard <em>ECMAScript Language Specification</em>, dont le langage JavaScript est une impl\u00e9mentation. La version ES6 (\u00e9galement connue sous le nom ES2015) apporte de nombreuses nouveaut\u00e9s par rapport aux versions pr\u00e9c\u00e9dentes, telles que\u00a0: les fonctions fl\u00e9ch\u00e9es, les classes, les gabarits de cha\u00eenes, les d\u00e9clarations <code class=\"language-javascript\">let</code> et <code class=\"language-javascript\">const</code>\u2026  Vous pouvez en apprendre plus sur des versions pr\u00e9cises <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/ECMAScript#Versions\">ici</a>.</p>\n<h2 id=\"compilers\"><a class=\"anchor\" href=\"/react/glossary#compilers\"></a>Compilateurs </h2>\n<p>Un compilateur JavaScript, souvent appel\u00e9 <em>transpileur</em>, prend du code JavaScript, le transforme et renvoie un code JavaScript de format diff\u00e9rent.  Le cas d\u2019usage le plus courant consiste \u00e0 prendre la syntaxe ES6 et \u00e0 la transformer en une syntaxe que les navigateurs plus anciens sont capables d\u2019interpr\u00e9ter. <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> est le compilateur le plus utilis\u00e9 avec React.</p>\n<h2 id=\"bundlers\"><a class=\"anchor\" href=\"/react/glossary#bundlers\"></a>Bundlers </h2>\n<p>Les <em>bundlers</em> prennent du code JavaScript et CSS \u00e9crit sous forme de modules distincts (souvent par centaines), et les combine pour produire un petit nombre de fichiers plus optimis\u00e9s pour les navigateurs.  Parmi les <em>bundlers</em> couramment utilis\u00e9s pour les applications React, on trouve <a class=\"external-link\" href=\"https://webpack.js.org/\">Webpack</a> et <a class=\"external-link\" href=\"http://browserify.org/\">Browserify</a>.</p>\n<h2 id=\"package-managers\"><a class=\"anchor\" href=\"/react/glossary#package-managers\"></a>Gestionnaires de paquets </h2>\n<p>Les gestionnaires de paquets sont des outils qui vous permettent de g\u00e9rer les d\u00e9pendances de votre projet. <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> et <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> sont les deux gestionnaires de paquet couramment utilis\u00e9s pour les applications React. Les deux travaillent en fait avec le m\u00eame r\u00e9f\u00e9rentiel de modules, g\u00e9r\u00e9 par npm.</p>\n<h2 id=\"cdn\"><a class=\"anchor\" href=\"/react/glossary#cdn\"></a>CDN </h2>\n<p>CDN est l\u2019acronyme de <em>Content Delivery Network</em> <em>(r\u00e9seau de distribution de contenu, NdT)</em>.   Les CDN fournissent des contenus statiques mis en cache via un r\u00e9seau de serveurs r\u00e9partis dans le monde entier.</p>\n<h2 id=\"jsx\"><a class=\"anchor\" href=\"/react/glossary#jsx\"></a>JSX </h2>\n<p>JSX est une extension syntaxique de JavaScript.  C\u2019est un peu comme un langage de gestion de gabarit utilisant du balisage, mais il tire parti de toute la puissance de JavaScript.  JSX est compil\u00e9 en appels \u00e0 <code class=\"language-javascript\">React.createElement()</code>, qui renvoient des objets JavaScript nus appel\u00e9s \u00ab\u00a0\u00e9l\u00e9ments React\u00a0\u00bb.  Pour d\u00e9couvrir les bases de JSX <a href=\"/react/introducing-jsx\">consultez cette page de doc</a>, et pour l\u2019explorer plus en profondeur vous avez <a href=\"/react/jsx-in-depth\">cette page-ci</a>.</p>\n<p>React DOM utilise la casse <code class=\"language-javascript\">camelCase</code> comme convention de nommage des propri\u00e9t\u00e9s, au lieu des noms d\u2019attributs HTML. Par exemple, l\u2019attribut <code class=\"language-javascript\">class</code> devient <code class=\"language-javascript\">className</code>, dans la mesure o\u00f9 <code class=\"language-javascript\">class</code> est un mot r\u00e9serv\u00e9 en JavaScript\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Cl\u00e9mentine'</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Je m\u2019appelle </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"elements\"><a class=\"anchor\" href=\"/react/glossary#elements\"></a><a href=\"/react/rendering-elements\">\u00c9l\u00e9ments</a> </h2>\n<p>Les \u00e9l\u00e9ments React sont les blocs \u00e9l\u00e9mentaires de construction d\u2019applications React. On les confond parfois avec le concept plus r\u00e9pandu de \u00ab\u00a0composants\u00a0\u00bb. Un \u00e9l\u00e9ment d\u00e9crit ce que vous voulez voir \u00e0 l\u2019\u00e9cran.  Les \u00e9l\u00e9ments React sont immuables.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Habituellement, les \u00e9l\u00e9ments ne sont pas utilis\u00e9s directement, mais renvoy\u00e9s par les composants.</p>\n<h2 id=\"components\"><a class=\"anchor\" href=\"/react/glossary#components\"></a><a href=\"/react/components-and-props\">Composants</a> </h2>\n<p>Les composants React sont de petits morceaux de code r\u00e9utilisables qui renvoient un \u00e9l\u00e9ment React \u00e0 afficher dans la page.  Dans sa forme la plus simple, un composant React est une b\u00eate fonction JavaScript qui renvoie un \u00e9l\u00e9ment React\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les composants peuvent aussi \u00eatre bas\u00e9s sur une classe ES6\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les composants peuvent \u00eatre scind\u00e9s en blocs fonctionnels distincts, et utilis\u00e9s dans d\u2019autres composants.  Les composants peuvent renvoyer d\u2019autres composants, des tableaux, des cha\u00eenes de caract\u00e8res et des nombres.  Pour d\u00e9cider si une partie de l\u2019UI ferait un bon candidat pour un composant r\u00e9utilisable, il suffit de se demander si elle appara\u00eet plusieurs fois (<code class=\"language-javascript\">Button</code>, <code class=\"language-javascript\">Panel</code>, <code class=\"language-javascript\">Avatar</code>), ou si elle est suffisamment complexe en elle-m\u00eame (<code class=\"language-javascript\">App</code>, <code class=\"language-javascript\">FeedStory</code>, <code class=\"language-javascript\">Comment</code>).  Les noms de composants devraient toujours d\u00e9marrer par une majuscule (<code class=\"language-javascript\">&lt;Wrapper/&gt;</code> <strong>pas</strong> <code class=\"language-javascript\">&lt;wrapper/&gt;</code>). Consultez <a href=\"/react/components-and-props#rendering-a-component\">cette documentation</a> pour de plus amples informations sur le rendu des composants.</p>\n<h3 id=\"props\"><a class=\"anchor\" href=\"/react/glossary#props\"></a><a href=\"/react/components-and-props\"><code class=\"language-javascript\">props</code></a> </h3>\n<p>Les <code class=\"language-javascript\">props</code> sont les entr\u00e9es d\u2019un composant React.  Elles sont pass\u00e9es d\u2019un composant parent \u00e0 un composant enfant.</p>\n<p>Gardez \u00e0 l\u2019esprit que les <code class=\"language-javascript\">props</code> sont en lecture seule.  Elles ne doivent jamais \u00eatre modifi\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Erron\u00e9 !</span>\nprops<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Si vous avez besoin de modifier une valeur en r\u00e9action \u00e0 une saisie utilisateur ou \u00e0 une r\u00e9ponse r\u00e9seau, utilisez plut\u00f4t <code class=\"language-javascript\">state</code>.</p>\n<h3 id=\"propschildren\"><a class=\"anchor\" href=\"/react/glossary#propschildren\"></a><code class=\"language-javascript\">props.children</code> </h3>\n<p><code class=\"language-javascript\">props.children</code> est disponible dans chaque composant. Elle r\u00e9f\u00e9rence le contenu pr\u00e9sent entre les balises ouvrante et fermante du composant.  Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour monde !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Welcome</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Le texte <code class=\"language-javascript\">Bonjour monde\u00a0!</code> est pr\u00e9sent dans la <code class=\"language-javascript\">props.children</code> du composant <code class=\"language-javascript\">Welcome</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour les composants d\u00e9finis par des classes, on utilise <code class=\"language-javascript\">this.props.children</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"state\"><a class=\"anchor\" href=\"/react/glossary#state\"></a><a href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\"><code class=\"language-javascript\">state</code></a> </h3>\n<p>Un composant a besoin d\u2019un <code class=\"language-javascript\">state</code> lorsque des donn\u00e9es qui lui sont associ\u00e9es \u00e9voluent dans le temps.  Par exemple, un composant <code class=\"language-javascript\">Checkbox</code> pourrait avoir besoin d\u2019une donn\u00e9e d\u2019\u00e9tat local <code class=\"language-javascript\">isChecked</code>, et un composant <code class=\"language-javascript\">NewsFeed</code> pourrait vouloir suivre la progression de <code class=\"language-javascript\">fetchedPosts</code> dans son \u00e9tat local.</p>\n<p>La principale diff\u00e9rence entre <code class=\"language-javascript\">state</code> et <code class=\"language-javascript\">props</code>, c\u2019est que les <code class=\"language-javascript\">props</code> sont pass\u00e9es depuis le composant parent, alors que <code class=\"language-javascript\">state</code> est g\u00e9r\u00e9 en interne par le composant lui-m\u00eame.  Un composant ne peut pas changer ses <code class=\"language-javascript\">props</code>, mais il peut changer son <code class=\"language-javascript\">state</code>.</p>\n<p>Pour chaque petite donn\u00e9e qui va changer, un seul composant devrait la \u00ab\u00a0poss\u00e9der\u00a0\u00bb dans son \u00e9tat local.  N\u2019essayez pas de synchroniser les \u00e9tats de plusieurs composants.  Pr\u00e9f\u00e9rez <a href=\"/react/lifting-state-up\">le faire remonter</a> dans leur plus proche anc\u00eatre commun, et faire redescendre l\u2019info via les props aux composants concern\u00e9s.</p>\n<h2 id=\"lifecycle-methods\"><a class=\"anchor\" href=\"/react/glossary#lifecycle-methods\"></a><a href=\"/react/state-and-lifecycle#adding-lifecycle-methods-to-a-class\">M\u00e9thodes de cycle de vie</a> </h2>\n<p>Les m\u00e9thodes de cycle de vie permettent d\u2019impl\u00e9menter des traitements personnalis\u00e9s lors des diff\u00e9rentes phases d\u2019un composant.  Il en existe pour les phases de cr\u00e9ation et d\u2019insertion dans le DOM (<a href=\"/react/react-component#mounting\">montage</a>), de mise \u00e0 jour du composant, et lorsque le composant est d\u00e9mont\u00e9 et retir\u00e9 du DOM.</p>\n<h2 id=\"composants-contr\u00f4l\u00e9s-ou-non-contr\u00f4l\u00e9s\"><a class=\"anchor\" href=\"/react/glossary#composants-contr%C3%B4l%C3%A9s-ou-non-contr%C3%B4l%C3%A9s\"></a><a href=\"/react/forms#controlled-components\">Composants contr\u00f4l\u00e9s</a> ou <a href=\"/react/uncontrolled-components\">non-contr\u00f4l\u00e9s</a></h2>\n<p>React a deux approches pour la gestion des saisies de formulaire.</p>\n<p>Un champ de formulaire dont la valeur est contr\u00f4l\u00e9e par React est appel\u00e9 un <em>composant contr\u00f4l\u00e9</em>.  Quand un utilisateur saisit des donn\u00e9es dans un composant contr\u00f4l\u00e9, un gestionnaire d\u2019\u00e9v\u00e9nements de modification est d\u00e9clench\u00e9 dans votre code, qui d\u00e9cide si la saisie est valide (en r\u00e9-affichant le composant avec la valeur mise \u00e0 jour).  Si vous ne r\u00e9-affichez pas le champ, sa valeur reste inchang\u00e9e.</p>\n<p>Un <em>composant non-contr\u00f4l\u00e9</em> fonctionne comme les champs habituels non g\u00e9r\u00e9s par React.  Quand un utilisateur saisit des donn\u00e9es dans un champ de formulaire (une zone de texte, une liste d\u00e9roulante, etc.) l\u2019information mise \u00e0 jour est refl\u00e9t\u00e9e sans que React ait quoi que ce soit \u00e0 faire.  En revanche, cela signifie aussi que vous ne pouvez pas, \u00e0 la vol\u00e9e, contraindre ou formater les donn\u00e9es saisies.</p>\n<p>Dans la plupart des cas, vous devriez utiliser des champs contr\u00f4l\u00e9s.</p>\n<h2 id=\"keys\"><a class=\"anchor\" href=\"/react/glossary#keys\"></a><a href=\"/react/lists-and-keys\">Cl\u00e9s</a> </h2>\n<p>Une \u00ab\u00a0cl\u00e9\u00a0\u00bb <em>(key)</em> est un attribut sp\u00e9cial que vous devez ajouter quand vous cr\u00e9ez des tableaux d\u2019\u00e9l\u00e9ments.  Les cl\u00e9s aident React \u00e0 identifier quels \u00e9l\u00e9ments ont chang\u00e9, ont \u00e9t\u00e9 ajout\u00e9s ou retir\u00e9s.  Les cl\u00e9s sont \u00e0 placer sur les \u00e9l\u00e9ments du tableau pour leur donner une identit\u00e9 stable.</p>\n<p>Les cl\u00e9s doivent \u00eatre uniques au sein du tableau, mais n\u2019ont pas besoin de l\u2019\u00eatre pour toute l\u2019application, ou m\u00eame au sein du composant.</p>\n<p>N\u2019utilisez pas quelque chose comme <code class=\"language-javascript\">Math.random()</code> pour vos cl\u00e9s.  Il est critique que les cl\u00e9s aient une \u00ab\u00a0identit\u00e9 stable\u00a0\u00bb d\u2019un rendu \u00e0 l\u2019autre, pour que React puisse d\u00e9tecter les ajouts, suppressions ou r\u00e9-ordonnancements.  Dans l\u2019id\u00e9al, les cl\u00e9s devraient correspondre \u00e0 des identifiants stables issus de vos donn\u00e9es, comme <code class=\"language-javascript\">post.id</code>.</p>\n<h2 id=\"refs\"><a class=\"anchor\" href=\"/react/glossary#refs\"></a><a href=\"/react/refs-and-the-dom\">Refs</a> </h2>\n<p>React propose un attribut sp\u00e9cial que vous pouvez utiliser pour n\u2019importe quel composant.  L\u2019attribut <code class=\"language-javascript\">ref</code> peut \u00eatre soit un objet cr\u00e9\u00e9 par la <a href=\"/react/react-api#reactcreateref\">fonction <code class=\"language-javascript\">React.createRef()</code></a>, soit une fonction de rappel, soit encore une cha\u00eene (mais cette derni\u00e8re forme est d\u00e9pr\u00e9ci\u00e9e). Quand l\u2019attribut <code class=\"language-javascript\">ref</code> est une fonction de rappel, celle-ci re\u00e7oit comme argument l\u2019\u00e9l\u00e9ment du DOM ou l\u2019instance de classe sous-jacents (suivant le type de l\u2019\u00e9l\u00e9ment).  \u00c7a vous permet d\u2019obtenir un acc\u00e8s direct \u00e0 l\u2019\u00e9l\u00e9ment du DOM ou \u00e0 l\u2019instance du composant.</p>\n<p>N\u2019abusez pas des refs.  Si vous vous retrouvez \u00e0 souvent recourir \u00e0 des refs pour \u00ab\u00a0faire que \u00e7a marche\u00a0\u00bb, vous avez probablement besoin de r\u00e9viser le <a href=\"/react/lifting-state-up\">flux de donn\u00e9es unidirectionnel</a> de React.</p>\n<h2 id=\"events\"><a class=\"anchor\" href=\"/react/glossary#events\"></a><a href=\"/react/handling-events\">\u00c9v\u00e9nements</a> </h2>\n<p>La gestion des \u00e9v\u00e9nements dans React pr\u00e9sente quelques diff\u00e9rences de syntaxe dans le balisage\u00a0:</p>\n<ul>\n<li>Les gestionnaires d\u2019\u00e9v\u00e9nements React sont nomm\u00e9s en <code class=\"language-javascript\">casseCamel</code>, plut\u00f4t qu\u2019en minuscules.</li>\n<li>En JSX, on passe une fonction comme gestionnaire, pas une cha\u00eene de caract\u00e8res.</li>\n</ul>\n<h2 id=\"reconciliation\"><a class=\"anchor\" href=\"/react/glossary#reconciliation\"></a><a href=\"/react/reconciliation\">R\u00e9conciliation</a> </h2>\n<p>Quand les props ou l\u2019\u00e9tat local d\u2019un composant changent, React d\u00e9termine si une mise \u00e0 jour effective du DOM est n\u00e9cessaire en comparant les \u00e9l\u00e9ments fra\u00eechement renvoy\u00e9s et ceux de la passe pr\u00e9c\u00e9dente.  Lorsqu\u2019ils ne sont pas \u00e9gaux, React met \u00e0 jour le DOM.  Ce processus est appel\u00e9 \u00ab\u00a0r\u00e9conciliation\u00a0\u00bb.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/reference-glossary.md\">Edit this page</a></p></div></article>", "path": "/react/glossary", "nav": ["/react/javascript-environment-requirements", "/react/hooks-intro"]}]}, {"key": "Hooks", "values": [{"key": "1. Introduction aux Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont arriv\u00e9s avec React 16.8. Ils vous permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire une classe.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9clare une nouvelle variable d'\u00e9tat, qu\u2019on va appeler \u00ab count \u00bb</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cette nouvelle fonction <code class=\"language-javascript\">useState</code> est le premier \u00ab\u00a0Hook\u00a0\u00bb que nous allons explorer, mais cet exemple est juste un petit aper\u00e7u. Ne vous inqui\u00e9tez pas si vous n\u2019y comprenez rien pour le moment, \u00e7a va venir vite\u00a0!</p>\n<p><strong>Vous pouvez commencer \u00e0 apprendre les Hooks <a href=\"/react/hooks-overview\">\u00e0 la page suivante</a>.</strong> Dans celle-ci, nous vous expliquons pourquoi nous avons ajout\u00e9 les Hooks \u00e0 React et comment ils vous aideront \u00e0 \u00e9crire des applications g\u00e9niales.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les Hooks sont apparus dans React 16.8.0. Lors de la mise \u00e0 jour de React, n\u2019oubliez pas de mettre \u00e0 jour tous les modules, dont React DOM.</p>\n<p>React Native prend en charge les Hooks depuis <a class=\"external-link\" href=\"https://react-native.dev/blog/2019/03/12/releasing-react-native-059\">sa version 0.59</a>.</p>\n</div>\n<h2 id=\"video-introduction\"><a class=\"anchor\" href=\"/react/hooks-intro#video-introduction\"></a>Vid\u00e9o de pr\u00e9sentation </h2>\n<p>Lors de la React Conf 2018, Sophie Alpert et Dan Abramov ont pr\u00e9sent\u00e9 les Hooks, suivis de Ryan Florence qui a montr\u00e9 comment refactoriser une application pour les utiliser. Regardez la vid\u00e9o ici\u00a0:</p>\n<br/>\n<a class=\"external-link\" href=\"//www.youtube.com/embed/dpw9EHDh2bM\">link</a>\n<h2 id=\"no-breaking-changes\"><a class=\"anchor\" href=\"/react/hooks-intro#no-breaking-changes\"></a>Pas de rupture de compatibilit\u00e9 </h2>\n<p>Avant de continuer, remarquez bien que les hooks sont\u00a0:</p>\n<ul>\n<li><strong>Compl\u00e8tement optionnels.</strong> Vous pouvez essayer les Hooks dans quelques composants sans r\u00e9\u00e9crire le code existant. Mais vous n\u2019avez pas \u00e0 apprendre et utiliser les Hooks d\u00e8s maintenant si vous ne le souhaitez pas.</li>\n<li><strong>100% r\u00e9tro-compatibles.</strong> Les Hooks pr\u00e9servent la compatibilit\u00e9 ascendante.</li>\n<li><strong>Disponibles maintenant.</strong> Les Hooks sont disponibles depuis la version 16.8.0.</li>\n</ul>\n<p><strong>Les classes en React ne sont pas menac\u00e9es.</strong> Vous pouvez en apprendre davantage sur la strat\u00e9gie d\u2019adoption progressive des Hooks <a href=\"/react/hooks-intro#gradual-adoption-strategy\">en bas de cette page</a>.</p>\n<p><strong>Les Hooks n\u2019invalident pas vos connaissances des concepts de React.</strong> Les Hooks fournissent plut\u00f4t une API plus directe pour les concepts React que vous connaissez d\u00e9j\u00e0\u00a0: props, \u00e9tat local, contexte, refs et cycle de vie. Comme nous le verrons plus tard, les Hooks offrent \u00e9galement un nouveau moyen puissant de les combiner.</p>\n<p><strong>Si vous voulez juste commencer \u00e0 apprendre les Hooks, n\u2019h\u00e9sitez pas \u00e0 <a href=\"/react/hooks-overview\">aller directement \u00e0 la page suivante\u00a0!</a></strong> Vous pouvez \u00e9galement continuer \u00e0 lire cette page pour en apprendre davantage sur les raisons pour lesquelles nous ajoutons les Hooks et sur la fa\u00e7on dont nous allons commencer \u00e0 les utiliser sans r\u00e9\u00e9crire nos applications.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/hooks-intro#motivation\"></a>Raisons </h2>\n<p>Les Hooks r\u00e9solvent une grande vari\u00e9t\u00e9 de probl\u00e8mes apparemment sans rapports en React, que nous avons rencontr\u00e9s pendant cinq ans d\u2019\u00e9criture et de maintenance de dizaines de milliers de composants. Que vous appreniez React, l\u2019utilisiez quotidiennement ou pr\u00e9f\u00e9riez une biblioth\u00e8que diff\u00e9rente avec un mod\u00e8le de composants similaire, vous pourriez reconna\u00eetre certains de ces probl\u00e8mes.</p>\n<h3 id=\"its-hard-to-reuse-stateful-logic-between-components\"><a class=\"anchor\" href=\"/react/hooks-intro#its-hard-to-reuse-stateful-logic-between-components\"></a>Il est difficile de r\u00e9utiliser la logique \u00e0 \u00e9tat entre les composants </h3>\n<p>React n\u2019offre aucun moyen \u00ab\u00a0d\u2019attacher\u00a0\u00bb un comportement r\u00e9utilisable \u00e0 un composant (par exemple, le connecter \u00e0 un \u00e9tat applicatif). Si vous utilisez d\u00e9j\u00e0 React depuis quelques temps, vous avez peut-\u00eatre d\u00e9j\u00e0 rencontr\u00e9 les <a href=\"/react/render-props\">props de rendu</a> et les <a href=\"/react/higher-order-components\">composants d\u2019ordre sup\u00e9rieur</a> qui tentent d\u2019apporter une solution. Mais ces approches exigent la restructuration de vos composants lorsque vous les utilisez, ce qui rend le code plus lourd et difficile \u00e0 maintenir.</p>\n<p>Si vous examinez une application React typique dans les React DevTools, vous verrez un v\u00e9ritable \u00ab\u00a0enfer d\u2019enrobage\u00a0\u00bb de composants perdus dans des couches de fournisseurs et consommateurs de contexte, composants d\u2019ordre sup\u00e9rieur, props de rendu et autres abstractions. On pourrait <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools/pull/503\">les filtrer dans les DevTools</a>, mais ils sont symptomatiques d\u2019un probl\u00e8me plus profond\u00a0: React a besoin d\u2019une meilleure primitive pour la r\u00e9utilisation des logiques \u00e0 \u00e9tat.</p>\n<p>Avec les Hooks, vous pouvez extraire la logique \u00e0 \u00e9tat d\u2019un composant pour la r\u00e9utiliser et la tester de fa\u00e7on ind\u00e9pendante. <strong>Les Hooks vous permettent de r\u00e9utiliser de la logique \u00e0 \u00e9tat sans modifier la hi\u00e9rarchie de vos composants.</strong> \u00c7a facilite le partage des Hooks entre plusieurs composants, voire avec la communaut\u00e9.</p>\n<p>Nous parlerons de \u00e7a plus en d\u00e9tail dans <a href=\"/react/hooks-custom\">Construire vos propres Hooks</a>.</p>\n<h3 id=\"complex-components-become-hard-to-understand\"><a class=\"anchor\" href=\"/react/hooks-intro#complex-components-become-hard-to-understand\"></a>Les composants complexes deviennent difficiles \u00e0 comprendre </h3>\n<p>Nous avons souvent d\u00fb maintenir des composants qui \u00e9taient simples au d\u00e9part, pour devenir d\u2019ing\u00e9rables ramassis de logiques \u00e0 \u00e9tat et d\u2019effets de bord. Chaque m\u00e9thode de cycle de vie contient un m\u00e9lange de logiques sans aucun rapport. Par exemple, des composants peuvent charger des donn\u00e9es dans les m\u00e9thodes <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>. Toutefois, cette m\u00eame m\u00e9thode <code class=\"language-javascript\">componentDidMount</code> pourrait contenir d\u2019autres logiques d\u00e9di\u00e9es \u00e0 la configuration d\u2019\u00e9couteurs d\u2019\u00e9v\u00e9nements, qui seront \u00e0 leur tour nettoy\u00e9s dans la m\u00e9thode <code class=\"language-javascript\">componentWillUnmount</code>.</p>\n<p>Le code mutuellement li\u00e9 dont les \u00e9volutions doivent rester coh\u00e9rentes est divis\u00e9 en plusieurs parties, alors que du code sans rapport finit par \u00eatre combin\u00e9 en une seule m\u00e9thode. \u00c7a ouvre grand la porte \u00e0 l\u2019introduction de bugs et incoh\u00e9rences.</p>\n<p>Il est fr\u00e9quemment impossible de d\u00e9couper ces composants en d\u2019autres plus petits, car la logique \u00e0 \u00e9tat est \u00e9parpill\u00e9e. Ils sont \u00e9galement difficiles \u00e0 tester. C\u2019est la raison pour laquelle de nombreux utilisateurs de React pr\u00e9f\u00e8rent l\u2019associer \u00e0 une biblioth\u00e8que externe de gestion d\u2019\u00e9tat applicatif. Toutefois, \u00e7a rajoute souvent encore davantage d\u2019abstraction et vous oblige \u00e0 jouer entre les fichiers, ce qui complexifie la r\u00e9utilisation de ces composants.</p>\n<p>Pour mettre un terme \u00e0 ces soucis, <strong>les Hooks vous permettent de d\u00e9couper un composant en petites fonctions bas\u00e9es sur les parties qui sont intrins\u00e8quement li\u00e9es (comme la configuration d\u2019un abonnement ou le chargement de donn\u00e9es)</strong>, plut\u00f4t que de forcer leur d\u00e9coupe sur base des m\u00e9thodes de cycle de vie. Il est aussi possible de g\u00e9rer l\u2019\u00e9tat local d\u2019un composant avec un r\u00e9ducteur, pour le rendre plus pr\u00e9visible.</p>\n<p>Nous verrons tout \u00e7a plus en d\u00e9tail dans <a href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\">Utiliser le Hook d\u2019effet</a>.</p>\n<h3 id=\"classes-confuse-both-people-and-machines\"><a class=\"anchor\" href=\"/react/hooks-intro#classes-confuse-both-people-and-machines\"></a>Les classes sont d\u00e9routantes pour les gens comme pour les machines </h3>\n<p>En plus de rendre plus difficiles la r\u00e9utilisation et l\u2019organisation du code, nous avons remarqu\u00e9 que les classes peuvent constituer une barri\u00e8re significative \u00e0 l\u2019apprentissage de React. Vous devez comprendre comment <code class=\"language-javascript\">this</code> fonctionne en JavaScript, d\u2019une fa\u00e7on tr\u00e8s diff\u00e9rente de la plupart des langages. Vous devez vous souvenir de lier les gestionnaires d\u2019\u00e9v\u00e9nements.  Sans certaines <a class=\"external-link\" href=\"https://babeljs.io/docs/en/babel-plugin-transform-class-properties/\">propositions de syntaxes</a> encore instables, le code est tr\u00e8s verbeux. Les gens peuvent parfaitement comprendre les props, l\u2019\u00e9tat local, et le flux de donn\u00e9es descendant mais lutter n\u00e9anmoins avec les classes. La distinction entre fonctions composants et composants \u00e0 base de classes, ainsi que les situations o\u00f9 leur usage respectif est appropri\u00e9, conduisent \u00e0 des d\u00e9saccords m\u00eame entre d\u00e9veloppeurs React exp\u00e9riment\u00e9s.</p>\n<p>En outre, React est sorti il y a environ cinq ans, et nous voulons nous assurer qu\u2019il reste pertinent pour les cinq prochaines ann\u00e9es. Comme <a class=\"external-link\" href=\"https://svelte.dev/\">Svelte</a>, <a class=\"external-link\" href=\"https://angular.io/\">Angular</a>, <a class=\"external-link\" href=\"https://glimmerjs.com/\">Glimmer</a>, et d\u2019autres l\u2019ont montr\u00e9, la <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Compilation_anticip%C3%A9e\">compilation anticip\u00e9e</a> de composants rec\u00e8le un fort potentiel, surtout si elle ne se limite pas aux gabarits. R\u00e9cemment, nous avons exp\u00e9riment\u00e9 autour du <em><a class=\"external-link\" href=\"https://github.com/facebook/react/issues/7323\">component folding</a></em> en utilisant <a class=\"external-link\" href=\"https://prepack.io/\">Prepack</a>, et les premiers r\u00e9sultats sont encourageants. Toutefois, nous avons constat\u00e9 que les composants \u00e0 base de classes peuvent encourager des approches involontaires qui emp\u00eachent de telles optimisations.  Les classes pr\u00e9sentent aussi des probl\u00e8mes pour l\u2019outillage actuel. Par exemple, les classes ne sont pas efficacement minifi\u00e9es, et elles rendent le rechargement \u00e0 chaud peu fiable. Nous voulons pr\u00e9senter une API qui permet au code de rester plus ais\u00e9ment optimisable.</p>\n<p>Pour r\u00e9soudre ces probl\u00e8mes, <strong>les Hooks nous permettent d\u2019utiliser davantage de fonctionnalit\u00e9s de React sans recourir aux classes.</strong> Conceptuellement, les composants React ont toujours \u00e9t\u00e9 proches des fonctions. Les Hooks tirent pleinement parti des fonctions, sans sacrifier l\u2019esprit pratique de React. Les Hooks donnent acc\u00e8s \u00e0 des \u00e9chappatoires imp\u00e9ratives et ne vous obligent pas \u00e0 apprendre des techniques complexes de programmation fonctionnelle ou r\u00e9active..</p>\n<div class=\"blockquote\">\n<strong>Exemples</strong>\n<p><a href=\"/react/hooks-overview\">L\u2019aper\u00e7u des Hooks</a> est un bon moyen de commencer \u00e0 apprendre les Hooks.</p>\n</div>\n<h2 id=\"gradual-adoption-strategy\"><a class=\"anchor\" href=\"/react/hooks-intro#gradual-adoption-strategy\"></a>Strat\u00e9gie d\u2019adoption progressive </h2>\n<div class=\"blockquote\">\n<strong>TL;DR\u00a0: nous n\u2019avons aucune intention de retirer les classes de React.</strong>\n</div>\n<p>Nous savons que les d\u00e9veloppeurs React se concentrent sur la sortie de leurs produits et n\u2019ont pas le temps d\u2019explorer chaque nouvelle API qui sort. Les Hooks sont tout nouveaux, et il serait peut-\u00eatre sage d\u2019attendre que davantage d\u2019exemples et de tutoriels soient disponibles avant d\u2019envisager de les apprendre ou de les adopter.</p>\n<p>Nous comprenons aussi que la barre pour ajouter une nouvelle primitive \u00e0 React est extr\u00eamement haute. Pour les lecteurs curieux, nous avons pr\u00e9par\u00e9 une <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs/pull/68\">RFC d\u00e9taill\u00e9e</a> qui explore plus en d\u00e9tail les raisons derri\u00e8re les Hooks, et fournit une perspective suppl\u00e9mentaire sur certaines d\u00e9cisions de conception et sur des sources d\u2019inspiration.</p>\n<p><strong>Point tr\u00e8s important\u00a0: les Hooks fonctionnent c\u00f4te \u00e0 c\u00f4te avec du code existant, vous pouvez donc les adopter progressivement.</strong> Il n\u2019y a aucune raison pressante de migrer vers les Hooks. Nous conseillons d\u2019\u00e9viter les \u00ab\u00a0r\u00e9\u00e9critures int\u00e9grales\u00a0\u00bb, en particulier pour les composants existants complexes \u00e0 base de classes. Il faut ajuster un peu son mod\u00e8le mental pour commencer \u00e0 \u00ab\u00a0penser en Hooks\u00a0\u00bb. \u00c0 en croire notre exp\u00e9rience, il vaut mieux s\u2019habituer aux Hooks dans de nouveaux composants non-critiques, et s\u2019assurer que toutes les personnes de l\u2019\u00e9quipe sont \u00e0 l\u2019aise avec. Apr\u00e8s avoir essay\u00e9 les Hooks, n\u2019h\u00e9sitez pas \u00e0 <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">nous faire vos retours</a>, qu\u2019ils soient positifs ou n\u00e9gatifs.</p>\n<p>Nous voulons que les Hooks couvrent tout les cas d\u2019usages des classes, mais <strong>nous continuerons \u00e0 prendre en charge les composants \u00e0 base de classes jusqu\u2019\u00e0 nouvel ordre.</strong> Chez Facebook, nous avons des dizaines de milliers de composants \u00e9crit en tant que classes, et nous n\u2019avons absolument pas l\u2019intention de les r\u00e9\u00e9crire. Au lieu de \u00e7a, nous avons commenc\u00e9 \u00e0 utiliser les Hooks dans le nouveau code, c\u00f4te \u00e0 c\u00f4te avec les classes.</p>\n<h2 id=\"frequently-asked-questions\"><a class=\"anchor\" href=\"/react/hooks-intro#frequently-asked-questions\"></a>Questions fr\u00e9quemment pos\u00e9es </h2>\n<p>Nous avons pr\u00e9par\u00e9 une <a href=\"/react/hooks-faq\">FAQ des Hooks</a> qui r\u00e9pond aux questions les plus couramment pos\u00e9es sur les Hooks.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-intro#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Arriv\u00e9\u00b7e sur cette fin de page, vous devriez avoir une id\u00e9e plus claire des probl\u00e8mes r\u00e9solus par les Hooks, mais de nombreux d\u00e9tails restent sans doute obscurs. Ne vous en faites pas\u00a0! <strong>En route pour <a href=\"/react/hooks-overview\">la page suivante</a>, dans laquelle nous commencerons \u00e0 apprendre les Hooks par l\u2019exemple.</strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-intro.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-intro", "nav": ["/react/glossary", "/react/hooks-overview"]}, {"key": "2. Aper\u00e7u des Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>Les Hooks sont <a href=\"/react/hooks-intro#no-breaking-changes\">r\u00e9tro-compatibles</a>. Cette page fournit un survol des Hooks pour les utilisateurs exp\u00e9riment\u00e9s de React. C\u2019est un tour d\u2019horizon rapide. Si vous trouvez le contenu d\u00e9routant, cherchez un panneau jaune comme celui-ci :</p>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Lisez les <a href=\"/react/hooks-intro#motivation\">raisons</a> qui nous ont fait ajouter les Hooks \u00e0 React.</p>\n</div>\n<p><strong>\u2191\u2191\u2191 Chaque section se termine par un panneau jaune comme celui ci.</strong> Ils pointent vers une documentation d\u00e9taill\u00e9e.</p>\n<h2 id=\"state-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#state-hook\"></a>\ud83d\udccc Hook d\u2019\u00e9tat </h2>\n<p>Cet exemple affiche un compteur. Quand vous cliquez sur le bouton, la valeur augmente :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9claration d'une nouvelle variable d'\u00e9tat, que l'on appellera \u201ccount\u201d</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans le code ci-dessus, <code class=\"language-javascript\">useState</code> est un <em>Hook</em> (nous verrons ce que \u00e7a veut dire dans un instant). Nous l\u2019appelons au sein d\u2019une fonction composant pour y ajouter un \u00e9tat local. React va pr\u00e9server cet \u00e9tat d\u2019un affichage \u00e0 l\u2019autre. <code class=\"language-javascript\">useState</code> retourne une paire\u00a0: la valeur de l\u2019\u00e9tat <em>actuel</em> et une fonction qui vous permet de la mettre \u00e0 jour. Vous pouvez appeler cette fonction depuis un gestionnaire d\u2019\u00e9v\u00e9nements, par exemple. Elle est similaire \u00e0 <code class=\"language-javascript\">this.setState</code> dans une classe, \u00e0 ceci pr\u00e8s qu\u2019elle ne fusionne pas l\u2019ancien \u00e9tat et le nouveau. (Nous verrons un exemple de comparaison entre <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">this.state</code> dans <a href=\"/react/hooks-state\">Utiliser le Hook d\u2019\u00e9tat</a>.)</p>\n<p>Le seul argument de <code class=\"language-javascript\">useState</code> est l\u2019\u00e9tat initial. Dans l\u2019exemple pr\u00e9c\u00e9dent, c\u2019est <code class=\"language-javascript\">0</code> puisque notre compteur d\u00e9marre \u00e0 z\u00e9ro. Remarquez que contrairement \u00e0 <code class=\"language-javascript\">this.state</code>, ici l\u2019\u00e9tat n\u2019est pas n\u00e9cessairement un objet, m\u00eame si \u00e7a reste possible. L\u2019argument d\u2019\u00e9tat initial n\u2019est utilis\u00e9 que pour le premier affichage.</p>\n<h4 id=\"declaring-multiple-state-variables\"><a class=\"anchor\" href=\"/react/hooks-overview#declaring-multiple-state-variables\"></a>D\u00e9clarer plusieurs variables d\u2019\u00e9tat </h4>\n<p>Vous pouvez utiliser le Hook d\u2019\u00e9tat plus d\u2019une fois dans un seul composant :</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ExampleWithManyStates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// D\u00e9claration de multiples variables d'\u00e9tat !</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>age<span class=\"token punctuation\">,</span> setAge<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'Apprendre les Hooks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La syntaxe de la <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Affecter_par_d%C3%A9composition#D%C3%A9composition_d'un_tableau\">d\u00e9structuration positionnelle</a> nous permet de donner des noms distincts aux variables d\u2019\u00e9tat que nous d\u00e9clarons en appelant <code class=\"language-javascript\">useState</code>. Ces noms ne font pas partie de l\u2019API <code class=\"language-javascript\">useState</code>. Au lieu de \u00e7a, React suppose que si vous appelez <code class=\"language-javascript\">useState</code> plusieurs fois, vous le faites dans le m\u00eame ordre \u00e0 chaque affichage. Nous reviendrons plus tard sur ce qui fait que \u00e7a fonctionne et les situations o\u00f9 c\u2019est utile.</p>\n<h4 id=\"but-what-is-a-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#but-what-is-a-hook\"></a>Mais qu\u2019est ce qu\u2019un Hook ? </h4>\n<p>Les Hooks sont des fonctions qui permettent de \u00ab\u00a0se brancher\u00a0\u00bb sur la gestion d\u2019\u00e9tat local et de cycle de vie de React depuis des fonctions composants. Les Hooks ne fonctionnent pas dans des classes\u00a0: ils vous permettent d\u2019utiliser React sans classes. (Nous <a href=\"/react/hooks-intro#gradual-adoption-strategy\">ne recommandons pas</a> de r\u00e9-\u00e9crire vos composants existants du jour au lendemain, mais vous pouvez si vous le souhaitez commencer \u00e0 utiliser les Hooks dans vos nouveaux composants.)</p>\n<p>React fournit quelques Hooks pr\u00e9d\u00e9finis comme <code class=\"language-javascript\">useState</code>. Vous pouvez aussi cr\u00e9er vos propres Hooks pour r\u00e9utiliser un comportement \u00e0 \u00e9tat dans diff\u00e9rents composants. Dans un premier temps, nous allons aborder les Hooks pr\u00e9d\u00e9finis.</p>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Vous pouvez en apprendre davantage sur le Hook d\u2019\u00e9tat sur la page d\u00e9di\u00e9e : <a href=\"/react/hooks-state\">Utiliser le Hook d\u2019\u00e9tat</a>.</p>\n</div>\n<h2 id=\"effect-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#effect-hook\"></a>\u26a1\ufe0f Hook d\u2019effet </h2>\n<p>Vous avez surement d\u00e9j\u00e0 r\u00e9alis\u00e9 un chargement de donn\u00e9es distantes, des abonnements ou des modifications manuelles sur le DOM depuis un composant React. Nous appelons ces op\u00e9rations \u00ab effets de bord\u00a0\u00bb (ou effets pour faire court) parce qu\u2019elles peuvent affecter d\u2019autres composants et ne peuvent \u00eatre r\u00e9alis\u00e9es pendant l\u2019affichage.</p>\n<p>Le Hook d\u2019effet, <code class=\"language-javascript\">useEffect</code>, permet aux fonctions composants de g\u00e9rer des effets de bord. Il joue le m\u00eame r\u00f4le que <code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, et <code class=\"language-javascript\">componentWillUnmount</code> dans les classes React, mais au travers d\u2019une API unique. (Nous verrons des exemples comparant <code class=\"language-javascript\">useEffect</code> \u00e0 ces m\u00e9thodes dans <a href=\"/react/hooks-effect\">Utiliser le Hook d\u2019effet </a>.)</p>\n<p>Par exemple, ce composant change le titre du document apr\u00e8s que React a mis \u00e0 jour le DOM\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u00c9quivalent \u00e0 componentDidMount plus componentDidUpdate :</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Mettre \u00e0 jour le titre du document en utilisant l'API du navigateur</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lorsque vous appelez <code class=\"language-javascript\">useEffect</code>, vous dites \u00e0 React de lancer votre fonction d\u2019\u00ab effet \u00bb apr\u00e8s qu\u2019il a mis \u00e0 jour le DOM. Les effets \u00e9tant d\u00e9clar\u00e9s au sein du composant, ils ont acc\u00e8s \u00e0 ses props et son \u00e9tat. Par d\u00e9faut, React ex\u00e9cute les effets apr\u00e8s chaque affichage, <em>y\u00a0compris</em> le premier. (Nous aborderons plus en d\u00e9tails la comparaison avec le cycle de vie des classes dans <a href=\"/react/hooks-effect\">Utiliser le Hook d\u2019effet</a>.)</p>\n<p>Les effets peuvent aussi pr\u00e9ciser comment les \u00ab nettoyer \u00bb en renvoyant une fonction. Par exemple, ce composant utilise un effet pour s\u2019abonner au statut de connexion d\u2019un ami, et se nettoie en r\u00e9siliant l\u2019abonnement\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans cet exemple, React nous d\u00e9sabonnerait de notre <code class=\"language-javascript\">ChatAPI</code> quand le composant est d\u00e9mont\u00e9, mais aussi juste avant de relancer l\u2019effet suite \u00e0 un nouvel affichage. (Le cas \u00e9ch\u00e9ant, vous pouvez <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">dire \u00e0 React de sauter le r\u00e9-abonnement</a> si la <code class=\"language-javascript\">props.friend.id</code> pass\u00e9e \u00e0 <code class=\"language-javascript\">ChatAPI</code> n\u2019a pas chang\u00e9.)</p>\n<p>Tout comme avec <code class=\"language-javascript\">useState</code>, vous pouvez utiliser plus d\u2019un seul effet dans un composant :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatusWithCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Les Hooks vous permettent d\u2019organiser les effets de bord dans un composant en rassemblant leurs parties (telles que l\u2019abonnement et le d\u00e9sabonnement), plut\u00f4t que de vous forcer \u00e0 les r\u00e9partir dans les m\u00e9thodes de cycle de vie.</p>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Vous pouvez en apprendre davantage sur <code class=\"language-javascript\">useEffect</code> sur la page d\u00e9di\u00e9e : <a href=\"/react/hooks-effect\">Utiliser le Hook d\u2019effet</a>.</p>\n</div>\n<h2 id=\"rules-of-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#rules-of-hooks\"></a>\u270c\ufe0f R\u00e8gles des Hooks </h2>\n<p>Les Hooks sont des fonctions JavaScript, mais ils imposent deux r\u00e8gles suppl\u00e9mentaires :</p>\n<ul>\n<li>Appelez les Hooks uniquement <strong>au niveau racine</strong>. N\u2019appelez pas de Hooks \u00e0 l\u2019int\u00e9rieur de boucles, de code conditionnel ou de fonctions imbriqu\u00e9es.</li>\n<li>Appelez les Hooks uniquement <strong>depuis des fonctions composants React</strong>. N\u2019appelez pas les Hooks depuis des fonctions JavaScript classiques. (Il n\u2019y a qu\u2019un seul autre endroit o\u00f9 vous pouvez appeler des Hooks\u00a0: vos propres Hook personnalis\u00e9s. Nous en reparlerons dans un moment.)</li>\n</ul>\n<p>Nous fournissons un <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">plugin ESLint</a> qui assure le respect de ces deux r\u00e8gles. Nous comprenons que ces r\u00e8gles peuvent sembler limitantes ou d\u00e9routantes au premier abord, mais elles sont essentielles pour que les Hooks fonctionnent correctement.</p>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Vous pouvez en apprendre davantage sur ces r\u00e8gles sur la page d\u00e9di\u00e9e : <a href=\"/react/hooks-rules\">R\u00e8gles des Hooks</a>.</p>\n</div>\n<h2 id=\"building-your-own-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#building-your-own-hooks\"></a>\ud83d\udca1 Construire vos propres Hooks </h2>\n<p>Parfois, on veut r\u00e9utiliser la m\u00eame logique \u00e0 \u00e9tat dans plusieurs composants. Traditionnellement, on avait deux solutions r\u00e9pandues \u00e0 ce besoin\u00a0: les <a href=\"/react/higher-order-components\">composants d\u2019ordre sup\u00e9rieur</a> et les <a href=\"/react/render-props\">props de rendu</a>. Les Hooks personnalis\u00e9s vous permettent de faire la m\u00eame chose, mais sans ajouter de composants \u00e0 votre arbre.</p>\n<p>Un peu plus t\u00f4t sur cette page, nous avons pr\u00e9sent\u00e9 un composant <code class=\"language-javascript\">FriendStatus</code> qui appelle les Hooks <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">useEffect</code> pour s\u2018abonner \u00e0 l\u2019\u00e9tat de connexion d\u2019un ami. Disons que l\u2019on veut r\u00e9utiliser cette logique d\u2019abonnement dans un autre composant.</p>\n<p>Tout d\u2019abord, nous allons extraire cette logique dans un Hook personnalis\u00e9 appel\u00e9 <code class=\"language-javascript\">useFriendStatus</code> :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il prend <code class=\"language-javascript\">friendID</code> comme argument, et renvoie l\u2019\u00e9tat de connexion de notre ami.</p>\n<p>Nous pouvons d\u00e9sormais l\u2019utiliser dans les deux composants :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les \u00e9tats locaux de chaque composant sont compl\u00e8tement ind\u00e9pendants. Les Hooks permettent de r\u00e9utiliser la <em>logique \u00e0 \u00e9tat</em>, et non l\u2019\u00e9tat lui-m\u00eame. En fait, chaque <em>appel</em> \u00e0 un Hook a un \u00e9tat compl\u00e8tement isol\u00e9\u00a0; vous pouvez m\u00eame utiliser deux fois le m\u00eame Hook personnalis\u00e9 dans un m\u00eame composant.</p>\n<p>Les Hooks personnalis\u00e9s sont plus une convention qu\u2019une fonctionnalit\u00e9. Si le nom d\u2019une fonction commence par <code class=\"language-javascript\">use</code> et qu\u2019elle appelle un autre Hook, nous dirons que c\u2019est un Hook personnalis\u00e9. La convention de nommage <code class=\"language-javascript\">useSomething</code> permet \u00e0 notre plugin ESLint de d\u00e9tecter les bugs dans un code utilisant les Hooks.</p>\n<p>Vous pouvez \u00e9crire des Hooks personnalis\u00e9s pour g\u00e9rer un large \u00e9ventail de cas d\u2019usage tels que la gestion des formulaires, les animations, les abonnements d\u00e9claratifs, les horloges et probablement de nombreux autres auxquels nous n\u2019avons pas pens\u00e9. Nous avons h\u00e2te de voir quels Hooks personnalis\u00e9s la communaut\u00e9 React va inventer.</p>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Vous pouvez en apprendre davantage sur les Hooks personnalis\u00e9s sur une page d\u00e9di\u00e9e : <a href=\"/react/hooks-custom\">Construire vos propres Hooks</a>.</p>\n</div>\n<h2 id=\"other-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#other-hooks\"></a>\ud83d\udd0c Autres Hooks </h2>\n<p>Il y a quelques Hooks pr\u00e9d\u00e9finis plus rarement utilis\u00e9s qui pourraient vous int\u00e9resser. Par exemple, <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a> vous permet d\u2019utiliser les Contextes de React sans imbrication superflue\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>LocaleContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Et <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> vous permet de g\u00e9rer l\u2019\u00e9tat local de composants complexes avec un r\u00e9ducteur :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Explication d\u00e9taill\u00e9e</strong>\n<p>Vous pouvez en apprendre davantage sur les Hooks pr\u00e9d\u00e9finis sur une page d\u00e9di\u00e9e : <a href=\"/react/hooks-reference\">R\u00e9f\u00e9rence de l\u2019API des Hooks</a>.</p>\n</div>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-overview#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Eh bien, c\u2019\u00e9tait rapide\u00a0! Si quelque chose n\u2019\u00e9tait pas clair ou que vous souhaitez en savoir plus, vous pouvez consulter les prochaines pages, en d\u00e9butant avec la documentation du <a href=\"/react/hooks-state\">Hook d\u2019\u00e9tat</a>.</p>\n<p>Vous pouvez aussi consulter la <a href=\"/react/hooks-reference\">r\u00e9f\u00e9rence de l\u2019API des Hooks</a> et la <a href=\"/react/hooks-faq\">FAQ des Hooks</a>.</p>\n<p>Pour finir, pensez \u00e0 lire <a href=\"/react/hooks-intro\">l\u2019introduction aux Hooks</a>, qui explique <em>pourquoi</em> nous avons ajout\u00e9 les Hooks et comment nous allons commencer \u00e0 les utiliser en parall\u00e8le des classes\u2014sans r\u00e9-\u00e9crire nos applis.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-overview.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-overview", "nav": ["/react/hooks-intro", "/react/hooks-state"]}, {"key": "3. Utiliser le Hook d\u2019\u00e9tat", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>La <a href=\"/react/hooks-intro\">page d\u2019introduction</a> pr\u00e9sentait les Hooks avec cet exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9clare une nouvelle variable d'\u00e9tat, que l'on va appeler \u00ab count \u00bb</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour commencer \u00e0 comprendre comment fonctionnent les Hooks, comparons ce code avec un exemple \u00e9quivalent \u00e0 base de classe.</p>\n<h2 id=\"equivalent-class-example\"><a class=\"anchor\" href=\"/react/hooks-state#equivalent-class-example\"></a>Exemple \u00e9quivalent avec une classe </h2>\n<p>Si vous avez d\u00e9j\u00e0 utilis\u00e9 les classes en React, ce code devrait vous parler\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      count<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          Cliquez ici\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>L\u2019\u00e9tat d\u00e9marre \u00e0 <code class=\"language-javascript\">{ count: 0 }</code>, et nous incr\u00e9mentons <code class=\"language-javascript\">state.count</code> en appelant <code class=\"language-javascript\">this.setState()</code> lorsque l\u2019utilisateur clique sur le bouton. Nous utiliserons des extraits de cette classe dans tout le reste de cette page.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous vous demandez peut-\u00eatre pourquoi nous utilisons un compteur plut\u00f4t qu\u2019un exemple plus r\u00e9aliste. \u00c7a nous permet tout simplement de nous concentrer sur l\u2019API pendant que nous faisons nos premiers pas avec les Hooks.</p>\n</div>\n<h2 id=\"hooks-and-function-components\"><a class=\"anchor\" href=\"/react/hooks-state#hooks-and-function-components\"></a>Hooks et fonctions composants </h2>\n<p>Pour rappel, les fonctions composants en React ressemblent \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Vous pouvez utiliser des Hooks ici !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ou \u00e0 \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Vous pouvez utiliser des Hooks ici !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vous les connaissiez peut-\u00eatre sous le nom de \u00ab\u00a0composants sans \u00e9tat\u00a0\u00bb <em>(Stateless (Functional) Components ou SFC, NdT)</em>. Comme nous avons maintenant la possibilit\u00e9 d\u2019utiliser l\u2019\u00e9tat local React dans ces composants, nous pr\u00e9f\u00e9rerons le terme \u00ab\u00a0fonctions composants\u00a0\u00bb.</p>\n<p>Les Hooks <strong>ne fonctionnent pas</strong> dans les classes. Mais vous pouvez les utiliser pour \u00e9viter d\u2019\u00e9crire des classes.</p>\n<h2 id=\"whats-a-hook\"><a class=\"anchor\" href=\"/react/hooks-state#whats-a-hook\"></a>Un Hook, qu\u2019est-ce que c\u2019est\u00a0? </h2>\n<p>Pour notre nouvel exemple, commen\u00e7ons par importer le Hook <code class=\"language-javascript\">useState</code> de React\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Qu\u2019est-ce qu\u2019un Hook\u00a0?</strong> Un Hook est une fonction qui permet de \u00ab\u00a0se brancher\u00a0\u00bb sur des fonctionnalit\u00e9s React. Par exemple, <code class=\"language-javascript\">useState</code> est un Hook qui permet d\u2019ajouter l\u2019\u00e9tat local React \u00e0 des fonctions composants. Nous en apprendrons plus sur les Hooks par la suite.</p>\n<p><strong>Quand utiliser un Hook\u00a0?</strong> Auparavant, si vous \u00e9criviez une fonction composant et que vous r\u00e9alisiez que vous aviez besoin d\u2019un \u00e9tat local \u00e0 l\u2019int\u00e9rieur, vous deviez la convertir en classe. D\u00e9sormais vous pouvez utiliser un Hook \u00e0 l\u2019int\u00e9rieur de votre fonction composant. Et c\u2019est justement ce que nous allons faire\u00a0!</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Des r\u00e8gles sp\u00e9cifiques existent pour savoir quand utiliser ou ne pas utiliser les Hooks dans un composant. Nous les d\u00e9couvrirons dans les <a href=\"/react/hooks-rules\">R\u00e8gles des Hooks</a>.</p>\n</div>\n<h2 id=\"declaring-a-state-variable\"><a class=\"anchor\" href=\"/react/hooks-state#declaring-a-state-variable\"></a>D\u00e9clarer une variable d\u2019\u00e9tat </h2>\n<p>Dans une classe, on initialise l\u2019\u00e9tat local <code class=\"language-javascript\">count</code> \u00e0 <code class=\"language-javascript\">0</code> en d\u00e9finissant <code class=\"language-javascript\">this.state</code> \u00e0 <code class=\"language-javascript\">{ count: 0 }</code> dans le constructeur\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      count<span class=\"token operator\">:</span> <span class=\"token number\">0</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans une fonction composant, nous ne pouvons pas \u00e9crire ou lire <code class=\"language-javascript\">this.state</code> puisqu\u2019il n\u2019y a pas de <code class=\"language-javascript\">this</code>. Au lieu de \u00e7a, nous appelons directement le Hook <code class=\"language-javascript\">useState</code> dans notre composant\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9clare une nouvelle variable d'\u00e9tat, que nous appellerons \u00ab count \u00bb</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><strong>Appeler <code class=\"language-javascript\">useState</code>, qu\u2019est-ce que \u00e7a fait\u00a0?</strong> \u00c7a d\u00e9clare une \u00ab\u00a0variable d\u2019\u00e9tat\u00a0\u00bb. Notre variable est appel\u00e9e <code class=\"language-javascript\">count</code> mais nous aurions pu l\u2019appeler n\u2019importe comment, par exemple <code class=\"language-javascript\">banane</code>. C\u2019est un moyen de \u00ab\u00a0pr\u00e9server\u00a0\u00bb des valeurs entre diff\u00e9rents appels de fonctions. <code class=\"language-javascript\">useState</code> est une nouvelle fa\u00e7on d\u2019utiliser exactement les m\u00eames possibilit\u00e9s qu\u2019offre <code class=\"language-javascript\">this.state</code> dans une classe. Normalement, les variables \u00ab\u00a0disparaissent\u00a0\u00bb quand la fonction s\u2019ach\u00e8ve mais les variables d\u2019\u00e9tat sont pr\u00e9serv\u00e9es par React.</p>\n<p><strong>Qu\u2019est-ce qu\u2019on passe \u00e0 <code class=\"language-javascript\">useState</code> comme argument\u00a0?</strong> Le seul argument \u00e0 passer au Hook <code class=\"language-javascript\">useState()</code> est l\u2019\u00e9tat initial. Contrairement \u00e0 ce qui se passe dans les classes, l\u2019\u00e9tat local n\u2019est pas obligatoirement un objet. Il peut s\u2019agir d\u2019un nombre ou d\u2019une cha\u00eene de caract\u00e8res si \u00e7a nous suffit. Dans notre exemple, nous voulons simplement le nombre de fois qu\u2019un utilisateur a cliqu\u00e9 sur le bouton, nous passerons donc <code class=\"language-javascript\">0</code> comme \u00e9tat initial pour notre variable. (Si nous voulions stocker deux valeurs diff\u00e9rentes dans l\u2019\u00e9tat, nous appellerions <code class=\"language-javascript\">useState()</code> deux fois.)</p>\n<p><strong>Que renvoie <code class=\"language-javascript\">useState</code>\u00a0?</strong> Elle renvoie une paire de valeurs\u00a0: l\u2019\u00e9tat actuel et une fonction pour le modifier. C\u2019est pourquoi nous \u00e9crivons <code class=\"language-javascript\">const [count, setCount] = useState()</code>. C\u2019est semblable \u00e0 <code class=\"language-javascript\">this.state.count</code> et <code class=\"language-javascript\">this.setState</code> dans une classe, mais ici nous les r\u00e9cup\u00e9rons en m\u00eame temps. Si vous n\u2019\u00eates pas \u00e0 l\u2019aise avec la syntaxe que nous avons employ\u00e9e, nous y reviendrons <a href=\"/react/hooks-state#tip-what-do-square-brackets-mean\">en bas de cette page</a>.</p>\n<p>Maintenant que nous savons ce que fait le Hook <code class=\"language-javascript\">useState</code>, notre exemple devrait commencer \u00e0 \u00eatre plus clair\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// D\u00e9clare une nouvelle variable d'\u00e9tat, que nous appellerons \u00ab count \u00bb</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Nous d\u00e9clarons une variable d\u2018\u00e9tat appel\u00e9e <code class=\"language-javascript\">count</code>, et l\u2019initialisons \u00e0 <code class=\"language-javascript\">0</code>. React se rappellera sa valeur entre deux affichages et fournira la plus r\u00e9cente \u00e0 notre fonction. Si nous voulons modifier la valeur de <code class=\"language-javascript\">count</code>, nous pouvons appeler <code class=\"language-javascript\">setCount</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous vous demandez peut-\u00eatre pourquoi <code class=\"language-javascript\">useState</code> n\u2019est pas plut\u00f4t appel\u00e9e <code class=\"language-javascript\">createState</code>\u00a0?</p>\n<p>En fait, <em>\u201ccreate\u201d</em> ne serait pas tout \u00e0 fait correct puisque l\u2019\u00e9tat n\u2019est cr\u00e9\u00e9 qu\u2019au premier affichage de notre composant. Les fois suivantes, <code class=\"language-javascript\">useState</code> nous renvoie l\u2019\u00e9tat actuel. Autrement, ce ne serait pas un \u00e9tat du tout\u00a0! Il y a aussi une raison pour laquelle les noms des Hooks commencent <em>toujours</em> par <code class=\"language-javascript\">use</code>. Nous d\u00e9couvrirons laquelle plus tard dans les <a href=\"/react/hooks-rules\">R\u00e8gles des Hooks</a>.</p>\n</div>\n<h2 id=\"reading-state\"><a class=\"anchor\" href=\"/react/hooks-state#reading-state\"></a>Lire l\u2019\u00e9tat </h2>\n<p>Quand nous voulons afficher la valeur actuelle de <code class=\"language-javascript\">count</code> dans une classe, nous r\u00e9cup\u00e9rons la valeur de <code class=\"language-javascript\">this.state.count</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Dans une fonction, nous pouvons directement utiliser <code class=\"language-javascript\">count</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h2 id=\"updating-state\"><a class=\"anchor\" href=\"/react/hooks-state#updating-state\"></a>Mettre \u00e0 jour l\u2019\u00e9tat </h2>\n<p>Dans une classe, nous devons appeler <code class=\"language-javascript\">this.setState()</code> pour mettre \u00e0 jour l\u2019\u00e9tat <code class=\"language-javascript\">count</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    Cliquez ici</span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Dans une fonction, nous r\u00e9cup\u00e9rons directement <code class=\"language-javascript\">setCount</code> et <code class=\"language-javascript\">count</code> comme variables, nous n\u2019avons donc pas besoin de <code class=\"language-javascript\">this</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    Cliquez ici</span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h2 id=\"recap\"><a class=\"anchor\" href=\"/react/hooks-state#recap\"></a>En r\u00e9sum\u00e9 </h2>\n<p>Il est maintenant temps de <strong>r\u00e9capituler ce que nous avons appris ligne par ligne</strong> et v\u00e9rifier que nous avons bien compris.</p>\n<!--\n  I'm not proud of this line markup. Please somebody fix this.\n  But if GitHub got away with it for years we can cheat.\n-->\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"> <span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n <span class=\"token number\">3</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\"> <span class=\"token number\">4</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n <span class=\"token number\">6</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n <span class=\"token number\">7</span><span class=\"token operator\">:</span>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"> 8:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\"> 9:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">10:         Cliquez ici</span>\n<span class=\"token plain-text\">11:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">12:      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token number\">13</span><span class=\"token operator\">:</span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">14</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><strong>Ligne 1\u00a0:</strong> nous importons le Hook <code class=\"language-javascript\">useState</code> depuis React. Il nous permet d\u2019utiliser un \u00e9tat local dans une fonction composant.</li>\n<li><strong>Ligne 4\u00a0:</strong> dans le composant <code class=\"language-javascript\">Example</code>, nous d\u00e9clarons une nouvelle variable d\u2019\u00e9tat en appelant le Hook <code class=\"language-javascript\">useState</code>. Il renvoie une paire de valeurs que nous pouvons nommer \u00e0 notre guise. Ici, nous appelons notre variable <code class=\"language-javascript\">count</code> puisqu\u2019elle contient le nombre de clics sur le bouton. Nous l\u2019initialisons \u00e0 z\u00e9ro en passant <code class=\"language-javascript\">0</code> comme seul argument \u00e0 <code class=\"language-javascript\">useState</code>. Le second \u00e9l\u00e9ment renvoy\u00e9 est une fonction. Elle nous permet de modifier la variable <code class=\"language-javascript\">count</code>, nous l\u2019appellerons donc <code class=\"language-javascript\">setCount</code>.</li>\n<li><strong>Ligne 9\u00a0:</strong> quand l\u2019utilisateur clique, nous appelons <code class=\"language-javascript\">setCount</code> avec une nouvelle valeur. React rafra\u00eechira le composant <code class=\"language-javascript\">Example</code> et lui passera la nouvelle valeur de <code class=\"language-javascript\">count</code>.</li>\n</ul>\n<p>\u00c7a fait peut-\u00eatre beaucoup \u00e0 dig\u00e9rer d\u2019un coup. Ne vous pressez pas\u00a0! Si vous vous sentez un peu perdu\u00b7e, jetez un nouveau coup d\u2019\u0153il au code ci-dessus et essayez de le relire du d\u00e9but \u00e0 la fin. Promis, une fois que vous essaierez \u00ab\u00a0d\u2019oublier\u00a0\u00bb la mani\u00e8re dont fonctionne l\u2019\u00e9tat local dans les classes, et que vous regarderez ce code avec un regard neuf, \u00e7a sera plus clair.</p>\n<h3 id=\"tip-what-do-square-brackets-mean\"><a class=\"anchor\" href=\"/react/hooks-state#tip-what-do-square-brackets-mean\"></a>Astuce\u00a0: que signifient les crochets\u00a0? </h3>\n<p>Vous avez peut-\u00eatre remarqu\u00e9 les crochets que nous utilisons lorsque nous d\u00e9clarons une variable d\u2019\u00e9tat\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Les noms utilis\u00e9s dans la partie gauche ne font pas partie de l\u2019API React. Vous pouvez nommer vos variables d\u2019\u00e9tat comme \u00e7a vous chante\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cette syntaxe Javascript est appel\u00e9e <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/Affecter_par_d%C3%A9composition#D%C3%A9composition_d'un_tableau\">\u00ab\u00a0d\u00e9structuration positionnelle\u00a0\u00bb</a>. \u00c7a signifie que nous cr\u00e9ons deux nouvelles variables <code class=\"language-javascript\">fruit</code> et <code class=\"language-javascript\">setFruit</code>, avec <code class=\"language-javascript\">fruit</code> qui re\u00e7oit la premi\u00e8re valeur renvoy\u00e9e par <code class=\"language-javascript\">useState</code>, et <code class=\"language-javascript\">setFruit</code> qui re\u00e7oit la deuxi\u00e8me. C\u2019est \u00e9quivalent au code ci-dessous\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> fruitStateVariable <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Renvoie une paire</span>\n  <span class=\"token keyword\">var</span> fruit <span class=\"token operator\">=</span> fruitStateVariable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Premier \u00e9l\u00e9ment dans une paire</span>\n  <span class=\"token keyword\">var</span> setFruit <span class=\"token operator\">=</span> fruitStateVariable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Deuxi\u00e8me \u00e9l\u00e9ment dans une paire</span></code></pre></div>\n<p>Quand nous d\u00e9clarons une variable d\u2019\u00e9tat avec <code class=\"language-javascript\">useState</code>, \u00e7a renvoie une paire (un tableau avec deux \u00e9l\u00e9ments). Le premier \u00e9l\u00e9ment est la valeur actuelle, et le deuxi\u00e8me est une fonction qui permet de la modifier. Utiliser <code class=\"language-javascript\">[0]</code> et <code class=\"language-javascript\">[1]</code> pour y acc\u00e9der est un peu d\u00e9concertant puisqu\u2019ils ont un sens sp\u00e9cifique. C\u2019est pourquoi nous pr\u00e9f\u00e9rons plut\u00f4t utiliser la d\u00e9structuration positionnelle.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Vous vous demandez peut-\u00eatre comment React sait \u00e0 quel composant <code class=\"language-javascript\">useState</code> fait r\u00e9f\u00e9rence \u00e9tant donn\u00e9 que nous ne lui passons plus rien de similaire \u00e0 <code class=\"language-javascript\">this</code>. Nous r\u00e9pondrons \u00e0 <a href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\">cette question</a> ainsi qu\u2019\u00e0 plein d\u2019autres dans la section FAQ.</p>\n</div>\n<h3 id=\"tip-using-multiple-state-variables\"><a class=\"anchor\" href=\"/react/hooks-state#tip-using-multiple-state-variables\"></a>Astuce\u00a0: utiliser plusieurs variables d\u2019\u00e9tat </h3>\n<p>D\u00e9clarer des variables d\u2019\u00e9tat comme une paire de <code class=\"language-javascript\">[quelquechose, setQuelquechose]</code> est \u00e9galement pratique parce que \u00e7a nous permet de donner des noms <em>diff\u00e9rents</em> \u00e0 des variables d\u2019\u00e9tat diff\u00e9rentes si nous voulons en utiliser plus d\u2019une\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ExampleWithManyStates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// D\u00e9clarer plusieurs variables d'\u00e9tat !</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>age<span class=\"token punctuation\">,</span> setAge<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'Apprendre les Hooks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dans le composant ci-dessus, nous avons <code class=\"language-javascript\">age</code>, <code class=\"language-javascript\">fruit</code>, et <code class=\"language-javascript\">todos</code> comme variables locales, et nous pouvons les modifier ind\u00e9pendamment les unes des autres\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleOrangeClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Similaire \u00e0 this.setState({ fruit: 'orange' })</span>\n    <span class=\"token function\">setFruit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Utiliser plusieurs variables d\u2019\u00e9tat <strong>n\u2019est pas obligatoire</strong>. Les variables d\u2019\u00e9tat peuvent tout \u00e0 fait contenir des objets et des tableaux, vous pouvez donc toujours regrouper des donn\u00e9es ensemble. Cependant, lorsque l\u2019on modifie une variable d\u2019\u00e9tat sa valeur est <em>remplac\u00e9e</em> et non fusionn\u00e9e, contrairement \u00e0 <code class=\"language-javascript\">this.setState</code> dans les classes.</p>\n<p>D\u00e9couvrez les raisons de pr\u00e9f\u00e9rer s\u00e9parer vos variables d\u2019\u00e9tat <a href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\">dans la FAQ</a>.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-state#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Dans cette section, vous avez appris \u00e0 utiliser un des Hooks fournis par React, appel\u00e9 <code class=\"language-javascript\">useState</code>. Nous y ferons parfois r\u00e9f\u00e9rence sous le terme \u00ab\u00a0Hook d\u2019\u00e9tat\u00a0\u00bb. Il nous permet d\u2019ajouter un \u00e9tat local \u00e0 des fonctions composants React\u2014ce qui est une premi\u00e8re\u00a0!</p>\n<p>Nous en avons \u00e9galement appris un peu plus sur la nature des Hooks. Les Hooks sont des fonctions qui nous permettent de \u00ab\u00a0nous\u00a0brancher\u00a0\u00bb sur des fonctionnalit\u00e9s React depuis des fonctions composants. Leur noms commencent toujours par <code class=\"language-javascript\">use</code>, et il y a encore beaucoup de Hooks que nous n\u2019avons pas encore vus\u00a0!</p>\n<p><strong>Continuons maintenant en <a href=\"/react/hooks-effect\">d\u00e9couvrant le prochain Hook\u00a0: <code class=\"language-javascript\">useEffect</code>.</a></strong> Il vous permet de d\u00e9clencher des effets de bord dans les composants, ce qui est similaire aux m\u00e9thodes de cycle de vie dans les classes.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-state.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-state", "nav": ["/react/hooks-overview", "/react/hooks-effect"]}, {"key": "4. Utiliser le Hook d\u2019effet", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>Le <em>Hook d\u2019effet</em> permet l\u2019ex\u00e9cution d\u2019effets de bord dans les fonctions composants\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Similaire \u00e0 componentDidMount et componentDidUpdate :</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Met \u00e0 jour le titre du document via l\u2019API du navigateur</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cet extrait se base sur <a href=\"/react/hooks-state\">l\u2019exemple de compteur pr\u00e9sent\u00e9 \u00e0 la page pr\u00e9c\u00e9dente</a>, avec toutefois une fonctionnalit\u00e9 suppl\u00e9mentaire\u00a0: le titre du document est mis \u00e0 jour avec un message personnalis\u00e9 affichant le nombre de clics.</p>\n<p>Charger des donn\u00e9es depuis un serveur distant, s\u2019abonner \u00e0 quelque chose et modifier manuellement le DOM sont autant d\u2019exemples d\u2019effets de bord. Que vous ayez ou non l\u2019habitude de les appeler \u00ab\u00a0effets de bord\u00a0\u00bb (ou juste \u00ab\u00a0effets\u00a0\u00bb), il est hautement probable que vous les ayez d\u00e9j\u00e0 utilis\u00e9s dans vos composants par le pass\u00e9.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Si vous avez l\u2019habitude des m\u00e9thodes de cycle de vie des classes React, pensez au Hook <code class=\"language-javascript\">useEffect</code> comme \u00e0 une combinaison de <code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, et <code class=\"language-javascript\">componentWillUnmount</code>.</p>\n</div>\n<p>Il existe deux grands types d\u2019effets de bord dans les composants React\u00a0: ceux qui ne n\u00e9cessitent pas de nettoyage, et ceux qui en ont besoin. Examinons cette distinction en d\u00e9tail.</p>\n<h2 id=\"effects-without-cleanup\"><a class=\"anchor\" href=\"/react/hooks-effect#effects-without-cleanup\"></a>Effets sans nettoyage </h2>\n<p>Parfois, nous souhaitons <strong>ex\u00e9cuter du code suppl\u00e9mentaire apr\u00e8s que React a mis \u00e0 jour le DOM</strong>. Les requ\u00eates r\u00e9seau, les modifications manuelles du DOM, et la journalisation sont des exemples courants d\u2019effets qui ne n\u00e9cessitent aucun nettoyage. Cela s\u2019explique par le fait qu\u2019ils peuvent \u00eatre oubli\u00e9s imm\u00e9diatement apr\u00e8s leur ex\u00e9cution. Comparons donc la mani\u00e8re dont les classes et les Hooks nous permettent d\u2019exprimer ce genre d\u2019effets de bord.</p>\n<h3 id=\"example-using-classes\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-classes\"></a>Exemple en utilisant les classes </h3>\n<p>Dans les composants React \u00e0 base de classe, la m\u00e9thode <code class=\"language-javascript\">render</code> ne devrait causer aucun effet de bord par elle-m\u00eame. Ce serait trop t\u00f4t\u00a0: ces effets ne sont utiles qu\u2019<em>apr\u00e8s</em> que React a mis \u00e0 jour le DOM.</p>\n<p>C\u2019est la raison pour laquelle, dans les classes React, nous pla\u00e7ons les effets de bord dans les m\u00e9thodes <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>. En reprenant notre exemple, voici un composant React \u00e0 base de classe impl\u00e9mentant un compteur qui met \u00e0 jour le titre du document juste apr\u00e8s que React a modifi\u00e9 le DOM\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      count<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Cliquez ici</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notez la <strong>duplication de code entre ces deux m\u00e9thodes de cycle de vie du composant.</strong></p>\n<p>En effet, la plupart du temps nous voulons que l\u2019effet de bord soit ex\u00e9cut\u00e9 tant au montage qu\u2019\u00e0 la mise \u00e0 jour du composant. Conceptuellement, nous voulons que l\u2019effet soit ex\u00e9cut\u00e9 \u00e0 chaque affichage, mais les composants React \u00e0 base de classe ne disposent pas d\u2019une telle m\u00e9thode. M\u00eame en d\u00e9pla\u00e7ant l\u2019effet de bord dans une fonction \u00e0 part, on aurait tout de m\u00eame besoin de l\u2019appeler \u00e0 deux endroits distincts.</p>\n<p>Maintenant, voyons comment faire la m\u00eame chose avec le Hook <code class=\"language-javascript\">useEffect</code>.</p>\n<h3 id=\"example-using-hooks\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-hooks\"></a>Exemple en utilisant les Hooks </h3>\n<p>Cet exemple figurait d\u00e9j\u00e0 en haut de page, mais examinons-le de plus pr\u00e8s\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Cliquez ici</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Que fait <code class=\"language-javascript\">useEffect</code>\u00a0?</strong> On utilise ce Hook pour indiquer \u00e0 React que notre composant doit ex\u00e9cuter quelque chose apr\u00e8s chaque affichage. React enregistre la fonction pass\u00e9e en argument (que nous appellerons \u00ab\u00a0effet\u00a0\u00bb), et l\u2019appellera plus tard, apr\u00e8s avoir mis \u00e0 jour le DOM. L\u2019effet ci-dessus met \u00e0 jour le titre du document, mais il pourrait aussi bien charger des donn\u00e9es distantes, ou appeler n\u2019importe quelle autre API imp\u00e9rative.</p>\n<p><strong>Pourquoi <code class=\"language-javascript\">useEffect</code> est-elle invoqu\u00e9e \u00e0 l\u2019int\u00e9rieur d\u2019un composant\u00a0?</strong> Le fait d\u2019appeler <code class=\"language-javascript\">useEffect</code> \u00e0 l\u2019int\u00e9rieur de notre composant nous permet d\u2019acc\u00e9der \u00e0 la variable d\u2019\u00e9tat <code class=\"language-javascript\">count</code> (ou \u00e0 n\u2019importe quelle prop) directement depuis l\u2019effet. Pas besoin d\u2019une API d\u00e9di\u00e9e pour les lire\u00a0: elle est d\u00e9j\u00e0 dans la port\u00e9e de la fonction. Les Hooks profitent pleinement des fermetures lexicales <em>(closures, NdT)</em> de JavaScript au lieu d\u2019introduire de nouvelles API sp\u00e9cifiques \u00e0 React, l\u00e0 o\u00f9 JavaScript propose d\u00e9j\u00e0 une solution.</p>\n<p><strong>Est-ce que <code class=\"language-javascript\">useEffect</code> est appel\u00e9e apr\u00e8s chaque affichage\u00a0?</strong> Oui\u00a0! Elle est ex\u00e9cut\u00e9e par d\u00e9faut apr\u00e8s le premier affichage <em>et</em> apr\u00e8s chaque mise \u00e0 jour. (Nous verrons comment <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">personnaliser et optimiser \u00e7a</a> ult\u00e9rieurement.) Au lieu de penser en termes de \u00ab\u00a0montage\u00a0\u00bb et de \u00ab\u00a0d\u00e9montage\u00a0\u00bb, pensez plut\u00f4t que les effets arrivent tout simplement \u00ab\u00a0apr\u00e8s l\u2019affichage\u00a0\u00bb. React garantit que le DOM a \u00e9t\u00e9 mis \u00e0 jour avant chaque ex\u00e9cution des effets.</p>\n<h3 id=\"detailed-explanation\"><a class=\"anchor\" href=\"/react/hooks-effect#detailed-explanation\"></a>Explication d\u00e9taill\u00e9e </h3>\n<p>\u00c0 pr\u00e9sent que nous en savons davantage sur les effets, ces quelques lignes devraient para\u00eetre plus claires\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous d\u00e9clarons la variable d\u2019\u00e9tat <code class=\"language-javascript\">count</code>, puis indiquons \u00e0 React que nous avons besoin d\u2019utiliser un effet. Nous passons alors une fonction au Hook <code class=\"language-javascript\">useEffect</code>. Cette fonction <em>est</em> notre effet. \u00c0 l\u2019int\u00e9rieur de celui-ci, nous mettons \u00e0 jour le titre du document en utilisant l\u2019API du navigateur <code class=\"language-javascript\">document.title</code>. Il est possible d\u2019y lire la derni\u00e8re valeur de <code class=\"language-javascript\">count</code>, puisqu\u2019elle est accessible depuis la port\u00e9e de notre fonction. Lorsque React affichera notre composant, il se souviendra de notre effet, et l\u2019ex\u00e9cutera apr\u00e8s avoir mis \u00e0 jour le DOM. Ce proc\u00e9d\u00e9 est le m\u00eame \u00e0 chaque affichage, dont le tout premier.</p>\n<p>Les d\u00e9veloppeurs JavaScript exp\u00e9riment\u00e9s remarqueront sans doute que la fonction pass\u00e9e \u00e0 <code class=\"language-javascript\">useEffect</code> sera diff\u00e9rente \u00e0 chaque affichage. C\u2018est voulu, et c\u2019est ce qui nous permet d\u2019acc\u00e9der \u00e0 la valeur de <code class=\"language-javascript\">count</code> depuis l\u2019int\u00e9rieur de l\u2019effet sans nous inqui\u00e9ter de l\u2019obsolescence de notre fonction. \u00c0 chaque nouvel affichage, nous planifions un effet <em>diff\u00e9rent</em>, qui succ\u00e8de au pr\u00e9c\u00e9dent. Dans un sens, les effets font partie int\u00e9grante du r\u00e9sultat du rendu\u00a0: chaque effet \u00ab\u00a0appartient\u00a0\u00bb \u00e0 un rendu particulier. Nous reviendrons plus en d\u00e9tail sur l\u2019utilit\u00e9 d\u2019un tel comportement <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">plus bas</a>.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>\u00c0 l\u2019inverse de <code class=\"language-javascript\">componentDidMount</code> ou de <code class=\"language-javascript\">componentDidUpdate</code>, les effets planifi\u00e9s avec <code class=\"language-javascript\">useEffect</code> ne bloquent en rien la mise \u00e0 jour de l\u2019affichage par le navigateur, ce qui rend votre application plus r\u00e9active. La majorit\u00e9 des effets n\u2019ont pas besoin d\u2019\u00eatre synchrones. Dans les cas plus rares o\u00f9 ils pourraient en avoir besoin (comme mesurer les dimensions d\u2019un \u00e9l\u00e9ment de l\u2019interface), il existe un Hook particulier <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a> avec une API identique \u00e0 celle de <code class=\"language-javascript\">useEffect</code>.</p>\n</div>\n<h2 id=\"effects-with-cleanup\"><a class=\"anchor\" href=\"/react/hooks-effect#effects-with-cleanup\"></a>Effets avec nettoyage </h2>\n<p>Nous avons vu pr\u00e9c\u00e9demment comment \u00e9crire des effets de bord ne n\u00e9cessitant aucun nettoyage. Toutefois, quelques effets peuvent en avoir besoin. Par exemple, <strong>nous pourrions souhaiter nous abonner</strong> \u00e0 une source de donn\u00e9es externe. Dans ce cas-l\u00e0, il est imp\u00e9ratif de nettoyer par la suite pour \u00e9viter les fuites de m\u00e9moire\u00a0! Comparons les approches \u00e0 base de classe et de Hooks pour y arriver.</p>\n<h3 id=\"example-using-classes-1\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-classes-1\"></a>Exemple en utilisant les classes </h3>\n<p>Dans une classe React, on s\u2019abonne g\u00e9n\u00e9ralement dans <code class=\"language-javascript\">componentDidMount</code>, et on se d\u00e9sabonne dans <code class=\"language-javascript\">componentWillUnmount</code>. Par exemple, imaginons que nous avons un module <code class=\"language-javascript\">ChatAPI</code> qui permet de nous abonner au statut de connexion d\u2019un ami. Voici comment on pourrait s\u2019abonner et l\u2019afficher en utilisant une classe\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FriendStatus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> isOnline<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      isOnline<span class=\"token operator\">:</span> status<span class=\"token punctuation\">.</span>isOnline</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez l\u2019effet miroir de <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentWillUnmount</code>. Les m\u00e9thodes de cycle de vie nous forcent \u00e0 s\u00e9parer cette logique alors que conceptuellement le code des deux m\u00e9thodes a trait au m\u00eame effet.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les lecteurs les plus attentifs remarqueront sans doute que cet exemple n\u00e9cessite aussi <code class=\"language-javascript\">componentDidUpdate</code> pour \u00eatre tout \u00e0 fait correct. Nous avons choisi d\u2019ignorer \u00e7a pour l\u2019instant mais nous y reviendrons dans <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">une section ult\u00e9rieure</a> de cette page.</p>\n</div>\n<h3 id=\"example-using-hooks-1\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-hooks-1\"></a>Exemple en utilisant les Hooks </h3>\n<p>Voyons comment r\u00e9\u00e9crire notre exemple avec les Hooks.</p>\n<p>Instinctivement, vous pourriez imaginer qu\u2019un effet distinct est n\u00e9cessaire pour le nettoyage. Mais les codes pour s\u2019abonner et se d\u00e9sabonner sont si fortement li\u00e9s que <code class=\"language-javascript\">useEffect</code> a \u00e9t\u00e9 pens\u00e9 pour les conserver ensemble. Si votre effet renvoie une fonction, React l\u2019ex\u00e9cutera lors du nettoyage\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Indique comment nettoyer l'effet :</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pourquoi notre effet renvoie-t-il une fonction\u00a0?</strong> Il s\u2019agit d\u2019un m\u00e9canisme optionnel de nettoyage des effets. Tout effet peut renvoyer une fonction qui se chargera de son propre nettoyage. Cela permet de conserver les logiques d\u2019abonnement et de d\u00e9sabonnement proches l\u2019une de l\u2019autre. Elles font partie du m\u00eame effet\u00a0!</p>\n<p><strong>\u00c0 quel moment pr\u00e9cis React nettoie-t-il un effet\u00a0?</strong> React effectue le nettoyage lorsqu\u2019il d\u00e9monte le composant. Cependant, comme nous l\u2019avons appris pr\u00e9c\u00e9demment, les effets sont ex\u00e9cut\u00e9s \u00e0 chaque affichage, donc potentiellement plus d\u2019une fois. C\u2019est la raison pour laquelle React nettoie <em>aussi</em> les effets du rendu pr\u00e9c\u00e9dent avant de les ex\u00e9cuter une nouvelle fois. Nous verrons <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">pourquoi \u00e7a permet d\u2019\u00e9viter des bugs</a> et <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">comment \u00e9viter ce comportement s\u2019il nuit aux performances</a> dans un instant.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>La fonction renvoy\u00e9e par l\u2019effet peut parfaitement \u00eatre anonyme. Dans notre exemple, nous l\u2019avons nomm\u00e9e <code class=\"language-javascript\">cleanup</code> par souci de clart\u00e9, mais vous pouvez renvoyer une fonction fl\u00e9ch\u00e9e ou lui donner n\u2019importe quel nom.</p>\n</div>\n<h2 id=\"recap\"><a class=\"anchor\" href=\"/react/hooks-effect#recap\"></a>En r\u00e9sum\u00e9 </h2>\n<p>Nous avons appris que <code class=\"language-javascript\">useEffect</code> nous permet d\u2019exprimer diff\u00e9rentes sortes d\u2019effets de bord apr\u00e8s l\u2019affichage d\u2019un composant. Certains effets ont besoin de nettoyer derri\u00e8re eux, et peuvent renvoyer une fonction pour \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>D\u2019autres effets n\u2019ont pas besoin de nettoyage, et ne renvoient rien.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Le Hook d\u2019effet traite ces deux cas en une seule API.</p>\n\n<p><strong>Si vous pensez avoir d\u00e9j\u00e0 bien saisi le fonctionnement du Hook d\u2019effet, ou si c\u2019en est d\u00e9j\u00e0 trop pour vous, n\u2019h\u00e9sitez pas \u00e0 passer d\u00e8s maintenant \u00e0 la <a href=\"/react/hooks-rules\">prochaine page sur les r\u00e8gles des Hooks</a>.</strong></p>\n\n<h2 id=\"tips-for-using-effects\"><a class=\"anchor\" href=\"/react/hooks-effect#tips-for-using-effects\"></a>Astuces pour l\u2019utilisation des effets </h2>\n<p>Nous allons maintenant nous pencher sur certaines caract\u00e9ristiques de <code class=\"language-javascript\">useEffect</code> qui ne manqueront pas de susciter la curiosit\u00e9 des utilisateurs les plus exp\u00e9riment\u00e9s de React. Ne vous sentez pas tenu\u00b7e d\u2019y plonger d\u00e8s \u00e0 pr\u00e9sent. Vous pourrez toujours revenir plus tard sur cette page afin d\u2019y parfaire votre connaissance du Hook d\u2019effet.</p>\n<h3 id=\"tip-use-multiple-effects-to-separate-concerns\"><a class=\"anchor\" href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\"></a>Astuce\u00a0: Utiliser plusieurs effets pour s\u00e9parer les sujets </h3>\n<p>Un des probl\u00e8mes soulign\u00e9s dans les <a href=\"/react/hooks-intro#complex-components-become-hard-to-understand\">raisons</a> pour les Hooks, c\u2019est que les m\u00e9thodes de cycle de vie d\u2019une classe de composant deviennent souvent des ramassis de logiques diff\u00e9rentes, alors que celles qui sont li\u00e9es entre elles sont \u00e9parpill\u00e9es dans plusieurs m\u00e9thodes. Voici un composant qui impl\u00e9mente \u00e0 la fois notre exemple de compteur et celui du statut de connexion d\u2019un ami\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FriendStatusWithCounter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> isOnline<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      isOnline<span class=\"token operator\">:</span> status<span class=\"token punctuation\">.</span>isOnline\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Remarquez comme le code qui modifie <code class=\"language-javascript\">document.title</code> est d\u00e9coup\u00e9 entre <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>. Quant \u00e0 la gestion de l\u2019abonnement, elle est \u00e9parpill\u00e9e entre <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentWillUnmount</code>. De plus, <code class=\"language-javascript\">componentDidMount</code> contient du code relatif aux deux t\u00e2ches.</p>\n<p>Comment les Hooks r\u00e9solvent-ils ce probl\u00e8me\u00a0? \u00c0 l\u2019instar du <a href=\"/react/hooks-state#tip-using-multiple-state-variables\">Hook <code class=\"language-javascript\">useState</code> qui peut \u00eatre utilis\u00e9 plusieurs fois</a>, il est possible d\u2019utiliser plusieurs effets. Cela nous permet de s\u00e9parer correctement les sujets sans rapport au sein d\u2019effets distincts\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatusWithCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Les Hooks permettent de d\u00e9couper le code selon ce qu\u2019il fait</strong> plut\u00f4t qu\u2019en fonction des noms de m\u00e9thodes de cycle de vie. React appliquera <em>tous</em> les effets utilis\u00e9s par le composant, dans l\u2019ordre de leur d\u00e9claration.</p>\n<h3 id=\"explanation-why-effects-run-on-each-update\"><a class=\"anchor\" href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\"></a>Explication\u00a0: raisons pour lesquelles les effets sont ex\u00e9cut\u00e9s \u00e0 chaque mise \u00e0 jour </h3>\n<p>Si vous avez l\u2019habitude des classes, vous pourriez vous demander pourquoi le nettoyage des effets s\u2019effectue apr\u00e8s chaque rendu, au lieu d\u2019une seule fois au d\u00e9montage. Voyons un exemple pratique pour comprendre en quoi ce choix de conception nous aide \u00e0 r\u00e9duire les bugs dans nos composants.</p>\n<p><a href=\"/react/hooks-effect#example-using-classes-1\">Plus haut dans cette page</a>, nous avons pr\u00e9sent\u00e9 le composant d\u2019exemple <code class=\"language-javascript\">FriendStatus</code> qui affiche le statut de connexion d\u2019un ami. Notre classe r\u00e9cup\u00e8re <code class=\"language-javascript\">friend.id</code> depuis <code class=\"language-javascript\">this.props</code>, s\u2019abonne au statut de connexion une fois le composant mont\u00e9, et se d\u00e9sabonne au d\u00e9montage\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Mais que se passe-t-il si la propri\u00e9t\u00e9 <code class=\"language-javascript\">friend</code> change</strong> alors que le composant est affich\u00e9\u00a0? Notre composant continuerait d\u2019afficher le statut de connexion de notre ami initial. C\u2019est un bug. Nous causerions \u00e9galement une fuite de m\u00e9moire ou un plantage au d\u00e9montage, la fonction de d\u00e9sabonnement utilisant l\u2019ID du nouvel ami.</p>\n<p>Dans un composant \u00e0 base de classe, il faudrait ajouter <code class=\"language-javascript\">componentDidUpdate</code> pour g\u00e9rer ce cas\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Se d\u00e9sabonne du statut de l\u2019ami pr\u00e9c\u00e9dent</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      prevProps<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// S\u2019abonne au statut du prochain ami</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les applications React souffrent fr\u00e9quemment de bugs dus \u00e0 l\u2019oubli d\u2019une gestion correcte de <code class=\"language-javascript\">componentDidUpdate</code>.</p>\n<p>Maintenant, examinez ce m\u00eame composant qui utiliserait des Hooks\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Il ne rencontre pas ce bug. (Mais nous n\u2019y avons apport\u00e9 aucun changement.)</p>\n<p>Pas besoin de code sp\u00e9cifique pour g\u00e9rer les mises \u00e0 jour puisque <code class=\"language-javascript\">useEffect</code> les traite <em>par d\u00e9faut</em>. Le hook nettoie les effets pr\u00e9c\u00e9dents avant d\u2019appliquer les suivants. Pour illustrer \u00e7a, voici la s\u00e9quence des abonnements et des d\u00e9sabonnements que ce composant pourrait produire au fil du temps\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Montage avec les propri\u00e9t\u00e9s { friend: { id: 100 } }</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Ex\u00e9cute l\u2019effet 1</span>\n\n<span class=\"token comment\">// Mise \u00e0 jour avec les propri\u00e9t\u00e9s { friend: { id: 200 } }</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Nettoie l\u2019effet 1</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Ex\u00e9cute l\u2019effet 2</span>\n\n<span class=\"token comment\">// Mise \u00e0 jour avec les propri\u00e9t\u00e9s { friend: { id: 300 } }</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Nettoie l\u2019effet 2</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Ex\u00e9cute l\u2019effet 3</span>\n\n<span class=\"token comment\">// D\u00e9montage</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Nettoie l\u2019effet 3</span></code></pre></div>\n<p>Ce comportement par d\u00e9faut garantit la coh\u00e9rence et r\u00e9sout les bugs les plus courants des composants \u00e0 base de classe qui oublient de g\u00e9rer les mises \u00e0 jour.</p>\n<h3 id=\"tip-optimizing-performance-by-skipping-effects\"><a class=\"anchor\" href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\"></a>Astuce\u00a0: optimiser les performances en sautant des effets </h3>\n<p>Dans certains cas, nettoyer ou ex\u00e9cuter l\u2019effet apr\u00e8s chaque affichage risque de nuire aux performances. Dans les composants \u00e0 base de classe, une solution consiste \u00e0 comparer <code class=\"language-javascript\">prevProps</code> ou <code class=\"language-javascript\">prevState</code> dans <code class=\"language-javascript\">componentDidUpdate</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevState<span class=\"token punctuation\">.</span>count <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce genre de comportement est tellement courant qu\u2019il est int\u00e9gr\u00e9 dans l\u2019API du Hook <code class=\"language-javascript\">useEffect</code>. Il est possible d\u2019indiquer \u00e0 React de <em>sauter</em> l\u2019ex\u00e9cution d\u2019un effet si certaines valeurs n\u2019ont pas \u00e9t\u00e9 modifi\u00e9es entre deux affichages. Pour cela, il suffit de passer une liste comme second argument optionnel \u00e0 <code class=\"language-javascript\">useEffect</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// N\u2019ex\u00e9cute l\u2019effet que si count a chang\u00e9</span></span></code></pre></div>\n<p>Dans l\u2019exemple ci-dessus, nous passons <code class=\"language-javascript\">[count]</code> comme second argument. Qu\u2019est-ce que \u00e7a signifie\u00a0? Si <code class=\"language-javascript\">count</code> vaut <code class=\"language-javascript\">5</code>, et que notre composant est r\u00e9-affich\u00e9 avec <code class=\"language-javascript\">count</code> toujours \u00e9gal \u00e0 <code class=\"language-javascript\">5</code>, React comparera le <code class=\"language-javascript\">[5]</code> de l\u2019affichage pr\u00e9c\u00e9dent au <code class=\"language-javascript\">[5]</code> du suivant. Comme tous les \u00e9l\u00e9ments de la liste sont identiques (<code class=\"language-javascript\">5 === 5</code>), React n\u2019ex\u00e9cutera pas l\u2019effet. Et voil\u00e0 notre optimisation.</p>\n<p>Quand le composant est r\u00e9-affich\u00e9 avec <code class=\"language-javascript\">count</code> \u00e9gal \u00e0 <code class=\"language-javascript\">6</code>, React comparera la liste d\u2019\u00e9l\u00e9ments <code class=\"language-javascript\">[5]</code> de l\u2019affichage pr\u00e9c\u00e9dent avec la liste <code class=\"language-javascript\">[6]</code> du suivant. Cette fois, React r\u00e9-ex\u00e9cutera l\u2019effet car <code class=\"language-javascript\">5 !== 6</code>. Dans le cas o\u00f9 la liste contiendrait plusieurs \u00e9l\u00e9ments, React r\u00e9-appliquera l\u2019effet si au moins l\u2019un d\u2019entre eux est diff\u00e9rent de sa version pr\u00e9c\u00e9dente.</p>\n<p>Le fonctionnement est le m\u00eame pour la phase de nettoyage\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ne se r\u00e9-abonne que si props.friend.id change</span></span></code></pre></div>\n<p>\u00c0 l\u2019avenir, ce second argument pourrait \u00eatre inject\u00e9 automatiquement au moment de la compilation.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez cette optimisation, assurez-vous que votre tableau inclut bien <strong>toutes les valeurs dans la port\u00e9e du composant (telles que les props et l\u2019\u00e9tat local) qui peuvent changer avec le temps et sont utilis\u00e9es par l\u2019effet</strong>. Sinon, votre code va r\u00e9f\u00e9rencer des valeurs obsol\u00e8tes issues des rendus pr\u00e9c\u00e9dents.  Vous pouvez en apprendre davantage sur <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">la fa\u00e7on de g\u00e9rer les d\u00e9pendances \u00e0 des fonctions</a> et comment faire quand <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">les d\u00e9pendances list\u00e9es changent trop souvent</a>.</p>\n<p>Si vous voulez ex\u00e9cuter un effet et le nettoyer une seule fois (au montage puis au d\u00e9montage), vous pouvez passer un tableau vide (<code class=\"language-javascript\">[]</code>) comme second argument.  \u00c7a indique \u00e0 React que votre effet ne d\u00e9pend <em>d\u2019aucune</em> valeur issue des props ou de l\u2019\u00e9tat local, donc il n\u2019a jamais besoin d\u2019\u00eatre r\u00e9-ex\u00e9cut\u00e9.  Il ne s\u2019agit pas d\u2019un cas particulier\u00a0: \u00e7a d\u00e9coule directement de la fa\u00e7on dont le tableau des d\u00e9pendances fonctionne \u00e0 la base.</p>\n<p>Si vous passez un tableau vide (<code class=\"language-javascript\">[]</code>), les props et l\u2019\u00e9tat local vus depuis l\u2019int\u00e9rieur de l\u2019effet feront toujours r\u00e9f\u00e9rence \u00e0 leurs valeurs initiales.  M\u00eame si passer <code class=\"language-javascript\">[]</code> comme second argument vous rapproche du mod\u00e8le mental habituel de <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentWillUnmount</code>, il y a en g\u00e9n\u00e9ral de <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">meilleures</a> <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">solutions</a> pour \u00e9viter de r\u00e9-ex\u00e9cuter les effets trop souvent. Par ailleurs, ne perdez pas de vue que React d\u00e9f\u00e8re l\u2019ex\u00e9cution de <code class=\"language-javascript\">useEffect</code> jusqu\u2019\u00e0 ce que le navigateur ait fini de rafra\u00eechir l\u2019affichage, du coup y faire plus de travail est moins un probl\u00e8me.</p>\n<p>Nous vous conseillons d\u2019utiliser la r\u00e8gle <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> fournie par le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous avertira si des d\u00e9pendances sont mal sp\u00e9cifi\u00e9es et vous sugg\u00e8rera un correctif.</p>\n</div>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-effect#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>F\u00e9licitations\u00a0! C\u2018\u00e9tait une bien longue page, mais avec un peu de chance la plupart de vos questions \u00e0 propos des effets ont pu y trouver une r\u00e9ponse. Vous avez appris \u00e0 utiliser le Hook d\u2019\u00e9tat et le Hook d\u2019effet, qui vous ouvrent <em>beaucoup</em> de possibilit\u00e9s \u00e0 eux deux. Ils couvrent la majorit\u00e9 des cas d\u2019usage pour les classes\u2014et sinon, peut-\u00eatre trouverez-vous les <a href=\"/react/hooks-reference\">Hooks suppl\u00e9mentaires</a> bien utiles.</p>\n<p>Nous commen\u00e7ons \u00e9galement \u00e0 deviner comment les Hooks peuvent r\u00e9soudre les probl\u00e9matiques list\u00e9es dans les <a href=\"/react/hooks-intro#motivation\">raisons</a>. Nous avons vu comment le nettoyage des effets \u00e9vite la duplication de code dans <code class=\"language-javascript\">componentDidUpdate</code> et <code class=\"language-javascript\">componentWillUnmount</code>, regroupe le code par sujet, et aide \u00e0 \u00e9viter les bugs. Enfin, nous avons appris comment s\u00e9parer les effets selon leur finalit\u00e9, ce qui \u00e9tait totalement impossible avec les classes.</p>\n<p>A ce stade vous vous demandez peut-\u00eatre comment les Hooks fonctionnent. Comment React sait-il quel appel de <code class=\"language-javascript\">useState</code> correspond \u00e0 quelle variable d\u2019\u00e9tat local d\u2019un affichage \u00e0 l\u2019autre\u00a0? Comment React \u00ab\u00a0associe-t-il\u00a0\u00bb l\u2019effet pr\u00e9c\u00e9dent au suivant \u00e0 chaque mise \u00e0 jour\u00a0? <strong>Rendez-vous dans la prochaine page pour apprendre les <a href=\"/react/hooks-rules\">r\u00e8gles des Hooks</a>, qui sont indispensables \u00e0 leur bon fonctionnement.</strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-effect.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-effect", "nav": ["/react/hooks-state", "/react/hooks-rules"]}, {"key": "5. Les r\u00e8gles des Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont arriv\u00e9s avec React 16.8. Ils vous permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire une classe.</p>\n<p>Les Hooks sont des fonctions JavaScript, mais vous devez suivre deux r\u00e8gles lorsque vous les utilisez. Nous mettons \u00e0 votre disposition un <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">plugin de <em>linter</em></a> pour v\u00e9rifier ces r\u00e8gles automatiquement\u00a0:</p>\n<h3 id=\"only-call-hooks-at-the-top-level\"><a class=\"anchor\" href=\"/react/hooks-rules#only-call-hooks-at-the-top-level\"></a>Appelez les Hooks uniquement au niveau racine </h3>\n<p><strong>N\u2019appelez pas de Hooks \u00e0 l\u2019int\u00e9rieur de boucles, de code conditionnel ou de fonctions imbriqu\u00e9es.</strong> Au lieu de \u00e7a, utilisez seulement les Hooks au niveau racine de votre fonction React. En suivant cette r\u00e8gle, vous garantissez que les Hooks sont appel\u00e9s dans le m\u00eame ordre \u00e0 chaque affichage du composant. C\u2019est ce qui permet \u00e0 React de garantir le bon \u00e9tat des Hooks entre plusieurs appels \u00e0 <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">useEffect</code>. (Si vous \u00eates curieux\u00b7se, nous expliquerons \u00e7a en d\u00e9tail <a href=\"/react/hooks-rules#explanation\">plus bas</a>.)</p>\n<h3 id=\"only-call-hooks-from-react-functions\"><a class=\"anchor\" href=\"/react/hooks-rules#only-call-hooks-from-react-functions\"></a>Appelez les Hooks uniquement depuis des fonctions React </h3>\n<p><strong>N\u2019appelez pas les Hooks depuis des fonctions JavaScript classiques.</strong> Vous pouvez en revanche\u00a0:</p>\n<ul>\n<li>\u2705 Appeler les Hooks depuis des fonctions composants React.</li>\n<li>\u2705 Appeler les Hooks depuis des Hooks personnalis\u00e9s (nous aborderons le sujet <a href=\"/react/hooks-custom\">dans la prochaine page</a>).</li>\n</ul>\n<p>En suivant cette r\u00e8gle, vous garantissez que toute la logique d\u2019\u00e9tat d\u2019un composant est clairement identifiable dans son code source.</p>\n<h2 id=\"eslint-plugin\"><a class=\"anchor\" href=\"/react/hooks-rules#eslint-plugin\"></a>Plugin ESLint </h2>\n<p>Nous avons publi\u00e9 un plugin ESLint appel\u00e9 <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> qui assure le respect de ces deux r\u00e8gles. Vous pouvez ajouter ce plugin \u00e0 votre projet si vous souhaitez l\u2019utiliser\u00a0:</p>\n<p>Ce plugin est inclus par d\u00e9faut dans Create React App<a href=\"/react/create-a-new-react-app#create-react-app\">Create React App</a>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint-plugin-react-hooks --save-dev</code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Votre configuration ESLint</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks/rules-of-hooks\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// V\u00e9rifie les r\u00e8gles des Hooks</span>\n    <span class=\"token string\">\"react-hooks/exhaustive-deps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span>  <span class=\"token comment\">// V\u00e9rifie les tableaux de d\u00e9pendances</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Vous pouvez maintenant passer directement \u00e0 la prochaine page, qui explique comment \u00e9crire <a href=\"/react/hooks-custom\">vos propres Hooks</a>.</strong> Dans cette page, nous allons maintenant expliquer le raisonnement qui se cache derri\u00e8re ces r\u00e8gles.</p>\n<h2 id=\"explanation\"><a class=\"anchor\" href=\"/react/hooks-rules#explanation\"></a>Explications </h2>\n<p>Comme nous l\u2019avons <a href=\"/react/hooks-state#tip-using-multiple-state-variables\">appris plus t\u00f4t</a>, nous pouvons utiliser plusieurs Hooks <em>State</em> ou <em>Effect</em> au sein d\u2019un m\u00eame composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. Utilise la variable d'\u00e9tat name</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 2. Utilise un effet pour persister le formulaire</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 3. Utilise la variable d'\u00e9tat surname</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>surname<span class=\"token punctuation\">,</span> setSurname<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 4. Utilise un effet pour mettre \u00e0 jour le titre</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">updateTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> surname<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Alors, comment React sait-il quel \u00e9tat correspond \u00e0 quel appel \u00e0 <code class=\"language-javascript\">useState</code>\u00a0? R\u00e9ponse\u00a0: <strong>React se repose sur l\u2019ordre dans lequel les Hooks sont appel\u00e9s</strong>. Notre exemple fonctionne car l\u2019ordre d\u2019appel des Hooks est le m\u00eame \u00e0 chaque affichage\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ------------</span>\n<span class=\"token comment\">// Premier affichage</span>\n<span class=\"token comment\">// ------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Initialise la variable d'\u00e9tat name avec 'Mary'</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Ajoute un effet pour persister le formulaire</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 3. Initialise la variable d'\u00e9tat surname avec 'Poppins'</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Ajoute un effet pour mettre \u00e0 jour le titre</span>\n\n<span class=\"token comment\">// -------------</span>\n<span class=\"token comment\">// Deuxi\u00e8me affichage</span>\n<span class=\"token comment\">// -------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Lit la variable d'\u00e9tat name (l'argument est ignor\u00e9)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Remplace l'effet pour persister le formulaire</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 3. Lit la variable d'\u00e9tat surname (l'argument est ignor\u00e9)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Remplace l'effet pour mettre \u00e0 jour le titre</span>\n\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Tant que l\u2019ordre d\u2019appel aux Hooks est le m\u00eame d\u2019un affichage \u00e0 l\u2019autre, React peut associer un \u00e9tat local \u00e0 chacun d\u2019entre eux. Mais que se passerait-il si nous appelions un Hook (par exemple, l\u2019effet <code class=\"language-javascript\">persistForm</code>) de fa\u00e7on conditionnelle\u00a0?</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// \ud83d\udd34 Nous enfreignons la premi\u00e8re r\u00e8gle en utilisant un Hook de fa\u00e7on conditionnelle</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>La condition <code class=\"language-javascript\">name !== ''</code> est vraie au premier affichage, donc nous ex\u00e9cutons ce Hook. Cependant, lors du prochain affichage l\u2019utilisateur risque de vider le formulaire, ce qui invalidera la condition. \u00c0 pr\u00e9sent que nous sautons ce Hook lors de l\u2019affichage, l\u2019ordre d\u2019appel aux Hooks devient diff\u00e9rent\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mary'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. Lit la variable d'\u00e9tat name (l'argument est ignor\u00e9)</span>\n<span class=\"token comment\">// useEffect(persistForm)  // \ud83d\udd34 Ce Hook n'a pas \u00e9t\u00e9 appel\u00e9 !</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Poppins'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// \ud83d\udd34 2. (mais \u00e9tait 3). \u00c9choue \u00e0 lire la variable d'\u00e9tat surname</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// \ud83d\udd34 3. (mais \u00e9tait 4). \u00c9choue \u00e0 remplacer de l'effet</span></code></pre></div>\n<p>React ne saurait pas quoi renvoyer lors du second appel au Hook <code class=\"language-javascript\">useState</code>. React s\u2019attendait \u00e0 ce que le deuxi\u00e8me appel \u00e0 un Hook dans ce composant corresponde \u00e0 l\u2019effet <code class=\"language-javascript\">persistForm</code>, comme lors de l\u2019affichage pr\u00e9c\u00e9dent, mais ce n\u2019est plus le cas. A partir de l\u00e0, chaque appel \u00e0 un Hook ult\u00e9rieur \u00e0 celui que nous avons saut\u00e9 sera aussi d\u00e9cal\u00e9 de un, provoquant des bugs.</p>\n<p><strong>C\u2019est pourquoi les Hooks doivent \u00eatre appel\u00e9s au niveau racine de vos composants.</strong> Si vous voulez ex\u00e9cuter un effet de mani\u00e8re conditionnelle, vous pouvez mettre cette condition <em>\u00e0 l\u2019int\u00e9rieur</em> de votre Hook\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \ud83d\udc4d Nous n\u2019enfreignons plus la premi\u00e8re r\u00e8gle</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Remarquez que vous n\u2019avez pas \u00e0 vous inqui\u00e9ter de \u00e7a si vous utilisez <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">le plugin de <em>linter</em> fourni</a>.</strong> Mais maintenant, vous savez <em>pourquoi</em> les Hooks fonctionnent de cette mani\u00e8re et quels probl\u00e8mes ces r\u00e8gles \u00e9vitent.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-rules#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Enfin, nous sommes pr\u00eats pour apprendre \u00e0 <a href=\"/react/hooks-custom\">\u00e9crire nos propres Hooks</a>\u00a0! Les Hooks personnalis\u00e9s vous permettent de combiner les Hooks fournis par React pour cr\u00e9er vos propres abstractions et r\u00e9utiliser une logique d\u2019\u00e9tat commune dans diff\u00e9rents composants.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-rules.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-rules", "nav": ["/react/hooks-effect", "/react/hooks-custom"]}, {"key": "6. Construire vos propres Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>Construire vos propres Hooks vous permet d\u2019extraire la logique d\u2019un composant sous forme de fonctions r\u00e9utilisables.</p>\n<p>Lorsque nous apprenions \u00e0 utiliser <a href=\"/react/hooks-effect#example-using-hooks-1\">le Hook d\u2019effet</a>, nous avons vu ce composant d\u2019une application de chat qui affiche un message selon qu\u2019un ami est en ligne ou hors-ligne.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Disons maintenant que notre application de chat poss\u00e8de aussi une liste de contacts et que nous souhaitons afficher en vert les noms des utilisateurs qui sont en ligne. Nous pourrions copier et coller une logique similaire \u00e0 celle ci-dessus dans notre composant <code class=\"language-javascript\">FriendListItem</code> mais \u00e7a ne serait pas id\u00e9al\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous aimerions plut\u00f4t partager cette logique entre <code class=\"language-javascript\">FriendStatus</code> et <code class=\"language-javascript\">FriendListItem</code>.</p>\n<p>Traditionnellement en React, nous avions deux mani\u00e8res r\u00e9pandues de partager une logique d\u2019\u00e9tat entre des composants\u00a0: les <a href=\"/react/render-props\">props de rendu</a> et les <a href=\"/react/higher-order-components\">composants d\u2019ordre sup\u00e9rieur</a>. Nous allons voir comment les Hooks r\u00e8glent la majeure partie de ces probl\u00e8mes sans vous obliger \u00e0 ajouter des composants dans l\u2019arbre.</p>\n<h2 id=\"extracting-a-custom-hook\"><a class=\"anchor\" href=\"/react/hooks-custom#extracting-a-custom-hook\"></a>Extraire un Hook personnalis\u00e9 </h2>\n<p>Lorsque nous souhaitons partager de la logique entre deux fonctions JavaScript, nous l\u2019extrayons dans une troisi\u00e8me fonction. Les composants et les Hooks sont des fonctions, \u00e7a fonctionne donc aussi pour eux\u00a0!</p>\n<p><strong>Un Hook personnalis\u00e9 est une fonction JavaScript dont le nom commence par \u201d<code class=\"language-javascript\">use</code>\u201d et qui peut appeler d\u2019autres Hooks.</strong> Par exemple, <code class=\"language-javascript\">useFriendStatus</code> ci-dessous est notre premier Hook personnalis\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il n\u2019y a rien de nouveau \u00e0 l\u2019int\u00e9rieur\u00a0; la logique provient des composants vus plus haut. Comme lorsque vous \u00eates dans un composant, assurez-vous d\u2019appeler les autres Hooks de fa\u00e7on inconditionnelle et au niveau racine de votre Hook personnalis\u00e9.</p>\n<p>Contrairement \u00e0 un composant React, un Hook personnalis\u00e9 n\u2019a pas besoin d\u2019avoir une signature particuli\u00e8re. Nous pouvons d\u00e9cider s\u2019il a besoin d\u2019accepter des arguments et ce qu\u2019il doit \u00e9ventuellement renvoyer. En d\u2019autres termes, c\u2019est une simple fonction. Son nom doit toujours commencer par <code class=\"language-javascript\">use</code> pour qu\u2019au premier coup d\u2019\u0153il vous sachiez que les <a href=\"/react/hooks-rules\">r\u00e8gles des Hooks</a> lui sont applicables.</p>\n<p>L\u2019objectif de notre Hook <code class=\"language-javascript\">useFriendStatus</code> est de nous abonner au statut d\u2019un ami. C\u2019est pourquoi il prend <code class=\"language-javascript\">friendID</code> comme argument et nous renvoie si notre ami est en ligne\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voyons maintenant comment nous pouvons utiliser notre Hook personnalis\u00e9.</p>\n<h2 id=\"using-a-custom-hook\"><a class=\"anchor\" href=\"/react/hooks-custom#using-a-custom-hook\"></a>Utiliser un Hook personnalis\u00e9 </h2>\n<p>\u00c0 la base, notre but \u00e9tait de supprimer la logique dupliqu\u00e9e entre les composants <code class=\"language-javascript\">FriendStatus</code> et <code class=\"language-javascript\">FriendListItem</code>. Les deux veulent savoir si un ami est en ligne.</p>\n<p>Maintenant que nous avons extrait cette logique dans un hook <code class=\"language-javascript\">useFriendStatus</code>, nous pouvons <em>simplement l\u2019utiliser\u00a0:</em></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Ce code est-il \u00e9quivalent aux exemples de d\u00e9part\u00a0?</strong> Oui, il fonctionne exactement de la m\u00eame mani\u00e8re. Si vous regardez de plus pr\u00e8s, vous remarquerez que nous n\u2019avons en rien chang\u00e9 le comportement. Tout ce que nous avons fait, c\u2019est d\u00e9placer du code commun \u00e0 deux fonctions dans une fonction s\u00e9par\u00e9e. <strong>Les Hooks personnalis\u00e9s sont une convention qui d\u00e9coule naturellement du principe des Hooks, plut\u00f4t qu\u2019une v\u00e9ritable fonctionnalit\u00e9 de React.</strong></p>\n<p><strong>Dois-je nommer mes Hooks personnalis\u00e9s en commen\u00e7ant par \u201d<code class=\"language-javascript\">use</code>\u201d\u00a0?</strong> Oui, s\u2019il vous pla\u00eet. Cette convention est tr\u00e8s importante. Sans elle, nous ne pourrions pas v\u00e9rifier automatiquement les violations des <a href=\"/react/hooks-rules\">r\u00e8gles des Hooks</a> car nous ne pourrions \u00eatre s\u00fbrs qu\u2019une fonction contient des appels \u00e0 des Hooks.</p>\n<p><strong>Est-ce que deux composants utilisant le m\u00eame Hook partagent le m\u00eame \u00e9tat\u00a0?</strong> Non. Les Hooks personnalis\u00e9s sont un m\u00e9canisme de r\u00e9utilisation de <em>logique \u00e0 \u00e9tat</em> (comme la mise en place d\u2019un abonnement et la m\u00e9morisation de sa valeur courante), mais chaque fois qu\u2019on utilise un Hook personnalis\u00e9, tous les \u00e9tats et effets qu\u2019il utilise sont totalement isol\u00e9s.</p>\n<p><strong>Comment l\u2019\u00e9tat d\u2019un Hook personnalis\u00e9 est-il isol\u00e9\u00a0?</strong> Chaque <em>appel</em> \u00e0 un Hook se voit attribuer un \u00e9tat isol\u00e9. Comme nous appelons <code class=\"language-javascript\">useFriendStatus</code> directement, du point de vue de React notre composant appelle simplement <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">useEffect</code>. Et comme nous l\u2019avons <a href=\"/react/hooks-state#tip-using-multiple-state-variables\">appris</a> <a href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\">pr\u00e9c\u00e9demment</a>, nous pouvons appeler <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">useEffect</code> plusieurs fois dans un composant et ils seront compl\u00e8tement ind\u00e9pendants.</p>\n<h3 id=\"tip-pass-information-between-hooks\"><a class=\"anchor\" href=\"/react/hooks-custom#tip-pass-information-between-hooks\"></a>Astuce: passer de l\u2019information entre les Hooks </h3>\n<p>Comme les Hooks sont des fonctions, nous pouvons passer de l\u2019information entre eux.</p>\n<p>Pour illustrer \u00e7a, nous allons utiliser un autre composant de notre hypoth\u00e9tique exemple de chat. Voici un s\u00e9lecteur de destinataire de message qui affiche si l\u2019ami s\u00e9lectionn\u00e9 est en ligne\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> friendList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Phoebe'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Rachel'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Ross'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ChatRecipientPicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>recipientID<span class=\"token punctuation\">,</span> setRecipientID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isRecipientOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>recipientID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span></span> <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isRecipientOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>recipientID<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setRecipientID</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>friendList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friend</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous gardons l\u2019ID de l\u2019ami s\u00e9lectionn\u00e9 dans la variable d\u2019\u00e9tat <code class=\"language-javascript\">recipientID</code>, et nous la mettons \u00e0 jour si l\u2019utilisateur s\u00e9lectionne un ami diff\u00e9rent dans le <code class=\"language-javascript\">&lt;select&gt;</code> de la liste.</p>\n<p>Puisque l\u2019appel au Hook <code class=\"language-javascript\">useState</code> nous renvoie la derni\u00e8re valeur de la variable d\u2019\u00e9tat <code class=\"language-javascript\">recipientID</code>, nous pouvons la passer en argument \u00e0 notre Hook personnalis\u00e9 <code class=\"language-javascript\">useFriendStatus</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>recipientID<span class=\"token punctuation\">,</span> setRecipientID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isRecipientOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>recipientID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous pouvons ainsi savoir si l\u2019ami <em>actuellement s\u00e9lectionn\u00e9</em> est en ligne. Si nous s\u00e9lectionnons un autre ami et mettons \u00e0 jour la variable d\u2019\u00e9tat <code class=\"language-javascript\">recipientID</code>, notre Hook <code class=\"language-javascript\">useFriendStatus</code> va se d\u00e9sabonner de l\u2019ami pr\u00e9c\u00e9demment s\u00e9lectionn\u00e9 et s\u2019abonner au statut de son rempla\u00e7ant.</p>\n<h2 id=\"useyourimagination\"><a class=\"anchor\" href=\"/react/hooks-custom#useyourimagination\"></a><code class=\"language-javascript\">useYourImagination()</code> </h2>\n<p>Les Hooks personnalis\u00e9s offrent une souplesse de partage de logique qui n\u2019\u00e9tait pas possible avec les composants React auparavant. Vous pouvez \u00e9crire des Hooks personnalis\u00e9s qui couvrent un large \u00e9ventail de cas d\u2019usage tels que la gestion de formulaires, les animations, les abonnements d\u00e9claratifs, les horloges et probablement de nombreux autres auxquels nous n\u2019avons pas pens\u00e9. Qui plus est, vous pouvez construire des Hooks qui sont aussi simples \u00e0 utiliser que les fonctionnalit\u00e9s fournies par React.</p>\n<p>Essayez de r\u00e9sister \u00e0 la tentation de faire des extractions pr\u00e9matur\u00e9es de Hooks. \u00c0 pr\u00e9sent que les fonctions composants peuvent en faire plus, il est probable que les fonctions composants de votre base de code grossissent, en moyenne. C\u2019est normal\u00a0: ne vous sentez pas <em>oblig\u00e9\u00b7e</em> d\u2019en extraire des Hooks. Ceci dit, nous vous encourageons tout de m\u00eame \u00e0 commencer \u00e0 rep\u00e9rer des cas o\u00f9 un Hook personnalis\u00e9 pourrait masquer une logique complexe derri\u00e8re une interface simple, ou aider \u00e0 d\u00e9m\u00ealer un composant dont le code est incompr\u00e9hensible.</p>\n<p>Par exemple, peut-\u00eatre avez-vous un composant complexe qui contient beaucoup d\u2019\u00e9tats locaux g\u00e9r\u00e9s de mani\u00e8re <em>ad hoc</em>. <code class=\"language-javascript\">useState</code> ne facilite pas la centralisation de la logique de mise \u00e0 jour, du coup vous pr\u00e9f\u00e9reriez peut-\u00eatre la r\u00e9\u00e9crire sous forme de r\u00e9ducteur <a class=\"external-link\" href=\"https://redux.js.org/\">Redux</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">todosReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'add'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        text<span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>\n        completed<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ... autres actions ...</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les r\u00e9ducteurs sont tr\u00e8s pratiques \u00e0 tester en isolation, et permettent d\u2019exprimer lisiblement des logiques de mise \u00e0 jour complexes. Vous pouvez toujours les d\u00e9couper en r\u00e9ducteurs plus petits si besoin. Cependant, vous pourriez aussi appr\u00e9cier la gestion d\u2019\u00e9tat local de React, ou ne pas vouloir installer une autre biblioth\u00e8que.</p>\n<p>Et si nous pouvions \u00e9crire un Hook <code class=\"language-javascript\">useReducer</code> qui nous permettrait de g\u00e9rer l\u2019\u00e9tat <em>local</em>  de notre composant \u00e0 l\u2019aide d\u2019un r\u00e9ducteur\u00a0? Une version simplifi\u00e9e pourrait ressembler \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span> initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nextState <span class=\"token operator\">=</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>nextState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pourrions maintenant l\u2019utiliser dans notre composant, et laisser le r\u00e9ducteur piloter sa gestion d\u2019\u00e9tat\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAddClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Le besoin de g\u00e9rer un \u00e9tat local avec un r\u00e9ducteur dans un composant complexe est si fr\u00e9quent que nous avons  int\u00e9gr\u00e9 le Hook <code class=\"language-javascript\">useReducer</code> directement dans React. Vous le trouverez avec d\u2019autres Hooks pr\u00e9d\u00e9finis dans la <a href=\"/react/hooks-reference\">r\u00e9f\u00e9rence de l\u2019API des Hooks</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-custom.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-custom", "nav": ["/react/hooks-rules", "/react/hooks-reference"]}, {"key": "7. R\u00e9f\u00e9rence de l'API des Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>Cette page d\u00e9crit l\u2019API des Hooks pr\u00e9d\u00e9finis de React.</p>\n<p>Si les Hooks sont nouveaux pour vous, vous voudrez peut-\u00eatre consulter <a href=\"/react/hooks-overview\">l\u2019aper\u00e7u</a> en premier. Vous trouverez peut-\u00eatre aussi des informations utiles dans <a href=\"/react/hooks-faq\">la foire aux questions</a>.</p>\n<ul>\n<li>\n<p><a href=\"/react/hooks-reference#basic-hooks\">Les Hooks de base</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a></li>\n<li><a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#additional-hooks\">Hooks suppl\u00e9mentaires</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a></li>\n<li><a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a></li>\n<li><a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a></li>\n<li><a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef</code></a></li>\n<li><a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a></li>\n<li><a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usedebugvalue\"><code class=\"language-javascript\">useDebugValue</code></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"basic-hooks\"><a class=\"anchor\" href=\"/react/hooks-reference#basic-hooks\"></a>Les Hooks de base </h2>\n<h3 id=\"usestate\"><a class=\"anchor\" href=\"/react/hooks-reference#usestate\"></a><code class=\"language-javascript\">useState</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Renvoie une valeur d\u2019\u00e9tat local et une fonction pour la mettre \u00e0 jour.</p>\n<p>Pendant le rendu initial, l\u2019\u00e9tat local (<code class=\"language-javascript\">state</code>) a la m\u00eame valeur que celle pass\u00e9e en premier argument (<code class=\"language-javascript\">initialState</code>).</p>\n<p>La fonction <code class=\"language-javascript\">setState</code> permet de mettre \u00e0 jour l\u2019\u00e9tat local. Elle accepte une nouvelle valeur d\u2019\u00e9tat local et planifie un nouveau rendu du composant.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>newState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Au cours des rendus suivants, la premi\u00e8re valeur renvoy\u00e9e par <code class=\"language-javascript\">useState</code> sera toujours celle de l\u2019\u00e9tat local le plus r\u00e9cent, une fois les mises \u00e0 jour effectu\u00e9es.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React garantit que l\u2019identit\u00e9 de la fonction <code class=\"language-javascript\">setState</code> est stable et ne changera pas d\u2019un rendu \u00e0 l\u2019autre. C\u2019est pourquoi on peut l\u2019omettre de la liste des d\u00e9pendances de <code class=\"language-javascript\">useEffect</code> et <code class=\"language-javascript\">useCallback</code> en toute s\u00e9curit\u00e9.</p>\n</div>\n<h4 id=\"functional-updates\"><a class=\"anchor\" href=\"/react/hooks-reference#functional-updates\"></a>Mises \u00e0 jour fonctionnelles </h4>\n<p>Si le nouvel \u00e9tat local est d\u00e9duit de l\u2019\u00e9tat local pr\u00e9c\u00e9dent, vous pouvez passer une fonction \u00e0 <code class=\"language-javascript\">setState</code>. Cette fonction recevra la valeur pr\u00e9c\u00e9dente de l\u2019\u00e9tat local et renverra une nouvelle valeur de l\u2019\u00e9tat local. Voici un exemple d\u2019un composant compteur qui utilise les deux formes de <code class=\"language-javascript\">setState</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>initialCount<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Total : </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>initialCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">R\u00e9initialiser</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevCount</span> <span class=\"token operator\">=&gt;</span> prevCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevCount</span> <span class=\"token operator\">=&gt;</span> prevCount <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les boutons \u00ab\u00a0+\u00a0\u00bb et \u00ab\u00a0-\u00a0\u00bb utilisent la forme fonctionnelle, puisque la nouvelle valeur est calcul\u00e9e \u00e0 partir de la valeur pr\u00e9c\u00e9dente. Le bouton \u00ab\u00a0R\u00e9initialiser\u00a0\u00bb utilise quant \u00e0 lui la forme normale puisqu\u2019il remet toujours le total \u00e0 sa valeur initiale.</p>\n<p>Si votre fonction de mise \u00e0 jour renvoie exactement la m\u00eame valeur que l\u2019\u00e9tat courant, le rendu ult\u00e9rieur sera carr\u00e9ment saut\u00e9.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>\u00c0 l\u2019inverse de la m\u00e9thode <code class=\"language-javascript\">setState</code> que l\u2019on trouve dans les composants d\u00e9finis \u00e0 l\u2019aide d\u2019une classe, <code class=\"language-javascript\">useState</code> ne fusionne pas automatiquement les objets de mise \u00e0 jour. Vous pouvez imiter ce comportement en combinant la forme fonctionnelle de mise \u00e0 jour avec la syntaxe de <em>spread</em> des objets\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Object.assign marcherait aussi</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>prevState<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>updatedValues<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Il est aussi possible d\u2019utiliser <code class=\"language-javascript\">useReducer</code>, qui est plus adapt\u00e9 pour g\u00e9rer les objets d\u2019\u00e9tat local qui contiennent plusieurs sous-valeurs.</p>\n</div>\n<h4 id=\"lazy-initial-state\"><a class=\"anchor\" href=\"/react/hooks-reference#lazy-initial-state\"></a>\u00c9tat local initial paresseux </h4>\n<p>Le rendu initial utilise l\u2019argument <code class=\"language-javascript\">initialState</code> comme \u00e9tat local. Au cours des rendus suivants, il est ignor\u00e9. Si l\u2019\u00e9tat local initial est le r\u00e9sultat d\u2019un calcul co\u00fbteux, vous pouvez plut\u00f4t fournir une fonction qui sera execut\u00e9e seulement au cours du rendu initial\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token function\">someExpensiveComputation</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"bailing-out-of-a-state-update\"><a class=\"anchor\" href=\"/react/hooks-reference#bailing-out-of-a-state-update\"></a>Abandon de la mise \u00e0 jour de l\u2019\u00e9tat local </h4>\n<p>Si vous mettez \u00e0 jour un Hook d\u2019\u00e9tat avec la m\u00eame valeur que son \u00e9tat actuel, React abandonnera cette mise \u00e0 jour, ce qui signifie qu\u2019aucun nouveau rendu des enfants ne sera effectu\u00e9 et qu\u2019aucun effet ne sera d\u00e9clench\u00e9. (React utilise <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Object/is\">l\u2019algorithme de comparaison <code class=\"language-javascript\">Object.is</code></a>.)</p>\n<p>Remarquez que React peut quand m\u00eame avoir besoin d\u2019afficher ce composant \u00e0 nouveau avant d\u2019abandonner. \u00c7a ne devrait pas pose probl\u00e8me car React n\u2019ira pas \u00ab\u00a0plus profond\u00e9ment\u00a0\u00bb dans l\u2019arbre. Si vous effectuez des calculs co\u00fbteux lors du rendu, vous pouvez les optimiser avec <code class=\"language-javascript\">useMemo</code>.</p>\n<h3 id=\"useeffect\"><a class=\"anchor\" href=\"/react/hooks-reference#useeffect\"></a><code class=\"language-javascript\">useEffect</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>didUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Accepte une fonction qui contient du code imp\u00e9ratif, pouvant \u00e9ventuellement produire des effets.</p>\n<p>L\u2019utilisation de mutations, abonnements, horloges, messages de journalisation, et autres effets de bord n\u2019est pas autoris\u00e9e au sein du corps principal d\u2019une fonction composant (qu\u2019on appelle la <em>phase de rendu</em> de React). Autrement \u00e7a pourrait entra\u00eener des bugs d\u00e9concertants et des incoh\u00e9rences dans l\u2019interface utilisateur (UI).</p>\n<p> Pour ce faire, utilisez plut\u00f4t <code class=\"language-javascript\">useEffect</code>. La fonction fournie \u00e0 <code class=\"language-javascript\">useEffect</code> sera ex\u00e9cut\u00e9e apr\u00e8s que le rendu est apparu sur l\u2019\u00e9cran. Vous pouvez consid\u00e9rer les effets comme des \u00e9chappatoires pour passer du monde purement fonctionnel de React au monde imp\u00e9ratif.</p>\n<p>Par d\u00e9faut, les effets de bord s\u2019ex\u00e9cutent apr\u00e8s chaque rendu, mais vous pouvez choisir d\u2019en ex\u00e9cuter certains <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">uniquement quand certaines valeurs ont chang\u00e9</a>.</p>\n<h4 id=\"cleaning-up-an-effect\"><a class=\"anchor\" href=\"/react/hooks-reference#cleaning-up-an-effect\"></a>Nettoyage d\u2019un effet de bord </h4>\n<p>Souvent, les effets de bord cr\u00e9ent des ressources qui n\u00e9cessitent d\u2019\u00eatre nettoy\u00e9es avant que le composant ne quitte l\u2019\u00e9cran, telles qu\u2019un abonnement ou l\u2019ID d\u2019une horloge. Pour ce faire, la fonction fournie \u00e0 <code class=\"language-javascript\">useEffect</code> peut renvoyer une fonction de nettoyage. Par exemple, pour cr\u00e9er un abonnement\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> subscription <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Nettoyage de l'abonnement</span>\n    subscription<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>La fonction de nettoyage est ex\u00e9cut\u00e9e avant que le composant ne soit retir\u00e9 de l\u2019UI pour \u00e9viter les fuites de m\u00e9moire. Par ailleurs, si un composant s\u2019affiche plusieurs fois (comme c\u2019est typiquement le cas), <strong>l\u2019effet de bord pr\u00e9c\u00e9dent est nettoy\u00e9 avant l\u2019ex\u00e9cution du prochain effet de bord</strong>. Dans notre exemple, \u00e7a veut dire qu\u2019un nouvel abonnement est cr\u00e9\u00e9 \u00e0 chaque mise \u00e0 jour. Pour \u00e9viter d\u2019ex\u00e9cuter un effet de bord \u00e0 chaque mise \u00e0 jour, voyez la section sur l\u2019ex\u00e9cution conditionnelle un peu plus loin.</p>\n<h4 id=\"timing-of-effects\"><a class=\"anchor\" href=\"/react/hooks-reference#timing-of-effects\"></a>Moment d\u2019ex\u00e9cution des effets de bord </h4>\n<p>Contrairement \u00e0 <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>, la fonction fournie \u00e0 <code class=\"language-javascript\">useEffect</code> est ex\u00e9cut\u00e9e de fa\u00e7on diff\u00e9r\u00e9e, <strong>apr\u00e8s</strong> la mise en page et l\u2019affichage. <code class=\"language-javascript\">useEffect</code> est donc bien adapt\u00e9 pour une grande partie des effets de bord, comme la mise en place d\u2019abonnements et de gestionnaires d\u2019\u00e9v\u00e9nements, puisque la plupart des types de t\u00e2che ne devraient pas g\u00eaner la mise \u00e0 jour de l\u2019affichage par le navigateur.</p>\n<p>Cependant, tous les effets de bord ne peuvent pas \u00eatre diff\u00e9r\u00e9s. Par exemple, une mutation du DOM qui est visible pour l\u2019utilisateur doit s\u2019ex\u00e9cuter de mani\u00e8re synchrone avant l\u2019affichage suivant, afin que l\u2019utilisateur ne puisse pas percevoir une incoh\u00e9rence visuelle. (La distinction est conceptuellement similaire \u00e0 celle entre \u00e9couteur d\u2019\u00e9v\u00e9nement passif et actif.) Pour ces types d\u2019effets de bord, React fournit un Hook suppl\u00e9mentaire appel\u00e9 <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a>. Il a la m\u00eame signature que <code class=\"language-javascript\">useEffect</code>, et s\u2019en distingue seulement par le moment o\u00f9 il s\u2019ex\u00e9cute.</p>\n<p>Bien que <code class=\"language-javascript\">useEffect</code> soit diff\u00e9r\u00e9 jusqu\u2019\u00e0 ce que le navigateur ait termin\u00e9 l\u2019affichage, son ex\u00e9cution est garantie avant les rendus ult\u00e9rieurs. React traitera toujours les effets de bord des rendus pr\u00e9c\u00e9dents avant de commencer une nouvelle mise \u00e0 jour.</p>\n<h4 id=\"conditionally-firing-an-effect\"><a class=\"anchor\" href=\"/react/hooks-reference#conditionally-firing-an-effect\"></a>Ex\u00e9cution conditionnelle d\u2019un effet de bord </h4>\n<p>Le comportement par d\u00e9faut des effets de bord consiste \u00e0 ex\u00e9cuter l\u2019effet apr\u00e8s chaque affichage. Ainsi, un effet est toujours recr\u00e9\u00e9 si une de ses entr\u00e9es (les donn\u00e9es dont il d\u00e9pend) change.</p>\n<p>Cependant, \u00e7a pourrait \u00eatre exag\u00e9r\u00e9 dans certains cas, comme dans l\u2019exemple avec l\u2019abonnement dans la section pr\u00e9c\u00e9dente. On n\u2019a pas besoin d\u2019un nouvel abonnement \u00e0 chaque mise \u00e0 jour, mais seulement si la prop <code class=\"language-javascript\">source</code> a chang\u00e9.</p>\n<p>Pour mettre \u00e7a en \u0153uvre, fournissez un deuxi\u00e8me argument \u00e0 <code class=\"language-javascript\">useEffect</code> qui consiste en un tableau de valeurs dont l\u2019effet d\u00e9pend. Notre exemple mis \u00e0 jour ressemble maintenant \u00e0 \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> subscription <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      subscription<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>L\u2019abonnement sera maintenant recr\u00e9\u00e9 uniquement quand <code class=\"language-javascript\">props.source</code> change.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Si vous utilisez cette optimisation, assurez-vous que votre tableau inclut bien <strong>toutes les valeurs dans la port\u00e9e du composant (telles que les props et l\u2019\u00e9tat local) qui peuvent changer avec le temps et sont utilis\u00e9es par l\u2019effet</strong>. Sinon, votre code va r\u00e9f\u00e9rencer des valeurs obsol\u00e8tes issues des rendus pr\u00e9c\u00e9dents.  Vous pouvez en apprendre davantage sur <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">la fa\u00e7on de g\u00e9rer les d\u00e9pendances \u00e0 des fonctions</a> et comment faire quand <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">les d\u00e9pendances list\u00e9es changent trop souvent</a>.</p>\n<p>Si vous voulez ex\u00e9cuter un effet et le nettoyer une seule fois (au montage puis au d\u00e9montage), vous pouvez passer un tableau vide (<code class=\"language-javascript\">[]</code>) comme deuxi\u00e8me argument.  \u00c7a indique \u00e0 React que votre effet ne d\u00e9pend <em>d\u2019aucune</em> valeur issue des props ou de l\u2019\u00e9tat local, donc il n\u2019a jamais besoin d\u2019\u00eatre r\u00e9-ex\u00e9cut\u00e9.  Il ne s\u2019agit pas d\u2019un cas particulier : \u00e7a d\u00e9coule directement de la fa\u00e7on dont le tableau des d\u00e9pendances fonctionne.</p>\n<p>Si vous passez un tableau vide (<code class=\"language-javascript\">[]</code>), les props et l\u2019\u00e9tat local vus depuis l\u2019int\u00e9rieur de l\u2019effet feront toujours r\u00e9f\u00e9rence \u00e0 leurs valeurs initiales.  M\u00eame si passer <code class=\"language-javascript\">[]</code> comme deuxi\u00e8me argument vous rapproche du mod\u00e8le mental habituel de <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentWillUnmount</code>, il y a en g\u00e9n\u00e9ral de <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">meilleures</a> <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">solutions</a> pour \u00e9viter de r\u00e9-ex\u00e9cuter les effets trop souvent. Par ailleurs, ne perdez pas de vue que React d\u00e9f\u00e8re l\u2019ex\u00e9cution de <code class=\"language-javascript\">useEffect</code> jusqu\u2019\u00e0 ce que la navigateur ait fini de rafra\u00eechir l\u2019affichage, du coup y faire plus de travail est moins un probl\u00e8me.</p>\n<p>Nous vous conseillons d\u2019utiliser la r\u00e8gle <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> fournie par le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous avertira si des d\u00e9pendances sont mal sp\u00e9cifi\u00e9es et vous sugg\u00e8rera un correctif.</p>\n</div>\n<p>Le tableau d\u2019entr\u00e9es n\u2019est pas fourni comme argument \u00e0 la fonction d\u2019effet. Conceptuellement cependant, c\u2019est en quelque sorte ce qui se passe\u00a0: chaque valeur r\u00e9f\u00e9renc\u00e9e dans la fonction d\u2019effet devrait aussi appara\u00eetre dans le tableau d\u2019entr\u00e9es. \u00c0 l\u2019avenir, un compilateur suffisamment avanc\u00e9 pourrait cr\u00e9er ce tableau automatiquement.</p>\n<h3 id=\"usecontext\"><a class=\"anchor\" href=\"/react/hooks-reference#usecontext\"></a><code class=\"language-javascript\">useContext</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>MyContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Accepte un objet contexte (la valeur renvoy\u00e9e par <code class=\"language-javascript\">React.createContext</code>), et renvoie la valeur actuelle du contexte. Celle-ci est d\u00e9termin\u00e9e par la prop <code class=\"language-javascript\">value</code> du plus proche <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code> au-dessus du composant dans l\u2019arbre.</p>\n<p>Quand le plus proche <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code> au-dessus du composant est mis \u00e0 jour, ce Hook va d\u00e9clencher un rafra\u00eechissement avec la <code class=\"language-javascript\">value</code> la plus r\u00e9cente pass\u00e9e au fournisseur <code class=\"language-javascript\">MyContext</code>.  M\u00eame si un anc\u00eatre utilise <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a> ou <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate</code></a>, le rendu aura quand m\u00eame \u00e0 nouveau lieu \u00e0 partir du composant qui recourt \u00e0 <code class=\"language-javascript\">useContext</code>.</p>\n<p>N\u2019oubliez pas que l\u2019argument de <code class=\"language-javascript\">useContext</code> doit \u00eatre <em>l\u2019objet contexte lui-m\u00eame</em>\u00a0:</p>\n<ul>\n<li><strong>Correct\u00a0:</strong> <code class=\"language-javascript\">useContext(MyContext)</code></li>\n<li><strong>Erron\u00e9\u00a0:</strong> <code class=\"language-javascript\">useContext(MyContext.Consumer)</code></li>\n<li><strong>Erron\u00e9\u00a0:</strong> <code class=\"language-javascript\">useContext(MyContext.Provider)</code></li>\n</ul>\n<p>Un composant qui appelle <code class=\"language-javascript\">useContext</code> se rafra\u00eechira toujours quand la valeur du contexte change.  Si ce rafra\u00eechissement est co\u00fbteux, vous pouvez <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/15156#issuecomment-474590693\">l\u2019optimiser gr\u00e2ce \u00e0 la m\u00e9mo\u00efsation</a>.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Si vous aviez l\u2019habitude de l\u2019API de Contexte avant les Hooks, <code class=\"language-javascript\">useContext(MyContext)</code> est \u00e9quivalent \u00e0 <code class=\"language-javascript\">static contextType = MyContext</code> dans une classe, ou \u00e0 <code class=\"language-javascript\">&lt;MyContext.Consumer&gt;</code>.</p>\n<p><code class=\"language-javascript\">useContext(MyContext)</code> vous permet seulement de <em>lire</em> le contexte et de vous abonner \u00e0 ses modifications.  Vous aurez toujours besoin d\u2019un <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code> plus haut dans l\u2019arbre pour <em>fournir</em> une valeur de contexte.</p>\n</div>\n<p><strong>Un exemple consolid\u00e9 avec Context.Provider</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">\"#eeeeee\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  dark<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">\"#222222\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span>themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemedButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>foreground <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      Je suis styl\u00e9 par le contexte de th\u00e8me !</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cet exemple est une version modifi\u00e9e pour utiliser les Hooks de l\u2019exemple dans le <a href=\"/react/context\">guide avanc\u00e9 des Contextes</a>, au sein duquel vous pourrez trouver davantage d\u2019informations sur l\u2019utilisation appropri\u00e9e de Context.</p>\n<h2 id=\"additional-hooks\"><a class=\"anchor\" href=\"/react/hooks-reference#additional-hooks\"></a>Hooks suppl\u00e9mentaires </h2>\n<p>Les Hooks qui suivent sont soit des variantes des Hooks basiques des sections pr\u00e9c\u00e9dentes, soit seulement n\u00e9cessaires pour des cas \u00e0 la marge sp\u00e9cifiques. Ne vous sentez pas oblig\u00e9\u00b7e de les apprendre d\u00e8s le d\u00e9part.</p>\n<h3 id=\"usereducer\"><a class=\"anchor\" href=\"/react/hooks-reference#usereducer\"></a><code class=\"language-javascript\">useReducer</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialArg<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Alternative \u00e0 <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a>. Accepte un r\u00e9ducteur de type <code class=\"language-javascript\">(state, action) =&gt; newState</code>, et renvoie l\u2019\u00e9tat local actuel accompagn\u00e9 d\u2019une m\u00e9thode <code class=\"language-javascript\">dispatch</code>. (Si vous avez l\u2019habitude de Redux, vous savez d\u00e9j\u00e0 comment \u00e7a fonctionne.)</p>\n<p><code class=\"language-javascript\">useReducer</code> est souvent pr\u00e9f\u00e9rable \u00e0 <code class=\"language-javascript\">useState</code> quand vous avez une logique d\u2019\u00e9tat local complexe qui comprend plusieurs sous-valeurs, ou quand l\u2019\u00e9tat suivant d\u00e9pend de l\u2019\u00e9tat pr\u00e9c\u00e9dent. <code class=\"language-javascript\">useReducer</code> vous permet aussi d\u2019optimiser les performances pour des composants qui d\u00e9clenchent des mises \u00e0 jours profondes puisque <a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">vous pouvez fournir <code class=\"language-javascript\">dispatch</code> \u00e0 la place de fonctions de rappel</a>.</p>\n<p>Voici l\u2019exemple du composant compteur du paragraphe <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a> r\u00e9-\u00e9crit avec un r\u00e9ducteur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'increment'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'decrement'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Total : </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'decrement'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'increment'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React garantit que l\u2019identit\u00e9 de la fonction <code class=\"language-javascript\">dispatch</code> est stable et ne changera pas d\u2019un rendu \u00e0 l\u2019autre. C\u2019est pourquoi on peut l\u2019omettre de la liste des d\u00e9pendances de <code class=\"language-javascript\">useEffect</code> et <code class=\"language-javascript\">useCallback</code> en toute s\u00e9curit\u00e9.</p>\n</div>\n<h4 id=\"specifying-the-initial-state\"><a class=\"anchor\" href=\"/react/hooks-reference#specifying-the-initial-state\"></a>Pr\u00e9ciser l\u2019\u00e9tat local initial </h4>\n<p>Il existe deux mani\u00e8res diff\u00e9rentes d\u2019initialiser l\u2019\u00e9tat de <code class=\"language-javascript\">useReducer</code>. Vous pouvez choisir l\u2019une ou l\u2019autre suivant le cas. La mani\u00e8re la plus simple consiste \u00e0 fournir l\u2019\u00e9tat initial comme deuxi\u00e8me argument\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>\n    reducer<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React n\u2019utilise pas la convention d\u2019argument <code class=\"language-javascript\">state = initialState</code> popularis\u00e9e par Redux. La valeur initiale doit parfois d\u00e9pendre de props et c\u2019est donc plut\u00f4t l\u2019appel du Hook qui la pr\u00e9cise. Si vous avez d\u00e9j\u00e0 une pr\u00e9f\u00e9rence bien arr\u00eat\u00e9e l\u00e0-dessus, vous pouvez utiliser <code class=\"language-javascript\">useReducer(reducer, undefined, reducer)</code> pour simuler le comportement de Redux, mais nous ne vous le conseillons pas.</p>\n</div>\n<h4 id=\"lazy-initialization\"><a class=\"anchor\" href=\"/react/hooks-reference#lazy-initialization\"></a>Initialisation paresseuse </h4>\n<p>Vous pouvez aussi cr\u00e9er l\u2019\u00e9tat local initial paresseusement. Pour ce faire, vous pouvez fournir une fonction <code class=\"language-javascript\">init</code> comme troisi\u00e8me argument. L\u2019\u00e9tat initial sera alors \u00e9gal \u00e0 <code class=\"language-javascript\">init(initialArg)</code>.</p>\n<p>\u00c7a vous permet d\u2019extraire la logique pour calculer l\u2019\u00e9tat local initial hors du r\u00e9ducteur. C\u2019est aussi pratique pour r\u00e9initialiser l\u2019\u00e9tat local en r\u00e9ponse \u00e0 une action ult\u00e9rieure\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialCount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'increment'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'decrement'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">case</span> <span class=\"token string\">'reset'</span><span class=\"token operator\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>initialCount<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialCount<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Total : </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'reset'</span><span class=\"token punctuation\">,</span> payload<span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        R\u00e9initialiser</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'decrement'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'increment'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"bailing-out-of-a-dispatch\"><a class=\"anchor\" href=\"/react/hooks-reference#bailing-out-of-a-dispatch\"></a>Abandon d\u2019un dispatch </h4>\n<p>Si vous renvoyez la m\u00eame valeur que l\u2019\u00e9tat actuel dans un Hook de r\u00e9duction, React abandonnera la mise \u00e0 jour, ce qui signifie qu\u2019aucun nouveau rendu des enfants ne sera effectu\u00e9 et qu\u2019aucun effet ne sera d\u00e9clench\u00e9. (React utilise <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Object/is\">l\u2019algorithme de comparaison <code class=\"language-javascript\">Object.is</code></a>.)</p>\n<p>Remarquez que React pourrait encore avoir besoin de mettre \u00e0 jour ce composant sp\u00e9cifique avant de l\u00e2cher l\u2019affaire. \u00c7a ne devrait pas vous soucier car React n\u2019ira pas inutilement \u00ab\u00a0plus profond\u00a0\u00bb dans l\u2019arbre. Si vous effectuez des calculs co\u00fbteux lors du rendu, vous pouvez les optimiser avec <code class=\"language-javascript\">useMemo</code>.</p>\n<h3 id=\"usecallback\"><a class=\"anchor\" href=\"/react/hooks-reference#usecallback\"></a><code class=\"language-javascript\">useCallback</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedCallback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Renvoie une fonction de rappel <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/M%C3%A9mo%C3%AFsation\">m\u00e9mo\u00efs\u00e9e</a></p>\n<p>Fournissez une fonction de rappel et un tableau d\u2019entr\u00e9es. <code class=\"language-javascript\">useCallback</code> renverra une version m\u00e9mo\u00efs\u00e9e de la fonction de rappel qui changera uniquement si une des entr\u00e9es a chang\u00e9. C\u2019est utile pour passer des fonctions de rappel \u00e0 des composants enfants optimis\u00e9s qui se basent sur une \u00e9galit\u00e9 r\u00e9f\u00e9rentielle pour \u00e9viter des rendus superflus (par exemple avec <code class=\"language-javascript\">shouldComponentUpdate</code>).</p>\n<p><code class=\"language-javascript\">useCallback(fn, inputs)</code> est \u00e9quivalent \u00e0 <code class=\"language-javascript\">useMemo(() =&gt; fn, inputs)</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le tableau d\u2019entr\u00e9es n\u2019est pas fourni comme argument \u00e0 la fonction de rappel. Conceptuellement cependant, c\u2019est en quelque sorte ce qui se passe\u00a0: chaque valeur r\u00e9f\u00e9renc\u00e9e dans la fonction de rappel devrait aussi appara\u00eetre dans le tableau d\u2019entr\u00e9es. \u00c0 l\u2019avenir, un compilateur suffisamment avanc\u00e9 pourrait cr\u00e9er ce tableau automatiquement.</p>\n<p>Nous vous conseillons d\u2019utiliser la r\u00e8gle <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> fournie par le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous avertira si des d\u00e9pendances sont mal sp\u00e9cifi\u00e9es et vous sugg\u00e8rera un correctif.</p>\n</div>\n<h3 id=\"usememo\"><a class=\"anchor\" href=\"/react/hooks-reference#usememo\"></a><code class=\"language-javascript\">useMemo</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Renvoie une valeur <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/M%C3%A9mo%C3%AFsation\">m\u00e9mo\u00efs\u00e9e</a></p>\n<p>Fournissez une fonction de \u00ab\u00a0cr\u00e9ation\u00a0\u00bb et un tableau d\u2019entr\u00e9es. <code class=\"language-javascript\">useMemo</code> recalculera la valeur m\u00e9mo\u00efs\u00e9e seulement si une des entr\u00e9es a chang\u00e9. Cette optimisation permet d\u2019\u00e9viter des calculs co\u00fbteux \u00e0 chaque rendu.</p>\n<p>Rappelez-vous que la fonction fournie \u00e0 <code class=\"language-javascript\">useMemo</code> s\u2019ex\u00e9cute pendant le rendu. N\u2019y faites rien que vous ne feriez pas normalement pendant un rendu. Par exemple, les effets de bord doivent passer par <code class=\"language-javascript\">useEffect</code>, et non <code class=\"language-javascript\">useMemo</code>.</p>\n<p>Si vous ne fournissez aucun tableau, une nouvelle valeur sera calcul\u00e9e \u00e0 chaque appel.</p>\n<p><strong>Vous pouvez vous appuyer sur <code class=\"language-javascript\">useMemo</code> comme un moyen d\u2019optimiser les performances, mais pas comme une garantie s\u00e9mantique.</strong> \u00c0 l\u2019avenir, React pourrait choisir \u00ab\u00a0d\u2019oublier\u00a0\u00bb certaines valeurs pr\u00e9c\u00e9demment m\u00e9mo\u00efs\u00e9es et de les recalculer au rendu suivant, par exemple pour lib\u00e9rer la m\u00e9moire exploit\u00e9e par des composants pr\u00e9sents hors de l\u2019\u00e9cran. \u00c9crivez votre code de fa\u00e7on \u00e0 ce qu\u2019il fonctionne sans <code class=\"language-javascript\">useMemo</code> et ajoutez-le ensuite pour optimiser les performances.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le tableau d\u2019entr\u00e9es n\u2019est pas fourni comme argument \u00e0 la fonction. Conceptuellement cependant, c\u2019est en quelque sorte ce qui se passe\u00a0: chaque valeur r\u00e9f\u00e9renc\u00e9e dans la fonction devrait aussi appara\u00eetre dans le tableau d\u2019entr\u00e9es. \u00c0 l\u2019avenir, un compilateur suffisamment avanc\u00e9 pourrait cr\u00e9er ce tableau automatiquement.</p>\n<p>Nous vous conseillons d\u2019utiliser la r\u00e8gle <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> fournie par le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous avertira si des d\u00e9pendances sont mal sp\u00e9cifi\u00e9es et vous sugg\u00e8rera un correctif.</p>\n</div>\n<h3 id=\"useref\"><a class=\"anchor\" href=\"/react/hooks-reference#useref\"></a><code class=\"language-javascript\">useRef</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> refContainer <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useRef</code> renvoie un objet ref modifiable dont la propri\u00e9t\u00e9 <code class=\"language-javascript\">current</code> est initialis\u00e9e avec l\u2019argument fourni (<code class=\"language-javascript\">initialValue</code>). L\u2019objet renvoy\u00e9 persistera pendant toute la dur\u00e9e de vie du composant.</p>\n<p>Un cas d\u2019usage courant consiste \u00e0 acc\u00e9der \u00e0 un enfant de mani\u00e8re imp\u00e9rative\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">TextInputWithFocusButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputEl <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onButtonClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// `current` fait r\u00e9f\u00e9rence au champ textuel mont\u00e9 dans le DOM</span>\n    inputEl<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputEl<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onButtonClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Donner le focus au champ</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En gros, <code class=\"language-javascript\">useRef</code> est comme une \u00ab bo\u00eete \u00bb qui pourrait contenir une valeur modifiable dans sa propri\u00e9t\u00e9 <code class=\"language-javascript\">.current</code>.</p>\n<p>Vous avez peut-\u00eatre l\u2019habitude d\u2019utiliser des refs principalement pour <a href=\"/react/refs-and-the-dom\">acc\u00e9der au DOM</a>.  Si vous passez un objet ref \u00e0 React avec <code class=\"language-javascript\">&lt;div ref={myRef} /&gt;</code>, React calera sa propri\u00e9t\u00e9 <code class=\"language-javascript\">.current</code> sur le n\u0153ud DOM correspondant chaque fois que ce dernier change.</p>\n<p>Ceci dit, <code class=\"language-javascript\">useRef()</code> est utile au-del\u00e0 du seul attribut <code class=\"language-javascript\">ref</code>. C\u2019est <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">pratique pour garder des valeurs modifiables sous la main</a>, comme lorsque vous utilisez des champs d\u2019instance dans les classes.</p>\n<p>\u00c7a fonctionne parce que <code class=\"language-javascript\">useRef()</code> cr\u00e9e un objet JavaScript brut.  La seule diff\u00e9rence entre <code class=\"language-javascript\">useRef()</code> et la cr\u00e9ation manuelle d\u2019un objet <code class=\"language-javascript\">{current: ... }</code>, c\u2019est que <code class=\"language-javascript\">useRef</code> vous donnera le m\u00eame objet \u00e0 chaque rendu.</p>\n<p>Gardez \u00e0 l\u2019esprit que <code class=\"language-javascript\">useRef</code> <em>ne vous notifie pas</em> quand le contenu change.  Modifier la propri\u00e9t\u00e9 <code class=\"language-javascript\">.current</code> n\u2019entra\u00eene pas un rafra\u00eechissement.  Si vous voulez ex\u00e9cuter du code quand React attache ou d\u00e9tache une ref sur un n\u0153ud DOM, vous voudrez sans doute utiliser plut\u00f4t une <a href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\">ref \u00e0 base de fonction de rappel</a>.</p>\n<h3 id=\"useimperativehandle\"><a class=\"anchor\" href=\"/react/hooks-reference#useimperativehandle\"></a><code class=\"language-javascript\">useImperativeHandle</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> createHandle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>deps<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">useImperativeHandle</code> personnalise l\u2019instance qui est expos\u00e9e au composant parent lors de l\u2019utilisation de <code class=\"language-javascript\">ref</code>. Comme toujours, il vaut mieux s\u2019abstenir d\u2019utiliser du code imp\u00e9ratif manipulant des refs dans la plupart des cas. <code class=\"language-javascript\">useImperativeHandle</code> est con\u00e7u pour \u00eatre utilis\u00e9 en conjonction avec <a href=\"/react/react-api#reactforwardref\"><code class=\"language-javascript\">forwardRef</code></a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">focus</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">...</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nFancyInput <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>FancyInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dans cet exemple, un composant parent qui utiliserait <code class=\"language-javascript\">&lt;FancyInput ref={inputRef} /&gt;</code> pourrait appeler <code class=\"language-javascript\">inputRef.current.focus()</code>.</p>\n<h3 id=\"uselayouteffect\"><a class=\"anchor\" href=\"/react/hooks-reference#uselayouteffect\"></a><code class=\"language-javascript\">useLayoutEffect</code> </h3>\n<p>La signature est identique \u00e0 celle de <code class=\"language-javascript\">useEffect</code>, mais <code class=\"language-javascript\">useLayoutEffect</code> s\u2019ex\u00e9cute de mani\u00e8re synchrone apr\u00e8s que toutes les mutations du DOM ont eu lieu. Utilisez-le pour inspecter la mise en page du DOM et effectuer un nouveau rendu de mani\u00e8re synchrone. Les mises \u00e0 jour planifi\u00e9es dans <code class=\"language-javascript\">useLayoutEffect</code> seront trait\u00e9es de mani\u00e8re synchrone avant que le navigateur ait pu proc\u00e9der \u00e0 l\u2019affichage.</p>\n<p>Pr\u00e9f\u00e9rez l\u2019utilisation du <code class=\"language-javascript\">useEffect</code> standard chaque fois que possible, pour \u00e9viter de bloquer les mises \u00e0 jour visuelles.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Si vous migrez du code depuis un composant \u00e9crit \u00e0 l\u2019aide d\u2019une classe, sachez que <code class=\"language-javascript\">useLayoutEffect</code> s\u2019ex\u00e9cute dans la m\u00eame phase que <code class=\"language-javascript\">componentDidMount</code> et <code class=\"language-javascript\">componentDidUpdate</code>. <strong>Nous vous conseillons de commencer avec <code class=\"language-javascript\">useEffect</code></strong>, et de ne tenter <code class=\"language-javascript\">useLayoutEffect</code> que si vous rencontrez des probl\u00e8mes.</p>\n<p>Si vous faites du rendu c\u00f4t\u00e9 serveur , n\u2019oubliez pas que <em>ni</em> <code class=\"language-javascript\">useLayoutEffect</code> ni <code class=\"language-javascript\">useEffect</code> ne seront ex\u00e9cut\u00e9s jusqu\u2019\u00e0 ce que votre code JS soit t\u00e9l\u00e9charg\u00e9 et ex\u00e9cut\u00e9 c\u00f4t\u00e9 client. C\u2019est pourquoi React vous averti quand un composant utilise <code class=\"language-javascript\">useLayoutEffect</code> dans le cadre d\u2019un rendu c\u00f4t\u00e9 serveur.  Pour corriger \u00e7a, vous pouvez soit d\u00e9placer la logique dans <code class=\"language-javascript\">useEffect</code> (si elle n\u2019est pas n\u00e9cessaire pour le premier affichage), soit reporter l\u2019affichage du composant jusqu\u2019\u00e0 ce que l\u2019affichage c\u00f4t\u00e9 client soit effectu\u00e9 (si le HTML aurait eu l\u2019air cass\u00e9 avant ex\u00e9cution du <code class=\"language-javascript\">useLayoutEffect</code>).</p>\n<p>Pour exclure un composant n\u00e9cessitant des effets de mise en page <em>(layout effects, NdT)</em> du HTML g\u00e9n\u00e9r\u00e9 c\u00f4t\u00e9 serveur, vous pouvez l\u2019afficher conditionnellement avec un <code class=\"language-javascript\">showChild &amp;&amp; &lt;Child /&gt;</code>, et diff\u00e9rer son affichage gr\u00e2ce \u00e0 un <code class=\"language-javascript\">useEffect(() =&gt; { setShowChild(true); }, [])</code>.  Ainsi, l\u2019UI ne semblera pas cass\u00e9 avec son hydratation.</p>\n</div>\n<h3 id=\"usedebugvalue\"><a class=\"anchor\" href=\"/react/hooks-reference#usedebugvalue\"></a><code class=\"language-javascript\">useDebugValue</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Vous pouvez utiliser <code class=\"language-javascript\">useDebugValue</code> pour afficher une \u00e9tiquette pour les Hooks personnalis\u00e9s dans les outils de d\u00e9veloppement React <em>(React DevTools, NdT)</em>.</p>\n<p>Par exemple, prenez le hook personnalis\u00e9 <code class=\"language-javascript\">useFriendStatus</code> d\u00e9crit dans <a href=\"/react/hooks-custom\">\u00ab\u00a0Construire vos propres Hooks\u00a0\u00bb</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Affiche une \u00e9tiquette dans les DevTools \u00e0 c\u00f4t\u00e9 de ce Hook</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// par exemple, \"FriendStatus: En ligne\"</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'En ligne'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Hors-ligne'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Nous d\u00e9conseillons d\u2019ajouter ces \u00e9tiquettes \u00e0 chaque Hook personnalis\u00e9. C\u2019est surtout utile pour les Hooks personnalis\u00e9s provenant de biblioth\u00e8ques partag\u00e9es.</p>\n</div>\n<h4 id=\"defer-formatting-debug-values\"><a class=\"anchor\" href=\"/react/hooks-reference#defer-formatting-debug-values\"></a>Diff\u00e9rer le formatage des valeurs de d\u00e9bogage </h4>\n<p>Formater une valeur \u00e0 afficher peut parfois s\u2019av\u00e9rer co\u00fbteux. C\u2019est par ailleurs inutile tant que le Hook n\u2019est pas effectivement inspect\u00e9.</p>\n<p>C\u2019est pourquoi <code class=\"language-javascript\">useDebugValue</code> accepte une fonction de formatage comme deuxi\u00e8me argument optionnel. Cette fonction est appel\u00e9e uniquement si les Hooks sont inspect\u00e9s. Elle re\u00e7oit la valeur de d\u00e9bogage comme argument et devrait renvoyer la valeur format\u00e9e.</p>\n<p>Par exemple, un Hook personnalis\u00e9 qui renvoie une valeur <code class=\"language-javascript\">Date</code> pourrait \u00e9viter d\u2019appeler inutilement la fonction <code class=\"language-javascript\">toDateString</code> en fournissant le formateur suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token parameter\">date</span> <span class=\"token operator\">=&gt;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">toDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-reference.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-reference", "nav": ["/react/hooks-custom", "/react/hooks-faq"]}, {"key": "8. FAQ des Hooks", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Les <em>Hooks</em> sont une nouveaut\u00e9 de React 16.8. Ils permettent de b\u00e9n\u00e9ficier d\u2019un \u00e9tat local et d\u2019autres fonctionnalit\u00e9s de React sans avoir \u00e0 \u00e9crire de classes.</p>\n<p>Cette page contient les r\u00e9ponses aux questions les plus fr\u00e9quentes sur les <a href=\"/react/hooks-overview\">Hooks</a>.</p>\n<!--\n  if you ever need to regenerate this, this snippet in the devtools console might help:\n\n  $$('.anchor').map(a =>\n    `${' '.repeat(2 * +a.parentNode.nodeName.slice(1))}` +\n    `[${a.parentNode.textContent}](${a.getAttribute('href')})`\n  ).join('\\n')\n-->\n<ul>\n<li>\n<p><strong><a href=\"/react/hooks-faq#adoption-strategy\">Strat\u00e9gie d\u2019adoption</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#which-versions-of-react-include-hooks\">Quelles versions de React incluent les Hooks\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#do-i-need-to-rewrite-all-my-class-components\">Dois-je r\u00e9\u00e9crire tous mes composants \u00e0 base de classe\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-can-i-do-with-hooks-that-i-couldnt-with-classes\">Que puis-je faire avec les Hooks qu\u2019il est impossible de faire avec des classes\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-much-of-my-react-knowledge-stays-relevant\">Quelle proportion de mes connaissances en React reste pertinente\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#should-i-use-hooks-classes-or-a-mix-of-both\">Dois-je utiliser des Hooks, des classes ou un m\u00e9lange des deux\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-cover-all-use-cases-for-classes\">Est-ce que les Hooks couvrent tous les cas d\u2019utilisation des classes\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-replace-render-props-and-higher-order-components\">Est-ce que les Hooks remplacent les props de rendu et les composants d\u2019ordre sup\u00e9rieur\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\">Qu\u2019est-ce que les Hooks changent pour les API populaires telles que Redux <code class=\"language-javascript\">connect()</code> et React Router\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-work-with-static-typing\">Est-ce que les Hooks sont compatibles avec le typage statique\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-test-components-that-use-hooks\">Comment tester des composants utilisant des Hooks\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-exactly-do-the-lint-rules-enforce\">Qu\u2019est-ce que les r\u00e8gles de linting imposent\u00a0?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#from-classes-to-hooks\">Des classes aux Hooks</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#how-do-lifecycle-methods-correspond-to-hooks\">Quelles sont les correspondances entre les m\u00e9thodes de cycle de vie et les Hooks\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-can-i-do-data-fetching-with-hooks\">Comment charger des donn\u00e9es distantes avec les Hooks\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">Existe-t-il un \u00e9quivalent aux variables d\u2019instances\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\">Dois-je utiliser une ou plusieurs variables d\u2019\u00e9tat local\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\">Puis-je ex\u00e9cuter un effet seulement lors des mises \u00e0 jour\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-get-the-previous-props-or-state\">Comment r\u00e9cup\u00e9rer les props ou l\u2019\u00e9tat local pr\u00e9c\u00e9dents\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#why-am-i-seeing-stale-props-or-state-inside-my-function\">Pourquoi vois-je des props ou un \u00e9tat local obsol\u00e8tes dans ma fonction\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">Comment puis-je impl\u00e9menter <code class=\"language-javascript\">getDerivedStateFromProps</code>\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#is-there-something-like-forceupdate\">Existe-t-il un \u00e9quivalent \u00e0 <code class=\"language-javascript\">forceUpdate</code>\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#can-i-make-a-ref-to-a-function-component\">Puis-je cr\u00e9er une ref vers une fonction composant\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\">Comment puis-je mesurer un n\u0153ud DOM\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-does-const-thing-setthing--usestate-mean\">Que signifie <code class=\"language-javascript\">const [thing, setThing] = useState()</code>\u00a0?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#performance-optimizations\">Optimisations des performances</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\">Puis-je sauter un effet lors des mises \u00e0 jour\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">Est-il acceptable d\u2019omettre les fonctions du tableau de d\u00e9pendances\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">Que faire quand mes d\u00e9pendances d\u2019effet changent trop souvent\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\">Comment puis-je impl\u00e9menter <code class=\"language-javascript\">shouldComponentUpdate</code>\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-memoize-calculations\">Comment m\u00e9mo\u00efser les calculs\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">Comment cr\u00e9er paresseusement des objets co\u00fbteux\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#are-hooks-slow-because-of-creating-functions-in-render\">La cr\u00e9ation de fonctions \u00e0 la vol\u00e9e pendant le rendu ralentit-elle les Hooks\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">Comment \u00e9viter de transmettre des fonctions de rappel\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-read-an-often-changing-value-from-usecallback\">Comment lire une valeur changeant fr\u00e9quemment avec <code class=\"language-javascript\">useCallback</code>\u00a0?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#under-the-hood\">Sous le capot</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\">Comment React associe-t-il les appels de Hooks avec les composants\u00a0?</a></li>\n<li><a href=\"/react/hooks-faq#what-is-the-prior-art-for-hooks\">Quelles sont les sources d\u2019inspiration des Hooks\u00a0?</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"adoption-strategy\"><a class=\"anchor\" href=\"/react/hooks-faq#adoption-strategy\"></a>Strat\u00e9gie d\u2019adoption </h2>\n<h3 id=\"which-versions-of-react-include-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#which-versions-of-react-include-hooks\"></a>Quelles versions de React incluent les Hooks\u00a0? </h3>\n<p>Depuis la version 16.8.0, React embarque une impl\u00e9mentation stable de React Hooks pour\u00a0:</p>\n<ul>\n<li>React DOM</li>\n<li>React Native</li>\n<li>React DOM Server</li>\n<li>Le moteur de rendu de test de React</li>\n<li>Le moteur de rendu superficiel de React</li>\n</ul>\n<p>Remarquez que <strong>pour activer les Hooks, tous les paquets React doivent \u00eatre en version 16.8.0 ou sup\u00e9rieure</strong>. Les Hooks ne fonctionneront pas si vous oubliez de mettre \u00e0 jour React DOM, par exemple.</p>\n<p><a class=\"external-link\" href=\"https://reactnative.dev/blog/2019/03/12/releasing-react-native-059\">React Native 0.59</a> et ult\u00e9rieurs prennent en charge les Hooks.</p>\n<h3 id=\"do-i-need-to-rewrite-all-my-class-components\"><a class=\"anchor\" href=\"/react/hooks-faq#do-i-need-to-rewrite-all-my-class-components\"></a>Dois-je r\u00e9\u00e9crire tous mes composants \u00e0 base de classe\u00a0? </h3>\n<p>Non. Il n\u2019est <a href=\"/react/hooks-intro#gradual-adoption-strategy\">pas pr\u00e9vu</a> de retirer les classes de React\u00a0: nous avons tous besoin de continuer \u00e0 livrer nos produits et ne pouvons pas nous permettre de r\u00e9\u00e9crire tout le code. Nous recommandons d\u2019essayer les Hooks dans de nouveaux composants et projets.</p>\n<h3 id=\"what-can-i-do-with-hooks-that-i-couldnt-with-classes\"><a class=\"anchor\" href=\"/react/hooks-faq#what-can-i-do-with-hooks-that-i-couldnt-with-classes\"></a>Que puis-je faire avec les Hooks qu\u2019il est impossible de faire avec des classes\u00a0? </h3>\n<p>Les Hooks offrent un nouveau moyen puissant et expressif de r\u00e9utiliser des fonctionnalit\u00e9s entre composants. <a href=\"/react/hooks-custom\">\u00ab\u00a0Contruire vos propres Hooks\u00a0\u00bb</a> offre un aper\u00e7u des possibilit\u00e9s. <a class=\"external-link\" href=\"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889\">Cet article</a> (en anglais) \u00e9crit par un membre de l\u2019\u00e9quipe noyau de React explore plus en d\u00e9tail les nouvelles possibilit\u00e9s apport\u00e9es par les Hooks.</p>\n<h3 id=\"how-much-of-my-react-knowledge-stays-relevant\"><a class=\"anchor\" href=\"/react/hooks-faq#how-much-of-my-react-knowledge-stays-relevant\"></a>Quelle proportion de mes connaissances en React reste pertinente\u00a0? </h3>\n<p>Les Hooks sont un moyen plus direct d\u2019utiliser les fonctionnalit\u00e9s de React que vous connaissez d\u00e9j\u00e0, telles que l\u2019\u00e9tat local, le cycle de vie, le contexte et les refs. Ils ne changent pas fondamentalement la fa\u00e7on dont React fonctionne, et vos connaissances des composants, des props, et du flux de donn\u00e9es descendant sont toujours valides.</p>\n<p>Les Hooks ont tout de m\u00eame une courbe d\u2019apprentissage. Si quelque chose manque dans leur documentation, <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org/issues/new\">cr\u00e9ez un ticket</a> sur le d\u00e9p\u00f4t GitHub et nous essaierons de vous aider.</p>\n<h3 id=\"should-i-use-hooks-classes-or-a-mix-of-both\"><a class=\"anchor\" href=\"/react/hooks-faq#should-i-use-hooks-classes-or-a-mix-of-both\"></a>Dois-je utiliser des Hooks, des classes ou un m\u00e9lange des deux\u00a0? </h3>\n<p>Quand vous serez pr\u00eat\u00b7e, nous vous conseillons de commencer \u00e0 essayer les Hooks dans les nouveaux composants que vous \u00e9crirez. Assurez-vous que chaque membre de votre \u00e9quipe soit partant\u00b7e pour les utiliser, et \u00e0 l\u2019aise avec cette documentation. Nous d\u00e9conseillons de r\u00e9\u00e9crire vos classes existantes avec les Hooks, sauf si vous aviez d\u00e9j\u00e0 pr\u00e9vu de les r\u00e9\u00e9crire de toute fa\u00e7on (ex. pour corriger des bugs).</p>\n<p>Vous ne pouvez pas utiliser les Hooks <em>\u00e0 l\u2019int\u00e9rieur</em> d\u2019un composant \u00e0 base de classe, mais vous pouvez compl\u00e8tement m\u00e9langer classes et fonctions composants utilisant des Hooks dans une m\u00eame arborescence. Qu\u2019un composant soit une classe ou une fonction utilisant les Hooks ne constitue qu\u2019un d\u00e9tail d\u2019impl\u00e9mentation de ce composant. Sur le long terme, nous nous attendons \u00e0 ce que l\u2019essentiel des composants React soient \u00e9crits \u00e0 base de Hooks.</p>\n<h3 id=\"do-hooks-cover-all-use-cases-for-classes\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-cover-all-use-cases-for-classes\"></a>Est-ce que les Hooks couvrent tous les cas d\u2019utilisation des classes\u00a0? </h3>\n<p>Notre but est que les Hooks couvrent tous les cas d\u2019utilisation des classes d\u00e8s que possible. Il n\u2019existe pas pour l\u2019instant d\u2019\u00e9quivalent en Hook pour les m\u00e9thodes de cycle de vie moins courantes que sont <code class=\"language-javascript\">getSnapshotBeforeUpdate</code>, <code class=\"language-javascript\">getDerivedStateFromError</code> et <code class=\"language-javascript\">componentDidCatch</code>, mais nous pr\u00e9voyons de les ajouter rapidement.</p>\n<p>Les Hooks en sont encore \u00e0 leur d\u00e9buts, et quelques biblioth\u00e8ques tierces peuvent ne pas \u00eatre compatibles avec les Hooks \u00e0 l\u2019heure actuelle.</p>\n<h3 id=\"do-hooks-replace-render-props-and-higher-order-components\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-replace-render-props-and-higher-order-components\"></a>Est-ce que les Hooks remplacent les props de rendu et les composants d\u2019ordre sup\u00e9rieur\u00a0? </h3>\n<p>Souvent, les props de rendu et les composants d\u2019ordre sup\u00e9rieur n\u2019affichent qu\u2019un seul enfant. Nous pensons que les Hooks simplifient ce cas d\u2019utilisation. Ces deux approches restent pertinentes (par exemple, un composant de d\u00e9filement virtuel pourrait avoir une prop <code class=\"language-javascript\">renderItem</code>, ou un composant de conteneur visuel pourrait avoir sa propre structure DOM). Mais dans la plupart des cas, les Hooks seront suffisants et pourront aider \u00e0 r\u00e9duire l\u2019imbrication dans votre arborescence de composants.</p>\n<h3 id=\"what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\"><a class=\"anchor\" href=\"/react/hooks-faq#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\"></a>Qu\u2019est-ce que les Hooks changent pour les API populaires telles que Redux <code class=\"language-javascript\">connect()</code> et React Router\u00a0? </h3>\n<p>Vous pouvez continuer \u00e0 utiliser les m\u00eames API que d\u2019habitude\u00a0; elles fonctionneront toujours comme avant.</p>\n<p>Depuis sa version v7.1.0, React-Redux <a class=\"external-link\" href=\"https://react-redux.js.org/api/hooks\">prend en charge l\u2019API des Hooks</a> et fournit des Hooks tels que <code class=\"language-javascript\">useDispatch</code> et <code class=\"language-javascript\">useSelector</code>.</p>\n<p>React Router <a class=\"external-link\" href=\"https://reacttraining.com/react-router/web/api/Hooks\">prend en charge les Hooks</a> depuis sa v5.1.</p>\n<p>D\u2019autres biblioth\u00e8ques pourront prendre en charge les Hooks \u00e0 l\u2019avenir.</p>\n<h3 id=\"do-hooks-work-with-static-typing\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-work-with-static-typing\"></a>Est-ce que les Hooks sont compatibles avec le typage statique\u00a0? </h3>\n<p>Les Hooks ont \u00e9t\u00e9 con\u00e7us avec le typage statique \u00e0 l\u2019esprit. Comme ce sont des fonctions, il est plus facile de les typer correctement que d\u2019autres approches telles que les composants d\u2019ordre sup\u00e9rieur. Les derni\u00e8res d\u00e9finitions Flow et TypeScript pour React prennent en charge les Hooks React.</p>\n<p>Surtout, les Hooks personnalis\u00e9s vous donnent la possibilit\u00e9 de restreindre l\u2019API React si vous souhaitez les typer de fa\u00e7on plus stricte. React vous fournit des primitives, mais vous pouvez les combiner de fa\u00e7ons diff\u00e9rentes de celles que nous fournissons d\u2019entr\u00e9e de jeu.</p>\n<h3 id=\"how-to-test-components-that-use-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-test-components-that-use-hooks\"></a>Comment tester des composants utilisant des Hooks\u00a0? </h3>\n<p>Du point de vue de React, un composant utilisant des Hooks est un composant normal. Si votre solution de test ne repose pas sur des fonctionnements internes de React, tester des composants avec des Hooks ne devrait pas \u00eatre diff\u00e9rent de la fa\u00e7on dont vous testez vos composants habituellement.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p><a href=\"/react/testing-recipes\">Testing Recipes</a> inclut plusieurs exemples que vous pouvez copier-coller.</p>\n</div>\n<p>Par exemple, prenons ce composant de comptage\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Vous avez cliqu\u00e9 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> fois</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Cliquez ici\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous le testerons en utilisant React DOM. Pour \u00eatre certains que le comportement correspond \u00e0 ce qui se passerait dans le navigateur, nous enroberons le code d\u2019affichage et de mise \u00e0 jour par des appels \u00e0 <a href=\"/react/test-utils#act\"><code class=\"language-javascript\">ReactTestUtils.act()</code></a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render and update a counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Test du premier rendu et de son effet</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 0 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 0 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Test du second rendu et de son effet</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 1 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 1 fois'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Les appels \u00e0 <code class=\"language-javascript\">act()</code> vont aussi traiter les effets qu\u2019ils contiennent.</p>\n<p>Si vous souhaitez tester un Hook personnalis\u00e9, c\u2019est possible en cr\u00e9ant un composant dans votre test, et en utilisant le Hook depuis celui-ci. Vous pourrez alors tester le composant que vous venez de cr\u00e9er.</p>\n<p>Pour r\u00e9duire le code g\u00e9n\u00e9rique, nous vous conseillons d\u2019utiliser <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a> qui est con\u00e7u de mani\u00e8re \u00e0 encourager l\u2019\u00e9criture de tests utilisant les composants comme le feraient les utilisateurs finaux.</p>\n<p>Pour plus d\u2019information, consultez <a href=\"/react/testing-recipes\">Testing Recipes</a>.</p>\n<h3 id=\"what-exactly-do-the-lint-rules-enforce\"><a class=\"anchor\" href=\"/react/hooks-faq#what-exactly-do-the-lint-rules-enforce\"></a>Qu\u2019est-ce que les <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">r\u00e8gles de linting</a> imposent\u00a0? </h3>\n<p>Nous mettons \u00e0 disposition un <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">plugin ESlint</a> qui impose <a href=\"/react/hooks-rules\">les r\u00e8gles des Hooks</a> pour \u00e9viter les bugs. Il part du principe que toute fonction commen\u00e7ant par \u201d<code class=\"language-javascript\">use</code>\u201d suivi d\u2019une lettre majuscule est un Hook. Nous admettons que cette heuristique n\u2019est pas parfaite et peut d\u00e9clencher des faux positifs, mais sans convention au niveau de l\u2019\u00e9cosyst\u00e8me, il n\u2019existe aucun moyen de faire fonctionner les Hooks correctement\u2014et des noms plus longs d\u00e9courageront l\u2019adoption des Hooks ou le respect des conventions par la communaut\u00e9.</p>\n<p>En particulier, la r\u00e8gle impose que\u00a0:</p>\n<ul>\n<li>Les appels de Hooks soient situ\u00e9s soit \u00e0 l\u2019int\u00e9rieur d\u2019une fonction nomm\u00e9e en casse <code class=\"language-javascript\">PascalCase</code> (suppos\u00e9e \u00eatre un composant) ou d\u2019une autre fonction <code class=\"language-javascript\">useSomething</code> (suppos\u00e9e \u00eatre un Hook personnalis\u00e9).</li>\n<li>Les Hooks soient appel\u00e9s dans le m\u00eame ordre \u00e0 chaque rendu.</li>\n</ul>\n<p>Il existe quelques autres heuristiques, et elles changeront peut-\u00eatre avec le temps, au fur et \u00e0 mesure que nous peaufinons la r\u00e8gle pour am\u00e9liorer la d\u00e9couverte de bugs tout en \u00e9vitant les faux positifs.</p>\n<h2 id=\"from-classes-to-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#from-classes-to-hooks\"></a>Des classes aux Hooks </h2>\n<h3 id=\"how-do-lifecycle-methods-correspond-to-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-lifecycle-methods-correspond-to-hooks\"></a>Quelles sont les correspondances entre les m\u00e9thodes de cycle de vie et les Hooks\u00a0? </h3>\n<ul>\n<li><code class=\"language-javascript\">constructor</code>\u00a0: les fonctions composants n\u2019ont pas besoin d\u2019un constructeur. Vous pouvez initialiser l\u2019\u00e9tat local lors de l\u2019appel \u00e0 <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a>. Si le calcul de l\u2019\u00e9tat local initial est trop co\u00fbteux, vous pouvez passer une fonction \u00e0 <code class=\"language-javascript\">useState</code>.</li>\n<li><code class=\"language-javascript\">getDerivedStateFromProps</code>\u00a0: planifiez plut\u00f4t une mise \u00e0 jour <a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">pendant le rendu</a>.</li>\n<li><code class=\"language-javascript\">shouldComponentUpdate</code>\u00a0: voyez <code class=\"language-javascript\">React.memo</code> <a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\">ci-dessous</a>.</li>\n<li><code class=\"language-javascript\">render</code>\u00a0: c\u2019est le corps-m\u00eame de la fonction composant.</li>\n<li><code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, <code class=\"language-javascript\">componentWillUnmount</code>\u00a0: le <a href=\"/react/hooks-reference#useeffect\">Hook <code class=\"language-javascript\">useEffect</code></a> peut exprimer toutes les combinaisons de celles-ci (y compris des cas <a href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\">moins</a> <a href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\">fr\u00e9quents</a>).</li>\n<li><code class=\"language-javascript\">getSnapshotBeforeUpdate</code>, <code class=\"language-javascript\">componentDidCatch</code> et <code class=\"language-javascript\">getDerivedStateFromError</code>\u00a0: il n\u2019existe pas encore de Hook \u00e9quivalent pour ces m\u00e9thodes, mais ils seront ajout\u00e9s prochainement.</li>\n</ul>\n<h3 id=\"how-can-i-do-data-fetching-with-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-can-i-do-data-fetching-with-hooks\"></a>Comment charger des donn\u00e9es distantes avec les Hooks\u00a0? </h3>\n<p>Voici une <a class=\"external-link\" href=\"https://codesandbox.io/s/jvvkoo8pq3\">petite d\u00e9mo</a> pour vous aider \u00e0 d\u00e9marrer. Pour en apprendre davantage, jetez un \u0153il \u00e0 <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">cet article</a> (en anglais) sur le chargement de donn\u00e9es distantes avec les Hooks.</p>\n<h3 id=\"is-there-something-like-instance-variables\"><a class=\"anchor\" href=\"/react/hooks-faq#is-there-something-like-instance-variables\"></a>Existe-t-il un \u00e9quivalent aux variables d\u2019instances\u00a0? </h3>\n<p>Oui\u00a0! Le Hook <a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef()</code></a> n\u2019est pas seulement pour les refs au DOM. L\u2019objet \u201cref\u201d est un conteneur g\u00e9n\u00e9rique dont la propri\u00e9t\u00e9 <code class=\"language-javascript\">current</code> est modifiable et peut contenir n\u2019importe quelle valeur, de la m\u00eame fa\u00e7on qu\u2019une propri\u00e9t\u00e9 d\u2019instance dans une classe.</p>\n<p>Vous pouvez lui affecter une valeur depuis <code class=\"language-javascript\">useEffect</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> intervalRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    intervalRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si nous avions juste voulu d\u00e9finir une horloge, nous n\u2019aurions pas eu besoin de la ref (<code class=\"language-javascript\">id</code> pouvait rester local \u00e0 l\u2019effet) mais \u00e7a peut \u00eatre utile si nous voulons arr\u00eater l\u2019horloge depuis un gestionnaire d\u2019\u00e9v\u00e9nements.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleCancelClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Conceptuellement, vous pouvez vous repr\u00e9senter les refs comme des variables d\u2019instance dans une classe. \u00c0 moins que vous n\u2019ayez recours \u00e0 de l\u2019<a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">initialisation paresseuse</a>, \u00e9vitez d\u2019\u00e9crire dans vos refs pendant le rendu\u00a0: \u00e7a peut donner des comportements hasardeux. Au lieu de \u00e7a, vous voudrez g\u00e9n\u00e9ralement modifier les refs au sein de gestionnaires d\u2019\u00e9v\u00e9nements ou d\u2019effets.</p>\n<h3 id=\"should-i-use-one-or-many-state-variables\"><a class=\"anchor\" href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\"></a>Dois-je utiliser une ou plusieurs variables d\u2019\u00e9tat local\u00a0? </h3>\n<p>Si vous avez l\u2019habitude des classes, vous serez peut-\u00eatre tent\u00e9\u00b7e de toujours appeler <code class=\"language-javascript\">useState()</code> une seule fois, en mettant tout l\u2019\u00e9tat local dans un unique objet. Si vous y tenez, c\u2019est tout \u00e0 fait possible. Voici un exemple d\u2019un composant qui piste le mouvement de la souris. Nous gardons sa position et sa taille dans l\u2019\u00e9tat local\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Maintenant, disons que nous voulons \u00e9crire un bout de code pour modifier <code class=\"language-javascript\">left</code> et <code class=\"language-javascript\">top</code> quand l\u2019utilisateur bouge la souris. Voyez comme nous devons fusionner manuellement ces champs dans l\u2019\u00e9tat local pr\u00e9c\u00e9dent\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// La d\u00e9composition de \"...state\" permet de s\u2019assurer qu\u2019on ne \u00ab perd \u00bb pas width et height</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Remarque : cette impl\u00e9mentation est un peu simplifi\u00e9e</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>C\u2019est d\u00fb au fait que lorsque nous mettons \u00e0 jour une variable de l\u2019\u00e9tat local, nous <em>rempla\u00e7ons</em> sa valeur, alors qu\u2019avec <code class=\"language-javascript\">this.setState</code> dans une classe, on <em>fusionne</em> les champs mis \u00e0 jour dans l\u2019objet.</p>\n<p>Si la fusion automatique vous manque, vous pouvez \u00e9crire un Hook personnalis\u00e9 <code class=\"language-javascript\">useLegacyState</code> qui fusionne les mises \u00e0 jour de l\u2019\u00e9tat local. Cependant, <strong>nous recommandons plut\u00f4t de s\u00e9parer l\u2019\u00e9tat local en de multiple variables d\u2019\u00e9tat en se basant sur celles qui ont tendance \u00e0 changer de valeur ensemble</strong>.</p>\n<p>Par exemple, nous pourrions d\u00e9couper l\u2019\u00e9tat local de notre composant en deux objets <code class=\"language-javascript\">position</code> et <code class=\"language-javascript\">size</code>, et toujours remplacer la <code class=\"language-javascript\">position</code> sans avoir besoin de fusionner\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>S\u00e9parer les variables d\u2019\u00e9tat ind\u00e9pendantes pr\u00e9sente un int\u00e9r\u00eat suppl\u00e9mentaire\u00a0: il devient facile d\u2019extraire une partie de la logique dans un Hook personnalis\u00e9, par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> left<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> position<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez comme nous avons pu d\u00e9placer l\u2019appel \u00e0 <code class=\"language-javascript\">useState</code> pour la variable d\u2019\u00e9tat local <code class=\"language-javascript\">position</code> et l\u2019effet associ\u00e9 dans un Hook personnalis\u00e9 sans rien changer au code. Si tout l\u2019\u00e9tat local \u00e9tait un unique objet, extraire cet aspect aurait \u00e9t\u00e9 plus difficile.</p>\n<p>Les deux approches sont possibles\u00a0: mettre tout l\u2019\u00e9tat local dans un unique appel \u00e0 <code class=\"language-javascript\">useState</code> ou avoir un appel \u00e0 <code class=\"language-javascript\">useState</code> par champ. La lisibilit\u00e9 des composants sera fonction de l\u2019\u00e9quilibre que vous trouverez entre ces deux extr\u00eames, et du regroupement des \u00e9tats locaux associ\u00e9s en quelques variables d\u2019\u00e9tat ind\u00e9pendantes. Si la logique de l\u2019\u00e9tat local devient trop complexe, nous vous conseillons de plut\u00f4t la <a href=\"/react/hooks-reference#usereducer\">g\u00e9rer avec un r\u00e9ducteur</a> ou un Hook personnalis\u00e9.</p>\n<h3 id=\"can-i-run-an-effect-only-on-updates\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\"></a>Puis-je ex\u00e9cuter un effet seulement lors des mises \u00e0 jour\u00a0? </h3>\n<p>C\u2019est un cas d\u2019utilisation assez rare. Si vous en avez besoin, vous pouvez <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">utiliser une ref modifiable</a> pour stocker manuellement un bool\u00e9en indiquant si vous \u00eates sur le premier rendu ou un rendu post\u00e9rieur, et v\u00e9rifier ensuite ce drapeau dans votre effet. (Si vous faites \u00e7a r\u00e9guli\u00e8rement, vous voudrez sans doute cr\u00e9er un Hook personnalis\u00e9 pour \u00e7a.)</p>\n<h3 id=\"how-to-get-the-previous-props-or-state\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-get-the-previous-props-or-state\"></a>Comment r\u00e9cup\u00e9rer les props ou l\u2019\u00e9tat local pr\u00e9c\u00e9dents\u00a0? </h3>\n<p>Actuellement, vous pouvez le faire manuellement <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">avec une ref</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> prevCountRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    prevCountRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCount <span class=\"token operator\">=</span> prevCountRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Maintenant : </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, avant : </span><span class=\"token punctuation\">{</span>prevCount<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a peut sembler un peu biscornu mais vous pouvez l\u2019extraire dans un Hook personnalis\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCount <span class=\"token operator\">=</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Maintenant : </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, avant : </span><span class=\"token punctuation\">{</span>prevCount<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remaquez que \u00e7a fonctionne pour les props, l\u2019\u00e9tat local, et toute autre valeur calcul\u00e9e.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> calculation <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> prevCalculation <span class=\"token operator\">=</span> <span class=\"token function\">usePrevious</span><span class=\"token punctuation\">(</span>calculation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Il est possible qu\u2019\u00e0 l\u2019avenir React fournisse un Hook <code class=\"language-javascript\">usePrevious</code> pr\u00eat \u00e0 l\u2019emploi, puisque c\u2019est un cas d\u2019usage assez fr\u00e9quent.</p>\n<p>Voir aussi <a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">l\u2019approche recommand\u00e9e pour un \u00e9tat local d\u00e9riv\u00e9</a>.</p>\n<h3 id=\"why-am-i-seeing-stale-props-or-state-inside-my-function\"><a class=\"anchor\" href=\"/react/hooks-faq#why-am-i-seeing-stale-props-or-state-inside-my-function\"></a>Pourquoi vois-je des props ou un \u00e9tat local obsol\u00e8tes dans ma fonction\u00a0? </h3>\n<p>Toute fonction au sein d\u2019un composant, y compris les gestionnaires d\u2019\u00e9v\u00e9nements et les effets, \u00ab\u00a0voit\u00a0\u00bb les props et l\u2019\u00e9tat local en vigueur lors du rendu qui les a cr\u00e9\u00e9es.  Par exemple, prenez ce genre de code\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAlertClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vous avez cliqu\u00e9 \u00e0 '</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Vous avez cliqu\u00e9 </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> fois</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Cliquez ici\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleAlertClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Afficher un message\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si vous cliquez d\u2019abord sur \u00ab\u00a0Afficher un message\u00a0\u00bb puis incr\u00e9mentez tout de suite le compteur, le message affichera la variable <code class=\"language-javascript\">count</code> <strong>telle qu\u2019elle \u00e9tait lors du clic sur le bouton \u00ab\u00a0Afficher un message\u00a0\u00bb</strong>.  \u00c7a \u00e9vite les bugs caus\u00e9s par du code qui suppose que les props et l\u2019\u00e9tat local ne changent pas.</p>\n<p>Si vous souhaitez explicitement lire le <strong>tout dernier</strong> \u00e9tat depuis une fonction de rappel asynchrone, vous pouvez le conserver dans <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">une ref</a>, la modifier puis la relire.</p>\n<p>Pour finir, une autre explication possible pour vos props ou votre \u00e9tat p\u00e9rim\u00e9s r\u00e9siderait dans votre utilisation incorrecte de l\u2019optimisation du hook par \u00ab\u00a0tableau de d\u00e9pendances\u00a0\u00bb, auquel il manquerait certaines valeurs.  Par exemple, si un effet indique <code class=\"language-javascript\">[]</code> comme deuxi\u00e8me argument mais lit <code class=\"language-javascript\">someProp</code> en interne, il continuera \u00e0 \u00ab\u00a0voir\u00a0\u00bb la valeur initiale de <code class=\"language-javascript\">someProp</code>.  La solution consiste soit \u00e0 retirer l\u2019argument de tableau de d\u00e9pendances, soit \u00e0 le corriger.  Voici <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">comment y g\u00e9rer des fonctions</a> ainsi que <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">d\u2019autres strat\u00e9gies habituelles</a> pour ex\u00e9cuter des effets moins souvent sans ignorer \u00e0 tort des d\u00e9pendances.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Nous proposons une r\u00e8gle ESLint <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> dans le cadre du module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous avertit lorsque les d\u00e9pendances sp\u00e9cifi\u00e9es semblent incorrectes et vous propose un correctif.</p>\n</div>\n<h3 id=\"how-do-i-implement-getderivedstatefromprops\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\"></a>Comment puis-je impl\u00e9menter <code class=\"language-javascript\">getDerivedStateFromProps</code>\u00a0? </h3>\n<p>M\u00eame si vous n\u2019en avez probablement <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">pas besoin</a>, dans les rares cas o\u00f9 c\u2019est n\u00e9cessaire (comme impl\u00e9menter un composant <code class=\"language-javascript\">&lt;Transition&gt;</code>) vous pouvez mettre \u00e0 jour l\u2019\u00e9tat local en plein rendu. React va rafra\u00eechir le composant avec l\u2019\u00e9tat local mis \u00e0 jour imm\u00e9diatement apr\u00e8s \u00eatre sorti du premier rendu afin que \u00e7a ne soit pas trop co\u00fbteux.</p>\n<p>Ici, nous stockons la valeur pr\u00e9c\u00e9dente de la prop <code class=\"language-javascript\">row</code> dans une variable de l\u2019\u00e9tat local afin que nous puissions les comparer\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ScrollView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>row<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isScrollingDown<span class=\"token punctuation\">,</span> setIsScrollingDown<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prevRow<span class=\"token punctuation\">,</span> setPrevRow<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">!==</span> prevRow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Row a chang\u00e9 depuis le dernier rendu. Met \u00e0 jour isScrollingDown.</span>\n    <span class=\"token function\">setIsScrollingDown</span><span class=\"token punctuation\">(</span>prevRow <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> row <span class=\"token operator\">&gt;</span> prevRow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPrevRow</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">On d\u00e9file vers le bas : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isScrollingDown<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a peut sembler \u00e9trange \u00e0 premi\u00e8re vue, mais <code class=\"language-javascript\">getDerivedStateFromProps</code> avait pr\u00e9cis\u00e9ment \u00e9t\u00e9 con\u00e7ue pour des mises \u00e0 jour pendant le rendu.</p>\n<h3 id=\"is-there-something-like-forceupdate\"><a class=\"anchor\" href=\"/react/hooks-faq#is-there-something-like-forceupdate\"></a>Existe-t-il un \u00e9quivalent \u00e0 forceUpdate\u00a0? </h3>\n<p>Les deux Hooks <code class=\"language-javascript\">useState</code> et <code class=\"language-javascript\">useReducer</code> <a href=\"/react/hooks-reference#bailing-out-of-a-state-update\">abandonnent la mise \u00e0 jour</a> si la valeur suivante est la m\u00eame que la valeur pr\u00e9c\u00e9dente. Modifier l\u2019\u00e9tat local en place et appeler <code class=\"language-javascript\">setState</code> ne causera pas de rafra\u00eechissement.</p>\n<p>G\u00e9n\u00e9ralement, vous ne devez pas modifier l\u2019\u00e9tat local directement en React. Cependant, \u00e0 titre d\u2019\u00e9chappatoire, vous pouvez maintenir un compteur incr\u00e9mental pour forcer un rafra\u00eechissement m\u00eame si l\u2019\u00e9tat local n\u2019a pas chang\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ignored<span class=\"token punctuation\">,</span> forceUpdate<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c9vitez autant que possible d\u2019utiliser cette approche.</p>\n<h3 id=\"can-i-make-a-ref-to-a-function-component\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-make-a-ref-to-a-function-component\"></a>Puis-je cr\u00e9er une ref vers une fonction composant\u00a0? </h3>\n<p>Vous ne devriez pas en avoir besoin souvent, mais vous pouvez exposer quelques m\u00e9thodes imp\u00e9ratives \u00e0 un composant parent avec le Hook <a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a>.</p>\n<h3 id=\"how-can-i-measure-a-dom-node\"><a class=\"anchor\" href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\"></a>Comment puis-je mesurer un n\u0153ud DOM\u00a0? </h3>\n<p>Une fa\u00e7on rudimentaire de mesurer la position ou les dimensions d\u2019un n\u0153ud DOM consiste \u00e0 utiliser une <a href=\"/react/refs-and-the-dom#callback-refs\">ref avec fonction de rappel</a>. React appellera la fonction de rappel chaque fois que la ref est attach\u00e9e \u00e0 un n\u0153ud diff\u00e9rent.  Voici une <a class=\"external-link\" href=\"https://codesandbox.io/s/l7m0v5x4v9\">petite d\u00e9mo</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">,</span> setHeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> measuredRef <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>measuredRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">L\u2019en-t\u00eate ci-dessus fait </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px de haut</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous avons \u00e9vit\u00e9 <code class=\"language-javascript\">useRef</code> dans cet exemple parce qu\u2019un objet ref ne nous notifie pas des <em>changements</em> de la valeur actuelle de la ref.  Une ref avec fonction de rappel garantit que <a class=\"external-link\" href=\"https://codesandbox.io/s/818zzk8m78\">m\u00eame si un composant enfant affiche ult\u00e9rieurement le n\u0153ud DOM mesur\u00e9</a> (ex. en r\u00e9action \u00e0 un clic), nous serons quand m\u00eame notifi\u00e9s dans le composant parent et pourrons mettre les mesures \u00e0 jour.</p>\n<p>Remarquez que nous passons <code class=\"language-javascript\">[]</code> comme tableau de d\u00e9pendances \u00e0 <code class=\"language-javascript\">useCallback</code>.  C\u2019est pour nous assurer que notre ref \u00e0 fonction de rappel ne change pas d\u2019un rendu \u00e0 l\u2019autre, afin que React ne nous appelle pas pour rien.</p>\n<p>Dans cet exemple, la ref avec fonction de rappel ne sera appel\u00e9e que lors du montage et du d\u00e9montage du composant, puisque le composant <code class=\"language-javascript\">&lt;h1&gt;</code> reste pr\u00e9sent d\u2019un rendu au suivant.  Si vous souhaitez \u00eatre notifi\u00e9\u00b7e \u00e0 chaque redimensionnement, vous voudrez peut-\u00eatre utiliser <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"><code class=\"language-javascript\">ResizeObserver</code></a> ou un Hook tiers bas\u00e9 dessus.</p>\n<p>Si vous le souhaitez, vous pouvez <a class=\"external-link\" href=\"https://codesandbox.io/s/m5o42082xy\">extraire cette logique</a> dans un Hook r\u00e9utilisable\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, monde</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>rect <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">L\u2019en-t\u00eate ci-dessus fait </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px de haut</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> setRect<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setRect</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"what-does-const-thing-setthing--usestate-mean\"><a class=\"anchor\" href=\"/react/hooks-faq#what-does-const-thing-setthing--usestate-mean\"></a>Que signifie <code class=\"language-javascript\">const [thing, setThing] = useState()</code>\u00a0? </h3>\n<p>Si vous n\u2019avez pas l\u2019habitude de cette syntaxe, allez voir l\u2019<a href=\"/react/hooks-state#tip-what-do-square-brackets-mean\">explication</a> dans la documentation du Hook d\u2019\u00e9tat.</p>\n<h2 id=\"performance-optimizations\"><a class=\"anchor\" href=\"/react/hooks-faq#performance-optimizations\"></a>Optimisations des performances </h2>\n<h3 id=\"can-i-skip-an-effect-on-updates\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\"></a>Puis-je sauter un effet lors des mises \u00e0 jour\u00a0? </h3>\n<p>Oui. Reportez-vous au <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">d\u00e9clenchement conditionnel d\u2019un effet</a>. Remarquez qu\u2019oublier de g\u00e9rer des mises \u00e0 jour est souvent <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">source de bugs</a>, ce qui explique pourquoi ce n\u2019est pas le comportement par d\u00e9faut.</p>\n<h3 id=\"is-it-safe-to-omit-functions-from-the-list-of-dependencies\"><a class=\"anchor\" href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\"></a>Est-il acceptable d\u2019omettre les fonctions du tableau de d\u00e9pendances\u00a0? </h3>\n<p>En r\u00e8gle g\u00e9n\u00e9rale, non.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 Ce n\u2019est pas fiable (\u00e7a appelle `doSomething` qui utilise `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Il n\u2019est pas facile de se souvenir du d\u00e9tail des props et de l\u2019\u00e9tat local utilis\u00e9s par les fonctions hors de l\u2019effet. C\u2019est pourquoi <strong>vous voudrez g\u00e9n\u00e9ralement d\u00e9clarer les fonctions dont votre effet a besoin <em>\u00e0 l\u2019int\u00e9rieur de celui-ci</em>.</strong>  Il devient alors facile de voir de quelles valeurs de la port\u00e9e du composant d\u00e9pend cet effet\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>someProp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 OK (notre effet n\u2019utilise que `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si apr\u00e8s \u00e7a vous n\u2019utilisez toujours pas de valeurs issues de la port\u00e9e du composant, vous pouvez sans probl\u00e8me sp\u00e9cifier <code class=\"language-javascript\">[]</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bonjour'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 OK dans ce cas pr\u00e9cis car nous n\u2019utilisons *aucune* valeur de la port\u00e9e du composant</span></span></code></pre></div>\n<p>Selon votre cas, vous trouverez quelques options suppl\u00e9mentaires plus bas dans cette page.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Nous mettons \u00e0 disposition la r\u00e8gle ESLint <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> dans le cadre du module <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a>. Elle vous aide \u00e0 trouver les composants qui ne g\u00e8rent pas correctement les mises \u00e0 jour.</p>\n</div>\n<p>Voyons en quoi c\u2019est important.</p>\n<p>Si vous pr\u00e9cisez une <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">liste de d\u00e9pendances</a> comme dernier argument de <code class=\"language-javascript\">useEffect</code>, <code class=\"language-javascript\">useLayoutEffet</code>, <code class=\"language-javascript\">useMemo</code>, <code class=\"language-javascript\">useCallback</code>, ou <code class=\"language-javascript\">useImperativeHandle</code>, cette liste doit inclure toutes les valeurs utilis\u00e9es dans la fonction pass\u00e9e qui participent au flux de donn\u00e9es de React.  \u00c7a inclut les props, l\u2019\u00e9tat local, et toute valeur qui en d\u00e9coule.</p>\n<p>Le <strong>seul cas</strong> pour lequel vous pouvez sereinement omettre une fonction de la liste des d\u00e9pendances, c\u2019est lorsque rien \u00e0 l\u2019int\u00e9rieur (y compris dans les autres fonctions qu\u2019elle appelle) ne r\u00e9f\u00e9rence les props, l\u2019\u00e9tat local ou des valeurs qui en d\u00e9coulent.  L\u2019exemple suivant a ce probl\u00e8me\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Utilise la prop productId</span></span>    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 Erron\u00e9 car `fetchProduct` utilise `productId`</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Le correctif recommand\u00e9 consiste \u00e0 d\u00e9placer la fonction <em>dans</em> votre effet</strong>.  \u00c7a facilite le rep\u00e9rage des props et variables d\u2019\u00e9tat que votre effet utilise, pour garantir qu\u2019elles sont toutes d\u00e9clar\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// En d\u00e9pla\u00e7ant cette fonction dans l'effet, on voit clairement quelles valeurs il utilise.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Correct car notre effet n\u2019utilise que `productId`</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a permet aussi de g\u00e9rer les r\u00e9ponses trop tardives gr\u00e2ce \u00e0 des variables locales \u00e0 l\u2019effet\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ignore<span class=\"token punctuation\">)</span> <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous avons d\u00e9plac\u00e9 la fonction dans l\u2019effet, donc cette variable n\u2019a pas \u00e0 figurer dans la liste des d\u00e9pendances.</p>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>Jetez un coup d\u2019\u0153il \u00e0 <a class=\"external-link\" href=\"https://codesandbox.io/s/jvvkoo8pq3\">cette petite d\u00e9mo</a> et <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">cet article</a> (en anglais) pour en apprendre davantage sur le chargement de donn\u00e9es distantes avec les Hooks.</p>\n</div>\n<p><strong>Si pour une raison ou une autre vous ne <em>pouvez pas</em> d\u00e9placer la fonction dans l\u2019effet, vous avez d\u2019autres options\u00a0:</strong></p>\n<ul>\n<li><strong>Vous pouvez essayer de d\u00e9placer la fonction hors du composant</strong>.  Dans ce cas, vous \u00eates s\u00fbr\u00b7e qu\u2019elle ne pourra pas r\u00e9f\u00e9rencer des props ou variables d\u2019\u00e9tat, et qu\u2019elle n\u2019a donc pas besoin de figurer dans la liste des d\u00e9pendances.</li>\n<li>Si la fonction que vous appelez est un calcul pur et qu\u2019on peut sereinement l\u2019appeler pendant le rendu, vous pouvez <strong>l\u2019appeler plut\u00f4t hors de l\u2019effet</strong> et faire d\u00e9pendre l\u2019effet de la valeur qu\u2019elle renvoie.</li>\n<li>En dernier recours, vous pouvez <strong>ajouter une fonction aux d\u00e9pendances de l\u2019effet mais <em>enrober sa d\u00e9finition</em></strong> dans un Hook <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a>. \u00c7a garantit qu\u2019elle ne changera pas \u00e0 chaque rendu sauf si <em>ses propres</em> d\u00e9pendances changent aussi\u00a0:</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u2705 Enrobe avec useCallback pour \u00e9viter de changer \u00e0 chaque rendu</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> fetchProduct <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// ... Fait un truc avec productId ...</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Toutes les d\u00e9pendances de useCallback sont sp\u00e9cifi\u00e9es</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProductDetails</span></span> <span class=\"token attr-name\">fetchProduct</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fetchProduct<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProductDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> fetchProduct <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fetchProduct<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Toutes les d\u00e9pendances de useEffect sont sp\u00e9cifi\u00e9es</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez que dans cet exemple nous <strong>devons</strong> garder la fonction dans la liste des d\u00e9pendances.  On s\u2019assure ainsi qu\u2019une modification \u00e0 la prop <code class=\"language-javascript\">productId</code> de <code class=\"language-javascript\">ProductPage</code> d\u00e9clenchera automatiquement un nouveau chargement de donn\u00e9es distantes dans le composant <code class=\"language-javascript\">ProductDetails</code>.</p>\n<h3 id=\"what-can-i-do-if-my-effect-dependencies-change-too-often\"><a class=\"anchor\" href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\"></a>Que faire quand mes d\u00e9pendances d\u2019effet changent trop souvent\u00a0? </h3>\n<p>Il arrive que votre effet utilise un \u00e9tat qui change trop fr\u00e9quemment.  Vous pourriez alors \u00eatre tent\u00e9\u00b7e d\u2019omettre cet \u00e9tat de la liste des d\u00e9pendances, mais \u00e7a engendre souvent des bugs\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Cet effet d\u00e9pend de l\u2019\u00e9tat `count`</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 Bug : `count` n\u2019est pas list\u00e9 comme d\u00e9pendance</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>La liste de d\u00e9pendances vide, <code class=\"language-javascript\">[]</code>, singifie que l\u2019effet ne sera ex\u00e9cut\u00e9 qu\u2019une fois au montage du composant, et non \u00e0 chaque rafra\u00eechissement.  Le probl\u00e8me vient du fait que dans la fonction de rappel pass\u00e9e \u00e0 <code class=\"language-javascript\">setInterval</code>, la valeur de <code class=\"language-javascript\">count</code> ne va pas changer, car on a cr\u00e9\u00e9 une fermeture lexicale <em>(closure, NdT)</em> avec <code class=\"language-javascript\">count</code> \u00e0 <code class=\"language-javascript\">0</code>, tel qu\u2019elle \u00e9tait lorsque la fonction de rappel de l\u2019effet s\u2019est ex\u00e9cut\u00e9e.  \u00c0 chaque seconde, cette fonction appelle <code class=\"language-javascript\">setCount(0 + 1)</code>, de sorte que le compteur ne d\u00e9passe jamais 1.</p>\n<p>On pourrait corriger le bug en sp\u00e9cifiant <code class=\"language-javascript\">[count]</code> comme liste de d\u00e9pendances, mais \u00e7a r\u00e9initialiserait notre horloge \u00e0 chaque modification.  En pratique, chaque <code class=\"language-javascript\">setInterval</code> aurait une chance de s\u2019ex\u00e9cuter avant d\u2019\u00eatre r\u00e9initialis\u00e9 (comme pour un <code class=\"language-javascript\">setTimeout</code>).  Ce n\u2019est peut-\u00eatre pas souhaitable.  Pour corriger \u00e7a, nous pouvons utiliser <a href=\"/react/hooks-reference#functional-updates\">la version bas\u00e9e fonction de <code class=\"language-javascript\">setState</code></a>.  Elle nous permet d\u2019indiquer <em>comment</em> l\u2019\u00e9tat change, sans r\u00e9f\u00e9rencer l\u2019\u00e9tat <em>actuel</em>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=&gt;</span> c <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 \u00c7a ne d\u00e9pend pas de la variable `count` issue de la port\u00e9e</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Notre effet n\u2019utilise aucune variable issue de la port\u00e9e du composant</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>(L\u2019identit\u00e9 de la fonction <code class=\"language-javascript\">setCount</code> est garantie stable, il est donc naturel de l\u2019omettre.)</p>\n<p>\u00c0 pr\u00e9sent, la fonction de rappel de <code class=\"language-javascript\">setInterval</code> est appel\u00e9e une fois par seconde, mais \u00e0 chaque fois l\u2019appel interne \u00e0 <code class=\"language-javascript\">setCount</code> peut utiliser une valeur \u00e0 jour de <code class=\"language-javascript\">count</code> (appel\u00e9e <code class=\"language-javascript\">c</code> dans la fonction de rappel ci-dessus).</p>\n<p>Pour des cas plus complexes (comme lorsqu\u2019un \u00e9tat d\u00e9pend d\u2019un autre \u00e9tat), essayez de d\u00e9placer la logique de mise \u00e0 jour de l\u2019\u00e9tat hors de l\u2019effet avec le <a href=\"/react/hooks-reference#usereducer\">Hook <code class=\"language-javascript\">useReducer</code></a>. <a class=\"external-link\" href=\"https://adamrackis.dev/state-and-use-reducer/\">Cet article</a> (en anglais) vous donne un exemple de cette approche. <strong>L\u2019identit\u00e9 de la fonction <code class=\"language-javascript\">dispatch</code> fournie par <code class=\"language-javascript\">useReducer</code> est garantie stable</strong>, m\u00eame si la fonction de r\u00e9duction est d\u00e9clar\u00e9e dans le composant et lit ses props.</p>\n<p>En dernier recours, si vous voulez quelque chose de similaire au <code class=\"language-javascript\">this</code> d\u2019une classe, vous pouvez <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">utiliser une ref</a> pour stocker une donn\u00e9e modifiable.  Vous pouvez alors y \u00e9crire et la relire.  Par exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Garde les derni\u00e8res props dans une ref.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> latestProps <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    latestProps<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Lit les derni\u00e8res props en vigueur</span></span><span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>latestProps<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Cet effet n\u2019est jamais r\u00e9-ex\u00e9cut\u00e9</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ne faites \u00e7a que si vous n\u2019avez pas pu trouver de meilleure solution, car se reposer sur des mutations rend les composants plus impr\u00e9visibles.  Si vous n\u2019arrivez pas \u00e0 trouver une approche adapt\u00e9e pour votre besoin, <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">cr\u00e9ez un ticket</a> avec un exemple ex\u00e9cutable de code pour que nous puissions essayer de vous aider.</p>\n<h3 id=\"how-do-i-implement-shouldcomponentupdate\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\"></a>Comment puis-je impl\u00e9menter shouldComponentUpdate\u00a0? </h3>\n<p>Vous pouvez enrober une fonction composant avec <code class=\"language-javascript\">React.memo</code> pour comparer superficiellement ses props\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// votre composant</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ce n\u2019est pas un Hook car ce n\u2019est pas composable, alors que les Hooks le sont. <code class=\"language-javascript\">React.memo</code> est \u00e9quivalent \u00e0 <code class=\"language-javascript\">PureComponent</code>, mais ne compare que les props. (Vous pouvez aussi ajouter un second argument pour sp\u00e9cifier une fonction de comparaison personnalis\u00e9e qui prendra en arguments les anciennes et nouvelles props. Si elle renvoie <code class=\"language-javascript\">true</code>, la mise \u00e0 jour est \u00e9vit\u00e9e.)</p>\n<p><code class=\"language-javascript\">React.memo</code> ne compare pas l\u2019\u00e9tat local car il n\u2019y a pas d\u2019unique objet d\u2019\u00e9tat local \u00e0 comparer. Mais vous pouvez rendre les descendants purs \u00e9galement, ou m\u00eame <a href=\"/react/hooks-faq#how-to-memoize-calculations\">optimiser les descendants individuellement avec <code class=\"language-javascript\">useMemo</code></a>.</p>\n<h3 id=\"how-to-memoize-calculations\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-memoize-calculations\"></a>Comment m\u00e9mo\u00efser les calculs\u00a0? </h3>\n<p>Le Hook <a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a> vous permet de mettre en cache les calculs \u00e0 travers les rendus en \u00ab\u00a0se souvenant\u00a0\u00bb du dernier calcul\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ce code appelle <code class=\"language-javascript\">computeExpensiveValue(a, b)</code>. Mais si les d\u00e9pendances <code class=\"language-javascript\">[a, b]</code> n\u2019ont pas chang\u00e9 depuis la derni\u00e8re fois, <code class=\"language-javascript\">useMemo</code> saute le second appel et r\u00e9utilise simplement la derni\u00e8re valeur renvoy\u00e9e.</p>\n<p>Rappelez-vous que la fonction pass\u00e9e \u00e0 <code class=\"language-javascript\">useMemo</code> s\u2019ex\u00e9cute pendant le rendu. N\u2018y faites rien que vous ne feriez normalement pendant le rendu. Par exemple, les effets de bord sont du ressort de <code class=\"language-javascript\">useEffect</code>, pas de <code class=\"language-javascript\">useMemo</code>.</p>\n<p><strong>Vous pouvez vous appuyer sur <code class=\"language-javascript\">useMemo</code> pour les optimisations de performances, mais pas comme une garantie s\u00e9mantique.</strong> \u00c0 l\u2019avenir, React pourrait tr\u00e8s bien choisir \u00ab\u00a0d\u2019oublier\u00a0\u00bb certaines valeurs pr\u00e9alablement m\u00e9mo\u00efs\u00e9es et de les recalculer lors du rendu suivant, par exemple pour lib\u00e9rer de la m\u00e9moire pour les composants non visibles. \u00c9crivez votre code de fa\u00e7on \u00e0 ce qu\u2019il fonctionne toujours sans <code class=\"language-javascript\">useMemo</code>, et ajoutez-le ensuite pour optimiser les performances. (Pour les rares cas o\u00f9 une valeur ne doit <em>jamais</em> \u00eatre recalcul\u00e9e, vous pouvez <a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">l\u2019initialiser paresseusement</a> dans une ref.)</p>\n<p>Vous pouvez aussi utiliser <code class=\"language-javascript\">useMemo</code> pour \u00e9viter le rafra\u00eechissement co\u00fbteux d\u2019un enfant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// N\u2019est rafra\u00eechi que si `a` change :</span>\n  <span class=\"token keyword\">const</span> child1 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child1</span></span> <span class=\"token attr-name\">a</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// N\u2019est rafra\u00eechi que si `b` change :</span>\n  <span class=\"token keyword\">const</span> child2 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child2</span></span> <span class=\"token attr-name\">b</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child1<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child2<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Remarquez que cette approche ne fonctionne pas dans une boucle car les appels aux Hooks <a href=\"/react/hooks-rules\">ne doivent pas</a> \u00eatre plac\u00e9s dans des boucles. Mais vous pouvez extraire la liste dans un composant \u00e0 part, et appeler <code class=\"language-javascript\">useMemo</code> sur celui-ci.</p>\n<h3 id=\"how-to-create-expensive-objects-lazily\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\"></a>Comment cr\u00e9er paresseusement des objets co\u00fbteux\u00a0? </h3>\n<p><code class=\"language-javascript\">useMemo</code> vous permet de <a href=\"/react/hooks-faq#how-to-memoize-calculations\">m\u00e9mo\u00efser un calcul co\u00fbteux</a> si les d\u00e9pendances sont les m\u00eames. Cependant, il n\u2019est l\u00e0 que pour aider, et ne <em>garantit</em> pas que le calcul ne sera pas refait. Mais parfois vous devez vous assurer qu\u2019un objet n\u2019est cr\u00e9\u00e9 qu\u2019une seule fois.</p>\n<p><strong>Le principal cas d\u2019utilisation concerne la cr\u00e9ation d\u2019un \u00e9tat initial co\u00fbteux\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u26a0\ufe0f createRows() est appel\u00e9e \u00e0 chaque rendu</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour \u00e9viter de recr\u00e9er l\u2019\u00e9tat initial ignor\u00e9, nous pouvons passer une <strong>fonction</strong> \u00e0 <code class=\"language-javascript\">useState</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u2705 createRows() n'est appel\u00e9e qu'une seule fois</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React n\u2019appelera cette fonction que lors du premier rendu. Vous trouverez de plus amples d\u00e9tails dans l\u2019<a href=\"/react/hooks-reference#usestate\">API de r\u00e9f\u00e9rence de <code class=\"language-javascript\">useState</code></a>.</p>\n<p><strong>Vous pouvez aussi vouloir occasionnellement \u00e9viter de recr\u00e9er la valeur initiale de <code class=\"language-javascript\">useRef()</code>.</strong> Par exemple, vous voulez peut-\u00eatre vous assurer qu\u2019une instance de classe imp\u00e9rative n\u2019est cr\u00e9\u00e9e qu\u2019une seule fois\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u26a0\ufe0f IntersectionObserver est cr\u00e9\u00e9 \u00e0 chaque rendu</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">useRef</code> <strong>n\u2019accepte pas</strong> un argument de fonction sp\u00e9cial comme pour <code class=\"language-javascript\">useState</code>. Au lieu de \u00e7a, vous pouvez \u00e9crire votre propre fonction qui la cr\u00e9e et la d\u00e9finit paresseusement\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// \u2705 IntersectionObserver est cr\u00e9\u00e9 paresseusement une seule fois</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Quand vous en avez besoin, appelez getObserver()</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a permet d\u2019\u00e9viter de recr\u00e9er un objet co\u00fbteux tant qu\u2019il n\u2019est pas n\u00e9cessaire. Si vous utilisez Flow ou TypeScript, vous pouvez aussi donner \u00e0 <code class=\"language-javascript\">getObserver()</code> un type non-nullable pour un typage plus fin.</p>\n<h3 id=\"are-hooks-slow-because-of-creating-functions-in-render\"><a class=\"anchor\" href=\"/react/hooks-faq#are-hooks-slow-because-of-creating-functions-in-render\"></a>La cr\u00e9ation de fonctions \u00e0 la vol\u00e9e pendant le rendu ralentit-elle les Hooks\u00a0? </h3>\n<p>Non. Dans les navigateurs modernes, les performances brutes des fermetures lexicales compar\u00e9es \u00e0 celles des classes diff\u00e8rent peu, sauf dans des sc\u00e9narios extr\u00eames.</p>\n<p>Par ailleurs, gardez \u00e0 l\u2019esprit que la conception de Hooks est plus efficace pour deux raisons\u00a0:</p>\n<ul>\n<li>Les Hooks permettent d\u2019\u00e9viter une grande partie de la \u00ab\u00a0graisse\u00a0\u00bb amen\u00e9e par les classes, comme le co\u00fbt de la cr\u00e9ation d\u2019instances et la liaison des gestionnaires d\u2019\u00e9v\u00e9nements dans le constructeur.</li>\n<li><strong>Le code idiomatique utilisant des Hooks n\u2019a pas besoin d\u2019une imbrication profonde de composants</strong> qui pr\u00e9vaudrait dans des projets utilisant des composants d\u2019ordre sup\u00e9rieur, des props de rendu et des contextes. Avec des arborescences plus petites, React a moins de travail \u00e0 faire.</li>\n</ul>\n<p>Traditionnellement, les probl\u00e9matiques de performance associ\u00e9es aux fonctions d\u00e9finies \u00e0 la vol\u00e9e en React sont li\u00e9es au fait que passer de nouvelles fonctions de rappel \u00e0 chaque rendu emp\u00eache les optimisations bas\u00e9es sur <code class=\"language-javascript\">shouldComponentUpdate</code> dans les composants enfants. Les Hooks abordent ce probl\u00e8me sous trois angles.</p>\n<ul>\n<li>\n<p>Le Hook <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a> vous permet de r\u00e9f\u00e9rencer la m\u00eame fonction de rappel d\u2019un rendu \u00e0 l\u2019autre afin que <code class=\"language-javascript\">shouldComponentUpdate</code> puisse continuer \u00e0 fonctionner\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Ne changera pas sauf si `a` ou `b` change</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> memoizedCallback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>Le <a href=\"/react/hooks-faq#how-to-memoize-calculations\">Hook <code class=\"language-javascript\">useMemo</code></a> permet de contr\u00f4ler plus facilement les mises \u00e0 jour des enfants, r\u00e9duisant le besoin de composants purs.</li>\n<li>Enfin, le Hook <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> r\u00e9duit le besoin de passer en profondeur des fonctions de rappel, comme expliqu\u00e9 ci-dessous.</li>\n</ul>\n<h3 id=\"how-to-avoid-passing-callbacks-down\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\"></a>Comment \u00e9viter de transmettre des fonctions de rappel\u00a0? </h3>\n<p>Nous nous sommes aper\u00e7u que la majorit\u00e9 des gens n\u2019aiment pas passer des fonctions de rappel \u00e0 travers chaque niveau de l\u2019arborescence. M\u00eame si c\u2019est plus explicite, \u00e7a fait franchement \u00ab\u00a0plomberie\u00a0\u00bb.</p>\n<p>Dans de grandes arborescences de composants, nous conseillons plut\u00f4t de transmettre une fonction <code class=\"language-javascript\">dispatch</code> issue de <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> via le contexte\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> TodosDispatch <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodosApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Remarque : `dispatch` ne va pas changer d'un rendu \u00e0 l'autre</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodosDispatch.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>dispatch<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeepTree</span></span> <span class=\"token attr-name\">todos</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodosDispatch.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>N\u2019importe quel enfant de l\u2019arborescence de <code class=\"language-javascript\">TodosApp</code> peut utiliser la fonction <code class=\"language-javascript\">dispatch</code> pour remonter des actions \u00e0 <code class=\"language-javascript\">TodosApp</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">DeepChild</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Si nous voulons ex\u00e9cuter une action, nous pouvons r\u00e9cup\u00e9rer dispatch depuis le contexte.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>TodosDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'salut'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Ajouter une t\u00e2che</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>C\u2019est \u00e0 la fois plus pratique d\u2019un point de vue maintenance (pas besoin de continuer \u00e0 passer des fonctions de rappel), et \u00e7a r\u00e8gle au passage le probl\u00e8me (de m\u00e9mo\u00efsation) des fonctions de rappel. Pour les mises \u00e0 jour d\u00e9clench\u00e9es en profondeur, nous conseillons de transmettre <code class=\"language-javascript\">dispatch</code> de cette fa\u00e7on.</p>\n<p>Remarquez que vous pouvez toujours choisir de transmettre l\u2019<em>\u00e9tat</em> applicatif comme props (plus explicite) ou comme contexte (plus pratique pour les mises \u00e0 jour tr\u00e8s profondes). Si vous utilisez le contexte pour transmettre \u00e9galement l\u2019\u00e9tat local, utilisez deux types de contexte diff\u00e9rents\u00a0: la donn\u00e9e de contexte <code class=\"language-javascript\">dispatch</code> ne changera jamais, donc les composants qui l\u2019utilisent n\u2019ont pas besoin de se rafra\u00eechir \u00e0 moins qu\u2019ils n\u2019aient aussi besoin de l\u2019\u00e9tat applicatif.</p>\n<h3 id=\"how-to-read-an-often-changing-value-from-usecallback\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-read-an-often-changing-value-from-usecallback\"></a>Comment lire une valeur changeant fr\u00e9quemment avec <code class=\"language-javascript\">useCallback</code>\u00a0? </h3>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Nous recommandons de <a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">transmettre <code class=\"language-javascript\">dispatch</code> dans le contexte</a> plut\u00f4t que des fonctions de rappel individuelles dans les props. L\u2019approche ci-dessous n\u2019est mentionn\u00e9e que par souci d\u2019exhaustivit\u00e9 et \u00e0 titre d\u2019\u00e9chappatoire.</p>\n<p>Notez aussi que cette approche peut causer des probl\u00e8mes avec le <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">mode concurrent</a>. Nous pr\u00e9voyons de proposer des alternatives plus ergonomiques \u00e0 l\u2019avenir, mais la solution la plus s\u00fbre pour l\u2019instant consiste \u00e0 toujours invalider la fonction de rappel si des valeurs dont elle d\u00e9pend changent.</p>\n</div>\n<p>Dans de rares cas vous pourriez avoir besoin de m\u00e9mo\u00efser une fonction de rappel avec <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a> mais la m\u00e9mo\u00efsation ne fonctionne pas tr\u00e8s bien parce que la fonction interne a tout de m\u00eame trop souvent besoin d\u2019\u00eatre recr\u00e9\u00e9e. Si la fonction que vous m\u00e9mo\u00efsez est un gestionnaire d\u2019\u00e9v\u00e9nements et n\u2019est pas utilis\u00e9e pendant le rendu, vous pouvez utiliser une <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">ref comme variable d\u2019instance</a>, et y stocker manuellement la derni\u00e8re valeur renvoy\u00e9e\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> textRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useLayoutEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    textRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u00c9crit dans la ref</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentText <span class=\"token operator\">=</span> textRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Lit depuis la ref</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>currentText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>textRef<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ne recr\u00e9e pas handleSubmit comme `[text]` le ferait</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>C\u2019est une approche un peu biscornue mais \u00e7a montre que vous pouvez faire cette optimisation en dernier ressort, si vous en avez vraiment besoin. Vous pouvez en masquer les d\u00e9tails d\u00e9rangeants en l\u2019extrayant dans un Hook personnalis\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Sera m\u00e9mo\u00efs\u00e9 m\u00eame si `text` change :</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> dependencies</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call an event handler while rendering.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fn<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>dependencies<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fn <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans les deux cas, nous <strong>d\u00e9conseillons cette approche</strong> et ne l\u2019illustrons ici que dans un souci d\u2019exhaustivit\u00e9. Au lieu de \u00e7a, il est pr\u00e9f\u00e9rable d\u2019<a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">\u00e9viter de transmettre des fonctions de rappel en profondeur</a>.</p>\n<h2 id=\"under-the-hood\"><a class=\"anchor\" href=\"/react/hooks-faq#under-the-hood\"></a>Sous le capot </h2>\n<h3 id=\"how-does-react-associate-hook-calls-with-components\"><a class=\"anchor\" href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\"></a>Comment React associe-t-il les appels de Hooks avec les composants\u00a0? </h3>\n<p>React garde trace du composant en cours de rendu. Gr\u00e2ce aux <a href=\"/react/hooks-rules\">r\u00e8gles des Hooks</a>, nous savons que les Hooks sont uniquement appel\u00e9s depuis des composants React (ou des Hooks personnalis\u00e9s, qui sont aussi uniquement appel\u00e9s depuis des composants React).</p>\n<p>Il existe une liste interne de \u00ab\u00a0cellules m\u00e9moire\u00a0\u00bb associ\u00e9es \u00e0 chaque composant. Ce sont juste des objets JavaScript o\u00f9 nous stockons quelques donn\u00e9es. Quand vous appelez un Hook tel que <code class=\"language-javascript\">useState()</code>, il lit la cellule courante (ou l\u2019initialise pendant le premier rendu), et d\u00e9place alors le pointeur sur la prochaine. C\u2019est ainsi que de multiples appels \u00e0 <code class=\"language-javascript\">useState()</code> peuvent avoir chacun un \u00e9tat local distinct.</p>\n<h3 id=\"what-is-the-prior-art-for-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#what-is-the-prior-art-for-hooks\"></a>Quelles sont les sources d\u2019inspiration des Hooks\u00a0? </h3>\n<p>Les Hooks font la synth\u00e8se d\u2019id\u00e9es issues de plusieurs sources\u00a0:</p>\n<ul>\n<li>Nos pr\u00e9c\u00e9dentes exp\u00e9riences autour d\u2019API fonctionnelles dans le d\u00e9p\u00f4t <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State\">react-future</a>.</li>\n<li>Les exp\u00e9riences de la communaut\u00e9 React avec les API de props de rendu, notamment le <a class=\"external-link\" href=\"https://github.com/reactions/component\">composant Reactions</a> de <a class=\"external-link\" href=\"https://github.com/ryanflorence\">Ryan Florence</a>.</li>\n<li>La proposition de <a class=\"external-link\" href=\"https://gist.github.com/trueadm/17beb64288e30192f3aa29cad0218067\">mot-cl\u00e9 <code class=\"language-javascript\">adopt</code></a> de <a class=\"external-link\" href=\"https://github.com/trueadm\">Dominic Gannaway</a> comme sucre syntaxique pour les props de rendu.</li>\n<li>Les <a class=\"external-link\" href=\"http://displayscript.org/introduction.html\">variables d\u2019\u00e9tat et les cellules \u00e0 \u00e9tat en DisplayScript</a>.</li>\n<li>Les <a class=\"external-link\" href=\"https://reasonml.github.io/reason-react/docs/fr/state-actions-reducer.html\">composants r\u00e9ducteurs</a> de ReasonReact.</li>\n<li>Les <a class=\"external-link\" href=\"http://reactivex.io/rxjs/class/es6/Subscription.js~Subscription.html\">abonnements</a> <em>(Subscriptions, NdT)</em> en Rx.</li>\n<li>Les <a class=\"external-link\" href=\"https://github.com/ocamllabs/ocaml-effects-tutorial#2-effectful-computations-in-a-pure-setting\">effets alg\u00e9briques</a> de OCaml Multicore.</li>\n</ul>\n<p><a class=\"external-link\" href=\"https://github.com/sebmarkbage\">Sebastian Markb\u00e5ge</a> a propos\u00e9 la conception initiale des Hooks, peaufin\u00e9e ensuite par <a class=\"external-link\" href=\"https://github.com/acdlite\">Andrew Clark</a>, <a class=\"external-link\" href=\"https://github.com/sophiebits\">Sophie Alpert</a>, <a class=\"external-link\" href=\"https://github.com/trueadm\">Dominic Gannaway</a> et d\u2019autres membres de l\u2019\u00e9quipe React.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/hooks-faq.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-faq", "nav": ["/react/hooks-reference", "/react/testing"]}]}, {"key": "Tests", "values": [{"key": "Aper\u00e7u des tests", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Vous pouvez tester vos composants React au m\u00eame titre que le reste de votre code JavaScript.</p>\n<p>Il existe plusieurs fa\u00e7ons de tester des composants React, lesquelles se divisent au final en deux grandes cat\u00e9gories\u00a0:</p>\n<ul>\n<li><strong>Effectuer le rendu d\u2019arborescences de composants</strong> dans un environnement de test simplifi\u00e9, et v\u00e9rifier la sortie.</li>\n<li><strong>Ex\u00e9cuter une appli compl\u00e8te</strong> dans un environnement navigateur r\u00e9aliste (on parle alors de tests \u00ab\u00a0de bout en bout\u00a0\u00bb) <em>(end-to-end, NdT)</em>.</li>\n</ul>\n<p>Cette partie de la documentation se concentre sur les strat\u00e9gies de test pour le premier cas de figure.  Bien que des tests complets de bout en bout puissent \u00eatre tr\u00e8s utiles pour \u00e9viter des r\u00e9gressions dans des sc\u00e9narios critiques d\u2019utilisation, ce type de test ne se pr\u00e9occupe gu\u00e8re des composants React en particulier, et sort donc du cadre de cette documentation.</p>\n<h3 id=\"tradeoffs\"><a class=\"anchor\" href=\"/react/testing#tradeoffs\"></a>Faire des choix </h3>\n<p>Lorsqu\u2019on d\u00e9termine quels outils de test employer, il faut r\u00e9aliser certains arbitrages\u00a0:</p>\n<ul>\n<li><strong>Vitesse d\u2019it\u00e9ration vs. environnement r\u00e9aliste\u00a0:</strong> certains outils fournissent une boucle de retour extr\u00eamement rapide entre le moment o\u00f9 vous changez votre code et l\u2019obtention du r\u00e9sultat, mais ils ne simulent pas tr\u00e8s pr\u00e9cis\u00e9ment le comportement du navigateur.  D\u2019autres pourraient utiliser un v\u00e9ritable environnement navigateur, mais au prix d\u2019une vitesse d\u2019ex\u00e9cution moindre, sans parler des d\u00e9fis que leur utilisation peut poser sur un serveur d\u2019int\u00e9gration continue.</li>\n<li><strong>Jusqu\u2019o\u00f9 isoler\u00a0:</strong> avec les composants, la fronti\u00e8re entre un test \u00ab unitaire\u00a0\u00bb et un test \u00ab\u00a0d\u2019int\u00e9gration\u00a0\u00bb peut \u00eatre floue.  Si vous testez un formulaire, le test devrait-il \u00e9galement tester les boutons que ce formulaire contient\u00a0? Ou le composant bouton devrait-il avoir sa propre suite de tests\u00a0?  Si on change la conception du bouton, l\u2019\u00e9chec soudain du test du formulaire est-il un dommage collat\u00e9ral acceptable\u00a0?</li>\n</ul>\n<p>D\u2019une \u00e9quipe ou d\u2019un produit \u00e0 l\u2019autre, les r\u00e9ponses valables peuvent varier.</p>\n<h3 id=\"tools\"><a class=\"anchor\" href=\"/react/testing#tools\"></a>Outils recommand\u00e9s </h3>\n<p><strong><a class=\"external-link\" href=\"https://facebook.github.io/jest/\">Jest</a></strong> est un harnais de test JavaScript qui vous permet d\u2019acc\u00e9der au DOM <em>via</em> <a href=\"/react/testing-environments#mocking-a-rendering-surface\"><code class=\"language-javascript\">jsdom</code></a>. M\u00eame si jsdom ne simule que partiellement le fonctionnement d\u2019un navigateur, il est souvent suffisant pour tester vos composants React.  Jest combine une excellente vitesse d\u2019it\u00e9ration avec de puissantes fonctionnalit\u00e9s telles que l\u2019isolation des <a href=\"/react/testing-environments#mocking-modules\">modules</a> et des <a href=\"/react/testing-environments#mocking-timers\">horloges</a>, afin que vous puissiez garder un contr\u00f4le fin sur la fa\u00e7on dont votre code s\u2019ex\u00e9cute.</p>\n<p><strong><a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a></strong> fournit un ensemble de fonctions utilitaires pour tester des composants React sans d\u00e9pendre de leurs d\u00e9tails d\u2019impl\u00e9mentation.  Cette approche facilite le changement de conception interne et vous aiguille vers de meilleures pratiques en termes d\u2019accessibilit\u00e9.  M\u00eame s\u2019il ne fournit pas de moyen pour r\u00e9aliser le rendu \u00ab\u00a0superficiel\u00a0\u00bb d\u2019un composant (sans ses enfants), on peut y arriver avec un harnais tel que Jest et ses m\u00e9canismes <a href=\"/react/testing-recipes#mocking-modules\">d\u2019isolation</a>.</p>\n<h3 id=\"learn-more\"><a class=\"anchor\" href=\"/react/testing#learn-more\"></a>Pour en savoir plus </h3>\n<p>Cette partie de la documentation comprend deux (autres) pages\u00a0:</p>\n<ul>\n<li><a href=\"/react/testing-recipes\">Les recettes</a>\u00a0: une compilation d\u2019approches \u00e9prouv\u00e9es pour l\u2019\u00e9criture de tests visant des composants React.</li>\n<li><a href=\"/react/testing-environments\">Les environnements</a>\u00a0: les consid\u00e9rations \u00e0 examiner lorsque vous mettez en place un environnement de test de composants React.</li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/testing.md\">Edit this page</a></p></div></article>", "path": "/react/testing", "nav": ["/react/hooks-faq", "/react/testing-recipes"]}, {"key": "Recettes de test", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Voici quelques approches courantes pour tester des composants React.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Cette page suppose que vous utilisez <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a> comme harnais de test.  Si vous utilisez un harnais diff\u00e9rent, vous aurez peut-\u00eatre besoin d\u2019ajuster l\u2019API, mais l\u2019aspect g\u00e9n\u00e9ral de la solution restera probablement inchang\u00e9.   Pour en apprendre davantage sur la mise en place d\u2019un environnement de test, consultez la page <a href=\"/react/testing-environments\">Environnements de test</a>.</p>\n</div>\n<p>Dans cette page, nous utiliserons principalement des fonctions composants.  Ceci dit, ces strat\u00e9gies de test sont d\u00e9coupl\u00e9es de ce genre de d\u00e9tail d\u2019impl\u00e9mentation, et fonctionneront tout aussi bien pour des composants d\u00e9finis \u00e0 base de classes.</p>\n<ul>\n<li><a href=\"/react/testing-recipes#setup--teardown\">Mise en place / nettoyage</a></li>\n<li><a href=\"/react/testing-recipes#act\"><code class=\"language-javascript\">act()</code></a></li>\n<li><a href=\"/react/testing-recipes#rendering\">Rendu</a></li>\n<li><a href=\"/react/testing-recipes#data-fetching\">Chargement de donn\u00e9es</a></li>\n<li><a href=\"/react/testing-recipes#mocking-modules\">Simuler des modules</a></li>\n<li><a href=\"/react/testing-recipes#events\">\u00c9v\u00e9nements</a></li>\n<li><a href=\"/react/testing-recipes#timers\">Horloges</a></li>\n<li><a href=\"/react/testing-recipes#snapshot-testing\">Capture d\u2019instantan\u00e9s</a></li>\n<li><a href=\"/react/testing-recipes#multiple-renderers\">Moteurs de rendu multiples</a></li>\n<li><a href=\"/react/testing-recipes#something-missing\">Pas trouv\u00e9 votre bonheur\u00a0?</a></li>\n</ul>\n\n<h3 id=\"setup--teardown\"><a class=\"anchor\" href=\"/react/testing-recipes#setup--teardown\"></a>Mise en place / nettoyage </h3>\n<p>Pour chaque test, nous voulons habituellement r\u00e9aliser le rendu d\u2019un arbre React au sein d\u2019un \u00e9l\u00e9ment DOM attach\u00e9 \u00e0 <code class=\"language-javascript\">document</code>.  Ce dernier point est n\u00e9cessaire pour que le composant puisse recevoir les \u00e9v\u00e9nements du DOM.  Et lorsque le test se termine, nous voulons \u00ab\u00a0nettoyer\u00a0\u00bb et d\u00e9monter l\u2019arbre pr\u00e9sent dans <code class=\"language-javascript\">document</code>.</p>\n<p>Une fa\u00e7on courante de faire \u00e7a consiste \u00e0 associer les blocks <code class=\"language-javascript\">beforeEach</code> et <code class=\"language-javascript\">afterEach</code> afin qu\u2019il s\u2019ex\u00e9cutent syst\u00e9matiquement autour de chaque test, ce qui permet d\u2019en isoler les effets\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous utilisez peut-\u00eatre une autre approche, mais gardez \u00e0 l\u2019esprit que vous voulez ex\u00e9cuter le nettoyage <em>m\u00eame si un test \u00e9choue</em>.  Sinon, vos tests peuvent commencer \u00e0 \u00ab\u00a0fuire\u00a0\u00bb, et un test pourrait alt\u00e9rer par inadvertance le comportement d\u2019un autre, ce qui complexifie beaucoup le d\u00e9bogage.</p>\n\n<h3 id=\"act\"><a class=\"anchor\" href=\"/react/testing-recipes#act\"></a><code class=\"language-javascript\">act()</code> </h3>\n<p>Lorsqu\u2019on \u00e9crit des tests UI, des t\u00e2ches comme le rendu lui-m\u00eame, les \u00e9v\u00e9nements utilisateurs ou encore le chargement de donn\u00e9es peuvent \u00eatre consid\u00e9r\u00e9es comme autant \u00ab\u00a0d\u2019unit\u00e9s\u00a0\u00bb d\u2019interaction avec l\u2019interface utilisateur.  <code class=\"language-javascript\">react-dom/test-utils</code> fournit une fonction utilitaire appel\u00e9e <a href=\"/react/test-utils#act\"><code class=\"language-javascript\">act()</code></a> qui s\u2019assure que toutes les mises \u00e0 jour relatives \u00e0 ces \u00ab\u00a0unit\u00e9s\u00a0\u00bb ont bien \u00e9t\u00e9 trait\u00e9es et appliqu\u00e9es au DOM avant que nous ne commencions \u00e0 exprimer nos assertions\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// rendu des composants</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ex\u00e9cution des assertions</span></code></pre></div>\n<p>\u00c7a nous aide \u00e0 rapprocher nos tests du comportement que de v\u00e9ritables utilisateurs constateraient en utilisant notre application.  La suite de ces exemples utilise <code class=\"language-javascript\">act()</code> pour b\u00e9n\u00e9ficier de ces garanties.</p>\n<p>Vous trouverez peut-\u00eatre que le recours manuel \u00e0 <code class=\"language-javascript\">act()</code> est rapidement un tantinet verbeux.  Pour vous \u00e9pargner une bonne partie du code g\u00e9n\u00e9rique associ\u00e9, vous pouvez opter pour une biblioth\u00e8que telle que <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a>, dont les utilitaires sont bas\u00e9s sur <code class=\"language-javascript\">act()</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le terme <code class=\"language-javascript\">act</code> vient de l\u2019approche <a class=\"external-link\" href=\"http://wiki.c2.com/?ArrangeActAssert\">Arrange-Act-Assert</a>.</p>\n</div>\n\n<h3 id=\"rendering\"><a class=\"anchor\" href=\"/react/testing-recipes#rendering\"></a>Rendu </h3>\n<p>Vous voudrez fr\u00e9quemment v\u00e9rifier que le rendu d\u2019un composant est correct pour un jeu de props donn\u00e9.  Prenons un composant simple qui affiche un message bas\u00e9 sur une prop\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Bonjour, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Salut, \u00e9tranger</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pouvons \u00e9crire un test pour ce composant\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Hello <span class=\"token keyword\">from</span> <span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s\u2019affiche avec ou sans nom\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Salut, \u00e9tranger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Jenny<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour, Jenny !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Margaret<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour, Margaret !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"data-fetching\"><a class=\"anchor\" href=\"/react/testing-recipes#data-fetching\"></a>Chargement de donn\u00e9es </h3>\n<p>Au lieu d\u2019appeler de v\u00e9ritables API dans tous vos tests, vous pouvez simuler les requ\u00eates et renvoyer des donn\u00e9es factices.  Simuler le chargement de donn\u00e9es avec de \u00ab\u00a0fausses\u00a0\u00bb donn\u00e9es \u00e9vite de fragiliser les tests lors d\u2019un back-end indisponible, et les acc\u00e9l\u00e8re en prime.  Remarquez que vous voudrez peut-\u00eatre qu\u2019une petite partie de vos tests utilisent un framework <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">\u00ab\u00a0de bout en bout\u00a0\u00bb</a> pour v\u00e9rifier que l\u2019appli dans son ensemble fonctionne bien.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// user.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchUserData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchUserData</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Chargement\u2026\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>details</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> ans\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      vit \u00e0 </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>details</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pouvons \u00e9crire les tests associ\u00e9s\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// user.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">\"./user\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"affiche les donn\u00e9es utilisateur\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> fakeUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Joni Baez\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    age<span class=\"token operator\">:</span> <span class=\"token string\">\"32\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    address<span class=\"token operator\">:</span> <span class=\"token string\">\"123, Charming Avenue\"</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  jest<span class=\"token punctuation\">.</span><span class=\"token function\">spyOn</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mockImplementation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function-variable function\">json</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token comment\">// Utilise la version asynchrone de `act` pour appliquer les promesses accomplies</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toContain</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// retire la simulation pour assurer une bonne isolation des tests</span></span><span class=\"gatsby-highlight-code-line\">  global<span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">.</span><span class=\"token function\">mockRestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"mocking-modules\"><a class=\"anchor\" href=\"/react/testing-recipes#mocking-modules\"></a>Simuler des modules </h3>\n<p>Certains modules ne fonctionneront peut-\u00eatre pas bien dans un environnement de test, ou ne seront pas essentiels au test en lui-m\u00eame.  En simulant ces modules pour les remplacer par des versions factices, nous pouvons faciliter l\u2019\u00e9criture des tests pour notre propre code.</p>\n<p>Prenons un composant <code class=\"language-javascript\">Contact</code> qui int\u00e8gre un composant tiers <code class=\"language-javascript\">GoogleMap</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// map.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoadScript<span class=\"token punctuation\">,</span> GoogleMap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-google-maps\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoadScript</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>script-loader<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">googleMapsApiKey</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VOTRE_CL\u00c9_API<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GoogleMap</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example-map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">LoadScript</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// contact.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Map <span class=\"token keyword\">from</span> <span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Contact</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>address</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Contacter </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> par</span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"mailto:\"</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          e-mail\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        ou sur son </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>site<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          site web\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>address</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span></span> <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Si nous ne voulons pas charger ce composant tiers lors de nos tests, nous pouvons simuler la d\u00e9pendance elle-m\u00eame pour renvoyer un composant factice, et ex\u00e9cuter nos tests\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// contact.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Contact <span class=\"token keyword\">from</span> <span class=\"token string\">\"./contact\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MockedMap <span class=\"token keyword\">from</span> <span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">jest<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DummyMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">}</span><span class=\"token plain-text\">:</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">.</span>long<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"devrait afficher les infos de contact\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> lat<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> long<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Contact</span></span>\n        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Joni Baez<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">email</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test@example.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">site</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://test.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>center<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n      container\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid='email']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mailto:test@example.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-testid=\"site\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://test.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-testid=\"map\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"0:0\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"events\"><a class=\"anchor\" href=\"/react/testing-recipes#events\"></a>\u00c9v\u00e9nements </h3>\n<p>Nous vous conseillons de d\u00e9clencher de v\u00e9ritables \u00e9v\u00e9nements DOM sur des \u00e9l\u00e9ments DOM, et de v\u00e9rifier le r\u00e9sultat.  Prenez ce composant <code class=\"language-javascript\">Toggle</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// toggle.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Toggle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token operator\">!</span>previousState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>state <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\u00c9teindre\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Allumer\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pourrions le tester comme ceci\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// toggle.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Toggle <span class=\"token keyword\">from</span> <span class=\"token string\">\"./toggle\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// `container` *doit* \u00eatre attach\u00e9 \u00e0 `document` pour que les \u00e9v\u00e9nements</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// fonctionnent correctement.</span></span>  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change de valeur suite au clic\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onChange <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toggle</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// r\u00e9cup\u00e8re l\u2019\u00e9l\u00e9ment bouton et d\u00e9clenche quelques clics dessus</span>\n  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid=toggle]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Allumer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\u00c9teindre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>      button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Allumer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Les \u00e9v\u00e9nements DOM disponibles et leurs propri\u00e9t\u00e9s sont d\u00e9crits dans le <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/MouseEvent\">MDN</a>.  Remarquez que vous devez passer <code class=\"language-javascript\">{ bubbles: true }</code> pour chaque \u00e9v\u00e9nement cr\u00e9\u00e9 afin qu\u2019ils puissent atteindre l\u2019\u00e9couteur de React, car React d\u00e9l\u00e8gue automatiquement les \u00e9v\u00e9nements au niveau racine du document.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>React Testing Library propose <a class=\"external-link\" href=\"https://testing-library.com/docs/dom-testing-library/api-events\">une fa\u00e7on plus concise</a> de d\u00e9clencher des \u00e9v\u00e9nements.</p>\n</div>\n\n<h3 id=\"timers\"><a class=\"anchor\" href=\"/react/testing-recipes#timers\"></a>Horloges </h3>\n<p>Votre code d\u00e9pend peut-\u00eatre de fonctions cal\u00e9es sur le temps telles que <code class=\"language-javascript\">setTimeout</code>, afin de planifier davantage de travail \u00e0 l\u2019avenir.  Dans l\u2019exemple ci-apr\u00e8s, un panneau de choix multiples attend une s\u00e9lection puis avance, avec un timeout si la s\u00e9lection ne survient pas dans les 5 secondes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// card.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Card</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      props<span class=\"token punctuation\">.</span><span class=\"token function\">onSelect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>onSelect<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">choice</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n      <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">data-testid</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onSelect</span><span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous pouvons \u00e9crire les tests de ce composant en tirant parti de la <a class=\"external-link\" href=\"https://jestjs.io/docs/en/timer-mocks\">simulation d\u2019horloges de Jest</a> et en testant les diff\u00e9rents \u00e9tats possibles.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// card.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"./card\"</span><span class=\"token punctuation\">;</span></span>\njest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"devrait s\u00e9lectionner null \u00e0 expiration\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// avance dans le temps de 100ms</span></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// puis avance de 5 secondes</span></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"devrait nettoyer derri\u00e8re lui lorsqu\u2019il est retir\u00e9\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// d\u00e9monte l\u2019appli</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"devrait accepter des s\u00e9lections\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid='2']\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vous pouvez ne recourir \u00e0 de fausses horloges que pour certains tests.  Ci-avant nous les avons activ\u00e9es en appelant <code class=\"language-javascript\">jest.useFakeTimers()</code>.   Le principal avantage r\u00e9side dans le fait que votre test n\u2019a pas besoin d\u2019attendre effectivement cinq secondes pour s\u2019ex\u00e9cuter, et vous n\u2019avez pas eu besoin de complexifier le code de votre composant uniquement pour permettre ses tests.</p>\n\n<h3 id=\"snapshot-testing\"><a class=\"anchor\" href=\"/react/testing-recipes#snapshot-testing\"></a>Capture d\u2019instantan\u00e9s </h3>\n<p>Les frameworks tels que Jest vous permettent aussi de sauvegarder des \u00ab\u00a0instantan\u00e9s\u00a0\u00bb de donn\u00e9es gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://jestjs.io/docs/en/snapshot-testing\"><code class=\"language-javascript\">toMatchSnapshot</code> / <code class=\"language-javascript\">toMatchInlineSnapshot</code></a>. Avec elles, vous pouvez \u00ab\u00a0sauver\u00a0\u00bb la sortie de rendu d\u2019un composant et vous assurer que toute modification qui lui sera apport\u00e9e devra \u00eatre explicitement confirm\u00e9e en tant qu\u2019\u00e9volution de l\u2019instantan\u00e9.</p>\n<p>Dans l\u2019exemple qui suit, nous affichons un composant et formatons le HTML obtenu gr\u00e2ce au module <a class=\"external-link\" href=\"https://www.npmjs.com/package/pretty\"><code class=\"language-javascript\">pretty</code></a>, pour enfin le sauvegarder comme instantan\u00e9 en ligne\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.test.js, \u00e0 nouveau</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> pretty <span class=\"token keyword\">from</span> <span class=\"token string\">\"pretty\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Hello <span class=\"token keyword\">from</span> <span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// met en place un \u00e9l\u00e9ment DOM comme cible de rendu</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// nettoie en sortie de test</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"devrait afficher une salutation\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* \u2026rempli automatiquement par Jest\u2026 */</span></span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Jenny<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* \u2026rempli automatiquement par Jest\u2026 */</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Margaret<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* \u2026rempli automatiquement par Jest\u2026 */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Il est g\u00e9n\u00e9ralement pr\u00e9f\u00e9rable de recourir \u00e0 des assertions sp\u00e9cifiques plut\u00f4t qu\u2019\u00e0 des instantan\u00e9s.  Ce type de tests inclut des d\u00e9tails d\u2019impl\u00e9mentation qui les rendent particuli\u00e8rement fragiles, entra\u00eenant une sorte d\u2019anesth\u00e9sie des \u00e9quipes vis-\u00e0-vis des \u00e9checs de tests dus aux instantan\u00e9s.  Une <a href=\"/react/testing-recipes#mocking-modules\">simulation cibl\u00e9e de composants enfants</a> peut vous aider \u00e0 r\u00e9duire la taille de vos instantan\u00e9s et \u00e0 les garder lisibles pour vos revues de code.</p>\n\n<h3 id=\"multiple-renderers\"><a class=\"anchor\" href=\"/react/testing-recipes#multiple-renderers\"></a>Moteurs de rendu multiples </h3>\n<p>Dans de rares cas, vous pourrez vous retrouver \u00e0 ex\u00e9cuter un test pour un composant qui, lui, recourt \u00e0 plusieurs moteurs de rendu.  Par exemple, peut-\u00eatre ex\u00e9cutez-vous des tests \u00e0 base d\u2019instantan\u00e9s sur un composant en utilisant <code class=\"language-javascript\">react-test-renderer</code>, alors que sous le capot le composant utilise <code class=\"language-javascript\">ReactDOM.render</code> pour obtenir le contenu d\u2019un composant enfant.  Dans un tel sc\u00e9nario vous pouvez enrober les mises \u00e0 jour avec les appels aux fonctions <code class=\"language-javascript\">act()</code> des moteurs appropri\u00e9s.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token keyword\">as</span> domAct <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token keyword\">as</span> testAct<span class=\"token punctuation\">,</span> create <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-test-renderer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">let</span> root<span class=\"token punctuation\">;</span>\n<span class=\"token function\">domAct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">testAct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    root <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"something-missing\"><a class=\"anchor\" href=\"/react/testing-recipes#something-missing\"></a>Pas trouv\u00e9 votre bonheur\u00a0? </h3>\n<p>Si nous avons oubli\u00e9 de couvrir un sc\u00e9nario courant, n\u2019h\u00e9sitez pas \u00e0 nous en faire part sur notre <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org/issues\">outil de suivi de tickets</a> pour le site web de la documentation.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/testing-recipes.md\">Edit this page</a></p></div></article>", "path": "/react/testing-recipes", "nav": ["/react/testing", "/react/testing-environments"]}, {"key": "Environnements de test", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><!-- Ce document vise les personnes d\u00e9j\u00e0 \u00e0 l\u2019aise avec JavaScript, et qui ont probablement d\u00e9j\u00e0 \u00e9crit des tests avec.  Il constitue une sorte de r\u00e9f\u00e9rence des diff\u00e9rences entre les environnements de test pour les composants React, en explicitant en quoi ces diff\u00e9rences affectent l\u2019\u00e9criture des tests.  Ce document suppose par ailleurs une l\u00e9g\u00e8re priorit\u00e9 envers les composants web bas\u00e9s sur react-dom, mais comprend des informations pour les autres moteurs de rendu. -->\n<p>Ce document d\u00e9taille les facteurs susceptibles d\u2019affecter votre environ\u00ad\u00adnement, et fournit des conseils pour quelques sc\u00e9narios.</p>\n<h3 id=\"test-runners\"><a class=\"anchor\" href=\"/react/testing-environments#test-runners\"></a>Harnais de test </h3>\n<p>Les harnais de test tels que <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a>, <a class=\"external-link\" href=\"https://mochajs.org/\">mocha</a> ou <a class=\"external-link\" href=\"https://github.com/avajs/ava\">ava</a> vous permettent d\u2019\u00e9crire des suites de tests en utilisant du JavaScript classique, et les ex\u00e9cutent dans le cadre de votre processus de d\u00e9veloppement. Qui plus est, les suites de tests peuvent \u00eatre ex\u00e9cut\u00e9es au sein de votre int\u00e9gration continue.</p>\n<ul>\n<li>Jest est largement compatible avec les projets React, en offrant des fonctionnalit\u00e9s telles que l\u2019isolation des <a href=\"/react/testing-environments#mocking-modules\">modules</a> et des <a href=\"/react/testing-environments#mocking-timers\">horloges</a>, ainsi qu\u2019une prise en charge de <a href=\"/react/testing-environments#mocking-a-rendering-surface\"><code class=\"language-javascript\">jsdom</code></a>. <strong>Si vous utilisez Create React App, <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/docs/running-tests\">Jest est fourni de base</a> avec des r\u00e9glages par d\u00e9faut tr\u00e8s utiles.</strong></li>\n<li>Les biblioth\u00e8ques comme <a class=\"external-link\" href=\"https://mochajs.org/#running-mocha-in-the-browser\">mocha</a> sont bien adapt\u00e9es \u00e0 une utilisation au sein de v\u00e9ritables navigateurs, et pourraient vous aider pour des tests ayant explicitement besoin de ce type de contexte d\u2019ex\u00e9cution.</li>\n<li>Les tests de bout en bout sont surtout pertinents pour des sc\u00e9narios plus longs impliquant plusieurs pages successives, et requi\u00e8rent une <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">mise en place distincte</a>.</li>\n</ul>\n<h3 id=\"mocking-a-rendering-surface\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-a-rendering-surface\"></a>Simuler une surface d\u2019affichage </h3>\n<p>Les tests s\u2019ex\u00e9cutent souvent dans un environnement qui n\u2019est pas dot\u00e9 d\u2019une v\u00e9ritable surface d\u2019affichage (comme le serait un navigateur).  Pour ces environnements-l\u00e0, nous vous conseillons de simuler un navigateur avec <a class=\"external-link\" href=\"https://github.com/jsdom/jsdom\"><code class=\"language-javascript\">jsdom</code></a>, une impl\u00e9mentation l\u00e9g\u00e8re de navigateur qui s\u2019ex\u00e9cute dans un processus Node.js.</p>\n<p>La plupart du temps, jsdom se comporte comme un navigateur classique, \u00e0 ceci pr\u00e8s qu\u2019il ne fournit pas des aspects comme <a class=\"external-link\" href=\"https://github.com/jsdom/jsdom#unimplemented-parts-of-the-web-platform\">la mise en page et la navigation</a>. \u00c7a reste utile pour la plupart des tests de composants bas\u00e9s web, dans la mesure o\u00f9 il s\u2019ex\u00e9cute bien plus vite que lorsque vous devez d\u00e9marrer un navigateur pour chaque test.  Qui plus est, il s\u2019ex\u00e9cute dans le m\u00eame processus que vos tests, de sorte qu\u2019il est facile d\u2019\u00e9crire du code qui examine le DOM obtenu et v\u00e9rifie son contenu.</p>\n<p>Tout comme un v\u00e9ritable navigateur, jsdom nous permet de mod\u00e9liser les interactions utilisateurs\u00a0; vos tests peuvent d\u00e9clencher des \u00e9v\u00e9nements sur les n\u0153uds du DOM, puis observer le DOM et v\u00e9rifier les effets de bord de ces actions <a href=\"/react/testing-recipes#events\"><small>(exemple)</small></a>.</p>\n<p>Une large part des tests d\u2019interface utilisateur (UI) peuvent \u00eatre \u00e9crits de cette fa\u00e7on\u00a0: en utilisant Jest comme harnais, en r\u00e9alisant le rendu avec jsdom, et en sp\u00e9cifiant les interactions utilisateurs sous forme de s\u00e9quences d\u2019\u00e9v\u00e9nements au sein du navigateur, \u00e0 l\u2019aide de la fonction utilitaire <code class=\"language-javascript\">act()</code> <a href=\"/react/testing-recipes\"><small>(exemple)</small></a>.  Par exemple, de tr\u00e8s nombreux tests de React lui-m\u00eame sont \u00e9crits ainsi.</p>\n<p>Si vous \u00e9crivez une biblioth\u00e8que qui doit tester principalement des comportements sp\u00e9cifiques aux navigateurs, et requiert donc des comportements natifs du navigateur tels que la mise en page ou de v\u00e9ritables champs de saisie, il vous faudra alors plut\u00f4t une solution comme <a class=\"external-link\" href=\"https://mochajs.org/\">mocha</a>.</p>\n<p>Dans un environnement o\u00f9 vous <em>ne pouvez pas</em> simuler un DOM (par exemple en testant des composants React Native depuis Node.js), vous pourriez opter pour des <a href=\"/react/test-utils#simulate\">utilitaires de simulation d\u2019\u00e9v\u00e9nements</a>, qui simulent les interactions avec les \u00e9l\u00e9ments.\u00a0Une autre option consisterait \u00e0 utiliser la fonction utilitaire <code class=\"language-javascript\">fireEvent</code> fournie par <a class=\"external-link\" href=\"https://testing-library.com/docs/react-native-testing-library/intro\"><code class=\"language-javascript\">@testing-library/react-native</code></a>.</p>\n<p>Les frameworks comme <a class=\"external-link\" href=\"https://www.cypress.io/\">Cypress</a>, <a class=\"external-link\" href=\"https://github.com/GoogleChrome/puppeteer\">puppeteer</a> et <a class=\"external-link\" href=\"https://www.seleniumhq.org/projects/webdriver/\">webdriver</a> sont quant \u00e0 eux utiles pour ex\u00e9cuter des <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">tests de bout en bout</a>.</p>\n<h3 id=\"mocking-functions\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-functions\"></a>Simuler des fonctions </h3>\n<p>Lorsqu\u2019on \u00e9crit des tests, on aimerait les isoler des parties de notre code qui n\u2019ont pas d\u2019\u00e9quivalent dans notre environnement de test (par exemple pour v\u00e9rifier l\u2019\u00e9tat de <code class=\"language-javascript\">navigator.onLine</code> alors qu\u2019on est en Node.js).  Les tests peuvent aussi surveiller certaines fonctions, et observer l\u2019interaction entre ces fonctions et d\u2019autres parties du test.  Il est alors utile de pouvoir simuler s\u00e9lectivement ces fonctions en les rempla\u00e7ant par des versions adapt\u00e9es \u00e0 nos tests.</p>\n<p>C\u2019est particuli\u00e8rement vrai pour le chargement de donn\u00e9es.  Il est g\u00e9n\u00e9ralement pr\u00e9f\u00e9rable d\u2019utiliser de \u00ab\u00a0fausses\u00a0\u00bb donn\u00e9es pour nos tests, afin d\u2019\u00e9viter la lenteur et la fragilit\u00e9 d\u2019une r\u00e9cup\u00e9ration depuis de v\u00e9ritables points d\u2019acc\u00e8s API <a href=\"/react/testing-recipes#data-fetching\"><small>(exemple)</small></a>.  On gagne ainsi en fiabilit\u00e9 pour nos tests.  Des biblioth\u00e8ques comme <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a> et <a class=\"external-link\" href=\"https://sinonjs.org/\">sinon</a>, entre autres, permettent de simuler les fonctions.  Pour des tests de bout en bout, il peut \u00eatre un peu plus d\u00e9licat de simuler compl\u00e8tement le r\u00e9seau, mais vous voudrez sans doute utiliser de v\u00e9ritables points d\u2019acc\u00e8s API dans ces tests-l\u00e0 de toutes fa\u00e7ons.</p>\n<h3 id=\"mocking-modules\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-modules\"></a>Simuler des modules </h3>\n<p>Certains composants ont des d\u00e9pendances \u00e0 des modules qui peuvent ne pas bien fonctionner dans un environnement de test, ou ne sont pas essentiels \u00e0 nos tests.  Il peut alors \u00eatre utile de les simuler en les rempla\u00e7ant par des versions appropri\u00e9es <a href=\"/react/testing-recipes#mocking-modules\"><small>(exemple)</small></a>.</p>\n<p>Dans Node.js, les harnais comme Jest <a class=\"external-link\" href=\"https://jestjs.io/docs/en/manual-mocks\">permettent la simulation de modules</a>. Vous pouvez aussi recourir \u00e0 des biblioth\u00e8ques telles que <a class=\"external-link\" href=\"https://www.npmjs.com/package/mock-require\"><code class=\"language-javascript\">mock-require</code></a>.</p>\n<h3 id=\"mocking-timers\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-timers\"></a>Simuler des horloges </h3>\n<p>Vos composants pourront parfois utiliser des fonctionnalit\u00e9s sensibles au temps, telles que <code class=\"language-javascript\">setTimeout</code>,\u00a0<code class=\"language-javascript\">setInterval</code>, ou <code class=\"language-javascript\">Date.now</code>.\u00a0Dans des environnements de test, il peut \u00eatre pratique de les remplacer par des versions qui vous permettent de faire manuellement \u00ab avancer \u00bb le temps.\u00a0C\u2019est super pour garantir que nos tests s\u2019ex\u00e9cutent rapidement\u00a0! Les tests bas\u00e9s sur des horloges seraient toujours ex\u00e9cut\u00e9s dans l\u2019ordre, juste plus vite <a href=\"/react/testing-recipes#timers\"><small>(exemple)</small></a>.\u00a0La plupart des frameworks, y compris <a class=\"external-link\" href=\"https://jestjs.io/docs/en/timer-mocks\">Jest</a>, <a class=\"external-link\" href=\"https://sinonjs.org/releases/v7.3.2/fake-timers/\">sinon</a> et <a class=\"external-link\" href=\"https://github.com/sinonjs/lolex\">lolex</a>, vous permettent de simuler les horloges dans vos tests.</p>\n<p>Parfois, vous voudrez sans doute ne pas simuler les horloges, par exemple si vous testez une animation, ou une interaction avec un point d\u2019acc\u00e8s sensible au temps (tel qu\u2019une API imposant une limitation de trafic).  Les biblioth\u00e8ques qui simulent les horloges vous permettent d\u2019activer ou d\u00e9sactiver ces interceptions par test ou par suite de tests, de sorte que vous pouvez choisir explicitement dans quels tests ces simulations sont exploit\u00e9es.</p>\n<h3 id=\"end-to-end-tests-aka-e2e-tests\"><a class=\"anchor\" href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\"></a>Tests de bout en bout </h3>\n<p>Les tests de bout en bout sont utiles pour tester des sc\u00e9narios plus longs, en particulier s\u2019ils sont critiques \u00e0 votre activit\u00e9 (comme des paiements ou des inscriptions).  Pour de tels tests, vous voudrez sans doute tester comment un v\u00e9ritable navigateur affiche votre appli enti\u00e8re, charge les donn\u00e9es depuis de v\u00e9ritables points d\u2019acc\u00e8s API, utilise les sessions et les cookies, navigue au travers de divers liens\u2026  Vous voudrez sans doute aussi v\u00e9rifier non seulement l\u2019\u00e9tat du DOM, mais les donn\u00e9es sous-jacentes (par exemple pour v\u00e9rifier si des mises \u00e0 jour ont bien \u00e9t\u00e9 persist\u00e9es en base).</p>\n<p>Dans un tel sc\u00e9nario, vous utiliserez probablement un framework comme <a class=\"external-link\" href=\"https://www.cypress.io/\">Cypress</a> ou une biblioth\u00e8que telle que <a class=\"external-link\" href=\"https://github.com/GoogleChrome/puppeteer\">puppeteer</a> afin de pouvoir naviguer \u00e0 travers de multiples routes et v\u00e9rifier les effets de bord non seulement au sein du navigateur, mais dans votre couche serveur \u00e9galement.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/testing-environments.md\">Edit this page</a></p></div></article>", "path": "/react/testing-environments", "nav": ["/react/testing-recipes", "/react/concurrent-mode-intro"]}]}, {"key": "Mode concurrent (exp\u00e9rimental)", "values": [{"key": "1. Introduction au mode concurrent", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><style>\n.scary > blockquote {\n  background-color: rgba(237, 51, 21, 0.2);\n  border-left-color: #ed3315;\n}\n</style>\n<div class=\"scary\">\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Cette page d\u00e9crit <strong>des fonctionnalit\u00e9s exp\u00e9rimentales qui <a href=\"/react/concurrent-mode-adoption\">ne sont pas encore disponibles</a> dans une version stable</strong>. Ne vous basez pas sur les builds exp\u00e9rimentaux de React pour vos applis en production. Ces fonctionnalit\u00e9s sont susceptibles d\u2019\u00e9voluer de fa\u00e7on significative et sans avertissement avant d\u2019int\u00e9grer officiellement React.</p>\n<p>Cette documentation est destin\u00e9e aux personnes curieuses ou habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t. <strong>Si vous d\u00e9butez en React, ne vous pr\u00e9occupez pas de ces fonctionnalit\u00e9s</strong>\u00a0: vous n\u2019avez pas besoin de les apprendre pour le moment.</p>\n</div>\n</div>\n<p>Cette page fournit un aper\u00e7u th\u00e9orique du mode concurrent. <strong>Pour une introduction plus orient\u00e9e vers la pratique, vous voudrez sans doute consulter les prochaines sections\u00a0:</strong></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense\">Suspense pour le chargement de donn\u00e9es</a> d\u00e9crit un nouveau m\u00e9canisme de chargement de donn\u00e9es distantes au sein de composants React.</li>\n<li><a href=\"/react/concurrent-mode-patterns\">Approches pour une UI concurrente</a> illustre quelques approches de conception d\u2019UI rendues possibles par le mode concurrent et Suspense.</li>\n<li><a href=\"/react/concurrent-mode-adoption\">Adopter le mode concurrent</a> explique comment vous pouvez essayer le mode concurrent dans votre projet.</li>\n<li><a href=\"/react/concurrent-mode-reference\">R\u00e9f\u00e9rence de l\u2019API du mode concurrent</a> documente les nouvelles API disponibles dans les builds exp\u00e9rimentaux de React.</li>\n</ul>\n<h2 id=\"what-is-concurrent-mode\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#what-is-concurrent-mode\"></a>Qu\u2019est-ce que le mode concurrent\u00a0? </h2>\n<p>Le mode concurrent est un ensemble de nouvelles fonctionnalit\u00e9s qui aident les applis React \u00e0 rester r\u00e9actives et \u00e0 s\u2019adapter de fa\u00e7on fluide aux capacit\u00e9s et au d\u00e9bit r\u00e9seau de l\u2019appareil de l\u2019utilisateur.</p>\n<p>Ces fonctionnalit\u00e9s sont encore exp\u00e9rimentales et peuvent changer. Elles ne font pas encore partie d\u2019une version stable de React, mais vous pouvez les essayer d\u00e8s maintenant au moyen d\u2019un build exp\u00e9rimental.</p>\n<h2 id=\"blocking-vs-interruptible-rendering\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#blocking-vs-interruptible-rendering\"></a>Rendu bloquant vs. interruptible </h2>\n<p><strong>Pour expliquer le mode concurrent, nous allons utiliser la gestion de versions comme m\u00e9taphore.</strong>  Si vous travaillez en \u00e9quipe, vous utilisez probablement un syst\u00e8me de gestion de versions tel que Git, et travaillez sur des branches. Quand une branche est finalis\u00e9e, vous pouvez en fusionner le travail dans <code class=\"language-javascript\">master</code> afin que d\u2019autres puissent le r\u00e9cup\u00e9rer.</p>\n<p>Avant que la gestion de versions n\u2019apparaisse, les flux de d\u00e9veloppement \u00e9taient tr\u00e8s diff\u00e9rents. On n\u2019y trouvait aucun concept de branche. Si vous aviez besoin de modifier certains fichiers, il fallait pr\u00e9venir tout le monde de ne pas y toucher pendant ce temps-l\u00e0. Vous ne pouviez m\u00eame pas commencer \u00e0 travailler dessus en parall\u00e8le les uns des autres\u00a0: vous \u00e9tiez litt\u00e9ralement <strong>bloqu\u00e9\u00b7e</strong> par l\u2019autre personne.</p>\n<p>Ce sc\u00e9nario illustre bien la fa\u00e7on dont les biblioth\u00e8ques d\u2019interface utilisateur (UI) fonctionnent g\u00e9n\u00e9ralement aujourd\u2019hui. Une fois qu\u2019elles d\u00e9marrent le rendu d\u2019une mise \u00e0 jour, y compris la cr\u00e9ation de nouveaux n\u0153uds DOM et l\u2019ex\u00e9cution du code au sein des composants, elles ne peuvent pas \u00eatre interrompues. Nous appelons cette approche le \u00ab\u00a0rendu bloquant\u00a0\u00bb.</p>\n<p>Avec le mode concurrent, le rendu n\u2019est pas bloquant\u00a0: il est interruptible. \u00c7a am\u00e9liore l\u2019exp\u00e9rience utilisateur, et en prime, \u00e7a ouvre la porte \u00e0 de nouvelles fonctionnalit\u00e9s qui \u00e9taient impossibles jusque-l\u00e0. Avant de nous pencher sur des exemples concrets dans les <a href=\"/react/concurrent-mode-suspense\">prochaines</a> <a href=\"/react/concurrent-mode-patterns\">sections</a>, survolons rapidement ces nouvelles fonctionnalit\u00e9s.</p>\n<h3 id=\"interruptible-rendering\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#interruptible-rendering\"></a>Rendu interruptible </h3>\n<p>Prenez une liste de produits filtrable. Vous est-il d\u00e9j\u00e0 arriv\u00e9 de taper dans le champ de filtrage pour ressentir un affichage saccad\u00e9 \u00e0 chaque touche press\u00e9e\u00a0?  Une partie du travail de mise \u00e0 jour de la liste de produits est peut-\u00eatre incontournable, telle que la cr\u00e9ation des nouveaux n\u0153uds DOM ou la mise en page effectu\u00e9e par le navigateur. En revanche, le <em>moment</em> d\u2019ex\u00e9cution de ce travail et la <em>mani\u00e8re</em> dont il est ex\u00e9cut\u00e9 jouent un r\u00f4le crucial.</p>\n<p>Une mani\u00e8re courante de contourner ces saccades consiste \u00e0 <em>\u201cdebouncer\u201d</em> la saisie dans le champ. En lissant ainsi le traitement de la saisie, nous ne mettons \u00e0 jour la liste <em>qu\u2019apr\u00e8s</em> que l\u2019utilisateur\u00b7rice a cess\u00e9 de saisir sa valeur. Cependant, il peut \u00eatre frustrant de ne constater aucune mise \u00e0 jour de l\u2019UI lors de la frappe. On pourrait plut\u00f4t \u00ab\u00a0ralentir\u00a0\u00bb <em>(throttle, NdT)</em> la gestion de la saisie, et ne mettre \u00e0 jour la liste qu\u2019\u00e0 hauteur d\u2019une fr\u00e9quence maximale d\u00e9finie. Mais sur des appareils de faible puissance nous constaterions toujours une saccade. Tant le <em>debouncing</em> que le <em>throttling</em> aboutissent \u00e0 une exp\u00e9rience utilisateur sous-optimale.</p>\n<p>La raison de cette saccade est simple\u00a0: une fois que le rendu commence, il ne peut \u00eatre interrompu. Ainsi le navigateur ne peut plus mettre \u00e0 jour le texte dans le champ de saisie juste apr\u00e8s que vous avez press\u00e9 une touche. Peu importent les scores mirifiques que votre biblioth\u00e8que UI (telle que React) obtient dans tel ou tel comparatif, si elle recourt \u00e0 un rendu bloquant, \u00e0 partir d\u2019une certaine charge de travail sur vos composants vous obtiendrez toujours un affichage saccad\u00e9. Et la plupart du temps, il n\u2019existe pas de correctif simple.</p>\n<p><strong>Le mode concurrent corrige cette limitation fondamentale en utilisant un rendu interruptible.</strong>  \u00c7a signifie que lorsque l\u2019utilisateur\u00b7rice presse une touche, React n\u2019a pas besoin d\u2019emp\u00eacher le navigateur de mettre \u00e0 jour le champ de saisie. Il va plut\u00f4t laisser le navigateur afficher cette mise \u00e0 jour, et continuer le rendu de la liste \u00e0 jour <em>en m\u00e9moire</em>. Quand le rendu sera fini, React mettra \u00e0 jour le DOM, et les modifications seront ainsi refl\u00e9t\u00e9es \u00e0 l\u2019\u00e9cran.</p>\n<p>Conceptuellement, vous pouvez imaginer que React pr\u00e9pare chaque mise \u00e0 jour \u00ab\u00a0sur une branche\u00a0\u00bb. Tout comme vous \u00eates libre d\u2019abandonner le travail d\u2019une branche ou de passer d\u2019une branche \u00e0 l\u2019autre, React en mode concurrent peut interrompre une mise \u00e0 jour en cours afin de prioriser une t\u00e2che plus critique, puis revenir \u00e0 ce qu\u2019il \u00e9tait en train de faire. Cette technique n\u2019est pas sans rappeler le <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Multiple_buffering\">double buffering</a> des jeux vid\u00e9os.</p>\n<p>Les techniques du mode concurrent r\u00e9duisent le besoin de <em>debouncing</em> et de <em>throttling</em> dans l\u2019UI. Le rendu \u00e9tant interruptible, React n\u2019a plus besoin de <em>diff\u00e9rer</em> artificiellement du travail afin d\u2019\u00e9viter les saccades. Il peut commencer le rendu imm\u00e9diatement, et interrompre ce travail si n\u00e9cessaire afin de pr\u00e9server la r\u00e9activit\u00e9 de l\u2019appli.</p>\n<h3 id=\"intentional-loading-sequences\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#intentional-loading-sequences\"></a>S\u00e9quences de chargement intentionnelles </h3>\n<p>Nous disions tout \u00e0 l\u2019heure que pour comprendre le mode concurrent, on peut imaginer que React travaille \u00ab\u00a0sur une branche\u00a0\u00bb. Les branches ne sont pas seulement utiles pour des correctifs \u00e0 court terme, mais aussi pour des fonctionnalit\u00e9s plus longues \u00e0 \u00e9crire. Parfois vous pouvez travailler sur une fonctionnalit\u00e9 qui va mettre des semaines avant d\u2019\u00eatre \u00ab assez finie\u00a0\u00bb pour \u00eatre fusionn\u00e9e dans <code class=\"language-javascript\">master</code>. Ici aussi, la m\u00e9taphore de la gestion de versions s\u2019applique bien au rendu.</p>\n<p>Imaginez que vous naviguiez entre deux \u00e9crans d\u2019une appli. Parfois, nous n\u2019aurons peut-\u00eatre pas assez de code et de donn\u00e9es pour afficher un \u00e9tat de chargement \u00ab\u00a0assez fini\u00a0\u00bb \u00e0 l\u2019utilisateur au sein du nouvel \u00e9cran. Transiter vers un \u00e9cran vide (ou dot\u00e9 d\u2019un gros <em>spinner</em>) n\u2019est pas une exp\u00e9rience agr\u00e9able. Et pourtant, il arrive fr\u00e9quemment que les chargements du code et des donn\u00e9es n\u00e9cessaires ne prennent en fait que peu de temps. <strong>Ne serait-il pas plus agr\u00e9able que React puisse rester sur l\u2019ancien \u00e9cran un tout petit peu plus longtemps, pour ensuite \u00ab\u00a0sauter\u00a0\u00bb l\u2019\u00e9tat de \u00ab chargement d\u00e9sagr\u00e9able\u00a0\u00bb lors de la bascule vers le nouvel \u00e9cran\u00a0?</strong></p>\n<p>C\u2019est certes possible aujourd\u2019hui, mais au prix d\u2019une orchestration d\u00e9licate. Avec le mode concurrent, cette fonctionnalit\u00e9 est directement disponible. React commence \u00e0 pr\u00e9parer le nouvel \u00e9cran en m\u00e9moire d\u2019abord\u2014ou, pour revenir \u00e0 notre m\u00e9taphore, \u00ab\u00a0sur une autre branche\u00a0\u00bb. Ainsi, React peut attendre que davantage de contenu ait \u00e9t\u00e9 charg\u00e9 avant de mettre \u00e0 jour le DOM. Avec le mode concurrent, nous pouvons dire \u00e0 React de continuer \u00e0 afficher l\u2019ancien \u00e9cran, pleinement interactif, avec peut-\u00eatre un indicateur de chargement dans un coin. Et lorsque le nouvel \u00e9cran est pr\u00eat, React peut nous y amener.</p>\n<h3 id=\"concurrency\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#concurrency\"></a>Concurrence </h3>\n<p>R\u00e9sumons les deux exemples ci-avant pour voir comment le mode concurrent en unifie le traitement. <strong>Avec le mode concurrent, React peut travailler \u00e0 plusieurs mises \u00e0 jour de l\u2019\u00e9tat <em>en ex\u00e9cution concurrente</em></strong>, tout comme les branches permettent \u00e0 divers membres d\u2019une \u00e9quipe de travailler ind\u00e9pendamment les uns des autres\u00a0:</p>\n<ul>\n<li>Pour les mises \u00e0 jour d\u00e9pendantes du processeur (CPU, telles que la cr\u00e9ation des n\u0153uds DOM et l\u2019ex\u00e9cution du code des composants), la concurrence permet \u00e0 une mise \u00e0 jour plus urgente \u00ab\u00a0d\u2019interrompre\u00a0\u00bb le rendu qui a d\u00e9j\u00e0 d\u00e9marr\u00e9.</li>\n<li>Pour les mises \u00e0 jour d\u00e9pendantes des entr\u00e9es/sorties (I/O, telles que le chargement de code ou de donn\u00e9es \u00e0 partir du r\u00e9seau), la concurrence permet \u00e0 React de commencer le rendu en m\u00e9moire avant m\u00eame que les donn\u00e9es n\u2019arrivent, et de sauter des \u00e9tats de chargement d\u00e9sagr\u00e9ables.</li>\n</ul>\n<p>Ce qui est critique, c\u2019est que la fa\u00e7on dont vous <em>utilisez</em> React reste inchang\u00e9e. Les concepts tels que les composants, les props et l\u2019\u00e9tat local continuent fondamentalement \u00e0 marcher de la m\u00eame fa\u00e7on. Quand vous voulez mettre \u00e0 jour l\u2019\u00e9cran, vous ajustez l\u2019\u00e9tat.</p>\n<p>React utilise des heuristiques pour d\u00e9terminer le degr\u00e9 \u00ab\u00a0d\u2019urgence\u00a0\u00bb d\u2019une mise \u00e0 jour, et vous permet d\u2019ajuster ces choix au moyen de quelques lignes de code pour aboutir \u00e0 l\u2019exp\u00e9rience utilisateur que vous souhaitez suite \u00e0 chaque interaction.</p>\n<h2 id=\"putting-research-into-production\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#putting-research-into-production\"></a>B\u00e9n\u00e9ficier de la recherche dans la production </h2>\n<p>Les fonctionnalit\u00e9s du mode concurrent ont toutes le m\u00eame objectif. <strong>Leur mission consiste \u00e0 faire b\u00e9n\u00e9ficier de v\u00e9ritables UI des derni\u00e8res trouvailles de la recherche en Interactions Humain-Machine.</strong></p>\n<p>Par exemple, la recherche montre qu\u2019afficher trop d\u2019\u00e9tats de chargement interm\u00e9diaires lors d\u2019une transition entre \u00e9crans entra\u00eene un sentiment accru de <em>lenteur</em>. C\u2019est pourquoi le mode concurrent n\u2019affiche de nouveaux \u00e9tats de chargement que selon un \u00ab\u00a0planning\u00a0\u00bb fixe afin d\u2019\u00e9viter des mises \u00e0 jour trop fr\u00e9quentes ou d\u00e9sagr\u00e9ables.</p>\n<p>Dans le m\u00eame esprit, la recherche nous dit que des interactions telles que le survol du pointeur ou la saisie de texte doivent \u00eatre trait\u00e9es dans un tr\u00e8s court laps de temps, alors que les clics et les transitions de pages peuvent durer un peu plus longtemps sans pour autant sembler lentes. Les diff\u00e9rentes \u00ab\u00a0priorit\u00e9s\u00a0\u00bb que le mode concurrent utilise en interne correspondent \u00e0 peu pr\u00e8s aux cat\u00e9gories d\u2019interactions qu\u2019on peut trouver dans la recherche en perception humaine.</p>\n<p>Les \u00e9quipes accordant une importance primordiale \u00e0 l\u2019exp\u00e9rience utilisateur r\u00e9solvent parfois ce type de probl\u00e8me avec une solution <em>ad hoc</em>. N\u00e9anmoins, ces solutions survivent rarement \u00e0 l\u2019\u00e9preuve du temps, et sont difficiles \u00e0 maintenir. Avec le mode concurrent, nous tentons de condenser les r\u00e9sultats de la recherche UI directement dans l\u2019abstraction propos\u00e9e par React, et d\u2019en rendre l\u2019utilisation idiomatique. React, en tant que biblioth\u00e8que UI, est bien plac\u00e9e pour \u00e7a.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/concurrent-mode-intro#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Vous savez d\u00e9sormais \u00e0 quoi sert le mode concurrent\u00a0!</p>\n<p>Dans les prochaines pages, vous en apprendrez davantage sur des sujets plus sp\u00e9cifiques\u00a0:</p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense\">Suspense pour le chargement de donn\u00e9es</a> d\u00e9crit un nouveau m\u00e9canisme de chargement de donn\u00e9es distantes au sein de composants React.</li>\n<li><a href=\"/react/concurrent-mode-patterns\">Approches pour une UI concurrente</a> illustre quelques approches de conception d\u2019UI rendues possibles par le mode concurrent et Suspense.</li>\n<li><a href=\"/react/concurrent-mode-adoption\">Adopter le mode concurrent</a> explique comment vous pouvez essayer le mode concurrent dans votre projet.</li>\n<li><a href=\"/react/concurrent-mode-reference\">R\u00e9f\u00e9rence de l\u2019API du mode concurrent</a> documente les nouvelles API disponibles dans les builds exp\u00e9rimentaux de React.</li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/concurrent-mode-intro.md\">Edit this page</a></p></div></article>", "path": "/react/concurrent-mode-intro", "nav": ["/react/testing-environments", "/react/concurrent-mode-suspense"]}, {"key": "2. Suspense pour le chargement de donn\u00e9es", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><style>\n.scary > blockquote {\n  background-color: rgba(237, 51, 21, 0.2);\n  border-left-color: #ed3315;\n}\n</style>\n<div class=\"scary\">\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Cette page d\u00e9crit <strong>des fonctionnalit\u00e9s exp\u00e9rimentales qui <a href=\"/react/concurrent-mode-adoption\">ne sont pas encore disponibles</a> dans une version stable</strong>. Ne vous basez pas sur les builds exp\u00e9rimentaux de React pour vos applis en production. Ces fonctionnalit\u00e9s sont susceptibles d\u2019\u00e9voluer de fa\u00e7on significative et sans avertissement avant d\u2019int\u00e9grer officiellement React.</p>\n<p>Cette documentation est destin\u00e9e aux personnes curieuses ou habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t. <strong>Si vous d\u00e9butez en React, ne vous pr\u00e9occupez pas de ces fonctionnalit\u00e9s</strong>\u00a0: vous n\u2019avez pas besoin de les apprendre pour le moment. Par exemple, si vous cherchez un tutoriel sur le chargement de donn\u00e9es qui fonctionne d\u00e8s maintenant, lisez plut\u00f4t <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">cet article</a>.</p>\n</div>\n</div>\n<p>React 16.6 ajoutait un composant <code class=\"language-javascript\">&lt;Suspense&gt;</code> qui vous permettait \u00ab\u00a0d\u2019attendre\u00a0\u00bb que du code soit charg\u00e9 en sp\u00e9cifiant d\u00e9clarativement un \u00e9tat de chargement (tel qu\u2019un <em>spinner</em>) pendant l\u2019attente\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> ProfilePage <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ProfilePage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Charg\u00e9 \u00e0 la demande</span>\n\n<span class=\"token comment\">// Affiche un spinner pendant que le profil se charge</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Suspense pour le chargement de donn\u00e9es est une nouvelle fonctionnalit\u00e9 qui vous permet d\u2019utiliser \u00e9galement <code class=\"language-javascript\">&lt;Suspense&gt;</code> pour <strong>\u00ab\u00a0attendre\u00a0\u00bb d\u00e9clarativement n\u2019importe quoi d\u2019autre, y compris le chargement de donn\u00e9es distantes.</strong>  Cette page se concentre sur ce cas d\u2019utilisation, mais vous pouvez utiliser cette technique pour attendre des images, des scripts, ou d\u2019autres traitements asynchrones.</p>\n<ul>\n<li>\n<p><a href=\"/react/concurrent-mode-suspense#what-is-suspense-exactly\">Qu\u2019est-ce que Suspense, exactement\u00a0?</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense#what-suspense-is-not\">Ce que Suspense n\u2019est pas</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#what-suspense-lets-you-do\">Ce que Suspense vous permet de faire</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-suspense#using-suspense-in-practice\">Utiliser Suspense en pratique</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense#what-if-i-dont-use-relay\">Et si je n\u2019utilise pas Relay\u00a0?</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#for-library-authors\">\u00c0 l\u2019attention des auteurs de biblioth\u00e8ques</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-suspense#traditional-approaches-vs-suspense\">Les approches traditionnelles vs. Suspense</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense#approach-1-fetch-on-render-not-using-suspense\">Approche 1\u00a0: <em>fetch-on-render</em> (sans utiliser Suspense)</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#approach-2-fetch-then-render-not-using-suspense\">Approche 2\u00a0: <em>fetch-then-render</em> (sans utiliser Suspense)</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#approach-3-render-as-you-fetch-using-suspense\">Approche 3\u00a0: <em>render-as-you-fetch</em> (en utilisant Suspense)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-suspense#start-fetching-early\">D\u00e9marrer le chargement t\u00f4t</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense#were-still-figuring-this-out\">On exp\u00e9rimente encore</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-suspense#suspense-and-race-conditions\">Suspense et les situations de comp\u00e9tition</a> <em>(race conditions, NdT)</em></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-suspense#race-conditions-with-useeffect\">Comp\u00e9titions avec <code class=\"language-javascript\">useEffect</code></a></li>\n<li><a href=\"/react/concurrent-mode-suspense#race-conditions-with-componentdidupdate\">Comp\u00e9titions avec <code class=\"language-javascript\">componentDidUpdate</code></a></li>\n<li><a href=\"/react/concurrent-mode-suspense#the-problem\">Le probl\u00e8me</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#solving-race-conditions-with-suspense\">R\u00e9soudre les situations de comp\u00e9tition avec Suspense</a></li>\n</ul>\n</li>\n<li><a href=\"/react/concurrent-mode-suspense#handling-errors\">G\u00e9rer les erreurs</a></li>\n<li><a href=\"/react/concurrent-mode-suspense#next-steps\">Prochaines \u00e9tapes</a></li>\n</ul>\n<h2 id=\"what-is-suspense-exactly\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#what-is-suspense-exactly\"></a>Qu\u2019est-ce que Suspense, exactement\u00a0? </h2>\n<p>Suspense permet \u00e0 vos composants \u00ab\u00a0d\u2019attendre\u00a0\u00bb quelque chose avant qu\u2019ils s\u2019affichent. Dans <a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">cet exemple</a>, deux composants attendent le r\u00e9sultat d\u2019un appel API asynchrone destin\u00e9 \u00e0 charger des donn\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Essaie de lire les infos utilisateur, bien qu\u2019elles puissent ne pas \u00eatre encore charg\u00e9es</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Essaie de lire les publications, bien qu\u2019elles puissent ne pas \u00eatre encore charg\u00e9es</span>\n  <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">Essayez sur CodeSandbox</a></strong></p>\n<p>Cette d\u00e9mo est l\u00e0 pour vous ouvrir l\u2019app\u00e9tit. Ne vous inqui\u00e9tez pas si elle est d\u00e9routante \u00e0 ce stade, nous la d\u00e9crirons plus en d\u00e9tail dans un instant. Gardez \u00e0 l\u2019esprit que Suspense est davantage un <em>m\u00e9canisme</em>, et que les API sp\u00e9cifiques dans l\u2019exemple ci-avant, telles que <code class=\"language-javascript\">fetchProfileData()</code> ou <code class=\"language-javascript\">resource.posts.read()</code>, n\u2019ont que peu d\u2019importance. Si vous \u00eates curieux\u00b7se, vous pouvez toujours en consulter l\u2019impl\u00e9mentation directement dans la <a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">sandbox de d\u00e9monstration</a>.</p>\n<p>Suspense n\u2019est pas une biblioth\u00e8que de chargement de donn\u00e9es. C\u2019est un <strong>m\u00e9canisme \u00e0 destination des biblioth\u00e8ques de chargement de donn\u00e9es</strong> pour qu\u2019elles puissent indiquer \u00e0 React que <em>les donn\u00e9es que lit un composant ne sont pas encore disponibles</em>. React peut alors attendre qu\u2019elles le deviennent et mettre \u00e0 jour l\u2019interface utilisateur (UI). Chez Facebook, nous utilisons Relay et sa <a class=\"external-link\" href=\"https://relay.dev/docs/en/experimental/step-by-step\">nouvelle int\u00e9gration avec Suspense</a>. Nous pensons que d\u2019autres biblioth\u00e8ques, telles qu\u2019Apollo, fournirons des int\u00e9grations similaires.</p>\n<p>Sur le long terme, nous pr\u00e9voyons que Suspense deviendra le moyen principal de lire des donn\u00e9es asynchrone depuis des composants, et ce quelle que soit la provenance des donn\u00e9es.</p>\n<h3 id=\"what-suspense-is-not\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#what-suspense-is-not\"></a>Ce que Suspense n\u2019est pas </h3>\n<p>Suspense est significativement diff\u00e9rent des approches existantes pour ce type de probl\u00e8me, de sorte qu\u2019au premier abord il est facile de l\u2019interpr\u00e9ter de travers. Permettez-nous de clarifier les principales erreurs de perception\u00a0:</p>\n<ul>\n<li><strong>Ce n\u2019est pas une impl\u00e9mentation de chargement de donn\u00e9es.</strong>  \u00c7a ne suppose pas que vous utilisiez GraphQL, REST ou tout autre format, biblioth\u00e8que, transport ou protocole sp\u00e9cifiques.</li>\n<li><strong>Ce n\u2019est pas un client pr\u00eat \u00e0 l\u2019emploi.</strong>  Vous ne pouvez pas \u00ab\u00a0remplacer\u00a0\u00bb <code class=\"language-javascript\">fetch</code> ou Relay par Suspense. Mais vous pouvez utiliser une biblioth\u00e8que qui s\u2019int\u00e8gre avec Suspense (par exemple, les <a class=\"external-link\" href=\"https://relay.dev/docs/en/experimental/api-reference\">nouvelles API de Relay</a>).</li>\n<li><strong>\u00c7a ne lie pas le chargement des donn\u00e9es \u00e0 la couche vue.</strong>  \u00c7a aide \u00e0 orchestrer l\u2019affichage des \u00e9tats de chargement dans votre UI, mais \u00e7a ne lie pas votre logique r\u00e9seau \u00e0 vos composants React.</li>\n</ul>\n<h3 id=\"what-suspense-lets-you-do\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#what-suspense-lets-you-do\"></a>Ce que Suspense vous permet de faire </h3>\n<p>Alors quel est le but de Suspense\u00a0?  Il y a plusieurs mani\u00e8res de r\u00e9pondre \u00e0 cette question\u00a0:</p>\n<ul>\n<li><strong>\u00c7a permet aux biblioth\u00e8ques de chargement de donn\u00e9es de s\u2019int\u00e9grer finement avec React.</strong>  Si une biblioth\u00e8que de chargement de donn\u00e9es impl\u00e9mente la prise en charge de Suspense, son utilisation au sein des composants React devient tr\u00e8s naturelle.</li>\n<li><strong>\u00c7a vous permet d\u2019orchestrer vos \u00e9tats de chargement de fa\u00e7on choisie.</strong>  \u00c7a ne dit pas <em>comment</em> les donn\u00e9es sont charg\u00e9es, mais \u00e7a vous permet de contr\u00f4ler finement la s\u00e9quence visuelle de chargement de votre appli.</li>\n<li><strong>\u00c7a vous aide \u00e0 \u00e9viter les situations de comp\u00e9tition</strong> <em>(race conditions, NdT)</em>. M\u00eame avec <code class=\"language-javascript\">await</code>, le code asynchrone est souvent sujet aux erreurs. Suspense donne davantage l\u2019impression de lire les donn\u00e9es <em>de fa\u00e7on synchrone</em>, comme si elles \u00e9taient en fait d\u00e9j\u00e0 charg\u00e9es.</li>\n</ul>\n<h2 id=\"using-suspense-in-practice\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#using-suspense-in-practice\"></a>Utiliser Suspense en pratique </h2>\n<p>Chez Facebook, nous n\u2019avons pour le moment utilis\u00e9 en production que l\u2019int\u00e9gration de Relay avec Suspense. <strong>Si vous cherchez un guide pratique pour d\u00e9marrer maintenant, <a class=\"external-link\" href=\"https://relay.dev/docs/en/experimental/step-by-step\">jetez un coup d\u2019\u0153il au guide de Relay</a>\u00a0!</strong>  Il illustre des approches qui ont d\u00e9j\u00e0 fait leurs preuves chez nous en production.</p>\n<p><strong>Les d\u00e9mos de code sur cette page utilisent une impl\u00e9mentation d\u2019une API \u00ab\u00a0factice\u00a0\u00bb plut\u00f4t que Relay.</strong>  \u00c7a simplifie leur compr\u00e9hension si vous n\u2019avez pas d\u00e9j\u00e0 l\u2019habitude de GraphQL, mais \u00e7a ne veut pas dire qu\u2019il s\u2019agisse l\u00e0 de la \u00ab\u00a0bonne mani\u00e8re\u00a0\u00bb de construire une appli avec Suspense. Cette page est davantage conceptuelle, et cherche \u00e0 vous aider \u00e0 comprendre <em>pourquoi</em> Suspense fonctionne comme il le fait, et quels probl\u00e8mes il r\u00e9sout.</p>\n<h3 id=\"what-if-i-dont-use-relay\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#what-if-i-dont-use-relay\"></a>Et si je n\u2019utilise pas Relay\u00a0? </h3>\n<p>Si vous n\u2019utilisez pas Relay aujourd\u2019hui, vous aurez peut-\u00eatre besoin d\u2019attendre avant de pouvoir v\u00e9ritablement essayer Suspense dans votre appli. Pour le moment, c\u2019est la seule impl\u00e9mentation que nous ayons test\u00e9e en production et qui nous a satisfaits.</p>\n<p>Pendant les prochains mois, plusieurs biblioth\u00e8ques vont appara\u00eetre qui exploiteront de diverses fa\u00e7ons les API Suspense. <strong>Si vous pr\u00e9f\u00e9rez apprendre une fois que les choses sont raisonnablement stables, vous voudrez peut-\u00eatre ignorer tout \u00e7a pour le moment, et revenir lorsque l\u2019\u00e9cosyst\u00e8me Suspense sera plus m\u00fbr.</strong></p>\n<p>Vous pouvez aussi \u00e9crire votre propre int\u00e9gration pour une biblioth\u00e8que de chargement de donn\u00e9es, si vous le souhaitez.</p>\n<h3 id=\"for-library-authors\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#for-library-authors\"></a>\u00c0 l\u2019attention des auteur\u00b7e\u00b7s de biblioth\u00e8ques </h3>\n<p>Nous nous attendons \u00e0 voir la communaut\u00e9 exp\u00e9rimenter largement avec d\u2019autres biblioth\u00e8ques. Il y a un point important \u00e0 noter pour les personnes qui maintiennent des biblioth\u00e8ques de chargement de donn\u00e9es.</p>\n<p>Bien que ce soit techniquement faisable, Suspense n\u2019est <strong>pas</strong> pour le moment con\u00e7u comme une fa\u00e7on de charger les donn\u00e9es lorsqu\u2019un composant s\u2019affiche. Il sert plut\u00f4t \u00e0 permettre aux composants d\u2019exprimer qu\u2019ils \u00ab\u00a0attendent\u00a0\u00bb des donn\u00e9es qui sont <em>d\u00e9j\u00e0 en cours de chargement</em>. <strong>L\u2019article <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html\">Construire des super exp\u00e9riences utilisateurs avec le mode concurrent et Suspense</a> d\u00e9crit en quoi cette distinction est importante, et comment impl\u00e9menter cette approche en pratique.</strong></p>\n<p>\u00c0 moins que vous n\u2019ayez une solution pour emp\u00eacher les chargements en cascade, nous vous conseillons d\u2019opter pour des API qui favorisent voire exigent un d\u00e9clenchement du chargement des donn\u00e9es en amont du rendu. Pour un exemple concret, vous pouvez regarder comment <a class=\"external-link\" href=\"https://relay.dev/docs/en/experimental/api-reference#usepreloadedquery\">l\u2019API Suspense de Relay</a> garantit le pr\u00e9-chargement. Par le pass\u00e9, nous n\u2019avons pas communiqu\u00e9 de fa\u00e7on tr\u00e8s coh\u00e9rente sur ce sujet. Suspense pour le chargement de donn\u00e9es reste exp\u00e9rimental, de sorte que nos recommandations sont susceptibles de changer avec le temps, au fur et \u00e0 mesure que nous tirons de nouvelles le\u00e7ons de notre utilisation en production et am\u00e9liorons notre compr\u00e9hension de cette typologie de probl\u00e8mes.</p>\n<h2 id=\"traditional-approaches-vs-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#traditional-approaches-vs-suspense\"></a>Les approches traditionnelles vs. Suspense </h2>\n<p>Nous pourrions introduire Suspense sans mentionner les approches r\u00e9pandues de chargement de donn\u00e9es. N\u00e9anmoins, il serait alors plus difficile de bien percevoir les probl\u00e8mes que Suspense r\u00e9sout, en quoi ces probl\u00e8mes m\u00e9ritent une r\u00e9solution, et ce qui diff\u00e9rencie Suspense des solutions existantes.</p>\n<p>Nous allons plut\u00f4t consid\u00e9rer Suspense comme l\u2019\u00e9tape suivante logique dans une chronologie d\u2019approches\u00a0:</p>\n<ul>\n<li><strong><em>Fetch-on-render</em> (par exemple, <code class=\"language-javascript\">fetch</code> dans <code class=\"language-javascript\">useEffect</code>)\u00a0:</strong> on commence l\u2019affichage des composants. Chacun d\u2019eux est susceptible de d\u00e9clencher un chargement de donn\u00e9es au sein de ses effets ou m\u00e9thodes de cycle de vie. Cette approche aboutit souvent \u00e0 des \u00ab\u00a0cascades\u00a0\u00bb.</li>\n<li><strong><em>Fetch-then-render</em> (par exemple, Relay sans Suspense)\u00a0:</strong> on commence par charger toutes les donn\u00e9es pour le prochain \u00e9cran aussit\u00f4t que possible. Quand les donn\u00e9es sont pr\u00eates, on affiche le nouvel \u00e9cran. On ne peut rien faire avant que les donn\u00e9es ne soient re\u00e7ues.</li>\n<li><strong><em>Render-as-you-fetch</em> (par exemple, Relay avec Suspense)\u00a0:</strong> on lance le chargement de toutes les donn\u00e9es requises par le prochain \u00e9cran aussit\u00f4t que possible, et on commence le rendu du nouvel \u00e9cran <em>imm\u00e9diatement, avant d\u2019avoir la r\u00e9ponse du r\u00e9seau</em>. Au fil de la r\u00e9ception des flux de donn\u00e9es, React retente le rendu des composants qui ont encore besoin de donn\u00e9es jusqu\u2019\u00e0 ce que tout soit disponible.</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Il s\u2019agit l\u00e0 d\u2019une l\u00e9g\u00e8re simplification, et en pratique les solutions ont tendance \u00e0 combiner plusieurs approches. Quoi qu\u2019il en soit, nous les examinerons en isolation pour mieux mettre en lumi\u00e8re leurs avantages et inconv\u00e9nients respectifs.</p>\n</div>\n<p>Pour comparer ces approches, nous allons impl\u00e9menter une page de profil avec chacune d\u2019entre elles.</p>\n<h3 id=\"approach-1-fetch-on-render-not-using-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#approach-1-fetch-on-render-not-using-suspense\"></a>Approche 1\u00a0: <em>fetch-on-render</em> (sans utiliser Suspense) </h3>\n<p>Une fa\u00e7on courante de charger les donn\u00e9es dans une application React aujourd\u2019hui consiste \u00e0 utiliser un effet\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Dans une fonction composant :</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetchSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Ou dans un composant \u00e0 base de classe :</span>\n<span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetchSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nous appelons cette approche <em>\u201cfetch-on-render\u201d</em> parce qu\u2019elle ne commence \u00e0 charger <em>qu\u2019apr\u00e8s</em> que le composant s\u2019est affich\u00e9. Elle entra\u00eene un probl\u00e8me appel\u00e9 \u00ab\u00a0la cascade\u00a0\u00bb.</p>\n<p>Prenez ces composants <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> et <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>posts<span class=\"token punctuation\">,</span> setPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setPosts</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>posts <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/fragrant-glade-8huj6\">Essayez sur CodeSandbox</a></strong></p>\n<p>Si vous ex\u00e9cutez ce code et examinez les logs dans la console, vous y verrez se d\u00e9rouler la s\u00e9quence suivante\u00a0:</p>\n<ol>\n<li>On commence \u00e0 charger les d\u00e9tails de l\u2019utilisateur</li>\n<li>On attend\u2026</li>\n<li>On finit de charger les d\u00e9tails de l\u2019utilisateur</li>\n<li>On commence \u00e0 charger les publications</li>\n<li>On attend\u2026</li>\n<li>On finit de charger les publications</li>\n</ol>\n<p>Si le chargement des d\u00e9tails de l\u2019utilisateur prend trois secondes, nous ne <em>commencerons</em> \u00e0 charger les publications qu\u2019au bout de trois secondes\u00a0! C\u2019est une \u00ab\u00a0cascade\u00a0\u00bb\u00a0: une <em>s\u00e9quence</em> involontaire qui aurait d\u00fb \u00eatre parall\u00e9lis\u00e9e.</p>\n<p>Les cascades sont courantes dans le code qui charge les donn\u00e9es au sein du rendu. On peut les corriger, mais \u00e0 mesure que le produit grandit, les gens pr\u00e9f\u00e8reront une solution qui \u00e9vite carr\u00e9ment ce probl\u00e8me.</p>\n<h3 id=\"approach-2-fetch-then-render-not-using-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#approach-2-fetch-then-render-not-using-suspense\"></a>Approche 2\u00a0: <em>fetch-then-render</em> (sans utiliser Suspense) </h3>\n<p>Les biblioth\u00e8ques peuvent pr\u00e9venir les cascades en offrant une approche plus centralis\u00e9e du chargement de donn\u00e9es. Par exemple, Relay r\u00e9sout ce probl\u00e8me en d\u00e9pla\u00e7ant les informations relatives aux donn\u00e9es dont un composant a besoin dans des <em>fragments</em> analysables statiquement, qui sont ensuite compos\u00e9s en une seule requ\u00eate.</p>\n<p>Sur cette page, nous ne supposons aucune connaissance pr\u00e9alable de Relay, aussi nous ne l\u2019utiliserons pas dans cet exemple. Nous \u00e9crirons plut\u00f4t manuellement quelque chose de similaire en combinant nos m\u00e9thodes de chargement de donn\u00e9es\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> posts<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">,</span> posts<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans cet exemple, <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> attend les deux requ\u00eates mais les d\u00e9marre en parall\u00e8le\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Lance les chargements aussit\u00f4t que possible</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>posts<span class=\"token punctuation\">,</span> setPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setPosts</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">posts</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Le fils n\u2019a plus besoin de d\u00e9clencher une chargement</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>posts <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/wandering-morning-ev6r0\">Essayez sur CodeSandbox</a></strong></p>\n<p>La s\u00e9quence d\u2019\u00e9v\u00e9nements devient la suivante\u00a0:</p>\n<ol>\n<li>On commence \u00e0 charger les d\u00e9tails de l\u2019utilisateur</li>\n<li>On commence \u00e0 charger les publications</li>\n<li>On attend\u2026</li>\n<li>On finit de charger les d\u00e9tails de l\u2019utilisateur</li>\n<li>On finit de charger les publications</li>\n</ol>\n<p>On a r\u00e9solu la \u00ab\u00a0cascade\u00a0\u00bb r\u00e9seau de l\u2019exemple pr\u00e9c\u00e9dent, mais introduit un autre souci pas inadvertance. Nous attendons \u00e0 pr\u00e9sent que <em>toutes</em> les donn\u00e9es soient charg\u00e9es, en raison du <code class=\"language-javascript\">Promise.all()</code> dans <code class=\"language-javascript\">fetchProfileData</code>, de sorte qu\u2019on ne peut pas afficher les d\u00e9tails du profil tant qu\u2019on n\u2019a pas aussi les publications. On doit attendre les deux.</p>\n<p>Naturellement, il est possible de corriger cet exemple sp\u00e9cifique. On pourrait retirer l\u2019appel \u00e0 <code class=\"language-javascript\">Promise.all()</code> et attendre chaque promesse s\u00e9par\u00e9ment. Cependant, cette approche devient progressivement plus ardue au fur et \u00e0 mesure que nos donn\u00e9es et notre arborescence de composants gagnent en complexit\u00e9. Il est difficile d\u2019\u00e9crire des composants fiables lorsque des parties al\u00e9atoires de notre arbre de donn\u00e9es peuvent manquer ou se p\u00e9rimer, de sorte qu\u2019il est souvent plus pragmatique de charger toutes les donn\u00e9es pour le nouvel \u00e9cran <em>et ensuite</em> l\u2019afficher.</p>\n<h3 id=\"approach-3-render-as-you-fetch-using-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#approach-3-render-as-you-fetch-using-suspense\"></a>Approche 3\u00a0: <em>render-as-you-fetch</em> (en utilisant Suspense) </h3>\n<p>Dans l\u2019approche pr\u00e9c\u00e9dente, nous chargions les donn\u00e9es avant d\u2019appeler <code class=\"language-javascript\">setState</code>\u00a0:</p>\n<ol>\n<li>Commencer le chargement</li>\n<li>Finir le chargement</li>\n<li>Commencer le rendu</li>\n</ol>\n<p>Avec Suspense, nous d\u00e9clencherons le chargement en premier, mais inverserons les deux derni\u00e8res \u00e9tapes\u00a0:</p>\n<ol>\n<li>Commencer le chargement</li>\n<li><strong>Commencer le rendu</strong></li>\n<li><strong>Finir le chargement</strong></li>\n</ol>\n<p><strong>Avec Suspense, nous n\u2019attendons pas que la r\u00e9ponse nous parvienne pour commencer le rendu.</strong>  En fait, nous commen\u00e7ons le rendu <em>presque imm\u00e9diatement</em> apr\u00e8s avoir d\u00e9clench\u00e9 la requ\u00eate r\u00e9seau\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Ce n\u2019est pas une `Promise`. C\u2019est un objet sp\u00e9cial issu de l\u2019int\u00e9gration avec Suspense.</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Essaie de lire les infos utilisateur, bien qu\u2019elles puissent ne pas \u00eatre encore charg\u00e9es</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Essaie de lire les publications, bien qu\u2019elles puissent ne pas \u00eatre encore charg\u00e9es</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">Essayez sur CodeSandbox</a></strong></p>\n<p>Voici ce qui se passe quand on affiche <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> \u00e0 l\u2019\u00e9cran\u00a0:</p>\n<ol>\n<li>Nous avons d\u00e9j\u00e0 d\u00e9clench\u00e9 les requ\u00eates dans <code class=\"language-javascript\">fetchProfileData()</code>. \u00c7a nous a fourni une \u00ab ressource\u00a0\u00bb sp\u00e9ciale au lieu d\u2019une <code class=\"language-javascript\">Promise</code>. En situation r\u00e9elle, cet objet viendrait de l\u2019int\u00e9gration Suspense de notre biblioth\u00e8que, par exemple Relay.</li>\n<li>React essaie d\u2019afficher <code class=\"language-javascript\">&lt;ProfilePage&gt;</code>. Il renvoie <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> et <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code> comme composants enfants.</li>\n<li>React essaie d\u2019afficher <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code>. Il appelle <code class=\"language-javascript\">resource.user.read()</code>. Aucune donn\u00e9e n\u2019\u00e9tant disponible \u00e0 ce stade, ce composant \u00ab\u00a0se suspend\u00a0\u00bb. React le saute, et essaie d\u2019afficher les autres composants dans l\u2019arborescence.</li>\n<li>React essaie d\u2019afficher <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code>. Il appelle <code class=\"language-javascript\">resource.posts.read()</code>. L\u00e0 aussi, faute de donn\u00e9es disponibles, le composant \u00ab\u00a0se suspend\u00a0\u00bb. React le saute \u00e0 son tour, et essaie d\u2019afficher les autres composants dans l\u2019arborescence.</li>\n<li>Il ne reste rien \u00e0 afficher. Puisque <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> est suspendu, React affiche le contenu de repli <em>(fallback, NdT)</em> de l\u2019anc\u00eatre <code class=\"language-javascript\">&lt;Suspense&gt;</code> le plus proche, \u00e0 savoir\u00a0: <code class=\"language-javascript\">&lt;h1&gt;Chargement du profil...&lt;/h1&gt;</code>. Et il en a fini pour l\u2019instant.</li>\n</ol>\n<p>Cet objet <code class=\"language-javascript\">resource</code> repr\u00e9sente les donn\u00e9es qui ne sont pas encore arriv\u00e9es, mais devraient \u00e0 terme \u00eatre disponibles. Lorsqu\u2019on appelle <code class=\"language-javascript\">read()</code>, soit on obtient les donn\u00e9es, soit le composant \u00ab\u00a0se suspend\u00a0\u00bb.</p>\n<p><strong>Au fil de l\u2019arriv\u00e9e des donn\u00e9es, React recommencera le rendu, et chaque fois il pourra peut-\u00eatre progresser \u00ab\u00a0plus loin\u00a0\u00bb.</strong>  Lorsque <code class=\"language-javascript\">resource.user</code> sera charg\u00e9e, le composant <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> pourra \u00eatre affich\u00e9 correctement et nous n\u2019aurons plus besoin du contenu de repli <code class=\"language-javascript\">&lt;h1&gt;Chargement du profil...&lt;/h1&gt;</code>. \u00c0 terme, quand nous aurons toutes les donn\u00e9es, il n\u2019y aura plus de contenus de repli \u00e0 l\u2019\u00e9cran.</p>\n<p>Ce fonctionnement a une cons\u00e9quence int\u00e9ressante. M\u00eame si nous utilisons un client GraphQL qui regroupe tous nos besoins en donn\u00e9es dans une seule requ\u00eate, <em>streamer la r\u00e9ponse nous permet d\u2019afficher plus de contenu plus t\u00f4t</em>. Parce que nous faisons le rendu <em>pendant le chargement</em> (par opposition \u00e0 un rendu <em>apr\u00e8s</em>), si <code class=\"language-javascript\">user</code> appara\u00eet dans la r\u00e9ponse avant <code class=\"language-javascript\">posts</code>, nous serons \u00e0 m\u00eame de \u00ab\u00a0d\u00e9verrouiller\u00a0\u00bb le p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code> ext\u00e9rieur avant m\u00eame que la r\u00e9ponse n\u2019ait \u00e9t\u00e9 totalement re\u00e7ue. On ne s\u2019en \u00e9tait pas forc\u00e9ment rendu compte avant, mais m\u00eame la solution <em>fetch-then-render</em> contenait une cascade\u00a0: entre le chargement et le rendu. Suspense ne souffre pas intrins\u00e8quement de ce type de cascade, et les biblioth\u00e8ques comme Relay en tirent parti.</p>\n<p>Remarquez que nous avons \u00e9limin\u00e9 les v\u00e9rifications <code class=\"language-javascript\">if (...)</code> \u00ab\u00a0si \u00e7a charge\u00a0\u00bb de nos composants. Il ne s\u2019agit pas juste de retirer du code g\u00e9n\u00e9rique, mais \u00e7a facilite aussi les ajustements rapides d\u2019exp\u00e9rience utilisateur. Par exemple, si nous voulions que les d\u00e9tails du profil et les publications \u00ab\u00a0surgissent\u00a0\u00bb toujours d\u2019un bloc, il nous suffirait de retirer le p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code> entre eux. Ou nous pourrions les rentre compl\u00e8tement ind\u00e9pendants l\u2019un de l\u2019autre en leur donnant \u00e0 chacun <em>leur propre</em> p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code>. Suspense nous permet d\u2019ajuster la granularit\u00e9 de nos \u00e9tats de chargement et d\u2019orchestrer leur s\u00e9quencement sans avoir \u00e0 r\u00e9aliser des changements invasifs dans notre code.</p>\n<h2 id=\"start-fetching-early\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#start-fetching-early\"></a>D\u00e9marrer le chargement t\u00f4t </h2>\n<p>Si vous travaillez sur une biblioth\u00e8que de chargement de donn\u00e9es, il y a un aspect crucial de <em>render-as-you-fetch</em> que vous devez bien int\u00e9grer. <strong>On d\u00e9clenche le chargement <em>avant</em> le rendu.</strong>  Examinez le code suivant de plus pr\u00e8s\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Commence \u00e0 charger t\u00f4t !</span>\n<span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Essaie de lire les infos utilisateur</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">Essayez sur CodeSandbox</a></strong></p>\n<p>Remarquez que l\u2019appel \u00e0 <code class=\"language-javascript\">read()</code> dans cet exemple ne <em>d\u00e9clenche</em> pas le chargement. Il essaie juste de lire les donn\u00e9es qui <em>sont d\u00e9j\u00e0 en cours de chargement</em>. Cette distinction est cruciale pour produire des applications rapides avec Suspense. Nous ne voulons pas diff\u00e9rer le chargement des donn\u00e9es jusqu\u2019au rendu d\u2019un composant. En tant qu\u2019auteur\u00b7e de biblioth\u00e8que, vous pouvez garantir \u00e7a en rendant impossible l\u2019obtention d\u2019un objet <code class=\"language-javascript\">resource</code> sans d\u00e9clencher au passage le chargement. Toutes les d\u00e9mos sur cette page qui utilisent notre \u00ab\u00a0API factice\u00a0\u00bb garantissent cet aspect.</p>\n<p>Vous pourriez objecter que charger les donn\u00e9es \u00ab\u00a0au niveau racine\u00a0\u00bb comme ici n\u2019est gu\u00e8re pratique. Que ferons-nous si nous naviguons vers une autre page de profil\u00a0?  On pourrait vouloir charger sur base des props. La r\u00e9ponse est que <strong>nous voulons plut\u00f4t commencer le chargement dans les gestionnaires d\u2019\u00e9v\u00e9nements</strong>. Voici un exemple simplifi\u00e9 de la navigation entre des pages utilisateurs\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Premier chargement : aussit\u00f4t que possible</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> initialResource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// Chargement suivant : lorsque l\u2019utilisateur clique</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Suivant</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-feather-xjtbu\">Essayez sur CodeSandbox</a></strong></p>\n<p>Avec cette approche, on peut <strong>charger le code et les donn\u00e9es en parall\u00e8le</strong>. Quand on navigue entre les pages, on n\u2019a pas besoin d\u2019attendre le code de la page pour commencer \u00e0 charger ses donn\u00e9es. On peut commencer \u00e0 charger aussi bien le code que les donn\u00e9es au m\u00eame moment (lors du clic sur le lien), ce qui donne une bien meilleure exp\u00e9rience utilisateur.</p>\n<p>La question qui se pose alors est\u00a0: comment savons-nous <em>quoi</em> charger avant d\u2019afficher le prochain \u00e9cran\u00a0?  Il y a plusieurs solutions possibles (par exemple, en int\u00e9grant le chargement des donn\u00e9es au plus pr\u00e8s de notre syst\u00e8me de routage). Si vous travaillez sur une biblioth\u00e8que de chargement de donn\u00e9es, <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html\">Construire des super exp\u00e9riences utilisateurs avec le mode concurrent et Suspense</a> explore en profondeur les moyens d\u2019accomplir \u00e7a en expliquant pourquoi c\u2019est important.</p>\n<h3 id=\"were-still-figuring-this-out\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#were-still-figuring-this-out\"></a>On exp\u00e9rimente encore </h3>\n<p>Suspense lui-m\u00eame est un m\u00e9canisme flexible qui n\u2019impose que peu de contraintes. Le code produit doit se contraindre un peu plus pour \u00eatre s\u00fbr d\u2019\u00e9viter les cascades, mais il y a diff\u00e9rentes fa\u00e7ons de fournir ces garanties. Voici quelques-unes des questions que nous explorons en ce moment\u00a0:</p>\n<ul>\n<li>Le chargement anticip\u00e9 peut \u00eatre lourd \u00e0 exprimer. Comment faciliter \u00e7a en \u00e9vitant les cascades\u00a0?</li>\n<li>Quand on charge les donn\u00e9es d\u2019une page, l\u2019API peut-elle encourager l\u2019inclusion de donn\u00e9es en vue de transitions instantan\u00e9es <em>pour en sortir</em>\u00a0?</li>\n<li>Quel est le d\u00e9lai de p\u00e9remption d\u2019une r\u00e9ponse\u00a0?  Le cache doit-il \u00eatre global ou local\u00a0? Qui g\u00e8re le cache ?</li>\n<li>Les Proxies <em>(au sens JS, NdT)</em> peuvent-ils aider \u00e0 exprimer des API de chargement paresseux sans avoir \u00e0 coller des appels <code class=\"language-javascript\">read()</code> partout\u00a0?</li>\n<li>\u00c0 quoi ressemblerait l\u2019\u00e9quivalent de la composition de requ\u00eates GraphQL pour des donn\u00e9es Suspense quelconques\u00a0?</li>\n</ul>\n<p>Relay a ses propres r\u00e9ponses \u00e0 certaines de ces questions. Il y a certainement plusieurs fa\u00e7ons de s\u2019y prendre, et nous avons h\u00e2te de voir quelles nouvelles id\u00e9es la communaut\u00e9 React va faire \u00e9merger.</p>\n<h2 id=\"suspense-and-race-conditions\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#suspense-and-race-conditions\"></a>Suspense et les situations de comp\u00e9tition </h2>\n<p>Les situations de comp\u00e9tition <em>(race conditions, NdT)</em> sont des bugs qui surviennent suite \u00e0 des suppositions incorrectes sur l\u2019ordre d\u2019ex\u00e9cution de notre code. On en rencontre souvent lorsqu\u2019on charge des donn\u00e9es dans un Hook <code class=\"language-javascript\">useEffect</code> ou une m\u00e9thode de cycle de vie comme <code class=\"language-javascript\">componentDidUpdate</code>. Suspense peut l\u00e0 aussi nous \u00eatre d\u2019une aide pr\u00e9cieuse\u00a0; voyons comment.</p>\n<p>Pour illustrer le probl\u00e8me, nous allons ajouter un composant racine <code class=\"language-javascript\">&lt;App&gt;</code> qui affiche notre <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> avec un bouton nous permettant de <strong>basculer entre diff\u00e9rents profils</strong>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">,</span> setId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Suivant</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voyons ensemble la fa\u00e7on dont les diff\u00e9rentes strat\u00e9gies de chargement de donn\u00e9es traitent ce besoin.</p>\n<h3 id=\"race-conditions-with-useeffect\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#race-conditions-with-useeffect\"></a>Comp\u00e9titions avec <code class=\"language-javascript\">useEffect</code> </h3>\n<p>Commen\u00e7ons par une variation de notre exemple ant\u00e9rieur \u00ab\u00a0chargement depuis un effet\u00a0\u00bb. Nous allons le modifier pour passer un param\u00e8tre <code class=\"language-javascript\">id</code> depuis les props de <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> vers <code class=\"language-javascript\">fetchUser(id)</code> et <code class=\"language-javascript\">fetchPosts(id)</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">u</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>posts<span class=\"token punctuation\">,</span> setPosts<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setPosts</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>posts <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/nervous-glade-b5sel\">Essayez sur CodeSandbox</a></strong></p>\n<p>Remarquez que nous avons aussi ajust\u00e9 les d\u00e9pendances de l\u2019effet, passant de <code class=\"language-javascript\">[]</code> \u00e0 <code class=\"language-javascript\">[id]</code>, car nous voulons que l\u2019effet s\u2019ex\u00e9cute \u00e0 nouveau si <code class=\"language-javascript\">id</code> change. Autrement, nous ne chargerions pas les nouvelles donn\u00e9es.</p>\n<p>Si nous essayons ce code, il peut sembler fonctionner au premier abord. N\u00e9anmoins, si nous introduisons un d\u00e9lai de r\u00e9ponse al\u00e9atoire dans l\u2019impl\u00e9mentation de notre \u00ab\u00a0API factice\u00a0\u00bb et appuyons suffisamment en rafale sur le bouton \u00ab\u00a0Suivant\u00a0\u00bb, nous verrons dans les logs de la console que quelque chose ne tourne pas rond du tout. <strong>Les requ\u00eates associ\u00e9es aux profils pr\u00e9c\u00e9dents r\u00e9pondent parfois apr\u00e8s que nous avons chang\u00e9 \u00e0 nouveau de profil, et du coup \u00e9crasent le nouvel \u00e9tat avec une r\u00e9ponse p\u00e9rim\u00e9e associ\u00e9e \u00e0 un ID diff\u00e9rent.</strong></p>\n<p>Ce probl\u00e8me peut \u00eatre r\u00e9solu (on pourrait utiliser la fonction de nettoyage de l\u2019effet pour ignorer voire annuler les requ\u00eates p\u00e9rim\u00e9es), mais c\u2019est contre-intuitif et difficile \u00e0 d\u00e9boguer.</p>\n<h3 id=\"race-conditions-with-componentdidupdate\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#race-conditions-with-componentdidupdate\"></a>Comp\u00e9titions avec <code class=\"language-javascript\">componentDidUpdate</code> </h3>\n<p>On pourrait penser que c\u2018est un probl\u00e8me sp\u00e9cifique \u00e0 <code class=\"language-javascript\">useEffect</code> ou aux Hooks. Peut-\u00eatre que si nous portions ce code vers des classes et utilisions des syntaxes confortables comme <code class=\"language-javascript\">async</code> / <code class=\"language-javascript\">await</code>, le probl\u00e8me serait r\u00e9solu\u00a0?</p>\n<p>Essayons \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfilePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfileTimeline</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    posts<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>posts <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/trusting-clarke-8twuq\">Essayez sur CodeSandbox</a></strong></p>\n<p>Ce code est faussement simple \u00e0 lire.</p>\n<p>Malheureusement, ni le recours aux classes ni la syntaxe <code class=\"language-javascript\">async</code> / <code class=\"language-javascript\">await</code> ne nous ont aid\u00e9s \u00e0 r\u00e9soudre le probl\u00e8me. Cette version souffre exactement du m\u00eame probl\u00e8me de situations de comp\u00e9tition, pour les m\u00eames raisons.</p>\n<h3 id=\"the-problem\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#the-problem\"></a>Le probl\u00e8me </h3>\n<p>Les composants React ont leur propre \u00ab\u00a0cycle de vie\u00a0\u00bb. Ils sont susceptibles de recevoir des props ou de mettre \u00e0 jour leur \u00e9tat \u00e0 n\u2019importe quel moment. Mais h\u00e9las, chaque requ\u00eate asynchrone a <em>aussi</em> son propre \u00ab\u00a0cycle de vie\u00a0\u00bb. Il d\u00e9marre quand on d\u00e9clenche le traitement, et se termine quand nous obtenons une r\u00e9ponse. La difficult\u00e9 que nous rencontrons vient de la \u00ab\u00a0synchronisation\u00a0\u00bb entre diff\u00e9rents processus au fil du temps, qui d\u00e9pendent les uns des autres. Il est difficile d\u2019y r\u00e9fl\u00e9chir correctement.</p>\n<h3 id=\"solving-race-conditions-with-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#solving-race-conditions-with-suspense\"></a>R\u00e9soudre les situations de comp\u00e9tition avec Suspense </h3>\n<p>Reprenons \u00e0 nouveau notre exemple, mais en utilisant seulement Suspense\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialResource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Suivant\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-feather-xjtbu\">Essayez sur CodeSandbox</a></strong></p>\n<p>Dans l\u2019exemple Suspense pr\u00e9c\u00e9dent, nous n\u2019avions qu\u2019une <code class=\"language-javascript\">resource</code>, aussi la placions-nous dans une variable de la port\u00e9e racine. \u00c0 pr\u00e9sent que nous avons plusieurs ressources, nous les avons d\u00e9plac\u00e9es dans l\u2019\u00e9tat local du composant <code class=\"language-javascript\">&lt;App&gt;</code> racine\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialResource <span class=\"token operator\">=</span> <span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Quand on clique sur \u00ab\u00a0Suivant\u00a0\u00bb, le composant <code class=\"language-javascript\">&lt;App&gt;</code> d\u00e9clenche une requ\u00eate pour le prochain profil, et passe <em>cet objet-l\u00e0</em> au composant <code class=\"language-javascript\">&lt;ProfilePage&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Suivant</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>L\u00e0 aussi, remarquez que <strong>nous n\u2019attendons pas la r\u00e9ponse pour modifier l\u2019\u00e9tat. C\u2019est tout l\u2019inverse\u00a0: nous d\u00e9finissons l\u2019\u00e9tat (et commen\u00e7ons le rendu) imm\u00e9diatement apr\u00e8s avoir d\u00e9clench\u00e9 une requ\u00eate</strong>. D\u00e8s que nous aurons plus de donn\u00e9es, React \u00ab\u00a0remplira\u00a0\u00bb le contenu dans les composants <code class=\"language-javascript\">&lt;Suspense&gt;</code>.</p>\n<p>Ce code est tr\u00e8s lisible, mais contrairement aux exemples pr\u00e9c\u00e9dents, la version Suspense ne souffre pas de situations de comp\u00e9tition. Vous vous demandez peut-\u00eatre pourquoi. La r\u00e9ponse est que dans la version Suspense, nous n\u2019avons pas besoin de penser aussi intens\u00e9ment au <em>temps</em> dans notre code. Le code original, avec ses situations de comp\u00e9tition, avait besoin de modifier l\u2019\u00e9tat <em>au bon moment ult\u00e9rieur</em>, faute de quoi l\u2019\u00e9tat devenait incorrect. Mais avec Suspense, nous d\u00e9finissons l\u2019\u00e9tat <em>imm\u00e9diatement</em>\u00a0: c\u2019est plus dur d\u2019en corrompre la valeur.</p>\n<h2 id=\"handling-errors\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#handling-errors\"></a>G\u00e9rer les erreurs </h2>\n<p>Quand nous \u00e9crivons du code \u00e0 base de promesses (<code class=\"language-javascript\">Promise</code>), nous pouvons recourir \u00e0 <code class=\"language-javascript\">catch()</code> pour en g\u00e9rer les erreurs. Comment faire avec Suspense, dans la mesure o\u00f9 nous <em>n\u2019attendons pas</em> apr\u00e8s des promesses pour commencer le rendu\u00a0?</p>\n<p>Avec Suspense, g\u00e9rer les erreurs de chargement fonctionne comme la gestion des erreurs de rendu\u00a0: vous pouvez utiliser un <a href=\"/react/error-boundaries\">p\u00e9rim\u00e8tre d\u2019erreur</a> o\u00f9 bon vous semble pour \u00ab\u00a0attraper\u00a0\u00bb les erreurs dans les composants qu\u2019il enrobe.</p>\n<p>Commen\u00e7ons par d\u00e9finir un p\u00e9rim\u00e8tre d\u2019erreur utilisable dans tout notre projet\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Les p\u00e9rim\u00e8tres d\u2019erreur exigent pour le moment une d\u00e9finition \u00e0 base de classe.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> error<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      error\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>fallback<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Apr\u00e8s quoi nous pouvons le placer o\u00f9 nous voulons dans l\u2019arbre pour attraper les erreurs\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">La r\u00e9cup\u00e9ration des publications a \u00e9chou\u00e9.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/adoring-goodall-8wbn7\">Essayez sur CodeSandbox</a></strong></p>\n<p>Il attraperait \u00e0 la fois les erreurs de rendu <em>et</em> les erreurs du chargement de donn\u00e9es Suspense. Nous pouvons avoir autant de p\u00e9rim\u00e8tres d\u2019erreur que nous le souhaitons, mais il vaut mieux <a class=\"external-link\" href=\"https://aweary.dev/fault-tolerance-react/\">bien r\u00e9fl\u00e9chir</a> \u00e0 leurs emplacements.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/concurrent-mode-suspense#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Et voil\u00e0, nous avons couvert les bases de Suspense pour le chargement de donn\u00e9es\u00a0! Mais surtout, nous comprenons d\u00e9sormais mieux <em>pourquoi</em> Suspense fonctionne comme il le fait, et comment il s\u2019inscrit dans la probl\u00e9matique du chargement de donn\u00e9es.</p>\n<p>Suspense apporte des r\u00e9ponses, mais pose aussi ses propres questions\u00a0:</p>\n<ul>\n<li>Si un composant \u00ab\u00a0se suspend\u00a0\u00bb, l\u2019appli g\u00e8le-t-elle\u00a0? Comment \u00e9viter \u00e7a\u00a0?</li>\n<li>Comment faire pour afficher un <em>spinner</em> \u00e0 un endroit autre que \u00ab\u00a0au-dessus\u00a0\u00bb du composant pr\u00e9vu dans l\u2019arbre\u00a0?</li>\n<li>Supposons que nous <em>voulions</em> explicitement afficher une UI incoh\u00e9rente pendant un bref instant, est-ce possible\u00a0?</li>\n<li>Au lieu d\u2019afficher un <em>spinner</em>, peut-on ajouter un effet visuel, comme \u00ab\u00a0griser\u00a0\u00bb l\u2019\u00e9cran en cours\u00a0?</li>\n<li>Pourquoi notre <a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-feather-xjtbu\">dernier exemple Suspense</a> affiche-t-il un avertissement quand on clique sur le bouton \u00ab\u00a0Suivant\u00a0\u00bb\u00a0?</li>\n</ul>\n<p>Pour r\u00e9pondre \u00e0 ces questions, nous vous invitons \u00e0 lire la prochaine section sur les <a href=\"/react/concurrent-mode-patterns\">Approches pour une UI concurrente</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/concurrent-mode-suspense.md\">Edit this page</a></p></div></article>", "path": "/react/concurrent-mode-suspense", "nav": ["/react/concurrent-mode-intro", "/react/concurrent-mode-patterns"]}, {"key": "3. Approches pour une UI concurrente", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><style>\n.scary > blockquote {\n  background-color: rgba(237, 51, 21, 0.2);\n  border-left-color: #ed3315;\n}\n</style>\n<div class=\"scary\">\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Cette page d\u00e9crit <strong>des fonctionnalit\u00e9s exp\u00e9rimentales qui <a href=\"/react/concurrent-mode-adoption\">ne sont pas encore disponibles</a> dans une version stable</strong>. Ne vous basez pas sur les builds exp\u00e9rimentaux de React pour vos applis en production. Ces fonctionnalit\u00e9s sont susceptibles d\u2019\u00e9voluer de fa\u00e7on significative et sans avertissement avant d\u2019int\u00e9grer officiellement React.</p>\n<p>Cette documentation est destin\u00e9e aux personnes curieuses ou habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t. <strong>Si vous d\u00e9butez en React, ne vous pr\u00e9occupez pas de ces fonctionnalit\u00e9s</strong>\u00a0: vous n\u2019avez pas besoin de les apprendre pour le moment. Par exemple, si vous cherchez un tutoriel sur le chargement de donn\u00e9es qui fonctionne d\u00e8s maintenant, lisez plut\u00f4t <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">cet article</a>.</p>\n</div>\n</div>\n<p>D\u2019habitude, quand nous mettons \u00e0 jour l\u2019\u00e9tat, nous nous attendons \u00e0 ce que nos changements se manifestent imm\u00e9diatement \u00e0 l\u2019\u00e9cran. C\u2019est logique, dans la mesure o\u00f9 nous voulons que notre appli r\u00e9agisse rapidement aux saisies utilisateurs. N\u00e9anmoins, il existe des cas dans lesquels nous pourrions pr\u00e9f\u00e9rer <strong>diff\u00e9rer l\u2019apparition d\u2019une mise \u00e0 jour \u00e0 l\u2019\u00e9cran</strong>.</p>\n<p>Par exemple, si nous passons d\u2019une page \u00e0 une autre et que ni le code ni les donn\u00e9es pour ce prochain \u00e9cran ne sont encore charg\u00e9s, on pourrait trouver frustrant de voir imm\u00e9diatement s\u2019afficher une page vierge avec un indicateur de chargement. Nous pr\u00e9f\u00e9rerions peut-\u00eatre rester un peu plus longtemps sur l\u2019\u00e9cran pr\u00e9c\u00e9dent. Historiquement, impl\u00e9menter cette approche en React n\u2019\u00e9tait pas chose ais\u00e9e. Le mode concurrent offre un nouveau jeu d\u2019outils pour y arriver.</p>\n<ul>\n<li>\n<p><a href=\"/react/concurrent-mode-patterns#transitions\">Transitions</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-patterns#wrapping-setstate-in-a-transition\">Enrober <code class=\"language-javascript\">setState</code> dans une transition</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#adding-a-pending-indicator\">Ajouter un indicateur d\u2019attente</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#reviewing-the-changes\">Le point sur les changements</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#where-does-the-update-happen\">O\u00f9 survient la mise \u00e0 jour\u00a0?</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#transitions-are-everywhere\">Les transitions sont partout</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#baking-transitions-into-the-design-system\">Int\u00e9grer les transitions au syst\u00e8me de conception</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-patterns#the-three-steps\">Les trois \u00e9tapes</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-patterns#default-receded-skeleton-complete\">Par d\u00e9faut\u00a0: En retrait \u2192 Squelette \u2192 Termin\u00e9</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#preferred-pending-skeleton-complete\">Pr\u00e9f\u00e9rable\u00a0: En attente \u2192 Squelette \u2192 Termin\u00e9</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#wrap-lazy-features-in-suspense\">Enrobez les fonctionnalit\u00e9s paresseuses avec <code class=\"language-javascript\">&lt;Suspense&gt;</code></a></li>\n<li><a href=\"/react/concurrent-mode-patterns#suspense-reveal-train\">Le \u00ab train\u00a0\u00bb de r\u00e9v\u00e9lations de Suspense</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#delaying-a-pending-indicator\">Diff\u00e9rer un indicateur d\u2019attente</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#recap\">En r\u00e9sum\u00e9</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-patterns#other-patterns\">Autres approches</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-patterns#splitting-high-and-low-priority-state\">Dissocier les \u00e9tats \u00e0 forte et faible priorit\u00e9</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#deferring-a-value\">Diff\u00e9rer une valeur</a></li>\n<li><a href=\"/react/concurrent-mode-patterns#suspenselist\"><code class=\"language-javascript\">SuspenseList</code></a></li>\n</ul>\n</li>\n<li><a href=\"/react/concurrent-mode-patterns#next-steps\">Prochaines \u00e9tapes</a></li>\n</ul>\n<h2 id=\"transitions\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#transitions\"></a>Transitions </h2>\n<p>Reprenons <a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-feather-xjtbu\">cette d\u00e9mo</a> de la page pr\u00e9c\u00e9dente sur <a href=\"/react/concurrent-mode-suspense\">Suspense pour le chargement de donn\u00e9es</a>.</p>\n<p>Lorsqu\u2019on clique sur le bouton \u00ab\u00a0Suivant\u00a0\u00bb pour basculer le profil actif, les donn\u00e9es de la page existante disparaissent imm\u00e9diatement, et nous avons \u00e0 nouveau un indicateur de chargement pour la page enti\u00e8re. On pourrait qualifier cet \u00e9tat de chargement \u00ab\u00a0d\u2019ind\u00e9sirable\u00a0\u00bb. <strong>Ce serait sympa si nous pouvions \u00ab\u00a0sauter\u00a0\u00bb cet \u00e9tat et attendre qu\u2019un peu de contenu arrive avant de transiter vers le nouvel \u00e9cran.</strong></p>\n<p>React offre un nouveau Hook int\u00e9gr\u00e9 <code class=\"language-javascript\">useTransition()</code> pour nous y aider.</p>\n<p>On peut l\u2019utiliser en trois temps.</p>\n<p>Tout d\u2019abord, nous devons nous assurer d\u2019utiliser effectivement le mode concurrent. Nous en reparlerons plus tard dans <a href=\"/react/concurrent-mode-adoption\">Adopter le mode concurrent</a>, mais pour l\u2019instant il suffit de v\u00e9rifier qu\u2019on utilise bien <code class=\"language-javascript\">ReactDOM.createRoot()</code> au lieu de <code class=\"language-javascript\">ReactDOM.render()</code> afin que ce mode fonctionne\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Activation explicite du mode concurrent</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ensuite, nous ajouterons un import du Hook <code class=\"language-javascript\">useTransition</code> de React\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useTransition<span class=\"token punctuation\">,</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Enfin, nous l\u2019utiliserons au sein de notre composant <code class=\"language-javascript\">App</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">3000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span></code></pre></div>\n<p><strong>Pour le moment, par lui-m\u00eame, ce code ne fait rien.</strong>  Nous allons devoir utiliser les valeurs renvoy\u00e9es par ce Hook pour mettre en place notre transition d\u2019\u00e9tat. Voici les deux valeurs que renvoie <code class=\"language-javascript\">useTransition</code>\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">startTransition</code> est une fonction. Nous l\u2019utiliserons pour indiquer \u00e0 React <em>quelle</em> mise \u00e0 jour d\u2019\u00e9tat nous souhaitons diff\u00e9rer.</li>\n<li><code class=\"language-javascript\">isPending</code> est un bool\u00e9en, gr\u00e2ce auquel React nous indique si nous sommes actuellement en train d\u2019attendre la fin de la transition.</li>\n</ul>\n<p>Nous allons les utiliser dans un instant.</p>\n<p>Remarquez que nous passons un objet de configuration \u00e0 <code class=\"language-javascript\">useTransition</code>. Sa propri\u00e9t\u00e9 <code class=\"language-javascript\">timeoutMs</code> indique <strong>combien de temps nous acceptons d\u2019attendre que la transition se termine</strong>. En passant <code class=\"language-javascript\">{ timeoutMs: 3000 }</code>, nous disons \u00ab\u00a0si le prochain profil prend plus de 3 secondes \u00e0 charger, affiche le gros <em>spinner</em>\u2014mais d\u2019ici l\u00e0, tu peux rester sur l\u2019\u00e9cran pr\u00e9c\u00e9dent\u00a0\u00bb.</p>\n<h3 id=\"wrapping-setstate-in-a-transition\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#wrapping-setstate-in-a-transition\"></a>Enrober <code class=\"language-javascript\">setState</code> dans une transition </h3>\n<p>Notre gestionnaire de clic pour le bouton \u00ab\u00a0Suivant\u00a0\u00bb d\u00e9clenche la bascule du profil courant dans notre \u00e9tat local\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Nous allons enrober cette mise \u00e0 jour de l\u2019\u00e9tat dans un appel \u00e0 <code class=\"language-javascript\">startTransition</code>. C\u2019est ainsi que nous indiquons \u00e0 React que <strong>\u00e7a ne nous d\u00e9range pas que React diff\u00e8re cette mise \u00e0 jour de l\u2019\u00e9tat</strong> si elle entra\u00eenait un \u00e9tat de chargement ind\u00e9sirable\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>      <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/musing-driscoll-6nkie\">Essayez sur CodeSandbox</a></strong></p>\n<p>Cliquez sur \u00ab\u00a0Suivant\u00a0\u00bb plusieurs fois. Remarquez comme une diff\u00e9rence se fait d\u00e9j\u00e0 bien sentir. <strong>Au lieu de voir imm\u00e9diatement un \u00e9cran vide suite au clic, nous continuons \u00e0 voir l\u2019\u00e9cran pr\u00e9c\u00e9dent pendant un instant.</strong>  Une fois les donn\u00e9es charg\u00e9es, React transite sur le nouvel \u00e9cran.</p>\n<p>Si nous ajustons nos API pour mettre 5 secondes \u00e0 r\u00e9pondre, <a class=\"external-link\" href=\"https://codesandbox.io/s/relaxed-greider-suewh\">nous pouvons confirmer</a> que React d\u00e9cide alors \u00ab\u00a0d\u2019abandonner\u00a0\u00bb en transitant vers le prochain \u00e9cran au bout de 3 secondes. C\u2019est d\u00fb \u00e0 notre argument <code class=\"language-javascript\">{ timeoutMs: 3000 }</code> dans <code class=\"language-javascript\">useTransition()</code>. \u00c0 titre d\u2019exemple, si nous avions plut\u00f4t pass\u00e9 <code class=\"language-javascript\">{ timeoutMs: 60000 }</code>, il aurait attendu une minute enti\u00e8re.</p>\n<h3 id=\"adding-a-pending-indicator\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#adding-a-pending-indicator\"></a>Ajouter un indicateur d\u2019attente </h3>\n<p>Il reste quelque chose qui semble cass\u00e9 dans <a class=\"external-link\" href=\"https://codesandbox.io/s/musing-driscoll-6nkie\">notre dernier exemple</a>. Bien s\u00fbr, c\u2019est sympa de ne pas voir un \u00ab\u00a0mauvais\u00a0\u00bb \u00e9tat de chargement. <strong>Mais n\u2019avoir aucun indicateur de progression est quelque part encore pire\u00a0!</strong>  Quand on clique sur \u00ab\u00a0Suivant\u00a0\u00bb, rien ne se passe et on dirait que l\u2019appli est cass\u00e9e.</p>\n<p>Notre appel \u00e0 <code class=\"language-javascript\">useTransition()</code> renvoie deux valeurs\u00a0: <code class=\"language-javascript\">startTransition</code> et <code class=\"language-javascript\">isPending</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">3000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous avons d\u00e9j\u00e0 utilis\u00e9 <code class=\"language-javascript\">startTransition</code> pour enrober la mise \u00e0 jour de l\u2019\u00e9tat. Nous allons maintenant utiliser <code class=\"language-javascript\">isPending</code> en prime. React nous fournit ce bool\u00e9en pour nous indiquer que <strong>nous sommes en train d\u2019attendre la fin d\u2019une transition.</strong>  Nous l\u2019utiliserons pour indiquer que quelque chose se passe\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span></span>      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Suivant</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> <span class=\"token string\">\" Chargement...\"</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/jovial-lalande-26yep\">Essayez sur CodeSandbox</a></strong></p>\n<p>Voil\u00e0 qui rend beaucoup mieux\u00a0!  Quand nous cliquons sur \u00ab\u00a0Suivant\u00a0\u00bb, le bouton est d\u00e9sactiv\u00e9 puisque cliquer dessus plusieurs fois n\u2019aurait pas de sens. Et le nouveau texte \u00ab\u00a0Chargement\u2026\u00a0\u00bb indique \u00e0 l\u2019utilisateur que l\u2019appli n\u2019a pas gel\u00e9.</p>\n<h3 id=\"reviewing-the-changes\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#reviewing-the-changes\"></a>Le point sur les changements </h3>\n<p>Revoyons l\u2019ensemble des modifications apport\u00e9es \u00e0 notre <a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-feather-xjtbu\">exemple d\u2019origine</a>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">3000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span></span>        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>            <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Suivant</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> <span class=\"token string\">\" Chargement...\"</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/jovial-lalande-26yep\">Essayez sur CodeSandbox</a></strong></p>\n<p>Il ne nous aura fallu que sept lignes de code pour ajouter cette transition\u00a0:</p>\n<ul>\n<li>Nous avons import\u00e9 le Hook <code class=\"language-javascript\">useTransition</code> et l\u2019avons utilis\u00e9 dans le composant pour mettre \u00e0 jour l\u2019\u00e9tat.</li>\n<li>Nous avons pass\u00e9 <code class=\"language-javascript\">{ timeoutMs: 3000 }</code> pour rester sur l\u2019\u00e9cran pr\u00e9c\u00e9dent \u00e0 raison de 3 secondes maximum.</li>\n<li>Nous avons enrob\u00e9 la mise \u00e0 jour de l\u2019\u00e9tat par un <code class=\"language-javascript\">startTransition</code> pour indiquer \u00e0 React qu\u2019il pouvait choisir de la diff\u00e9rer.</li>\n<li>Nous utilisons <code class=\"language-javascript\">isPending</code> pour communiquer la notion d\u2019une transition d\u2019\u00e9tat en cours \u00e0 l\u2019utilisateur et d\u00e9sactiver le bouton.</li>\n</ul>\n<p>R\u00e9sultat\u00a0: cliquer sur \u00ab\u00a0Suivant\u00a0\u00bb n\u2019entra\u00eene pas une transition d\u2019\u00e9tat imm\u00e9diate vers un \u00e9tat de chargement \u00ab\u00a0ind\u00e9sirable\u00a0\u00bb mais reste plut\u00f4t sur l\u2019\u00e9cran pr\u00e9c\u00e9dent pour y communiquer une progression.</p>\n<h3 id=\"where-does-the-update-happen\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#where-does-the-update-happen\"></a>O\u00f9 survient la mise \u00e0 jour\u00a0? </h3>\n<p>Voil\u00e0 qui n\u2019\u00e9tait pas tr\u00e8s difficile \u00e0 impl\u00e9menter. Cependant, si vous commencez \u00e0 r\u00e9fl\u00e9chir sur les m\u00e9canismes qui rendent ce r\u00e9sultat possible, \u00e7a risque de vous faire quelques n\u0153uds au cerveau. Si nous d\u00e9finissons l\u2019\u00e9tat, comment se fait-il que nous n\u2019en constations pas le r\u00e9sultat imm\u00e9diatement\u00a0? <em>O\u00f9</em> a lieu le prochain rendu de <code class=\"language-javascript\">&lt;ProfilePage&gt;</code>\u00a0?</p>\n<p>Clairement, les deux \u00ab versions\u00a0\u00bb de <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> existent en m\u00eame temps. On sait que l\u2019ancienne existe parce qu\u2019on la voit \u00e0 l\u2019\u00e9cran et qu\u2019on y affiche m\u00eame un indicateur de progression. Et on sait que la nouvelle version existe aussi <em>quelque part</em>, parce que c\u2019est celle qu\u2019on attend\u00a0!</p>\n<p><strong>Mais comment peut-on avoir en m\u00eame temps deux versions du m\u00eame composant\u00a0?</strong></p>\n<p>On touche l\u00e0 \u00e0 l\u2019essence-m\u00eame du mode concurrent. Nous avons <a href=\"/react/concurrent-mode-intro#intentional-loading-sequences\">dit pr\u00e9c\u00e9demment</a> que c\u2019\u00e9tait un peu comme si React travaillait sur la mise \u00e0 jour de l\u2019\u00e9tat sur une \u00ab\u00a0branche\u00a0\u00bb. Une autre fa\u00e7on de conceptualiser \u00e7a consiste \u00e0 se dire qu\u2019enrober une mise \u00e0 jour de l\u2019\u00e9tat avec <code class=\"language-javascript\">startTransition</code> d\u00e9clenche son rendu <em>\u00ab\u00a0dans un univers parall\u00e8le\u00a0\u00bb</em>, comme dans les films de science-fiction. Nous ne \u00ab\u00a0voyons\u00a0\u00bb pas cet univers directement\u2014mais nous pouvons en d\u00e9tecter des signaux qui nous informent que quelque chose s\u2019y passe (<code class=\"language-javascript\">isPending</code>). Quand la mise \u00e0 jour est enfin pr\u00eate, nos \u00ab\u00a0univers\u00a0\u00bb fusionnent, et nous voyons le r\u00e9sultat \u00e0 l\u2019\u00e9cran\u00a0!</p>\n<p>Jouez un peu plus avec la <a class=\"external-link\" href=\"https://codesandbox.io/s/jovial-lalande-26yep\">d\u00e9mo</a>, et tentez d\u2019imaginez ce comportement derri\u00e8re elle.</p>\n<p>Bien entendu, ces deux versions de l\u2019arbre effectuant leur rendu <em>en m\u00eame temps</em> ne sont qu\u2019une illusion, tout comme l\u2019id\u00e9e que tous les programmes tournent sur votre ordinateur en m\u00eame temps est une illusion. Un syst\u00e8me d\u2019exploitation bascule entre les diff\u00e9rentes applications tr\u00e8s rapidement. De fa\u00e7on similaire, React peut basculer entre la version de votre arbre affich\u00e9e \u00e0 l\u2019\u00e9cran et celle \u00ab\u00a0en pr\u00e9paration\u00a0\u00bb pour l\u2019affichage suivant.</p>\n<p>Une API comme <code class=\"language-javascript\">useTransition</code> vous permet de vous concentrer sur l\u2019exp\u00e9rience utilisateur souhait\u00e9e, sans avoir \u00e0 vous encombrer l\u2019esprit avec les d\u00e9tails techniques de son impl\u00e9mentation. N\u00e9anmoins, imaginer que les mises \u00e0 jour enrob\u00e9es par <code class=\"language-javascript\">useTransition</code> surviennent \u00ab\u00a0sur une branche\u00a0\u00bb ou dans un \u00ab\u00a0monde parall\u00e8le\u00a0\u00bb reste une m\u00e9taphore utile.</p>\n<h3 id=\"transitions-are-everywhere\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#transitions-are-everywhere\"></a>Les transitions sont partout </h3>\n<p>Comme nous l\u2019avons appris dans <a href=\"/react/concurrent-mode-suspense\">Suspense pour le chargement de donn\u00e9es</a>, tout composant peut \u00ab\u00a0se suspendre\u00a0\u00bb \u00e0 tout moment s\u2019il a besoin de donn\u00e9es qui ne sont pas encore disponibles. Nous pouvons positionner strat\u00e9giquement des p\u00e9rim\u00e8tres <code class=\"language-javascript\">&lt;Suspense&gt;</code> dans diff\u00e9rentes parties de l\u2019arbre pour g\u00e9rer \u00e7a, mais \u00e7a ne sera pas toujours suffisant.</p>\n<p>Reprenons notre <a class=\"external-link\" href=\"https://codesandbox.io/s/frosty-hermann-bztrp\">premi\u00e8re d\u00e9mo de Suspense</a> qui ne se pr\u00e9occupait que d\u2019un profil. Pour le moment, elle ne r\u00e9cup\u00e8re les donn\u00e9es qu\u2019une seule fois. Ajoutons un bouton \u00ab\u00a0Rafra\u00eechir\u00a0\u00bb qui v\u00e9rifiera si le serveur a des mises \u00e0 jour \u00e0 proposer.</p>\n<p>Notre premier essai pourrait ressembler \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialResource <span class=\"token operator\">=</span> <span class=\"token function\">fetchUserAndPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleRefreshClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchUserAndPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRefreshClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Rafra\u00eechir</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/boring-shadow-100tf\">Essayez sur CodeSandbox</a></strong></p>\n<p>Dans cet exemple, nous commen\u00e7ons \u00e0 charger les donn\u00e9es lorsque le composant se charge <em>et</em> \u00e0 chaque fois que nous activons \u00ab\u00a0Rafra\u00eechir\u00a0\u00bb. Nous pla\u00e7ons le r\u00e9sultat de l\u2019appel \u00e0 <code class=\"language-javascript\">fetchUserAndPosts()</code> dans l\u2019\u00e9tat pour que les composants plus bas dans l\u2019arbre puissent commencer \u00e0 lire les nouvelles donn\u00e9es de la requ\u00eate que nous venons de d\u00e9clencher.</p>\n<p>On peut voir dans <a class=\"external-link\" href=\"https://codesandbox.io/s/boring-shadow-100tf\">cet exemple</a> qu\u2019activer \u00ab\u00a0Rafra\u00eechir\u00a0\u00bb fonctionne bien. Les composants <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> et <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code> re\u00e7oivent une nouvelle prop <code class=\"language-javascript\">resource</code> qui repr\u00e9sente les donn\u00e9es \u00e0 jour, ils \u00ab\u00a0se suspendent\u00a0\u00bb parce que la r\u00e9ponse n\u2019est pas encore l\u00e0, et nous en voyons les UI de repli. Une fois la r\u00e9ponse charg\u00e9e, nous voyons les publications mises \u00e0 jour (notre API factice en ajoute toutes les 3 secondes).</p>\n<p>Cependant, l\u2019exp\u00e9rience obtenue est tr\u00e8s saccad\u00e9e. Nous \u00e9tions en train de consulter une page, mais celle-ci a \u00e9t\u00e9 remplac\u00e9e par un \u00e9tat de chargement alors m\u00eame que nous \u00e9tions en train d\u2019interagir avec. C\u2019est d\u00e9routant. <strong>Tout comme pr\u00e9c\u00e9demment, pour \u00e9viter d\u2019afficher un \u00e9tat de chargement ind\u00e9sirable, nous pouvons enrober la mise \u00e0 jour de l\u2019\u00e9tat par une transition\u00a0:</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Attendre 10 secondes avant d\u2019afficher l\u2019UI de repli</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">10000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleRefreshClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRefreshClick<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> <span class=\"token string\">\"Rafra\u00eechissement...\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Rafra\u00eechir\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/sleepy-field-mohzb\">Essayez sur CodeSandbox</a></strong></p>\n<p>Voil\u00e0 qui est beaucoup plus agr\u00e9able\u00a0! Cliquer sur \u00ab\u00a0Rafra\u00eechir\u00a0\u00bb ne nous vire plus de la page que nous \u00e9tions en train de consulter. Nous voyons que quelque chose est en train de charger \u00ab\u00a0en place\u00a0\u00bb dans le contenu, et lorsque les donn\u00e9es sont enfin pr\u00eates, elles sont automatiquement affich\u00e9es.</p>\n<h3 id=\"baking-transitions-into-the-design-system\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#baking-transitions-into-the-design-system\"></a>Int\u00e9grer les transitions au syst\u00e8me de conception </h3>\n<p>Nous voyons d\u00e9sormais qu\u2019il est <em>tr\u00e8s</em> courant d\u2019avoir besoin de <code class=\"language-javascript\">useTransition</code>. Presque chaque clic sur un bouton ou autre interaction qui pourrait entra\u00eener la suspension d\u2019un composant b\u00e9n\u00e9ficierait d\u2019un enrobage dans <code class=\"language-javascript\">useTransition</code> pour \u00e9viter de masquer accidentellement du contenu avec lequel l\u2019utilisateur interagit.</p>\n<p>\u00c7a peut vite entra\u00eener beaucoup de code r\u00e9p\u00e9titif d\u2019un composant \u00e0 l\u2019autre. C\u2019est pourquoi <strong>nous conseillons g\u00e9n\u00e9ralement d\u2019int\u00e9grer <code class=\"language-javascript\">useTransition</code> dans le <em>syst\u00e8me de conception</em> des composants de votre appli</strong>. On pourrait par exemple extraire la logique de transition dans notre propre composant <code class=\"language-javascript\">&lt;Button&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> onClick <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">10000</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> spinner <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span></span>      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> spinner <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/modest-ritchie-iufrh\">Essayez sur CodeSandbox</a></strong></p>\n<p>Remarquez que le bouton ne se soucie pas de savoir <em>quel</em> \u00e9tat vous mettez \u00e0 jour. Il enrobe dans une transition <em>n\u2019importe quelle</em> mise \u00e0 jour d\u2019\u00e9tat qui survient au sein du gestionnaire <code class=\"language-javascript\">onClick</code>. \u00c0 pr\u00e9sent que notre <code class=\"language-javascript\">&lt;Button&gt;</code> s\u2019occupe tout seul de mettre la transition en place, le composant <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> n\u2019a plus besoin de s\u2019en occuper lui-m\u00eame\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleRefreshClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRefreshClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Rafra\u00eechir</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/modest-ritchie-iufrh\">Essayez sur CodeSandbox</a></strong></p>\n<p>Quand on clique sur un bouton, celui-ci d\u00e9marre une transition et appelle <code class=\"language-javascript\">props.onClick()</code> \u00e0 l\u2019int\u00e9rieur\u2014ce qui d\u00e9clenche <code class=\"language-javascript\">handleRefreshClick</code> dans le composant <code class=\"language-javascript\">&lt;ProfilePage&gt;</code>. On commence \u00e0 charger les donn\u00e9es \u00e0 jour, mais \u00e7a n\u2019active pas l\u2019UI de repli car nous sommes au sein d\u2019une transition, et que l\u2019expiration de 10 secondes sp\u00e9cifi\u00e9e dans l\u2019appel \u00e0 <code class=\"language-javascript\">useTransition</code> n\u2019est pas encore atteinte. Pendant que la transition est active, le bouton affiche un indicateur de chargement int\u00e9gr\u00e9.</p>\n<p>On voit maintenant comment le mode concurrent nous aide \u00e0 obtenir une bonne exp\u00e9rience utilisateur sans pour autant sacrifier l\u2019isolation et la modularit\u00e9 des composants. React coordonne la transition.</p>\n<h2 id=\"the-three-steps\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#the-three-steps\"></a>Les trois \u00e9tapes </h2>\n<p>\u00c0 ce stade, nous avons explor\u00e9 tous les \u00e9tats visuels distincts \u00e0 travers lesquels passe une mise \u00e0 jour. Dans cette section, nous allons leur donner des noms et discuter de la progression de l\u2019un \u00e0 l\u2019autre.</p>\n<br/>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/7dbfb2394216e3426d81ce414d97418e/a878e/cm-steps-simple.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/7dbfb2394216e3426d81ce414d97418e/1e088/cm-steps-simple.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>Tout au bout, nous avons l\u2019\u00e9tat <strong>Termin\u00e9</strong>. C\u2019est l\u00e0 que nous voulons arriver au final. Il repr\u00e9sente le moment o\u00f9 le prochain \u00e9cran est pleinement affich\u00e9 et ne charge plus de donn\u00e9es suppl\u00e9mentaires.</p>\n<p>Mais avant que notre \u00e9cran soit Termin\u00e9, nous aurons peut-\u00eatre besoin de charger des donn\u00e9es ou du code. Lorsque nous serons sur le prochain \u00e9cran, mais que certaines parties seront encore en train de charger, nous appellerons \u00e7a l\u2019\u00e9tat <strong>Squelette</strong>.</p>\n<p>Pour finir, il y a deux principales fa\u00e7ons d\u2019arriver \u00e0 l\u2019\u00e9tat Squelette. Nous illustrerons la diff\u00e9rence entre les deux \u00e0 l\u2019aide d\u2019un exemple concret.</p>\n<h3 id=\"default-receded-skeleton-complete\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#default-receded-skeleton-complete\"></a>Par d\u00e9faut\u00a0: En retrait \u2192 Squelette \u2192 Termin\u00e9 </h3>\n<p>Ouvrez <a class=\"external-link\" href=\"https://codesandbox.io/s/prod-grass-g1lh5\">cet exemple</a> et cliquez sur \u00ab\u00a0Ouvrir le profil\u00a0\u00bb. Vous verrez plusieurs \u00e9tats visuels l\u2019un apr\u00e8s l\u2019autre\u00a0:</p>\n<ul>\n<li><strong>En retrait</strong>\u00a0: pendant une seconde, vous verrez l\u2019UI de repli <code class=\"language-javascript\">&lt;h1&gt;Chargement de l\u2019appli...&lt;/h1&gt;</code>.</li>\n<li><strong>Squelette</strong>\u00a0: vous verrez le composant <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> avec \u00e0 l\u2019int\u00e9rieur <code class=\"language-javascript\">&lt;h2&gt;Chargement des publications...&lt;/h2&gt;</code>.</li>\n<li><strong>Termin\u00e9</strong>\u00a0: vous verrez le composant <code class=\"language-javascript\">&lt;ProfilePage&gt;</code> sans UI de repli \u00e0 l\u2019int\u00e9rieur. Tout aura \u00e9t\u00e9 charg\u00e9.</li>\n</ul>\n<p>Comment s\u00e9pare-t-on les \u00e9tats En retrait et Squelette\u00a0? La diff\u00e9rence tient au fait que l\u2019\u00e9tat <strong>En retrait</strong> donne plus l\u2019impression de \u00ab\u00a0faire un pas en arri\u00e8re\u00a0\u00bb pour l\u2019utilisateur, alors que l\u2019\u00e9tat <strong>Squelette</strong> donne le sentiment de \u00ab\u00a0faire un pas en avant\u00a0\u00bb dans notre progression vers davantage de contenu.</p>\n<p>Dans cet exemple, nous avons commenc\u00e9 notre parcours sur la <code class=\"language-javascript\">&lt;HomePage&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* \u00e9cran pr\u00e9c\u00e9dent */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HomePage</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Apr\u00e8s le clic, React a commenc\u00e9 \u00e0 afficher l\u2019\u00e9cran suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* prochain \u00e9cran */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Tant <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> que <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code> ont besoin de donn\u00e9es pour s\u2019afficher, alors ils se suspendent\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* prochain \u00e9cran */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* se suspend ! */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* se suspend ! */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Quand un composant se suspend, React a besoin d\u2019afficher l\u2019UI de repli la plus proche. Mais dans le cas de <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> celle-ci est au niveau racine\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// On voit cette UI de repli \u00e0 cause de de &lt;ProfileDetails&gt;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement de l\u2019appli...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* prochain \u00e9cran */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* se suspend ! */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>C\u2019est pourquoi lorsque nous cliquons sur un bouton, on a l\u2019impression de \u00ab\u00a0faire un pas en arri\u00e8re\u00a0\u00bb. Le p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code> qui affichait jusque-l\u00e0 du contenu utile (<code class=\"language-javascript\">&lt;HomePage /&gt;</code>) a d\u00fb \u00ab\u00a0se mettre en retrait\u00a0\u00bb pour afficher l\u2019UI de repli (<code class=\"language-javascript\">&lt;h1&gt;Chargement de l\u2019appli...&lt;/h1&gt;</code>). On appelle \u00e7a l\u2019\u00e9tat <strong>En retrait</strong>.</p>\n<p>Au fil du chargement des donn\u00e9es, React retentera l\u2019affichage, et <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> pourra s\u2019afficher correctement. Nous aboutirons alors \u00e0 l\u2019\u00e9tat <strong>Squelette</strong>. On voit la nouvelle page avec des parties manquantes\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* prochain \u00e9cran */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// On voit cette UI de repli \u00e0 cause de &lt;ProfileTimeline&gt;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* se suspend ! */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ProfilePage</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>L\u00e0 aussi, au final, nous atteindrons l\u2019\u00e9tat <strong>Termin\u00e9</strong>.</p>\n<p>Ce sc\u00e9nario (En retrait \u2192 Squelette \u2192 Termin\u00e9) est celui par d\u00e9faut. Cependant, l\u2019\u00e9tat En retrait est d\u00e9sagr\u00e9able parce qu\u2019il \u00ab\u00a0masque\u00a0\u00bb des informations existantes. C\u2019est pourquoi React nous permet de choisir une s\u00e9quence diff\u00e9rente (<strong>En attente</strong> \u2192 Squelette \u2192 Termin\u00e9) avec <code class=\"language-javascript\">useTransition</code>.</p>\n<h3 id=\"preferred-pending-skeleton-complete\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#preferred-pending-skeleton-complete\"></a>Pr\u00e9f\u00e9rable\u00a0: En attente \u2192 Squelette \u2192 Termin\u00e9 </h3>\n<p>Quand nous utilisons <code class=\"language-javascript\">useTransition</code>, React nous permet de \u00ab\u00a0rester\u00a0\u00bb sur l\u2019\u00e9cran pr\u00e9c\u00e9dent\u2014et d\u2019y placer un indicateur d\u2019attente. Nous appelons \u00e7a l\u2019\u00e9tat <strong>En attente</strong>. Le ressenti est nettement meilleur que pour l\u2019\u00e9tat En retrait, car aucun contenu existant ne dispara\u00eet, et la page reste interactive.</p>\n<p>Vous pouvez comparer ces deux exemples pour ressentir la diff\u00e9rence\u00a0:</p>\n<ul>\n<li>D\u00e9faut\u00a0: <a class=\"external-link\" href=\"https://codesandbox.io/s/prod-grass-g1lh5\">En retrait \u2192 Squelette \u2192 Termin\u00e9</a></li>\n<li><strong>Pr\u00e9f\u00e9rable\u00a0: <a class=\"external-link\" href=\"https://codesandbox.io/s/focused-snow-xbkvl\">En attente \u2192 Squelette \u2192 Termin\u00e9</a></strong></li>\n</ul>\n<p>La seule diff\u00e9rence entre ces deux exemples tient \u00e0 ce que le premier utilise des <code class=\"language-javascript\">&lt;button&gt;</code> classiques, alors que le second utilise notre composant personnalis\u00e9 <code class=\"language-javascript\">&lt;Button&gt;</code>, qui int\u00e8gre un <code class=\"language-javascript\">useTransition</code>.</p>\n<h3 id=\"wrap-lazy-features-in-suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#wrap-lazy-features-in-suspense\"></a>Enrobez les fonctionnalit\u00e9s paresseuses avec <code class=\"language-javascript\">&lt;Suspense&gt;</code> </h3>\n<p>Ouvrez <a class=\"external-link\" href=\"https://codesandbox.io/s/nameless-butterfly-fkw5q\">cet exemple</a>. Quand vous activez un bouton, vous voyez l\u2019\u00e9tat En attente pendant une seconde avant de passer \u00e0 la suite. Cette transition est agr\u00e9able et fluide.</p>\n<p>Nous allons maintenant ajouter une fonctionnalit\u00e9 toute neuve \u00e0 la page de profil\u00a0: une liste de faits amusants relatifs \u00e0 la personne\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTrivia</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTrivia</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> trivia <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>trivia<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Faits amusants</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>trivia<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fact</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fact<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>fact<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/focused-mountain-uhkzg\">Essayez sur CodeSandbox</a></strong></p>\n<p>Si \u00e0 pr\u00e9sent vous activez \u00ab\u00a0Ouvrir le profil\u00a0\u00bb, vous verrez que quelque chose cloche. \u00c7a prend d\u00e9sormais sept bonnes secondes pour effectuer la transition\u00a0!  C\u2019est parce que notre API de faits amusants est trop lente. Imaginons que nous ne puissions pas l\u2019acc\u00e9l\u00e9rer\u00a0: comment alors am\u00e9liorer l\u2019exp\u00e9rience utilisateur malgr\u00e9 cette contrainte\u00a0?</p>\n<p>Si nous ne voulons pas rester \u00e0 l\u2019\u00e9tat En attente trop longtemps, notre premier instinct pourrait \u00eatre d\u2019ajuster le <code class=\"language-javascript\">timeoutMs</code> dans <code class=\"language-javascript\">useTransition</code> pour le r\u00e9duire, par exemple \u00e0 <code class=\"language-javascript\">3000</code>. Vous pouvez essayer \u00e7a <a class=\"external-link\" href=\"https://codesandbox.io/s/practical-kowalevski-kpjg4\">ici</a>. \u00c7a nous permet d\u2019\u00e9chapper \u00e0 un \u00e9tat En attente prolong\u00e9, mais \u00e7a ne nous donne pas pour autant des contenus utiles \u00e0 afficher\u00a0!</p>\n<p>Il y a un moyen plus simple de r\u00e9soudre \u00e7a. <strong>Plut\u00f4t que d\u2019abr\u00e9ger la transition, nous pouvons \u00ab\u00a0d\u00e9connecter\u00a0\u00bb le composant lent de celle-ci</strong> en l\u2019enrobant dans son propre p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des faits amusants...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTrivia</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/condescending-shape-s6694\">Essayez sur CodeSandbox</a></strong></p>\n<p>Voil\u00e0 qui met en lumi\u00e8re un point important. React pr\u00e9f\u00e8rera toujours arriver \u00e0 l\u2019\u00e9tat Squelette le plus t\u00f4t possible. M\u00eame si nous utilisons partout des transitions \u00e0 expiration longue, React ne restera pas dans l\u2019\u00e9tat En attente plus longtemps que le strict n\u00e9cessaire pour \u00e9viter l\u2019\u00e9tat En retrait.</p>\n<p><strong>Si une fonctionnalit\u00e9 ne constitue pas une partie vitale du prochain \u00e9cran, enrobez-la dans un <code class=\"language-javascript\">&lt;Suspense&gt;</code> pour la laisser se charger paresseusement.</strong>  Vous garantissez ainsi que le reste du contenu sera visible le plus t\u00f4t possible. R\u00e9ciproquement, si un \u00e9cran <em>n\u2019a aucun int\u00e9r\u00eat \u00e0 \u00eatre affich\u00e9</em> sans un composant donn\u00e9, tel que <code class=\"language-javascript\">&lt;ProfileDetails&gt;</code> dans notre exemple, ne <em>l\u2019enrobez pas</em> dans un <code class=\"language-javascript\">&lt;Suspense&gt;</code>. Ainsi les transitions \u00ab\u00a0attendront\u00a0\u00bb que ce composant soit disponible.</p>\n<h3 id=\"suspense-reveal-train\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#suspense-reveal-train\"></a>Le \u00ab train\u00a0\u00bb de r\u00e9v\u00e9lations de Suspense </h3>\n<p>Lorsque nous sommes d\u00e9j\u00e0 sur le prochain \u00e9cran, il peut arriver que les donn\u00e9es n\u00e9cessaires pour \u00ab\u00a0d\u00e9verrouiller\u00a0\u00bb des p\u00e9rim\u00e8tres <code class=\"language-javascript\">&lt;Suspense&gt;</code> distincts arrivent en succession rapide. Par exemple, deux r\u00e9ponses distinctes pourraient arriver respectivement apr\u00e8s 1\u00a0000 et 1\u00a0050\u00a0ms. Si vous avez d\u00e9j\u00e0 attendu une seconde, vous ne percevrez pas l\u2019attente suppl\u00e9mentaire de 50\u00a0ms. C\u2019est pourquoi React ne r\u00e9v\u00e8le les p\u00e9rim\u00e8tres <code class=\"language-javascript\">&lt;Suspense&gt;</code> que selon un horaire d\u00e9termin\u00e9, comme un \u00ab\u00a0train\u00a0\u00bb qui arriverait p\u00e9riodiquement. Il \u00e9change un court d\u00e9lai contre une r\u00e9duction des modifications majeures \u00e0 la mise en page et du nombre de changements visuels pr\u00e9sent\u00e9s \u00e0 l\u2019utilisateur.</p>\n<p>Vous pouvez voir une d\u00e9mo de \u00e7a <a class=\"external-link\" href=\"https://codesandbox.io/s/admiring-mendeleev-y54mk\">ici</a>. Les r\u00e9ponses \u00ab\u00a0publications\u00a0\u00bb et \u00ab\u00a0faits amusants\u00a0\u00bb arrivent \u00e0 100\u00a0ms l\u2019une de l\u2019autre. Mais React les regroupe pour \u00ab\u00a0r\u00e9v\u00e9ler\u00a0\u00bb leurs p\u00e9rim\u00e8tres en une seule passe.</p>\n<h3 id=\"delaying-a-pending-indicator\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#delaying-a-pending-indicator\"></a>Diff\u00e9rer un indicateur d\u2019attente </h3>\n<p>Notre composant <code class=\"language-javascript\">Button</code> affichera imm\u00e9diatement l\u2019indicateur d\u2019attente une fois cliqu\u00e9\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> onClick <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span>    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">10000</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> spinner <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/floral-thunder-iy826\">Essayez sur CodeSandbox</a></strong></p>\n<p>\u00c7a signale \u00e0 l\u2019utilisateur qu\u2019un travail a lieu. Toutefois, si cette transition est relativement courte (disons, moins de 500\u00a0ms), cet affichage est plus une distraction qu\u2019autre chose et peut faire que la transition elle-m\u00eame semble <em>plus lente</em>.</p>\n<p>Une solution possible \u00e0 \u00e7a consiste \u00e0 <em>diff\u00e9rer l\u2019affichage du <em>spinner</em> lui-m\u00eame</em>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-css\"><code class=\"language-javascript\"><span class=\"token selector\">.DelayedSpinner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> 0s linear 0.5s forwards makeVisible<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> makeVisible</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span> visible<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> spinner <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DelayedSpinner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> spinner <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/gallant-spence-l6wbk\">Essayez sur CodeSandbox</a></strong></p>\n<p>Avec cette modification, m\u00eame si nous sommes dans l\u2019\u00e9tat En attente, nous n\u2019affichons aucune indication \u00e0 l\u2019utilisateur jusqu\u2019\u00e0 ce que 500\u00a0ms se soient \u00e9coul\u00e9s. \u00c7a peut sembler une am\u00e9lioration superflue quand les r\u00e9ponses API sont lentes. Mais comparez le ressenti <a class=\"external-link\" href=\"https://codesandbox.io/s/thirsty-liskov-1ygph\">avant</a> et <a class=\"external-link\" href=\"https://codesandbox.io/s/hardcore-http-s18xr\">apr\u00e8s</a> lorsque l\u2019appel API est rapide. M\u00eame si le reste du code n\u2019a pas chang\u00e9, supprimer un \u00e9tat de chargement \u00ab\u00a0trop rapide\u00a0\u00bb am\u00e9liore les performances per\u00e7ues en \u00e9vitant d\u2019attirer l\u2019attention de l\u2019utilisateur.</p>\n<h3 id=\"recap\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#recap\"></a>En r\u00e9sum\u00e9 </h3>\n<p>Les points les plus importants que nous avons appris jusqu\u2019\u00e0 pr\u00e9sent sont\u00a0:</p>\n<ul>\n<li>Par d\u00e9faut, notre s\u00e9quence de chargement est En retrait \u2192 Squelette \u2192 Termin\u00e9.</li>\n<li>L\u2019\u00e9tat En retrait n\u2019est pas tr\u00e8s agr\u00e9able parce qu\u2019il masque du contenu existant.</li>\n<li>Avec <code class=\"language-javascript\">useTransition</code>, nous pouvons choisir de commencer plut\u00f4t par un \u00e9tat En attente. \u00c7a nous gardera sur l\u2019\u00e9cran pr\u00e9c\u00e9dent pendant que le prochain se pr\u00e9pare.</li>\n<li>Si nous ne voulons pas qu\u2019un composant ralentisse une transition, nous pouvons l\u2019enrober dans son propre p\u00e9rim\u00e8tre <code class=\"language-javascript\">&lt;Suspense&gt;</code>.</li>\n<li>Plut\u00f4t que de faire un <code class=\"language-javascript\">useTransition</code> au sein de tous nos composants, nous pouvons l\u2019int\u00e9grer \u00e0 notre syst\u00e8me de conception.</li>\n</ul>\n<h2 id=\"other-patterns\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#other-patterns\"></a>Autres approches </h2>\n<p>Les transitions sont probablement l\u2019approche pour une UI concurrente que vous rencontrerez le plus fr\u00e9quemment, mais il existe d\u2019autres approches que vous pourriez trouver utiles.</p>\n<h3 id=\"splitting-high-and-low-priority-state\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#splitting-high-and-low-priority-state\"></a>Dissocier les \u00e9tats \u00e0 forte et faible priorit\u00e9 </h3>\n<p>Quand vous concevez des composants React, vous cherchez dans l\u2019id\u00e9al \u00e0 d\u00e9terminer la \u00ab\u00a0repr\u00e9sentation minimale\u00a0\u00bb de l\u2019\u00e9tat. Par exemple, au lieu de conserver dans l\u2019\u00e9tat <code class=\"language-javascript\">firstName</code>, <code class=\"language-javascript\">lastName</code> et <code class=\"language-javascript\">fullName</code>, il est g\u00e9n\u00e9ralement pr\u00e9f\u00e9rable de n\u2019y stocker que <code class=\"language-javascript\">firstName</code> et <code class=\"language-javascript\">lastName</code>, et de calculer <code class=\"language-javascript\">fullName</code> lors du rendu. \u00c7a nous permet d\u2019\u00e9viter les erreurs dues \u00e0 une mise \u00e0 jour partielle de l\u2019\u00e9tat.</p>\n<p>En revanche, le mode concurrent rec\u00e8le des cas o\u00f9 vous pourriez <em>vouloir</em> \u00ab\u00a0dupliquer\u00a0\u00bb des donn\u00e9es dans des variables d\u2019\u00e9tat distinctes. Prenez cette minuscule appli de traduction\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"Bonjour, monde\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> initialResource <span class=\"token operator\">=</span> <span class=\"token function\">fetchTranslation</span><span class=\"token punctuation\">(</span>initialQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>query<span class=\"token punctuation\">,</span> setQuery<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setQuery</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchTranslation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Translation</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Translation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/brave-villani-ypxvf\">Essayez sur CodeSandbox</a></strong></p>\n<p>Remarquez comme, lorsque vous tapez dans le champ de saisie, le composant <code class=\"language-javascript\">&lt;Translation&gt;</code> se suspend, vous affichant l\u2019UI de repli <code class=\"language-javascript\">&lt;p&gt;Chargement...&lt;/p&gt;</code> jusqu\u2019\u00e0 obtenir des r\u00e9sultats \u00e0 jour. Ce n\u2019est pas id\u00e9al. Il serait pr\u00e9f\u00e9rable que vous puissiez bri\u00e8vement voir la <em>pr\u00e9c\u00e9dente</em> traduction, tandis que nous chargeons la prochaine.</p>\n<p>D\u2019ailleurs, si vous ouvrez la console, vous y verrez cet avertissement\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">Warning: App triggered a user-blocking update that suspended.\n\nThe fix is to split the update into multiple parts: a user-blocking update to provide immediate feedback, and another update that triggers the bulk of the changes.\n\nRefer to the documentation for useTransition to learn how to implement this pattern.</code></pre></div>\n<p><em>Avertissement\u00a0: l\u2019appli a d\u00e9clench\u00e9 une mise \u00e0 jour suspensive, bloquante pour l\u2019utilisateur.</em></p>\n<p><em>Pour corriger \u00e7a, d\u00e9coupez la mise \u00e0 jour en plusieurs parties\u00a0: une bloquante qui fournit un retour visuel imm\u00e9diat, et une qui d\u00e9clenche l\u2019essentiel des modifications.</em></p>\n<p><em>Consultez la documentation de useTransition pour en apprendre davantage sur la fa\u00e7on d\u2019impl\u00e9menter cette approche.</em></p>\n<p>Comme nous l\u2019avons vu auparavant, si une mise \u00e0 jour d\u2019\u00e9tat entra\u00eene la suspension d\u2019un composant, cette mise \u00e0 jour devrait \u00eatre enrob\u00e9e dans une transition. Essayons d\u2019ajouter <code class=\"language-javascript\">useTransition</code> \u00e0 notre composant\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>query<span class=\"token punctuation\">,</span> setQuery<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">5000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>      <span class=\"token function\">setQuery</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchTranslation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/zen-keldysh-rifos\">Essayez sur CodeSandbox</a></strong></p>\n<p>Essayez de saisir une valeur \u00e0 pr\u00e9sent. Quelque chose cloche\u00a0!  Le champ n\u2019est mis \u00e0 jour que tr\u00e8s lentement.</p>\n<p>Nous avons corrig\u00e9 le premier probl\u00e8me (la suspension hors d\u2019une transition). Mais maintenant, \u00e0 cause de la transition, notre \u00e9tat n\u2019est pas mis \u00e0 jour imm\u00e9diatement\u00a0: il ne peut donc pas \u00ab\u00a0piloter\u00a0\u00bb le champ contr\u00f4l\u00e9\u00a0!</p>\n<p>La solution <strong>consiste \u00e0 d\u00e9couper l\u2019\u00e9tat en deux parties\u00a0:</strong> une partie \u00e0 \u00ab\u00a0forte priorit\u00e9\u00a0\u00bb qui est mise \u00e0 jour tout de suite, et une \u00e0 \u00ab\u00a0faible priorit\u00e9\u00a0\u00bb qui peut se permettre d\u2019attendre la transition.</p>\n<p>Dans notre exemple, on a d\u00e9j\u00e0 deux variables d\u2019\u00e9tat. Le texte saisi est dans <code class=\"language-javascript\">query</code> et la traduction est lue depuis <code class=\"language-javascript\">resource</code>. Nous voulons que les modifications apport\u00e9es \u00e0 <code class=\"language-javascript\">query</code> soient trait\u00e9es imm\u00e9diatement, mais que celles de <code class=\"language-javascript\">resource</code> (c\u2019est-\u00e0-dire le chargement d\u2019une nouvelle traduction) d\u00e9clenchent une transition.</p>\n<p>Du coup le bon correctif consiste \u00e0 mettre <code class=\"language-javascript\">setQuery</code> (qui ne suspend rien) <em>hors</em> de la transition, mais de placer <code class=\"language-javascript\">setResource</code> (qui suspendra) <em>\u00e0 l\u2019int\u00e9rieur</em> de celle-ci.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Hors de la transition (urgent)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">setQuery</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Dans la transition (peut \u00eatre diff\u00e9r\u00e9)</span>\n    <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchTranslation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/lively-smoke-fdf93\">Essayez sur CodeSandbox</a></strong></p>\n<p>Avec cet ajustement, tout fonctionne comme on le souhaite. On peut taper une valeur et la voir imm\u00e9diatement, quant \u00e0 la traduction, elle \u00ab rattrape\u00a0\u00bb ce qu\u2019on a saisi un peu plus tard.</p>\n<h3 id=\"deferring-a-value\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#deferring-a-value\"></a>Diff\u00e9rer une valeur </h3>\n<p>Par d\u00e9faut, React assurera toujours un rendu coh\u00e9rent de l\u2019UI. Prenez le code suivant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React garantit qu\u2019\u00e0 tout moment, quand nous regardons ces composants \u00e0 l\u2019\u00e9cran, ils refl\u00e8teront les donn\u00e9es issues du m\u00eame <code class=\"language-javascript\">user</code>. Si un <code class=\"language-javascript\">user</code> diff\u00e9rent nous est pass\u00e9 suite \u00e0 une mise \u00e0 jour d\u2019\u00e9tat, vous verrez les deux composants se mettre \u00e0 jour d\u2019un bloc. Il serait impossible d\u2019enregistrer une vid\u00e9o de l\u2019\u00e9cran et de trouver ensuite un seul <em>frame</em> o\u00f9 ces composants afficheraient des donn\u00e9es issues d\u2019objets <code class=\"language-javascript\">user</code> diff\u00e9rents. (Et si vous y arrivez un jour, ouvrez un ticket, c\u2019est un bug\u00a0!)</p>\n<p>Cette approche a du sens dans la vaste majorit\u00e9 des cas. Une UI incoh\u00e9rente est d\u00e9routante voire dangereuse pour les utilisateurs. (Par exemple, vous imaginez bien que ce serait l\u2019enfer si le bouton Envoyer de Messenger et le panneau de conversation n\u2019\u00e9taient \u00ab\u00a0pas d\u2019accord\u00a0\u00bb sur la conversation en cours.)</p>\n<p>Ceci dit, il peut parfois \u00eatre utile d\u2019introduire volontairement un d\u00e9calage. On pourrait le faire manuellement en \u00ab\u00a0d\u00e9coupant\u00a0\u00bb l\u2019\u00e9tat comme on l\u2019a fait ci-dessus, mais React nous offre un Hook pr\u00e9d\u00e9fini pour \u00e7a\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useDeferredValue <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> deferredValue <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">5000</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pour illustrer cette fonctionnalit\u00e9, nous allons utiliser <a class=\"external-link\" href=\"https://codesandbox.io/s/musing-ramanujan-bgw2o\">l\u2019exemple de la bascule de profil</a>. Cliquez sur le bouton \u00ab\u00a0Suivant\u00a0\u00bb et remarquez que \u00e7a prend une seconde pour achever la transition.</p>\n<p>Disons que la r\u00e9cup\u00e9ration des d\u00e9tails utilisateurs est tr\u00e8s rapide et ne prend que 300 millisecondes. Pour le moment, nous attendons une seconde enti\u00e8re parce que nous avons besoin tant des d\u00e9tails de l\u2019utilisateur que de ses publications pour afficher une page de profil coh\u00e9rente. Mais qu\u2019en serait-il si nous voulions afficher les d\u00e9tails plus t\u00f4t\u00a0?</p>\n<p>Si nous acceptons de sacrifier la coh\u00e9rence, nous pouvons <strong>passer des donn\u00e9es potentiellement obsol\u00e8tes aux composants qui retardent notre transition</strong>. C\u2019est pr\u00e9cis\u00e9ment ce que <code class=\"language-javascript\">useDeferredValue()</code> nous permet de faire\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> deferredResource <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">1000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement du profil...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>deferredResource<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">isStale</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>deferredResource <span class=\"token operator\">!==</span> resource<span class=\"token punctuation\">}</span></span></span>        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProfileTimeline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isStale<span class=\"token punctuation\">,</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> opacity<span class=\"token operator\">:</span> isStale <span class=\"token operator\">?</span> <span class=\"token number\">0.7</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/vigorous-keller-3ed2b\">Essayez sur CodeSandbox</a></strong></p>\n<p>Le compromis que nous faisons ici tient \u00e0 ce que <code class=\"language-javascript\">&lt;ProfileTimeline&gt;</code> sera incoh\u00e9rente vis-\u00e0-vis des autres composants et affichera potentiellement un \u00e9l\u00e9ment plus ancien. En cliquant sur \u00ab\u00a0Suivant\u00a0\u00bb plusieurs fois, vous allez le remarquer. Mais gr\u00e2ce \u00e0 \u00e7a, nous pouvons raccourcir le temps de la transition de 1\u00a0000\u00a0ms \u00e0 300\u00a0ms.</p>\n<p>La pertinence d\u2019un tel compromis d\u00e9pend de votre situation. Mais \u00e7a reste un outil bien pratique, surtout quand le contenu ne change pas de fa\u00e7on tr\u00e8s prononc\u00e9e d\u2019un \u00e9lement \u00e0 l\u2019autre, et que l\u2019utilisateur est susceptible de ne m\u00eame pas remarquer qu\u2019ils ont des donn\u00e9es obsol\u00e8tes pendant une seconde.</p>\n<p>Notez bien que <code class=\"language-javascript\">useDeferredValue</code> n\u2019est pas <em>seulement</em> utile pour le chargement de donn\u00e9es. Elle nous aide aussi lorsqu\u2019une arborescence de composants lourde ralentit une interaction (par ex. la saisie dans un champ). Tout comme nous pouvons \u00ab\u00a0diff\u00e9rer\u00a0\u00bb une valeur qui prend trop longtemps \u00e0 se charger (et afficher l\u2019ancienne valeur en d\u00e9pit des mises \u00e0 jour d\u2019autres composants), nous pouvons faire la m\u00eame chose \u00e0 des arbres qui prennent trop de temps pour leur rendu.</p>\n<p>Par exemple, prenez une liste filtrable comme celle-ci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> setText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bonjour\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Tapez une valeur dans le champ :</span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      ...\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySlowList</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/pensive-shirley-wkp46\">Essayez sur CodeSandbox</a></strong></p>\n<p>Dans cet exemple, <strong>chaque \u00e9l\u00e9ment dans <code class=\"language-javascript\">&lt;MySlowList&gt;</code> est artificiellement ralenti\u00a0: chacun d\u2019eux bloque le thread pour quelques millisecondes</strong>. On ne ferait jamais \u00e7a dans une v\u00e9ritable appli, mais \u00e7a nous aide \u00e0 simuler ce qui pourrait se passer dans une arborescence de composants profonde qui ne contiendrait pas pour autant d\u2019endroits \u00e9vidents \u00e0 optimiser.</p>\n<p>On peut voir comme la saisie dans le champ cause une exp\u00e9rience saccad\u00e9e. Ajoutons maintenant <code class=\"language-javascript\">useDeferredValue</code>\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> setText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bonjour\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> deferredText <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">5000</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Tapez une valeur dans le champ :</span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      ...</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySlowList</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>deferredText<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/infallible-dewdney-9fkv9\">Essayez sur CodeSandbox</a></strong></p>\n<p>\u00c0 pr\u00e9sent la frappe cause beaucoup moins de saccade, mais au prix d\u2019un affichage diff\u00e9r\u00e9 des r\u00e9sultats.</p>\n<p>En quoi est-ce diff\u00e9rent du <em>debouncing</em>\u00a0? Notre exemple avait un d\u00e9lai artificiel fixe (3\u00a0ms pour chacun des 80 \u00e9lements), donc il y aura toujours un d\u00e9lai, peu importe la vitesse de notre ordinateur. En revanche, la valeur de <code class=\"language-javascript\">useDeferredValue</code> n\u2019est \u00ab\u00a0\u00e0 la tra\u00eene\u00a0\u00bb que si le rendu prend du temps. React n\u2019impose aucun retard minimum. Avec une charge de travail plus r\u00e9aliste, vous pouvez vous attendre \u00e0 ce que le retard s\u2019adapte \u00e0 l\u2019appareil de l\u2019utilisateur. Sur des machines rapides, le retard sera plus court voire inexistant, et sur des machines lentes, il se fera davantage sentir. Dans les deux cas, l\u2019appli restera r\u00e9active. C\u2019est l\u2019avantage de ce m\u00e9canisme par rapport au <em>debouncing</em> ou au <em>throttling</em>, qui imposent toujours un d\u00e9lai minimum et par ailleurs ne permettent pas d\u2019\u00e9viter de bloquer le thread pendant le rendu.</p>\n<p>M\u00eame si on am\u00e9liore bien ici la r\u00e9activit\u00e9, cet exemple n\u2019est pas encore engageant parce que le mode concurrent manque de certaines optimisations cruciales pour ce cas d\u2019usage. Quoi qu\u2019il en soit, il reste int\u00e9ressant de voir que des fonctionnalit\u00e9s comme <code class=\"language-javascript\">useDeferredValue</code> (ou <code class=\"language-javascript\">useTransition</code>) sont utiles lorsqu\u2019on attend apr\u00e8s aussi bien une r\u00e9ponse r\u00e9seau qu\u2019un travail de calcul pur.</p>\n<h3 id=\"suspenselist\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#suspenselist\"></a><code class=\"language-javascript\">SuspenseList</code> </h3>\n<p><code class=\"language-javascript\">&lt;SuspenseList&gt;</code> est la derni\u00e8re approche li\u00e9e \u00e0 l\u2019orchestration des \u00e9tats de chargement.</p>\n<p>Prenez cet exemple\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des faits amusants...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTrivia</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/proud-tree-exg5t\">Essayez sur CodeSandbox</a></strong></p>\n<p>La dur\u00e9e de l\u2019appel API dans cet exemple est al\u00e9atoire. Si vous rafra\u00eechissez encore et encore, vous remarquerez que parfois les publications arrivent en premier, alors que d\u2019autres fois ce sont les \u00ab\u00a0faits amusants\u00a0\u00bb.</p>\n<p>C\u2019est un probl\u00e8me. Si la r\u00e9ponse des faits amusants arrive en premier, on verra les faits amusants sous l\u2019UI de repli <code class=\"language-javascript\">&lt;h2&gt;Chargement des publications...&lt;/h2&gt;</code> des publications. On pourrait alors commencer \u00e0 les lire, sauf que soudainement la r\u00e9ponse des <em>publications</em> arrive, et d\u00e9cale nos faits vers le bas. C\u2019est tr\u00e8s d\u00e9sagr\u00e9able.</p>\n<p>Une mani\u00e8re de corriger \u00e7a consiste \u00e0 les placer tous deux dans le m\u00eame p\u00e9rim\u00e8tre\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications et des faits amusants...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTrivia</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/currying-violet-5jsiy\">Essayez sur CodeSandbox</a></strong></p>\n<p>Le souci avec ce correctif est qu\u2019\u00e0 pr\u00e9sent nous devons <em>toujours</em> attendre que les deux contenus soient charg\u00e9s. Et pourtant, si ce sont les <em>publications</em> qui r\u00e9pondent en premier, il n\u2019y a pas de raison d\u2019attendre pour les afficher. Quand les faits amusants arriveront plus tard, ils ne d\u00e9caleront pas la mise en page parce qu\u2019ils seront situ\u00e9s sous les publications.</p>\n<p>D\u2019autres voies de correction, telles que la composition sur-mesure de promesses, deviennent vite d\u00e9licates \u00e0 mettre en \u0153uvre lorsque les \u00e9tats de chargement sont situ\u00e9s dans des composants distincts plus bas dans l\u2019arbre.</p>\n<p>Pour r\u00e9soudre \u00e7a, nous allons importer <code class=\"language-javascript\">SuspenseList</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SuspenseList <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">&lt;SuspenseList&gt;</code> coordonne \u00ab\u00a0l\u2019ordre de r\u00e9v\u00e9lation\u00a0\u00bb des n\u0153uds descendants <code class=\"language-javascript\">&lt;Suspense&gt;</code> les plus proches \u00e0 l\u2019int\u00e9rieur de lui\u00a0:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> resource <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SuspenseList</span></span> <span class=\"token attr-name\">revealOrder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>forwards<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des publications...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTimeline</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement des faits amusants...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileTrivia</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SuspenseList</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codesandbox.io/s/black-wind-byilt\">Essayez sur CodeSandbox</a></strong></p>\n<p>L\u2019option <code class=\"language-javascript\">revealOrder=\"forwards\"</code> signifie que les n\u0153uds <code class=\"language-javascript\">&lt;Suspense&gt;</code> les plus proches dans la liste <strong>ne \u00ab\u00a0r\u00e9v\u00e8leront\u00a0\u00bb leur contenu que dans l\u2019ordre de leur apparition dans l\u2019arbre, m\u00eame si leurs donn\u00e9es arrivent dans un ordre diff\u00e9rent.</strong> <code class=\"language-javascript\">&lt;SuspenseList&gt;</code> a d\u2019autres modes int\u00e9ressants\u00a0: essayez de remplacer <code class=\"language-javascript\">\"forwards\"</code> par <code class=\"language-javascript\">\"backwards\"</code> ou <code class=\"language-javascript\">\"together\"</code> et regardez ce que \u00e7a donne.</p>\n<p>Vous pouvez contr\u00f4ler combien d\u2019\u00e9tats de chargement sont visibles \u00e0 un instant donn\u00e9 gr\u00e2ce \u00e0 la prop <code class=\"language-javascript\">tail</code>. Si nous pr\u00e9cisons <code class=\"language-javascript\">tail=\"collapsed\"</code>, nous verrons <em>au maximum une</em> UI de repli \u00e0 la fois. Vous pouvez jouer avec <a class=\"external-link\" href=\"https://codesandbox.io/s/adoring-almeida-1zzjh\">ici</a>.</p>\n<p>Gardez \u00e0 l\u2019esprit que <code class=\"language-javascript\">&lt;SuspenseList&gt;</code> est composable, comme tout dans React. Par exemple, vous pouvez cr\u00e9er une grille en pla\u00e7ant plusieurs lignes <code class=\"language-javascript\">&lt;SuspenseList&gt;</code> au sein d\u2019un tableau <code class=\"language-javascript\">&lt;SuspenseList&gt;</code>.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/concurrent-mode-patterns#next-steps\"></a>Prochaines \u00e9tapes </h2>\n<p>Le mode concurrent offre un puissant mod\u00e8le de programmation d\u2019UI et un jeu de nouvelles primitives composables pour vous aider \u00e0 orchestrer de d\u00e9licieuses exp\u00e9riences utilisateurs.</p>\n<p>C\u2019est le r\u00e9sultat de plusieurs ann\u00e9es de recherche et d\u00e9veloppement, et il n\u2019est pas termin\u00e9. Dans la section sur <a href=\"/react/concurrent-mode-adoption\">l\u2019adoption du mode concurrent</a>, nous vous expliquerons comment vous pouvez l\u2019essayer et ce que vous pouvez en attendre.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/concurrent-mode-patterns.md\">Edit this page</a></p></div></article>", "path": "/react/concurrent-mode-patterns", "nav": ["/react/concurrent-mode-suspense", "/react/concurrent-mode-adoption"]}, {"key": "4. Adopter le mode concurrent", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><style>\n.scary > blockquote {\n  background-color: rgba(237, 51, 21, 0.2);\n  border-left-color: #ed3315;\n}\n</style>\n<div class=\"scary\">\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Cette page d\u00e9crit <strong>des fonctionnalit\u00e9s exp\u00e9rimentales qui <a href=\"/react/concurrent-mode-adoption\">ne sont pas encore disponibles</a> dans une version stable</strong>. Ne vous basez pas sur les builds exp\u00e9rimentaux de React pour vos applis en production. Ces fonctionnalit\u00e9s sont susceptibles d\u2019\u00e9voluer de fa\u00e7on significative et sans avertissement avant d\u2019int\u00e9grer officiellement React.</p>\n<p>Cette documentation est destin\u00e9e aux personnes curieuses ou habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t. <strong>Si vous d\u00e9butez en React, ne vous pr\u00e9occupez pas de ces fonctionnalit\u00e9s</strong>\u00a0: vous n\u2019avez pas besoin de les apprendre pour le moment.</p>\n</div>\n</div>\n<ul>\n<li>\n<p><a href=\"/react/concurrent-mode-adoption#installation\">Installation</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-adoption#who-is-this-experimental-release-for\">\u00c0 qui s\u2019adresse cette version exp\u00e9rimentale\u00a0?</a></li>\n<li><a href=\"/react/concurrent-mode-adoption#enabling-concurrent-mode\">Activer le mode concurrent</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-adoption#what-to-expect\">\u00c0 quoi s\u2019attendre\u00a0?</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-adoption#migration-step-blocking-mode\">\u00c9tape de migration\u00a0: le mode bloquant</a></li>\n<li><a href=\"/react/concurrent-mode-adoption#why-so-many-modes\">Pourquoi tant de modes\u00a0?</a></li>\n<li><a href=\"/react/concurrent-mode-adoption#feature-comparison\">Comparaison des fonctionnalit\u00e9s</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"installation\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#installation\"></a>Installation </h2>\n<p>Le mode concurrent est disponible uniquement dans les <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2019/10/22/react-release-channels.html#experimental-channel\">builds exp\u00e9rimentaux</a> de React. Pour les installer, ex\u00e9cutez\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">npm install react@experimental react-dom@experimental</code></pre></div>\n<p><strong>Les builds exp\u00e9rimentaux n\u2019offrent aucune des garanties de la gestion s\u00e9mantique des versions.</strong>  Nous sommes susceptibles d\u2019ajouter, modifier ou retirer des API dans n\u2019importe quelle version <code class=\"language-javascript\">@experimental</code>.</p>\n<p><strong>Les versions exp\u00e9rimentales rompront souvent la compatibilit\u00e9 ascendante.</strong></p>\n<p>Vous pouvez essayer ces builds sur des projets personnels ou dans une branche, mais nous d\u00e9conseillons leur utilisation en production. Chez Facebook, nous les utilisons <em>effectivement</em> en production, mais uniquement parce que nous sommes \u00e0 m\u00eame d\u2019en corriger les bugs imm\u00e9diatement. Vous voil\u00e0 averti\u00b7e\u00a0!</p>\n<h3 id=\"who-is-this-experimental-release-for\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#who-is-this-experimental-release-for\"></a>\u00c0 qui s\u2019adresse cette version exp\u00e9rimentale\u00a0? </h3>\n<p>Cette version est surtout destin\u00e9e aux personnes habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t, aux mainteneurs de biblioth\u00e8ques et, de fa\u00e7on plus g\u00e9n\u00e9rale, aux personnes curieuses.</p>\n<p>Nous utilisons ce code en production (et \u00e7a fonctionne pour nous) mais il reste quelques bugs, des fonctionnalit\u00e9s manquantes, et des lacunes dans la documentation. Nous sommes avides de vos retours sur ce qui casse en mode concurrent, afin que nous puissions mieux le pr\u00e9parer pour sa sortie prochaine au sein d\u2019une version stable.</p>\n<h3 id=\"enabling-concurrent-mode\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#enabling-concurrent-mode\"></a>Activer le mode concurrent </h3>\n<p>En temps normal, quand nous ajoutons des fonctionnalit\u00e9s \u00e0 React, vous pouvez vous en servir imm\u00e9diatement. Les fragments, les Contextes ou m\u00eame les Hooks sont autant d\u2019exemples r\u00e9cents. Vous pouvez les utiliser dans du nouveau code sans avoir \u00e0 changer quoi que ce soit au code existant.</p>\n<p>Il en va diff\u00e9remment pour le mode concurrent. Il introduit des changements s\u00e9mantiques dans le fonctionnement de React. Si ce n\u2019\u00e9tait pas le cas, les <a href=\"/react/concurrent-mode-patterns\">nouvelles fonctionnalit\u00e9s</a> qu\u2019il permet <em>ne seraient pas possibles</em>. C\u2019est pourquoi nous les avons regroup\u00e9es dans un \u00ab\u00a0mode\u00a0\u00bb au lieu de les sortir, une \u00e0 une, en isolation.</p>\n<p>Vous  ne pouvez pas activer le mode concurrent seulement pour une partie de l\u2019arborescence React. Au lieu de \u00e7a, pour l\u2019activer, vous devez le faire \u00e0 l\u2019endroit o\u00f9, aujourd\u2019hui, vous appelez <code class=\"language-javascript\">ReactDOM.render()</code>.</p>\n<p><strong>Voici comment activer le mode concurrent pour toute l\u2019arborescence de <code class=\"language-javascript\">&lt;App /&gt;</code>\u00a0:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Si vous aviez auparavant :</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// ReactDOM.render(&lt;App /&gt;, document.getElementById('root'));</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// Vous pouvez d\u00e9sormais activer le mode concurrent en \u00e9crivant :</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">unstable_createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Les API du mode concurrent, telles que <code class=\"language-javascript\">createRoot</code>, n\u2019existent que dans les builds exp\u00e9rimentaux de React.</p>\n</div>\n<p>En mode concurrent, les m\u00e9thodes de cycle de vie qui \u00e9taient <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">auparavant d\u00e9sign\u00e9es</a> comme \u00ab\u00a0dangereuses\u00a0\u00bb <em>(\u201cunsafe\u201d, NdT)</em> sont <em>effectivement</em> dangereuses, et peuvent entra\u00eener des bugs encore plus souvent que dans le code React habituel. Nous vous d\u00e9conseillons de tester le mode concurrent tant que votre appli n\u2019est pas compatible avec le <a href=\"/react/strict-mode\">mode strict</a>.</p>\n<h2 id=\"what-to-expect\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#what-to-expect\"></a>\u00c0 quoi s\u2019attendre\u00a0? </h2>\n<p>Si vous avez une grosse appli existante, ou si votre appli d\u00e9pend de nombreux modules tiers, ne vous attendez pas \u00e0 pouvoir utiliser le mode concurrent imm\u00e9diatement. <strong>Par exemple, chez Facebook nous utilisons le mode concurrent sur le nouveau site web, mais nous n\u2019avons pas l\u2019intention de l\u2019activer sur l\u2019ancien site.</strong>  C\u2019est parce que notre ancien site utilise encore de nombreuses m\u00e9thodes de cycle de vie class\u00e9es dangereuses, dans son code produit comme dans des biblioth\u00e8ques tierces, ainsi que diverses approches qui ne fonctionnent pas bien avec le mode concurrent.</p>\n<p>L\u2019exp\u00e9rience nous indique que la mani\u00e8re la plus simple de fonctionner en mode concurrent, c\u2019est d\u2019avoir du code qui utilise des approches React idiomatiques et ne repose pas sur des solutions externes de gestion de l\u2019\u00e9tat. Dans les prochaines semaines, nous documenterons s\u00e9par\u00e9ment les probl\u00e8mes courants que nous avons rencontr\u00e9s et leurs solutions.</p>\n<h3 id=\"migration-step-blocking-mode\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#migration-step-blocking-mode\"></a>\u00c9tape de migration\u00a0: le mode bloquant </h3>\n<p>Le mode concurrent est sans doute une fausse bonne id\u00e9e pour les bases de code anciennes. C\u2019est pourquoi nous fournissons aussi un nouveau \u00ab\u00a0mode bloquant\u00a0\u00bb dans nos builds exp\u00e9rimentaux. Vous pouvez l\u2019essayer en rempla\u00e7ant <code class=\"language-javascript\">createRoot</code> par <code class=\"language-javascript\">createBlockingRoot</code>. Il ne fournit qu\u2019un <em>petit sous-ensemble</em> des fonctionnalit\u00e9s du mode concurrent, mais il est plus proche de la fa\u00e7on dont React fonctionne aujourd\u2019hui et peut vous faciliter la transition.</p>\n<p>En r\u00e9sum\u00e9\u00a0:</p>\n<ul>\n<li><strong>Mode historique\u00a0:</strong> <code class=\"language-javascript\">ReactDOM.render(&lt;App /&gt;, rootNode)</code>. C\u2019est le fonctionnement actuel de React. Nous n\u2019avons pas l\u2019intention de retirer le mode historique dans un avenir proche, mais il ne prendra pas en charge ces nouvelles fonctionnalit\u00e9s.</li>\n<li><strong>Mode bloquant\u00a0:</strong> <code class=\"language-javascript\">ReactDOM.createBlockingRoot(rootNode).render(&lt;App /&gt;)</code>. Il est exp\u00e9rimental pour le moment. Il est pens\u00e9 comme une premi\u00e8re \u00e9tape de migration pour les applis qui veulent b\u00e9n\u00e9ficier d\u2019au moins certaines fonctionnalit\u00e9s du mode concurrent.</li>\n<li><strong>Mode concurrent\u00a0:</strong> <code class=\"language-javascript\">ReactDOM.createRoot(rootNode).render(&lt;App /&gt;)</code>. Il est exp\u00e9rimental pour le moment. \u00c0 l\u2019avenir, une fois qu\u2019il sera stabilis\u00e9, nous comptons en faire le mode par d\u00e9faut de React. Ce mode active <em>toutes</em> les nouvelles fonctionnalit\u00e9s.</li>\n</ul>\n<h3 id=\"why-so-many-modes\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#why-so-many-modes\"></a>Pourquoi tant de modes\u00a0? </h3>\n<p>Nous estimons qu\u2019il est pr\u00e9f\u00e9rable de proposer une <a href=\"/react/faq-versioning#commitment-to-stability\">strat\u00e9gie de migration graduelle</a> plut\u00f4t que de faire d\u2019\u00e9normes ruptures de compatibilit\u00e9 ascendante\u2014qui scl\u00e9roseraient React jusqu\u2019\u00e0 le rendre hors-sujet.</p>\n<p>En pratique, nous pensons que la plupart des applis utilisant aujourd\u2019hui le mode historique devraient pouvoir migrer vers au moins le mode bloquant (voire le mode concurrent). Cette fragmentation peut \u00eatre irritante pour les biblioth\u00e8ques qui essaient de prendre en charge l\u2019ensemble des modes sur le court terme. Toutefois, \u00e9loigner progressivement l\u2019\u00e9cosyst\u00e8me du mode historique va aussi <em>r\u00e9soudre</em> des probl\u00e8mes qui affectent des biblioth\u00e8ques de premier plan dans l\u2019\u00e9cosyst\u00e8me React, telles que <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14536\">des comportements d\u00e9routants de Suspense lorsqu\u2019on lit la mise en page</a> et <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/15080\">le manque de garanties stables de traitement par lot</a>. Un certain nombre de bugs ne peuvent pas \u00eatre corrig\u00e9s en mode historique, sans changement de s\u00e9mantique, mais n\u2019existent pas dans les modes bloquant et concurrent.</p>\n<p>Pensez au mode bloquant comme \u00e0 une version en \u00ab\u00a0gracieusement d\u00e9grad\u00e9e\u00a0\u00bb du mode concurrent. <strong>R\u00e9sultat, sur le long terme nous devrions pouvoir converger et totalement cesser de nous pr\u00e9occuper des diff\u00e9rents modes.</strong>  Mais pour le moment, les modes constituent une importante strat\u00e9gie de migration. Ils permettent \u00e0 chacun\u00b7e de d\u00e9cider si la migration vaut le coup, et de r\u00e9aliser la mise \u00e0 jour \u00e0 leur propre rythme.</p>\n<h3 id=\"feature-comparison\"><a class=\"anchor\" href=\"/react/concurrent-mode-adoption#feature-comparison\"></a>Comparaison des fonctionnalit\u00e9s </h3>\n<style>\n  #feature-table table { border-collapse: collapse; }\n  #feature-table th { padding-right: 30px; }\n  #feature-table tr { border-bottom: 1px solid #eee; }\n</style>\n<div id=\"feature-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Mode histo.</th>\n<th>Mode bloquant</th>\n<th>Mode concurrent</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/react/refs-and-the-dom#legacy-api-string-refs\">Refs de type string</a></td>\n<td>\u2705</td>\n<td>\ud83d\udeab**</td>\n<td>\ud83d\udeab**</td>\n</tr>\n<tr>\n<td><a href=\"/react/legacy-context\">API historique de Contexte</a></td>\n<td>\u2705</td>\n<td>\ud83d\udeab**</td>\n<td>\ud83d\udeab**</td>\n</tr>\n<tr>\n<td><a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\"><code class=\"language-javascript\">findDOMNode</code></a></td>\n<td>\u2705</td>\n<td>\ud83d\udeab**</td>\n<td>\ud83d\udeab**</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-suspense#what-is-suspense-exactly\"><code class=\"language-javascript\">Suspense</code></a></td>\n<td>\u2705</td>\n<td>\u2705</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-patterns#suspenselist\"><code class=\"language-javascript\">SuspenseList</code></a></td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td>Suspense c\u00f4t\u00e9 serveur + Hydratation</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td>Hydratation progressive</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td>Hydratation s\u00e9lective</td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td>Multit\u00e2ches coop\u00e9ratif</td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td>Regroupement automatique de multiples <code class=\"language-javascript\">setState</code></td>\n<td>\ud83d\udeab*</td>\n<td>\u2705</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-patterns#splitting-high-and-low-priority-state\">Rendu bas\u00e9 sur priorit\u00e9s</a></td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-intro#interruptible-rendering\">Pr\u00e9rendu interruptible</a></td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-patterns#transitions\"><code class=\"language-javascript\">useTransition</code></a></td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-patterns#deferring-a-value\"><code class=\"language-javascript\">useDeferredValue</code></a></td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n<tr>\n<td><a href=\"/react/concurrent-mode-patterns#suspense-reveal-train\">\u00ab\u00a0Train\u00a0\u00bb de r\u00e9v\u00e9lations de Suspense</a></td>\n<td>\ud83d\udeab</td>\n<td>\ud83d\udeab</td>\n<td>\u2705</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>*\u00a0: le mode historique regroupe automatiquement les \u00e9v\u00e9nements g\u00e9r\u00e9s par React, mais il est limit\u00e9 \u00e0 une t\u00e2che navigateur. Les \u00e9v\u00e9nements non-React doivent le demander explicitement en appelant <code class=\"language-javascript\">unstable_batchedUpdates</code>. Dans les modes bloquant et concurrent, tous les <code class=\"language-javascript\">setState</code>s sont trait\u00e9s par lot par d\u00e9faut.</p>\n<p>**\u00a0: affiche des avertissements en d\u00e9veloppement.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/concurrent-mode-adoption.md\">Edit this page</a></p></div></article>", "path": "/react/concurrent-mode-adoption", "nav": ["/react/concurrent-mode-patterns", "/react/concurrent-mode-reference"]}, {"key": "5. R\u00e9f\u00e9rence de l\u2019API du mode concurrent", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><style>\n.scary > blockquote {\n  background-color: rgba(237, 51, 21, 0.2);\n  border-left-color: #ed3315;\n}\n</style>\n<div class=\"scary\">\n<div class=\"blockquote\">\n<strong>Attention</strong>\n<p>Cette page d\u00e9crit <strong>des fonctionnalit\u00e9s exp\u00e9rimentales qui <a href=\"/react/concurrent-mode-adoption\">ne sont pas encore disponibles</a> dans une version stable</strong>. Ne vous basez pas sur les builds exp\u00e9rimentaux de React pour vos applis en production. Ces fonctionnalit\u00e9s sont susceptibles d\u2019\u00e9voluer de fa\u00e7on significative et sans avertissement avant d\u2019int\u00e9grer officiellement React.</p>\n<p>Cette documentation est destin\u00e9e aux personnes curieuses ou habitu\u00e9es \u00e0 adopter les nouvelles technologies tr\u00e8s t\u00f4t. <strong>Si vous d\u00e9butez en React, ne vous pr\u00e9occupez pas de ces fonctionnalit\u00e9s</strong>\u00a0: vous n\u2019avez pas besoin de les apprendre pour le moment.</p>\n</div>\n</div>\n<p>Cette page est une r\u00e9f\u00e9rence de l\u2019API du <a href=\"/react/concurrent-mode-intro\">mode concurrent</a> de React.  Si vous cherchez plut\u00f4t un guide introductif, jetez un coup d\u2019\u0153il \u00e0 <a href=\"/react/concurrent-mode-patterns\">Approches pour une UI concurrente</a>.</p>\n<p><strong>Remarque\u00a0: ceci est un Aper\u00e7u pour la Communaut\u00e9 et ne constitue pas la version stable finale.  Ces API changeront probablement \u00e0 l\u2019avenir.  Ne les utilisez qu\u2019\u00e0 vos risques et p\u00e9rils\u00a0!</strong></p>\n<ul>\n<li>\n<p><a href=\"/react/concurrent-mode-reference#concurrent-mode\">Activer le mode concurrent</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-reference#createroot\"><code class=\"language-javascript\">createRoot</code></a></li>\n<li><a href=\"/react/concurrent-mode-reference#createblockingroot\"><code class=\"language-javascript\">createBlockingRoot</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/concurrent-mode-reference#suspense\">API de Suspense</a></p>\n<ul>\n<li><a href=\"/react/concurrent-mode-reference#suspensecomponent\"><code class=\"language-javascript\">&lt;Suspense&gt;</code></a></li>\n<li><a href=\"/react/concurrent-mode-reference#suspenselist\"><code class=\"language-javascript\">&lt;SuspenseList&gt;</code></a></li>\n<li><a href=\"/react/concurrent-mode-reference#usetransition\"><code class=\"language-javascript\">useTransition</code></a></li>\n<li><a href=\"/react/concurrent-mode-reference#usedeferredvalue\"><code class=\"language-javascript\">useDeferredValue</code></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"concurrent-mode\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#concurrent-mode\"></a>Activer le mode concurrent </h2>\n<h3 id=\"createroot\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#createroot\"></a><code class=\"language-javascript\">createRoot</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Remplace <code class=\"language-javascript\">ReactDOM.render(&lt;App /&gt;, rootNode)</code> et active le mode concurrent.</p>\n<p>Pour en savoir plus sur le mode concurrent, consultez la <a href=\"/react/concurrent-mode-intro\">documentation du mode concurrent</a>.</p>\n<h3 id=\"createblockingroot\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#createblockingroot\"></a><code class=\"language-javascript\">createBlockingRoot</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createBlockingRoot</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Remplace <code class=\"language-javascript\">ReactDOM.render(&lt;App /&gt;, rootNode)</code> at active le <a href=\"/react/concurrent-mode-adoption#migration-step-blocking-mode\">mode bloquant</a>.</p>\n<p>Choisir le mode concurrent introduit des modifications s\u00e9mantiques dans le fonctionnement de React. \u00c7a signifie que vous ne pouvez pas utiliser le mode concurrent sur seulement certains composants. Pour cette raison, certaines applis risquent de ne pas pouvoir migrer directement vers le mode concurrent.</p>\n<p>Le mode bloquant fournit une petite partie des fonctionnalit\u00e9s du mode concurrent, et constitue une \u00e9tape de migration interm\u00e9diaire pour les applis qui ne peuvent malheureusement pas migrer directement.</p>\n<h2 id=\"suspense\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#suspense\"></a>API de Suspense </h2>\n<h3 id=\"suspensecomponent\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#suspensecomponent\"></a><code class=\"language-javascript\">&lt;Suspense&gt;</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePhoto</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileDetails</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">Suspense</code> permet \u00e0 vos composants \u00ab\u00a0d\u2019attendre\u00a0\u00bb que quelque chose ait lieu avant qu\u2019ils proc\u00e8dent \u00e0 leur rendu, en affichant dans l\u2019intervalle une interface utilisateur (UI) de repli.</p>\n<p>Dans cet example, <code class=\"language-javascript\">ProfileDetails</code> attend qu\u2019un appel API asynchrone charge des donn\u00e9es.  Pendant que nous attendons <code class=\"language-javascript\">ProfileDetails</code> et <code class=\"language-javascript\">ProfilePhoto</code>, nous affichons le repli <code class=\"language-javascript\">Chargement...</code> \u00e0 leur place.  Il faut bien comprendre que jusqu\u2019\u00e0 ce que tous les enfants de <code class=\"language-javascript\">&lt;Suspense&gt;</code> soient charg\u00e9s, nous continuerons \u00e0 afficher l\u2019UI de repli.</p>\n<p><code class=\"language-javascript\">Suspense</code> prend deux props\u00a0:</p>\n<ul>\n<li><strong><code class=\"language-javascript\">fallback</code></strong> fournit un indicateur de chargement.  Cette UI de repli est affich\u00e9e jusqu\u2019\u00e0 ce que les enfants du composant <code class=\"language-javascript\">Suspense</code> aient fini leur rendu.</li>\n<li><strong><code class=\"language-javascript\">unstable_avoidThisFallback</code></strong> prend un bool\u00e9en.  Elle indique \u00e0 React s\u2019il doit \u00ab\u00a0sauter\u00a0\u00bb la r\u00e9v\u00e9lation de cette limite (c\u2019est-\u00e0-dire le comportement d\u2019attente) lors du chargement initial.  Cette API sera probablement retir\u00e9e dans une version \u00e0 venir.</li>\n</ul>\n<h3 id=\"suspenselist\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#suspenselist\"></a><code class=\"language-javascript\">&lt;SuspenseList&gt;</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SuspenseList</span></span> <span class=\"token attr-name\">revealOrder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>forwards<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePicture</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePicture</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Chargement...'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePicture</span></span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  ...\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SuspenseList</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">SuspenseList</code> aide \u00e0 orchestrer la r\u00e9v\u00e9lation progressive de composants susceptibles d\u2019\u00eatre suspendus.</p>\n<p>Lorsque plusieurs composants ont besoin de charger des donn\u00e9es, celles-ci peuvent arriver dans un ordre impr\u00e9visible.  Cependant, si vous enrobez ces \u00e9l\u00e9ments dans un <code class=\"language-javascript\">SuspenseList</code>, React ne montrera un \u00e9l\u00e9ment de la liste qu\u2019une fois que tous les \u00e9l\u00e9ments qui le pr\u00e9c\u00e8dent auront \u00e9t\u00e9 affich\u00e9s (ce comportement est d\u2019ailleurs ajustable).</p>\n<p><code class=\"language-javascript\">SuspenseList</code> prend deux props\u00a0:</p>\n<ul>\n<li>\n<p><strong><code class=\"language-javascript\">revealOrder</code> (<code class=\"language-javascript\">'forwards'</code>, <code class=\"language-javascript\">'backwards'</code>, <code class=\"language-javascript\">'together'</code>)</strong> indique dans quel ordre les enfants de la <code class=\"language-javascript\">SuspenseList</code> doivent \u00eatre r\u00e9v\u00e9l\u00e9s.</p>\n<ul>\n<li><code class=\"language-javascript\">'together'</code> les r\u00e9v\u00e8le <em>tous</em> d\u2019un coup une fois qu\u2019ils sont pr\u00eats, au lieu de le faire individuellement.</li>\n</ul>\n</li>\n<li>\n<p><strong><code class=\"language-javascript\">tail</code> (<code class=\"language-javascript\">'collapsed'</code>, <code class=\"language-javascript\">'hidden'</code>)</strong> indique comment afficher les \u00e9l\u00e9ments non charg\u00e9s dans une <code class=\"language-javascript\">SuspenseList</code>.</p>\n<ul>\n<li>Par d\u00e9faut, <code class=\"language-javascript\">SuspenseList</code> affichera toutes les UI de repli dans la liste.</li>\n<li><code class=\"language-javascript\">'collapsed'</code> affiche uniquement le repli du prochain \u00e9l\u00e9ment dans la liste.</li>\n<li><code class=\"language-javascript\">'hidden'</code> n\u2019affiche aucun \u00e9l\u00e9ment non charg\u00e9.</li>\n</ul>\n</li>\n</ul>\n<p>Remarquez que <code class=\"language-javascript\">SuspenseList</code> n\u2019op\u00e8re que sur les composants enfants <code class=\"language-javascript\">Suspense</code> et <code class=\"language-javascript\">SuspenseList</code> les plus proches d\u2019elle. Elle ne recherche pas les p\u00e9rim\u00e8tres \u00e0 plus d\u2019un niveau de profondeur.  Ceci dit, il est possible d\u2019imbriquer plusieurs composants <code class=\"language-javascript\">SuspenseList</code> pour construire des grilles.</p>\n<h3 id=\"usetransition\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#usetransition\"></a><code class=\"language-javascript\">useTransition</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SUSPENSE_CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SUSPENSE_CONFIG</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useTransition</code> permet aux composants d\u2019\u00e9viter des \u00e9tats de chargement ind\u00e9sirables en attendant que le contenu soit charg\u00e9 avant de <strong>transiter vers le prochain \u00e9cran</strong>.  Il permet aussi aux composants de diff\u00e9rer des chargements de donn\u00e9es plus lents vers des rendus ult\u00e9rieurs afin que les mises \u00e0 jour les plus cruciales puissent \u00eatre affich\u00e9es imm\u00e9diatement.</p>\n<p>Le hook <code class=\"language-javascript\">useTransition</code> renvoie deux valeurs dans un tableau.</p>\n<ul>\n<li><code class=\"language-javascript\">startTransition</code> est une fonction qui prend une fonction de rappel.  Nous pouvons l\u2019utiliser pour indiquer \u00e0 React quel \u00e9tat nous souhaitons diff\u00e9rer.</li>\n<li><code class=\"language-javascript\">isPending</code> est un bool\u00e9en, gr\u00e2ce auquel React nous indique si nous sommes en train d\u2019attendre la fin de la transition.</li>\n</ul>\n<p><strong>Si une mise \u00e0 jour donn\u00e9e de l\u2019\u00e9tat entra\u00eene la suspension d\u2019un composant, cette mise \u00e0 jour devrait \u00eatre enrob\u00e9e dans une transition.</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SUSPENSE_CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">,</span> setResource<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>startTransition<span class=\"token punctuation\">,</span> isPending<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SUSPENSE_CONFIG</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isPending<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> nextUserId <span class=\"token operator\">=</span> <span class=\"token function\">getNextId</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchProfileData</span><span class=\"token punctuation\">(</span>nextUserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Suivant\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">?</span> <span class=\"token string\">\" Chargement...\"</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>resource<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans ce code, nous avons enrob\u00e9 notre chargement de donn\u00e9es avec <code class=\"language-javascript\">startTransition</code>.  \u00c7a nous permet de commencer imm\u00e9diatement \u00e0 charger les donn\u00e9es du profil, tout en diff\u00e9rant le rendu de la prochaine page de profil et de son <code class=\"language-javascript\">Spinner</code> associ\u00e9 pendant 2 secondes (le temps indiqu\u00e9 par <code class=\"language-javascript\">timeoutMs</code>).</p>\n<p>Le bool\u00e9en <code class=\"language-javascript\">isPending</code> est fourni par React pour nous indiquer que notre composant est en cours de transition, ce qui nous permet d\u2019avertir l\u2019utilisateur en affichant un texte de chargement au sein de la pr\u00e9c\u00e9dente page de profil.</p>\n<p><strong>Pour une exploration en profondeur des transitions, vous pouvez lire les <a href=\"/react/concurrent-mode-patterns#transitions\">Approches pour une UI concurrente</a>.</strong></p>\n<h4 id=\"usetransition-config\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#usetransition-config\"></a>Configuration de <code class=\"language-javascript\">useTransition</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SUSPENSE_CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useTransition</code> accepte une <strong>configuration Suspense optionnelle</strong> avec un champ <code class=\"language-javascript\">timeoutMs</code>.  Ce d\u00e9lai d\u2019expiration (en millisecondes) indique \u00e0 React combien de temps attendre avant d\u2019afficher le prochain \u00e9tat (dans l\u2019exemple ci avant, ce serait la prochaine page de profil).</p>\n<p><strong>Remarque\u00a0: nous vous conseillons de partager une unique configuration Suspense entre vos diff\u00e9rents modules.</strong></p>\n<h3 id=\"usedeferredvalue\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#usedeferredvalue\"></a><code class=\"language-javascript\">useDeferredValue</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> deferredValue <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Renvoie une version diff\u00e9r\u00e9e de la valeur qui est susceptible d\u2019\u00eatre \u00ab\u00a0en retard\u00a0\u00bb pour un temps maximum de <code class=\"language-javascript\">timeoutMs</code>.</p>\n<p>On utilise couramment \u00e7a pour pr\u00e9server la r\u00e9activit\u00e9 de l\u2019interface, avec des affichages imm\u00e9diats suite \u00e0 des saisies par l\u2019utilisateur\u00b7rice malgr\u00e9 le besoin d\u2019attendre un chargement de donn\u00e9es.</p>\n<p>La saisie de texte constitue un bon exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> setText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bonjour\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> deferredText <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Continue \u00e0 passer le texte actuel au champ */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      ...\n      </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Mais la liste des r\u00e9sultats est autoris\u00e9e \u00e0 \u00ab \u00eatre en retard \u00bb si n\u00e9cessaire */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySlowList</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>deferredText<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c7a nous permet de commencer \u00e0 afficher le nouveau texte du <code class=\"language-javascript\">input</code> imm\u00e9diatement, ce qui donne un sentiment de r\u00e9activit\u00e9 pour la page web.  Dans le m\u00eame temps, la mise \u00e0 jour de <code class=\"language-javascript\">MySlowList</code> peut \u00ab\u00a0retarder\u00a0\u00bb \u00e0 hauteur de 2 secondes en vertu du <code class=\"language-javascript\">timeoutMs</code>, ce qui lui permet de r\u00e9aliser son rendu adapt\u00e9 au texte courant en arri\u00e8re-plan.</p>\n<p><strong>Vous trouverez une exploration en profondeur des valeurs diff\u00e9r\u00e9s dans les <a href=\"/react/concurrent-mode-patterns#deferring-a-value\">Approches pour une UI concurrente</a>.</strong></p>\n<h4 id=\"usedeferredvalue-config\"><a class=\"anchor\" href=\"/react/concurrent-mode-reference#usedeferredvalue-config\"></a>Configuration de <code class=\"language-javascript\">useDeferredValue</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SUSPENSE_CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> timeoutMs<span class=\"token operator\">:</span> <span class=\"token number\">2000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useDeferredValue</code> accepte une <strong>configuration Suspense optionnelle</strong> avec un champ <code class=\"language-javascript\">timeoutMs</code>.  Ce d\u00e9lai d\u2019expiration (en millisecondes) indique \u00e0 React pendant combien de temps la valeur diff\u00e9r\u00e9e est autoris\u00e9e \u00e0 retarder.</p>\n<p>React essaiera toujours de minimiser le retard lorsque le r\u00e9seau et l\u2019appareil le permettent.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/concurrent-mode-reference.md\">Edit this page</a></p></div></article>", "path": "/react/concurrent-mode-reference", "nav": ["/react/concurrent-mode-adoption", "/react/how-to-contribute"]}]}, {"key": "Contribuer", "values": [{"key": "Comment contribuer", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React est l\u2019un des premiers projets open source de Facebook qui est \u00e0 la fois en d\u00e9veloppement intensif et utilis\u00e9 en production sur les pages publiques de <a class=\"external-link\" href=\"https://www.facebook.com\">facebook.com</a>. Nous travaillons encore \u00e0 faire qu\u2019il soit aussi facile et transparent que possible de contribuer \u00e0 ce projet, et ce chantier n\u2019est pas termin\u00e9. Mais avec un peu de chance, ce document \u00e9claircira le processus de contribution et r\u00e9pondra \u00e0 certaines des questions que vous pourriez avoir.</p>\n<h3 id=\"code-of-conduct\"><a class=\"anchor\" href=\"/react/how-to-contribute#code-of-conduct\"></a><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/master/CODE_OF_CONDUCT.md\">Code de conduite</a> </h3>\n<p>Facebook a adopt\u00e9 le code de conduite <a class=\"external-link\" href=\"https://www.contributor-covenant.org/\">Contributor Covenant</a> et nous nous attendons \u00e0 ce que les participant\u00b7e\u00b7s au projet y adh\u00e8rent. Veuillez lire <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/master/CODE_OF_CONDUCT.md\">le texte complet</a> afin de comprendre quelles actions seront ou ne seront pas tol\u00e9r\u00e9es.</p>\n<h3 id=\"open-development\"><a class=\"anchor\" href=\"/react/how-to-contribute#open-development\"></a>D\u00e9veloppement ouvert </h3>\n<p>Tout travail sur React se passe directement sur <a class=\"external-link\" href=\"https://github.com/facebook/react\">GitHub</a>. Les membres de l\u2019\u00e9quipe noyau <em>(core team, NdT)</em> tout comme les contributeurs externes y envoient leur <em>pull requests</em>, lesquelles passent \u00e0 travers le m\u00eame processus de revue.</p>\n<h3 id=\"semantic-versioning\"><a class=\"anchor\" href=\"/react/how-to-contribute#semantic-versioning\"></a>Gestion s\u00e9mantique des versions </h3>\n<p>React utilise une <a class=\"external-link\" href=\"https://semver.org/\">gestion s\u00e9mantique de version</a>. Nous publions des versions de correctifs pour les corrections de bugs critiques, des versions mineures pour les nouvelles fonctionnalit\u00e9s et les modifications non-essentielles, et des versions majeures s\u2019il y a rupture de la compatibilit\u00e9 ascendante. Quand nous introduisons de telles ruptures, nous ajoutons aussi des avertissements de d\u00e9pr\u00e9ciation dans une version mineure afin que nos utilisateur\u00b7rice\u00b7s puissent se familiariser avec les changements \u00e0 venir et migrer leur code en amont.  Vous pouvez en apprendre davantage sur notre engagement en termes de stabilit\u00e9 et de migration incr\u00e9mentielle dans notre <a href=\"/react/faq-versioning\">politique de gestion des versions</a>.</p>\n<p>Toute modification substancielle est document\u00e9e dans le <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/master/CHANGELOG.md\">journal des modifications</a>.</p>\n<h3 id=\"branch-organization\"><a class=\"anchor\" href=\"/react/how-to-contribute#branch-organization\"></a>Organisation des branches </h3>\n<p>D\u00e9posez toutes vos modifications directement sur la <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master\">branche <code class=\"language-javascript\">master</code></a>.  Nous n\u2019utilisons pas de branches s\u00e9par\u00e9es pour le d\u00e9veloppement et pour les versions \u00e0 venir.  Nous faisons de notre mieux pour garder la branche <code class=\"language-javascript\">master</code> en bon \u00e9tat, avec des tests toujours au vert.</p>\n<p>Le code qui atterrit dans <code class=\"language-javascript\">master</code> doit \u00eatre compatible avec la derni\u00e8re version stable.  Il peut contenir de nouvelles fonctionnalit\u00e9s, mais pas de rupture de compatibilit\u00e9 ascendante.  Nous devrions pouvoir sortir une version mineure \u00e0 partir de la pointe de <code class=\"language-javascript\">master</code> \u00e0 tout moment.</p>\n<h3 id=\"feature-flags\"><a class=\"anchor\" href=\"/react/how-to-contribute#feature-flags\"></a>Fonctionnalit\u00e9s condtionnelles </h3>\n<p>Afin de conserver la branche <code class=\"language-javascript\">master</code> dans un \u00e9tat sortable, les ruptures de compatibilit\u00e9 ascendante et les fonctionnalit\u00e9s exp\u00e9rimentales doivent \u00eatre prot\u00e9g\u00e9es par un drapeau de fonctionnalit\u00e9 conditionnelle.</p>\n<p>Ces drapeaux sont d\u00e9finis dans <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/master/packages/shared/ReactFeatureFlags.js\"><code class=\"language-javascript\">packages/shared/ReactFeatureFlags.js</code></a>.  D\u2018une version de React \u00e0 l\u2019autre, des jeux de fonctionnalit\u00e9s conditionnelles distincts sont susceptibles d\u2019\u00eatre utilis\u00e9s\u00a0; par exemple, React Native peut \u00eatre configur\u00e9 diff\u00e9remment de React DOM.  Ces variations sont signal\u00e9es dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/shared/forks\"><code class=\"language-javascript\">packages/shared/forks</code></a>. Les drapeaux de fonctionnalit\u00e9s conditionnelles sont g\u00e9n\u00e9ralement typ\u00e9s par Flow, de sorte que vous pouvez ex\u00e9cuter <code class=\"language-javascript\">yarn flow</code> pour confirmer que vous avez mis \u00e0 jour tous les fichiers n\u00e9cessaires.</p>\n<p>Le syst\u00e8me de construction de React retirera toutes les branches fonctionnelles d\u00e9sactiv\u00e9es avant publication.  Une routine d\u2019int\u00e9gration continue est ex\u00e9cut\u00e9e \u00e0 chaque commit pour auditer les \u00e9volutions de la taille du <em>bundle</em>.  Vous pouvez utiliser ces changements de taille comme confirmation que votre fonctionnalit\u00e9 a bien \u00e9t\u00e9 p\u00e9rim\u00e9tr\u00e9e.</p>\n<h3 id=\"bugs\"><a class=\"anchor\" href=\"/react/how-to-contribute#bugs\"></a>Bugs </h3>\n<h4 id=\"where-to-find-known-issues\"><a class=\"anchor\" href=\"/react/how-to-contribute#where-to-find-known-issues\"></a>O\u00f9 trouver les probl\u00e8mes connus </h4>\n<p>Nous utilisons les <a class=\"external-link\" href=\"https://github.com/facebook/react/issues\">GitHub Issues</a> pour les bugs publics. Nous les surveillons attentivement et essayons d\u2019\u00eatre transparents sur le d\u00e9veloppement en cours d\u2019un correctif interne. Avant de cr\u00e9er un nouveau ticket, essayez de v\u00e9rifier que votre probl\u00e8me n\u2019a pas d\u00e9j\u00e0 \u00e9t\u00e9 signal\u00e9.</p>\n<h4 id=\"reporting-new-issues\"><a class=\"anchor\" href=\"/react/how-to-contribute#reporting-new-issues\"></a>Signaler de nouveaux probl\u00e8mes </h4>\n<p>Le meilleur moyen d\u2019obtenir un correctif pour votre probl\u00e8me consiste \u00e0 en fournir une reproduction minimale. Cet <a class=\"external-link\" href=\"https://jsfiddle.net/Luktwrdm/\">exemple JSFiddle</a> est un excellent point de d\u00e9part.</p>\n<h4 id=\"security-bugs\"><a class=\"anchor\" href=\"/react/how-to-contribute#security-bugs\"></a>Probl\u00e8mes de s\u00e9curit\u00e9 </h4>\n<p>Facebook a un <a class=\"external-link\" href=\"https://www.facebook.com/whitehat/\">programme de r\u00e9compenses</a> pour la communication s\u00e9curis\u00e9e de probl\u00e8mes de s\u00e9curit\u00e9. En cons\u00e9quence, merci de ne pas cr\u00e9er de ticket public pour \u00e7a\u00a0: suivez le processus expliqu\u00e9 sur la page du programme.</p>\n<h3 id=\"how-to-get-in-touch\"><a class=\"anchor\" href=\"/react/how-to-contribute#how-to-get-in-touch\"></a>Comment nous contacter </h3>\n<ul>\n<li>IRC\u00a0: <a class=\"external-link\" href=\"https://webchat.freenode.net/?channels=reactjs\">#reactjs sur freenode</a></li>\n<li><a class=\"external-link\" href=\"https://fr.reactjs.org//community/support.html#popular-discussion-forums\">Forums de discussion</a></li>\n</ul>\n<p>Au cas o\u00f9 vous auriez besoin d\u2019aide avec React, il existe aussi <a class=\"external-link\" href=\"https://www.reactiflux.com/\">une communaut\u00e9 active d\u2019utilisateurs de React sur la plate-forme de discussion Discord</a>.</p>\n<h3 id=\"proposing-a-change\"><a class=\"anchor\" href=\"/react/how-to-contribute#proposing-a-change\"></a>Proposer un changement </h3>\n<p>Si vous comptez proposer un changement de l\u2019API publique ou faire un changement non trivial \u00e0 l\u2019impl\u00e9mentation, nous recommandons de <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">cr\u00e9er un ticket</a>. \u00c7a nous permettra de nous mettre d\u2019accord sur votre proposition avant que vous n\u2019y investissiez un effort trop important.</p>\n<p>Si vous corrigez seulement un bug, il est tout \u00e0 fait acceptable d\u2019envoyer directement une <em>pull request</em>, mais nous conseillons tout de m\u00eame de cr\u00e9er d\u2019abord un ticket d\u00e9taillant ce que vous corrigez. C\u2019est utile pour le cas o\u00f9 nous n\u2019accepterions pas ce correctif sp\u00e9cifique mais souhaiterions garder une trace du probl\u00e8me.</p>\n<h3 id=\"your-first-pull-request\"><a class=\"anchor\" href=\"/react/how-to-contribute#your-first-pull-request\"></a>Votre premi\u00e8re <em>pull request</em> </h3>\n<p>Vous travaillez sur votre premi\u00e8re <em>pull request</em>\u00a0? Vous pouvez apprendre comment faire \u00e7a au mieux gr\u00e2ce \u00e0 cette s\u00e9rie de vid\u00e9os gratuites (en anglais)\u00a0:</p>\n<p><strong><a class=\"external-link\" href=\"https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github\">Comment contribuer \u00e0 un projet open source sur GitHub</a></strong></p>\n<p>Pour vous aider \u00e0 vous jeter \u00e0 l\u2019eau et vous familiariser avec le processus de contribution, nous avons une liste de <strong><a class=\"external-link\" href=\"https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22good+first+issue%22\">bons premiers tickets</a></strong> qui contient des bugs d\u2019\u00e9tendue relativement limit\u00e9e.\nC\u2019est un excellent point de d\u00e9part.</p>\n<p>Si vous d\u00e9cidez de corriger un bug, assurez-vous de v\u00e9rifier le fil de commentaires au cas o\u00f9 quelqu\u2019un serait d\u00e9j\u00e0 en train de travailler dessus. Si personne n\u2019est dessus, veuillez laisser un commentaire indiquant que vous comptez vous y attaquer pour \u00e9viter que d\u2019autres personnes ne dupliquent votre travail par accident.</p>\n<p>Si quelqu\u2019un dit travailler sur un correctif mais ne donne pas de nouvelle pendant deux semaines, vous pouvez prendre la rel\u00e8ve, mais vous devriez tout de m\u00eame laisser un commentaire dans ce sens.</p>\n<h3 id=\"sending-a-pull-request\"><a class=\"anchor\" href=\"/react/how-to-contribute#sending-a-pull-request\"></a>Envoyer une <em>pull request</em> </h3>\n<p>L\u2019\u00e9quipe noyau surveille les <em>pull requests</em>. Nous ferons une revue de la v\u00f4tre et soit nous la fusionnerons, soit nous vous demanderons des ajustements, soit nous la fermerons en expliquant pourquoi. Pour les changements d\u2019API, nous aurons peut-\u00eatre besoin d\u2019ajuster notre utilisation interne \u00e0 facebook.com, ce qui pourrait retarder la fusion. Nous ferons cependant de notre mieux pour vous tenir inform\u00e9\u00b7e tout au long du processus.</p>\n<p><strong>Avant d\u2019envoyer une <em>pull request</em>,</strong> suivez attentivement ces instructions\u00a0:</p>\n<ol>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/fork\">Forkez le d\u00e9p\u00f4t</a> et cr\u00e9ez votre branche depuis <code class=\"language-javascript\">master</code>.</li>\n<li>Lancez <code class=\"language-javascript\">yarn</code>  \u00e0 la racine du d\u00e9p\u00f4t.</li>\n<li>Si vous avez corrig\u00e9 un bug ou ajout\u00e9 du code qui devrait \u00eatre test\u00e9, ajoutez les tests\u00a0!</li>\n<li>Assurez-vous que tous les tests passent (<code class=\"language-javascript\">yarn test</code>). Astuce\u00a0: <code class=\"language-javascript\">yarn test --watch NomDuTest</code> est tr\u00e8s utile en phase de d\u00e9veloppement.</li>\n<li>Lancez <code class=\"language-javascript\">yarn test-prod</code> pour tester dans l\u2019environnement de production. Cette commande accepte les m\u00eame options que <code class=\"language-javascript\">yarn test</code>.</li>\n<li>Si vous avez besoin d\u2019un d\u00e9bogueur, lancez <code class=\"language-javascript\">yarn debug-test --watch NomDuTest</code>, ouvrez <code class=\"language-javascript\">chrome://inspect</code>, et appuyez sur \u00ab\u00a0Inspecter\u00a0\u00bb.</li>\n<li>Formattez votre code avec <a class=\"external-link\" href=\"https://github.com/prettier/prettier\">prettier</a> (<code class=\"language-javascript\">yarn prettier</code>).</li>\n<li>Assurez-vous que votre code passe la v\u00e9rification du <em>linter</em> (<code class=\"language-javascript\">yarn lint</code>). Astuce\u00a0: <code class=\"language-javascript\">yarn linc</code> ne v\u00e9rifiera que les fichiers qui ont chang\u00e9.</li>\n<li>Lancez les v\u00e9rifications de types <a class=\"external-link\" href=\"https://flowtype.org/\">Flow</a> (<code class=\"language-javascript\">yarn flow</code>).</li>\n<li>Si vous ne l\u2019avez pas encore fait, remplissez le CLA (voir ci-dessous).</li>\n</ol>\n<h3 id=\"contributor-license-agreement-cla\"><a class=\"anchor\" href=\"/react/how-to-contribute#contributor-license-agreement-cla\"></a>Accord de licence de contribution (CLA) </h3>\n<p>Afin que nous puissions accepter votre <em>pull request</em>, nous avons besoin que vous remplissiez un CLA <em>(Contributor License Agreement, NdT)</em>. Vous n\u2019avez besoin de faire \u00e7a qu\u2019une seule fois, donc si vous l\u2019avez d\u00e9j\u00e0 fait pour un autre projet open source de Facebook, tout va bien. Si vous envoyez une <em>pull request</em> pour la premi\u00e8re fois, dites-nous simplement que vous avez d\u00e9j\u00e0 rempli le CLA et nous pourrons le v\u00e9rifier sur base de votre identifiant GitHub.</p>\n<p><strong><a class=\"external-link\" href=\"https://code.facebook.com/cla\">Remplissez votre CLA ici.</a></strong></p>\n<h3 id=\"contribution-prerequisites\"><a class=\"anchor\" href=\"/react/how-to-contribute#contribution-prerequisites\"></a>Pr\u00e9-requis pour contribuer </h3>\n<ul>\n<li>Vous avez <a class=\"external-link\" href=\"https://nodejs.org\">Node</a> install\u00e9 en v8.0.0+ et <a class=\"external-link\" href=\"https://yarnpkg.com/en/\">Yarn</a> en v1.2.0+.</li>\n<li>Vous avez le <a class=\"external-link\" href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> install\u00e9.</li>\n<li>Vous avez <code class=\"language-javascript\">gcc</code> install\u00e9 ou \u00eates \u00e0 l\u2019aise avec le fait d\u2019installer un compilateur si besoin. Certaines de nos d\u00e9pendances peuvent n\u00e9cessiter une \u00e9tape de compilation. Sur OS X, les outils de ligne de commande XCode s\u2019en occupent. Sur Ubuntu, <code class=\"language-javascript\">apt-get install build-essential</code> installera les paquets n\u00e9cessaires. Des commandes similaires devraient fonctionner pour d\u2019autres distributions Linux. Windows n\u00e9cessite quelques \u00e9tapes suppl\u00e9mentaires, consultez les <a class=\"external-link\" href=\"https://github.com/nodejs/node-gyp#installation\">instructions d\u2019installation de <code class=\"language-javascript\">node-gyp</code></a> pour plus de d\u00e9tails.</li>\n<li>Vous \u00eates \u00e0 l\u2019aise avec Git</li>\n</ul>\n<h3 id=\"development-workflow\"><a class=\"anchor\" href=\"/react/how-to-contribute#development-workflow\"></a>Workflow de d\u00e9veloppement  </h3>\n<p>Apr\u00e8s avoir clon\u00e9 votre fork de React, lancez <code class=\"language-javascript\">yarn</code> afin d\u2019aller chercher les d\u00e9pendances du projet.\nEnsuite, vous pouvez lancer diff\u00e9rentes commandes\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">yarn lint</code> pour v\u00e9rifier le style du code.</li>\n<li><code class=\"language-javascript\">yarn linc</code> fonctionne comme <code class=\"language-javascript\">yarn lint</code> mais va plus vite car elle ne v\u00e9rifie que les fichiers qui ont chang\u00e9 sur votre branche.</li>\n<li><code class=\"language-javascript\">yarn test</code> lance la suite de tests compl\u00e8te.</li>\n<li><code class=\"language-javascript\">yarn test --watch</code> lance un superviseur interactif de tests.</li>\n<li><code class=\"language-javascript\">yarn test &lt;motif&gt;</code> lance les tests des fichiers dont le nom correspond au motif.</li>\n<li><code class=\"language-javascript\">yarn test-prod</code> lance les tests dans l\u2019environnement de production. Elle accepte toutes les m\u00eames options que <code class=\"language-javascript\">yarn test</code>.</li>\n<li><code class=\"language-javascript\">yarn debug-test</code> fonctionne exactement comme <code class=\"language-javascript\">yarn test</code> mais avec un d\u00e9bogueur. Ouvrez <code class=\"language-javascript\">chrome://inspect</code> et appuyez sur \u00ab\u00a0Inspecter\u00a0\u00bb.</li>\n<li><code class=\"language-javascript\">yarn flow</code> lance les v\u00e9rifications de types <a class=\"external-link\" href=\"https://flowtype.org/\">Flow</a>.</li>\n<li><code class=\"language-javascript\">yarn build</code> cr\u00e9e un dossier <code class=\"language-javascript\">build</code> avec tous les modules.</li>\n<li><code class=\"language-javascript\">yarn build react/index,react-dom/index --type=UMD</code> cr\u00e9e des <em>builds</em> UMD seulement des modules indiqu\u00e9s, ici React et ReactDOM.</li>\n</ul>\n<p>Nous recommandons d\u2019utiliser <code class=\"language-javascript\">yarn test</code> (ou ses variations mentionn\u00e9es ci-dessus) pour vous assurer de ne pas introduire de r\u00e9gressions en travaillant sur votre contribution. Cependant, il peut \u00eatre pratique d\u2019essayer votre build de React dans un vrai projet.</p>\n<p>Tout d\u2019abord, lancez <code class=\"language-javascript\">yarn build</code>. \u00c7a produira des <em>bundles</em> pr\u00e9-compil\u00e9s dans le dossier <code class=\"language-javascript\">build</code>, et pr\u00e9parera les modules npm dans <code class=\"language-javascript\">build/packages</code>.</p>\n<p>La mani\u00e8re la plus simple d\u2019essayer vos modifications consiste \u00e0 lancer <code class=\"language-javascript\">yarn build react/index,react-dom/index --type=UMD</code> et ensuite ouvrir <code class=\"language-javascript\">fixtures/packaging/babel-standalone/dev.html</code>. Ce fichier utilise d\u00e9j\u00e0 <code class=\"language-javascript\">react.development.js</code> depuis le dossier <code class=\"language-javascript\">build</code>, donc il utilisera vos \u00e9volutions.</p>\n<p>Si vous voulez essayer vos \u00e9volutions dans votre projet React existant, vous pouvez copier <code class=\"language-javascript\">build/dist/react.development.js</code>, <code class=\"language-javascript\">build/dist/react-dom.development.js</code>, ou tout autre produit de la compilation dans votre appli et les utiliser au lieu de la version stable.</p>\n<p>Si votre projet utilise React via npm, vous pouvez supprimer <code class=\"language-javascript\">react</code> et <code class=\"language-javascript\">react-dom</code> dans ses d\u00e9pendances et utiliser <code class=\"language-javascript\">yarn link</code> pour les faire pointer vers votre dossier local <code class=\"language-javascript\">build</code>. Remarquez qu\u2019<strong>au lieu de <code class=\"language-javascript\">--type=UMD</code> vous voudrez plut\u00f4t passer <code class=\"language-javascript\">--type=NODE</code> \u00e0 la construction</strong>. Vous aurez aussi besoin du module <code class=\"language-javascript\">scheduler</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-sh\"><code class=\"language-javascript\">cd ~/chemin_vers_votre_clone_de_react/\nyarn build react/index,react-dom/index,scheduler --type=NODE\n\ncd build/node_modules/react\nyarn link\ncd build/node_modules/react-dom\nyarn link\n\ncd ~/chemin/vers/votre/projet\nyarn link react react-dom</code></pre></div>\n<p>Chaque fois que vous lancez <code class=\"language-javascript\">yarn build</code> dans le dossier de React, les versions mises \u00e0 jour appara\u00eetront dans le dossier <code class=\"language-javascript\">node_modules</code> de votre projet. Vous pouvez alors recompiler votre projet pour essayer vos modifications.</p>\n<p>Si un module reste manquant (par ex. peut-\u00eatre utilisez-vous <code class=\"language-javascript\">react-dom/server</code> dans votre projet), vous pouvez toujours faire une construction int\u00e9grale avec <code class=\"language-javascript\">yarn build</code>.  Gardez \u00e0 l\u2019esprit que l\u2019ex\u00e9cution de <code class=\"language-javascript\">yarn build</code> sans options prend beaucoup de temps.</p>\n<p>Nous exigeons tout de m\u00eame que votre <em>pull request</em> contienne des tests unitaires pour chaque nouvelle fonctionnalit\u00e9. Ainsi nous pouvons nous assurer de ne pas casser votre code par la suite.</p>\n<h3 id=\"style-guide\"><a class=\"anchor\" href=\"/react/how-to-contribute#style-guide\"></a>Guide de style </h3>\n<p>Nous utilisons un outil de formatage automatique appel\u00e9 <a class=\"external-link\" href=\"https://prettier.io/\">Prettier</a>.\nLancez <code class=\"language-javascript\">yarn prettier</code> apr\u00e8s avoir chang\u00e9 le code.</p>\n<p>Ensuite, notre <em>linter</em> rep\u00e8rera la plupart des probl\u00e8mes qui pourraient exister dans votre code.\nVous pouvez v\u00e9rifier l\u2019\u00e9tat du style de votre code simplement en lan\u00e7ant <code class=\"language-javascript\">yarn linc</code>.</p>\n<p>Cependant, il y a toujours certains styles que le <em>linter</em> ne peut pas remarquer. Si vous n\u2019\u00eates pas s\u00fbr\u00b7e de votre coup, laissez-vous guider par le <a class=\"external-link\" href=\"https://github.com/airbnb/javascript\">Guide de style de Airbnb</a>.</p>\n<h3 id=\"request-for-comments-rfc\"><a class=\"anchor\" href=\"/react/how-to-contribute#request-for-comments-rfc\"></a>Appels \u00e0 commentaires (RFC) </h3>\n<p>Beaucoup de modifications, y compris les correctifs de bugs et les am\u00e9liorations de la documentation, peuvent \u00eatre impl\u00e9ment\u00e9s et revus via le workflow normal de <em>pull requests</em> sur GitHub.</p>\n<p>Certaines \u00e9volutions sont cependant plus \u00ab\u00a0substantielles\u00a0\u00bb, et nous demandons \u00e0 ce que celles-ci passent par une petite phase de conception afin d\u2019obtenir un consensus au sein de l\u2019\u00e9quipe noyau de React.</p>\n<p>Le processus de \u00ab\u00a0RFC\u00a0\u00bb <em>(Request For Comments, NdT)</em> a pour but de fournir un chemin contr\u00f4l\u00e9 et coh\u00e9rent pour l\u2019introduction de nouvelles fonctionnalit\u00e9s dans le projet. Vous pouvez apporter votre contribution en consultant le <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">d\u00e9p\u00f4t des RFC</a>.</p>\n<h3 id=\"license\"><a class=\"anchor\" href=\"/react/how-to-contribute#license\"></a>Licence </h3>\n<p>En contribuant \u00e0 React, vous acceptez que toute contribution que vous apportez soit licenci\u00e9e sous la licence MIT.</p>\n<h3 id=\"what-next\"><a class=\"anchor\" href=\"/react/how-to-contribute#what-next\"></a>Et maintenant\u00a0? </h3>\n<p>Lisez la <a href=\"/react/codebase-overview\">page suivante</a> pour apprendre comment la base de code est organis\u00e9e.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/how-to-contribute.md\">Edit this page</a></p></div></article>", "path": "/react/how-to-contribute", "nav": ["/react/concurrent-mode-reference", "/react/codebase-overview"]}, {"key": "Aper\u00e7u du code source", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Cette section vous donne un aper\u00e7u de l\u2019organisation du code source de React, de ses conventions et de son impl\u00e9mentation.</p>\n<p>Si vous souhaitez <a href=\"/react/how-to-contribute\">contribuer \u00e0 React</a>, nous esp\u00e9rons que ce guide vous aidera \u00e0 vous sentir plus \u00e0 l\u2019aise pour apporter des modifications.</p>\n<p>Nous ne recommandons pas n\u00e9cessairement ces conventions dans les applications React. Nombre d\u2019entre elles existent pour des raisons historiques et sont susceptibles d\u2019\u00e9voluer avec le temps.</p>\n<h3 id=\"top-level-folders\"><a class=\"anchor\" href=\"/react/codebase-overview#top-level-folders\"></a>Dossiers racines </h3>\n<p>Apr\u00e8s avoir clon\u00e9 le <a class=\"external-link\" href=\"https://github.com/facebook/react\">d\u00e9p\u00f4t React</a>, vous verrez quelques dossiers racines\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages\"><code class=\"language-javascript\">packages</code></a> contient des m\u00e9tadonn\u00e9es (telles que <code class=\"language-javascript\">package.json</code>) et le code source (sous-r\u00e9pertoire <code class=\"language-javascript\">src</code>) de tous les paquets du d\u00e9p\u00f4t React. <strong>Si votre modification est li\u00e9e au code, vous passerez le plus clair de votre temps dans le sous-r\u00e9pertoire <code class=\"language-javascript\">src</code> des diff\u00e9rents paquets.</strong></li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/fixtures\"><code class=\"language-javascript\">fixtures</code></a> contient quelques petites applications React de test pour les contributeurs.</li>\n<li><code class=\"language-javascript\">build</code> est la sortie de construction de React. Il ne figure pas dans le d\u00e9p\u00f4t, mais il appara\u00eetra dans votre clone de React apr\u00e8s que vous <a href=\"/react/how-to-contribute#development-workflow\">l\u2019aurez construit</a> pour la premi\u00e8re fois.</li>\n</ul>\n<p>La documentation est h\u00e9berg\u00e9e <a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org\">dans un d\u00e9p\u00f4t distinct de React</a>.</p>\n<p>Il existe quelques autres dossiers racines, mais ils sont principalement utilis\u00e9s par l\u2019outillage et vous n\u2019aurez probablement jamais affaire \u00e0 eux lorsque vous contribuerez.</p>\n<h3 id=\"colocated-tests\"><a class=\"anchor\" href=\"/react/codebase-overview#colocated-tests\"></a>Tests colocalis\u00e9s </h3>\n<p>Nous n\u2019avons pas de r\u00e9pertoire racine pour les tests unitaires. Nous les pla\u00e7ons plut\u00f4t dans un r\u00e9pertoire appel\u00e9 <code class=\"language-javascript\">__tests__</code> situ\u00e9 \u00e0 c\u00f4t\u00e9 des fichiers qu\u2019ils testent.</p>\n<p>Par exemple, un test pour <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/setInnerHTML.js\"><code class=\"language-javascript\">setInnerHTML.js</code></a> sera plac\u00e9 juste \u00e0 c\u00f4t\u00e9, dans <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js\"><code class=\"language-javascript\">__tests__/setInnerHTML-test.js</code></a>.</p>\n<h3 id=\"warnings-and-invariants\"><a class=\"anchor\" href=\"/react/codebase-overview#warnings-and-invariants\"></a>Avertissements et invariants </h3>\n<p>Le code source de React utilise <code class=\"language-javascript\">console.error</code> pour afficher les avertissements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Il y a un souci.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les avertissements ne sont activ\u00e9s que dans la phase de d\u00e9veloppement. En production, ils sont compl\u00e8tement retir\u00e9s du code. Si vous avez besoin d\u2019interdire l\u2019ex\u00e9cution d\u2019une partie de code, utilisez plut\u00f4t le module <code class=\"language-javascript\">invariant</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> invariant <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invariant'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">invariant</span><span class=\"token punctuation\">(</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Vous ne passerez pas !'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>L\u2019invariant est lev\u00e9 lorsque la condition de <code class=\"language-javascript\">invariant</code> est <code class=\"language-javascript\">false</code>.</strong></p>\n<p>Le terme \u00ab\u00a0invariant\u00a0\u00bb signifie simplement \u00ab\u00a0cette condition est toujours vraie\u00a0\u00bb. Vous pouvez voir \u00e7a comme une affirmation.</p>\n<p>Pour les invariants, il est important d\u2019avoir un comportement similaire en d\u00e9veloppement et en production, afin qu\u2019ils soient lev\u00e9s dans les deux cas. Les messages d\u2019erreur sont automatiquement remplac\u00e9s par des codes d\u2019erreur en production afin d\u2019\u00e9viter toute incidence n\u00e9gative sur la taille (en octets) du fichier.</p>\n<h3 id=\"development-and-production\"><a class=\"anchor\" href=\"/react/codebase-overview#development-and-production\"></a>D\u00e9veloppement et production </h3>\n<p>Vous pouvez utiliser la variable pseudo-globale <code class=\"language-javascript\">__DEV__</code> dans le code source pour d\u00e9limiter les blocs de code r\u00e9serv\u00e9s au d\u00e9veloppement.</p>\n<p>La variable est remplac\u00e9e lors de la compilation et se transforme en contr\u00f4les <code class=\"language-javascript\">process.env.NODE_ENV !== 'production'</code> dans les <em>builds</em> CommonJS.</p>\n<p>Pour les versions autonomes, la variable devient <code class=\"language-javascript\">true</code> dans la version non-minifi\u00e9e du fichier produit, alors qu\u2019elle est compl\u00e8tement effac\u00e9e, ainsi que les blocs <code class=\"language-javascript\">if</code> qu\u2019elle contr\u00f4le, dans la version minifi\u00e9e.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Ce code va uniquement s\u2019appliquer pendant le d\u00e9veloppement.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"flow\"><a class=\"anchor\" href=\"/react/codebase-overview#flow\"></a>Flow </h3>\n<p>Nous avons r\u00e9cemment commenc\u00e9 \u00e0 introduire des contr\u00f4les <a class=\"external-link\" href=\"https://flow.org/\">Flow</a> dans le code source. Les fichiers marqu\u00e9s avec l\u2019annotation <code class=\"language-javascript\">@flow</code> dans le commentaire d\u2019en-t\u00eate de licence sont soumis \u00e0 v\u00e9rification.</p>\n<p>Nous acceptons les <em>pull requests</em> <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/7600/files\">qui ajoutent des annotations Flow au code existant</a>. Les annotations Flow ressemblent \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactRef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">detachRefs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">instance<span class=\"token operator\">:</span> ReactInstance<span class=\"token punctuation\">,</span>\n  element<span class=\"token operator\">:</span> ReactElement <span class=\"token operator\">|</span> string <span class=\"token operator\">|</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans la mesure du possible, le nouveau code devrait utiliser des annotations Flow.\nVous pouvez ex\u00e9cuter <code class=\"language-javascript\">yarn flow</code> localement pour v\u00e9rifier votre code avec Flow.</p>\n<h3 id=\"multiple-packages\"><a class=\"anchor\" href=\"/react/codebase-overview#multiple-packages\"></a>Plusieurs paquets </h3>\n<p>React est un <a class=\"external-link\" href=\"https://danluu.com/monorepo/\">monorepo</a>. Son d\u00e9p\u00f4t contient plusieurs paquets distincts afin que leurs modifications puissent \u00eatre coordonn\u00e9es et que les probl\u00e8mes puissent \u00eatre signal\u00e9s dans un seul et m\u00eame endroit.</p>\n<h3 id=\"react-core\"><a class=\"anchor\" href=\"/react/codebase-overview#react-core\"></a>Le noyau de React </h3>\n<p>Le \u00ab\u00a0noyau\u00a0\u00bb de React inclut toutes les <a href=\"/react/top-level-api#react\">API <code class=\"language-javascript\">React</code> de niveau racine</a>, par exemple\u00a0:</p>\n<ul>\n<li><code class=\"language-javascript\">React.createElement()</code></li>\n<li><code class=\"language-javascript\">React.Component</code></li>\n<li><code class=\"language-javascript\">React.Children</code></li>\n</ul>\n<p><strong>Le noyau React n\u2019inclut que les API n\u00e9cessaires \u00e0 la d\u00e9finition des composants.</strong>  Il n\u2019inclut pas l\u2019algorithme de <a href=\"/react/reconciliation\">r\u00e9conciliation</a> ni aucun code sp\u00e9cifique \u00e0 une plate-forme. Il est utilis\u00e9 \u00e0 la fois par les composants de React DOM et de React Native.</p>\n<p>Le code pour le noyau React se trouve dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react\"><code class=\"language-javascript\">packages/react</code></a> au sein de l\u2019arborescence source. Il est disponible sur npm via le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/react\"><code class=\"language-javascript\">react</code></a>. La version autonome correspondante pour l\u2019utilisation \u00e0 m\u00eame le navigateur est appel\u00e9e <code class=\"language-javascript\">react.js</code>, et exporte une variable globale appel\u00e9e <code class=\"language-javascript\">React</code>.</p>\n<h3 id=\"renderers\"><a class=\"anchor\" href=\"/react/codebase-overview#renderers\"></a>Moteurs de rendu </h3>\n<p>React a \u00e9t\u00e9 cr\u00e9\u00e9 \u00e0 l\u2019origine pour le DOM, mais il a ensuite \u00e9t\u00e9 adapt\u00e9 pour prendre \u00e9galement en charge les plates-formes natives avec <a class=\"external-link\" href=\"https://react-native.dev/\">React Native</a>. C\u2019est ainsi qu\u2019est n\u00e9 le concept de \u00ab\u00a0moteurs de rendu\u00a0\u00bb <em>(renderers, terme que nous utiliserons sans italiques dans la suite de ce texte, NdT)</em> au sein de React.</p>\n<p><strong>Les renderers g\u00e8rent la transformation d\u2019une arborescence React en appels \u00e0 la plate-forme sous-jacente.</strong></p>\n<p>Les renderers sont \u00e9galement situ\u00e9s dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/\"><code class=\"language-javascript\">packages/</code></a>\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-dom\">Le renderer de React DOM</a> retranscrit les composants React dans le DOM. Il impl\u00e9mente <a href=\"/react/react-dom\">les API <code class=\"language-javascript\">ReactDOM</code> racines</a> et est disponible via le module npm <a class=\"external-link\" href=\"https://www.npmjs.com/package/react-dom\"><code class=\"language-javascript\">react-dom</code></a>. Il peut aussi \u00eatre utilis\u00e9 en tant que <em>bundle</em> autonome dans le navigateur, lequel est nomm\u00e9 <code class=\"language-javascript\">react-dom.js</code> et exporte une variable globale <code class=\"language-javascript\">ReactDOM</code>.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-native-renderer\">Le renderer de React Native</a> retranscrit les composants React sous forme de vues natives. Il est utilis\u00e9 en interne par React Native.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-test-renderer\">Le renderer de test de React</a> retranscrit les composants React sous forme d\u2019arbres JSON. Il est utilis\u00e9 par la fonctionnalit\u00e9 d\u2019<a class=\"external-link\" href=\"https://facebook.github.io/jest/blog/2016/07/27/jest-14.html\">instantan\u00e9s</a> <em>(snapshots, NdT)</em> de <a class=\"external-link\" href=\"https://facebook.github.io/jest\">Jest</a> et est disponible via le module npm <a class=\"external-link\" href=\"https://www.npmjs.com/package/react-test-renderer\">react-test-renderer</a>.</li>\n</ul>\n<p>Le seul autre moteur de rendu officiellement pris en charge est <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-art\"><code class=\"language-javascript\">react-art</code></a>. Auparavant, il se trouvait dans un <a class=\"external-link\" href=\"https://github.com/reactjs/react-art\">d\u00e9p\u00f4t GitHub</a> s\u00e9par\u00e9, mais nous l\u2019avons d\u00e9plac\u00e9 dans l\u2019arborescence source principale pour le moment.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Techniquement, le <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-native-renderer\"><code class=\"language-javascript\">react-native-renderer</code></a> est une couche tr\u00e8s mince qui apprend \u00e0 React \u00e0 interagir avec l\u2019impl\u00e9mentation de React Native.  Le v\u00e9ritable code sp\u00e9cifique \u00e0 la plate-forme, qui g\u00e8re les vues natives et fournit les composants, r\u00e9side quant \u00e0 lui dans le <a class=\"external-link\" href=\"https://github.com/facebook/react-native\">d\u00e9p\u00f4t React Native</a>.</p>\n</div>\n<h3 id=\"reconcilers\"><a class=\"anchor\" href=\"/react/codebase-overview#reconcilers\"></a>R\u00e9conciliateurs </h3>\n<p>M\u00eame des moteurs de rendu tr\u00e8s diff\u00e9rents comme React DOM et React Native doivent partager beaucoup de logique. En particulier, l\u2019algorithme de <a href=\"/react/reconciliation\">r\u00e9conciliation</a> doit \u00eatre aussi similaire que possible afin que le rendu d\u00e9claratif, les composants personnalis\u00e9s, l\u2019\u00e9tat local, les m\u00e9thodes de cycle de vie et les refs fonctionnent de mani\u00e8re coh\u00e9rente sur toutes les plates-formes prises en charge.</p>\n<p>Pour r\u00e9soudre ce probl\u00e8me, diff\u00e9rents moteurs de rendu partagent du code entre eux. Nous appelons cette partie de React un \u00ab\u00a0r\u00e9conciliateur\u00a0\u00bb. Lorsqu\u2019une mise \u00e0 jour telle que <code class=\"language-javascript\">setState()</code> est planifi\u00e9e, le r\u00e9conciliateur appelle <code class=\"language-javascript\">render()</code> sur les composants de l\u2019arborescence et les monte, les met \u00e0 jour ou les d\u00e9monte.</p>\n<p>Les r\u00e9conciliateurs ne font pas l\u2019objet de modules s\u00e9par\u00e9s, car ils ne disposent actuellement d\u2019aucune API publique. Ils sont exclusivement utilis\u00e9s par les moteurs de rendu tels que React DOM et React Native.</p>\n<h3 id=\"stack-reconciler\"><a class=\"anchor\" href=\"/react/codebase-overview#stack-reconciler\"></a>R\u00e9conciliateur Stack </h3>\n<p>Le r\u00e9conciliateur <em>\u201cstack\u201d</em> est l\u2019impl\u00e9mentation qui sous-tend React 15 et les versions ant\u00e9rieures. Nous avons depuis cess\u00e9 de l\u2019utiliser, mais il reste d\u00e9crit en d\u00e9tail dans la <a href=\"/react/implementation-notes\">prochaine page</a>.</p>\n<h3 id=\"fiber-reconciler\"><a class=\"anchor\" href=\"/react/codebase-overview#fiber-reconciler\"></a>R\u00e9conciliateur Fiber </h3>\n<p>Le r\u00e9conciliateur <em>\u201cfiber\u201d</em> repr\u00e9sente une nouvelle tentative de r\u00e9soudre les probl\u00e8mes inh\u00e9rents au r\u00e9conciliateur \u201cstack\u201d en plus de quelques probl\u00e8mes anciens. C\u2019est le r\u00e9conciliateur par d\u00e9faut depuis React 16.</p>\n<p>Ses objectifs principaux sont\u00a0:</p>\n<ul>\n<li>la capacit\u00e9 \u00e0 diviser un travail interruptible en segments\u00a0;</li>\n<li>la capacit\u00e9 \u00e0 hi\u00e9rarchiser, d\u00e9placer et r\u00e9utiliser des travaux en cours\u00a0;</li>\n<li>la capacit\u00e9 \u00e0 jongler entre parents et enfants pour ex\u00e9cuter une mise en page avec React\u00a0;</li>\n<li>la capacit\u00e9 \u00e0 renvoyer plusieurs \u00e9l\u00e9ments depuis <code class=\"language-javascript\">render()</code>\u00a0;</li>\n<li>une meilleure prise en charge des p\u00e9rim\u00e8tres d\u2019erreur.</li>\n</ul>\n<p>Vous pouvez en apprendre davantage sur l\u2019architecture React Fiber <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">ici</a> et <a class=\"external-link\" href=\"https://blog.ag-grid.com/inside-fiber-an-in-depth-overview-of-the-new-reconciliation-algorithm-in-react\">ici</a>. Bien qu\u2019elles soient livr\u00e9es avec React 16, les fonctionnalit\u00e9s asynchrones ne sont pas encore activ\u00e9es par d\u00e9faut.</p>\n<p>Son code source est situ\u00e9 dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-reconciler\"><code class=\"language-javascript\">packages/react-reconciler</code></a>.</p>\n<h3 id=\"event-system\"><a class=\"anchor\" href=\"/react/codebase-overview#event-system\"></a>Syst\u00e8me d\u2019\u00e9v\u00e9nements </h3>\n<p>React impl\u00e9mente une abstraction par-dessus les \u00e9v\u00e9nements natifs afin de lisser les disparit\u00e9s d\u2019un navigateur \u00e0 l\u2019autre. Son code source se trouve dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/master/packages/react-dom/src/events\"><code class=\"language-javascript\">packages/react-dom/src/events</code></a>.</p>\n<h3 id=\"what-next\"><a class=\"anchor\" href=\"/react/codebase-overview#what-next\"></a>Et maintenant\u00a0? </h3>\n<p>Lisez la <a href=\"/react/implementation-notes\">prochaine page</a> pour en apprendre davantage sur l\u2019impl\u00e9mentation du r\u00e9conciliateur utilis\u00e9 avant React 16. Nous n\u2019avons pas encore document\u00e9 les d\u00e9tails internes d\u2019impl\u00e9mentation du nouveau r\u00e9conciliateur.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/codebase-overview.md\">Edit this page</a></p></div></article>", "path": "/react/codebase-overview", "nav": ["/react/how-to-contribute", "/react/implementation-notes"]}, {"key": "Notes d\u2019impl\u00e9mentation", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Cette section fournit un ensemble de notes relatives \u00e0 l\u2019impl\u00e9mentation du <a href=\"/react/codebase-overview#stack-reconciler\">r\u00e9conciliateur <em>\u201cstack\u201d</em></a>.</p>\n<p>C\u2019est tr\u00e8s technique et suppose une solide compr\u00e9hension de l\u2019API publique de React ainsi que de sa structure divis\u00e9e en noyau, moteurs de rendu et r\u00e9conciliateur. Si vous ne connaissez pas bien la base de code React, lisez d\u2019abord l\u2019<a href=\"/react/codebase-overview\">aper\u00e7u du code source</a>.</p>\n<p>\u00c7a suppose \u00e9galement de comprendre les <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2015/12/18/react-components-elements-and-instances.html\">diff\u00e9rences entre les composants React, leurs instances et leurs \u00e9l\u00e9ments</a>.</p>\n<p>Le r\u00e9conciliateur <em>\u201cstack\u201d</em> \u00e9tait utilis\u00e9 jusqu\u2019\u00e0 React 15 inclus. Il se trouve dans <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/15-stable/src/renderers/shared/stack/reconciler\">src/renderers/shared/stack/reconciler</a>.</p>\n<h3 id=\"video-building-react-from-scratch\"><a class=\"anchor\" href=\"/react/implementation-notes#video-building-react-from-scratch\"></a>Vid\u00e9o\u00a0:\u00a0construire React \u00e0 partir de z\u00e9ro </h3>\n<p><a class=\"external-link\" href=\"https://twitter.com/zpao\">Paul O\u2019Shannessy</a> a donn\u00e9 une conf\u00e9rence (en anglais) sur la <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=_MAD4Oly9yg\">construction de React \u00e0 partir de z\u00e9ro</a> qui a largement inspir\u00e9 ce document.</p>\n<p>Ce document et sa conf\u00e9rence sont des simplifications de la v\u00e9ritable base de code\u00a0: en vous familiarisant avec ces deux sources, vous devriez mieux comprendre.</p>\n<h3 id=\"overview\"><a class=\"anchor\" href=\"/react/implementation-notes#overview\"></a>Aper\u00e7u </h3>\n<p>Le r\u00e9conciliateur lui-m\u00eame n\u2019a pas d\u2019API publique. Les <a href=\"/react/codebase-overview#renderers\">moteurs de rendu</a> comme React DOM et React Native l\u2019utilisent pour mettre \u00e0 jour efficacement l\u2019interface utilisateur en fonction des composants React \u00e9crits par l\u2019utilisateur.</p>\n<h3 id=\"mounting-as-a-recursive-process\"><a class=\"anchor\" href=\"/react/implementation-notes#mounting-as-a-recursive-process\"></a>Le montage, un processus r\u00e9cursif </h3>\n<p>Int\u00e9ressons-nous \u00e0 la premi\u00e8re fois que vous montez un composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>React DOM passera <code class=\"language-javascript\">&lt;App /&gt;</code> au r\u00e9conciliateur. Rappelez-vous que <code class=\"language-javascript\">&lt;App /&gt;</code> est un \u00e9l\u00e9ment React, c\u2019est-\u00e0-dire une description de <em>quoi</em> afficher. Vous pouvez le consid\u00e9rer comme un simple objet\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: App, props: {} }</span></code></pre></div>\n<p>Le r\u00e9conciliateur v\u00e9rifiera si <code class=\"language-javascript\">App</code> est une classe ou une fonction.</p>\n<p>Si <code class=\"language-javascript\">App</code> est une fonction, le r\u00e9conciliateur appellera <code class=\"language-javascript\">App(props)</code> pour obtenir le rendu de l\u2019\u00e9l\u00e9ment associ\u00e9.</p>\n<p>Si <code class=\"language-javascript\">App</code> est une classe, le r\u00e9conciliateur instanciera une <code class=\"language-javascript\">App</code> avec <code class=\"language-javascript\">new App(props)</code>, appellera la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentWillMount()</code>, puis appellera la m\u00e9thode <code class=\"language-javascript\">render()</code> pour obtenir le rendu de l\u2019\u00e9l\u00e9ment.</p>\n<p>Dans les deux cas, le r\u00e9conciliateur saura quel \u00e9l\u00e9ment \u00ab\u00a0a \u00e9t\u00e9 produit par le rendu\u00a0\u00bb de <code class=\"language-javascript\">App</code>.</p>\n<p>Ce processus est r\u00e9cursif. Le rendu de <code class=\"language-javascript\">App</code> peut produire un <code class=\"language-javascript\">&lt;Greeting /&gt;</code>, celui de <code class=\"language-javascript\">Greeting</code> peut produire un <code class=\"language-javascript\">&lt;Button /&gt;</code>, et ainsi de suite. Le r\u00e9conciliateur \u00ab\u00a0creusera\u00a0\u00bb r\u00e9cursivement dans les composants d\u00e9finis par l\u2019utilisateur, et saura ainsi ce que produit le rendu de chacun.</p>\n<p>Vous pouvez imaginer ce processus comme un pseudo-code\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Les sous-classes de React.Component ont ce drapeau</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>isReactComponent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Cette fonction prend en param\u00e8tre un \u00e9l\u00e9ment React (par exemple &lt;App /&gt;)</span>\n<span class=\"token comment\">// et renvoie un n\u0153ud DOM ou natif repr\u00e9sentant l\u2019arbre mont\u00e9.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Nous d\u00e9terminerons l\u2019\u00e9l\u00e9ment rendu</span>\n  <span class=\"token comment\">// soit en ex\u00e9cutant le type comme une fonction</span>\n  <span class=\"token comment\">// soit en cr\u00e9ant une instance puis en appelant render().</span>\n  <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composant bas\u00e9 classe</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Initialise les props</span>\n    publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Appelle le cycle de vie si besoin</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Obtient l\u2019\u00e9l\u00e9ment rendu en appelant render()</span>\n    renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Fonction composant</span>\n    renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Ce processus est r\u00e9cursif parce qu\u2019un composant peut</span>\n  <span class=\"token comment\">// renvoyer un \u00e9l\u00e9ment avec un autre type de composant.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Remarque : cette impl\u00e9mentation est incompl\u00e8te et la r\u00e9cursivit\u00e9 est infinie !</span>\n  <span class=\"token comment\">// \u00c7a g\u00e8re uniquement les \u00e9l\u00e9ments comme &lt;App /&gt; ou &lt;Button /&gt;.</span>\n  <span class=\"token comment\">// \u00c7a ne g\u00e8re pas pour l\u2019instant les \u00e9l\u00e9ments comme &lt;div /&gt; ou &lt;p /&gt;.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootEl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>C\u2019est <em>vraiment</em> du pseudo-code. L\u2019impl\u00e9mentation actuelle diff\u00e8re pas mal. Ce code saturerait la pile car nous n\u2019avons pas pr\u00e9cis\u00e9 de condition d\u2019arr\u00eat pour la r\u00e9cursivit\u00e9.</p>\n</div>\n<p>R\u00e9capitulons quelques id\u00e9es cl\u00e9s dans l\u2019exemple ci-dessus\u00a0:</p>\n<ul>\n<li>Les \u00e9l\u00e9ments React sont des objets simples repr\u00e9sentant le type du composant (par exemple <code class=\"language-javascript\">App</code>) et les props.</li>\n<li>Les composants d\u00e9finis par l\u2019utilisateur (par exemple <code class=\"language-javascript\">App</code>) peuvent \u00eatre des classes ou des fonctions mais toutes \u00ab\u00a0font un rendu\u00a0\u00bb avec des \u00e9l\u00e9ments comme r\u00e9sultat.</li>\n<li>Le \u00ab\u00a0montage\u00a0\u00bb est un processus r\u00e9cursif qui cr\u00e9e un arbre DOM ou natif \u00e0 partir de l\u2019\u00e9l\u00e9ment racine React (par exemple <code class=\"language-javascript\">&lt;App /&gt;</code>).</li>\n</ul>\n<h3 id=\"mounting-host-elements\"><a class=\"anchor\" href=\"/react/implementation-notes#mounting-host-elements\"></a>Montage d\u2019\u00e9l\u00e9ments h\u00f4tes </h3>\n<p>Ce processus serait inutile si nous n\u2019affichions pas quelque chose \u00e0 l\u2019\u00e9cran au final.</p>\n<p>En plus des composants d\u00e9finis par l\u2019utilisateur (\u00ab\u00a0composites\u00a0\u00bb), les \u00e9l\u00e9ments React peuvent \u00e9galement repr\u00e9senter des composants pour des plates-formes sp\u00e9cifiques (\u00ab\u00a0h\u00f4tes\u00a0\u00bb). Par exemple, la m\u00e9thode de rendu de <code class=\"language-javascript\">Button</code> pourrait renvoyer une <code class=\"language-javascript\">&lt;div /&gt;</code>.</p>\n<p>Si la propri\u00e9t\u00e9 <code class=\"language-javascript\">type</code> de l\u2019\u00e9l\u00e9ment est une cha\u00eene de caract\u00e8res, il s\u2019agit d\u2019un \u00e9l\u00e9ment h\u00f4te\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: 'div', props: {} }</span></code></pre></div>\n<p>Il n\u2019y a aucun code d\u00e9fini par l\u2019utilisateur associ\u00e9 aux \u00e9l\u00e9ments h\u00f4tes.</p>\n<p>Lorsque le r\u00e9conciliateur rencontre un \u00e9l\u00e9ment h\u00f4te, il laisse le moteur de rendu s\u2019occuper du montage. Par exemple, React DOM cr\u00e9erait un n\u0153ud DOM.</p>\n<p>Si l\u2019\u00e9l\u00e9ment h\u00f4te a des enfants, le r\u00e9conciliateur les monte de mani\u00e8re r\u00e9cursive en suivant le m\u00eame algorithme que celui d\u00e9crit plus haut. Peu importe que les enfants soient h\u00f4tes (comme <code class=\"language-javascript\">&lt;div&gt;&lt;hr /&gt;&lt;/div&gt;</code>), composites (comme <code class=\"language-javascript\">&lt;div&gt;&lt;Button /&gt;&lt;/div&gt;</code>) ou un m\u00e9lange des deux.</p>\n<p>Les n\u0153uds DOM produits par les composants enfants seront ajout\u00e9s au n\u0153ud DOM parent, et donc de mani\u00e8re r\u00e9cursive, l\u2019ensemble de la structure DOM sera constitu\u00e9e.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Le r\u00e9conciliateur lui-m\u00eame n\u2019est pas li\u00e9 au DOM. Le r\u00e9sultat exact du montage (parfois appel\u00e9 <em>\u201cmount image\u201d</em> dans le code source) d\u00e9pend du moteur de rendu, et donc peut \u00eatre un n\u0153ud DOM (React DOM), une cha\u00eene de caract\u00e8res (React DOM Server) ou un nombre repr\u00e9sentant une vue native (React Native).</p>\n</div>\n<p>Si nous devions \u00e9tendre le code pour g\u00e9rer des \u00e9l\u00e9ments h\u00f4tes, il ressemblerait \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Les sous-classes de React.Component ont ce drapeau</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>isReactComponent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Cette fonction g\u00e8re uniquement les \u00e9l\u00e9ments avec un type composite.</span>\n<span class=\"token comment\">// Par exemple, elle g\u00e8re &lt;App /&gt; et &lt;Button /&gt;, mais pas une &lt;div /&gt;.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mountComposite</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composant bas\u00e9 classe</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Initialise les props</span>\n    publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Appelle le cycle de vie si besoin</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Fonction composant</span>\n    renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// C\u2019est r\u00e9cursif mais nous atteindrons finalement le bas de la r\u00e9cursion lorsque</span>\n  <span class=\"token comment\">// l\u2019\u00e9l\u00e9ment sera h\u00f4te (par exemple &lt;div /&gt;) au lieu de composite (par exemple &lt;App /&gt;) :</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Cette fonction g\u00e8re uniquement les \u00e9l\u00e9ments avec un type h\u00f4te.</span>\n<span class=\"token comment\">// Par exemple, il g\u00e8re &lt;div /&gt; et &lt;p /&gt;, mais pas un &lt;App /&gt;.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mountHost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    children <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>children<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  children <span class=\"token operator\">=</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Ce bloc de code ne devrait pas \u00eatre dans le r\u00e9conciliateur.</span>\n  <span class=\"token comment\">// Les diff\u00e9rents moteurs de rendu peuvent initialiser les n\u0153uds diff\u00e9remment.</span>\n  <span class=\"token comment\">// Par exemple, React Native cr\u00e9e des vues iOS ou Android.</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Monte les enfants</span>\n  children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">childElement</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// L\u2019enfant peut \u00eatre h\u00f4te (par exemple &lt;div /&gt;) ou composite (par exemple &lt;Button /&gt;).</span>\n    <span class=\"token comment\">// Nous les monterons \u00e9galement de mani\u00e8re r\u00e9cursive :</span>\n    <span class=\"token keyword\">var</span> childNode <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>childElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Cette ligne de code est \u00e9galement sp\u00e9cifique au moteur de rendu.</span>\n    <span class=\"token comment\">// Ce serait diff\u00e9rent en fonction du moteur de rendu :</span>\n    node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Renvoie le n\u0153ud DOM comme r\u00e9sultat de montage.</span>\n  <span class=\"token comment\">// C\u2019est ici que se termine la r\u00e9cursion.</span>\n  <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composants d\u00e9finis par l\u2019utilisateur</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">mountComposite</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composants sp\u00e9cifiques aux plates-formes</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">mountHost</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootEl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c7a fonctionne mais \u00e7a reste loin de la mani\u00e8re dont le r\u00e9conciliateur est r\u00e9ellement impl\u00e9ment\u00e9. L\u2019ingr\u00e9dient cl\u00e9 manquant est la prise en charge des mises \u00e0 jour.</p>\n<h3 id=\"introducing-internal-instances\"><a class=\"anchor\" href=\"/react/implementation-notes#introducing-internal-instances\"></a>Voici venir les instances internes </h3>\n<p>La principale caract\u00e9ristique de React est que vous pouvez refaire tout le rendu sans recr\u00e9er le DOM ni r\u00e9initialiser l\u2019\u00e9tat\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Devrait r\u00e9utiliser le DOM existant :</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cependant, notre impl\u00e9mentation ci-dessus sait uniquement monter l\u2019arbre initial. Elle ne peut pas effectuer de mises \u00e0 jour dans l\u2019arborescence car elle ne stocke pas toutes les informations n\u00e9cessaires, telles que toutes les r\u00e9f\u00e9rences <code class=\"language-javascript\">publicInstance</code> ou les n\u0153uds DOM qui correspondent aux composants.</p>\n<p>La base de code du r\u00e9conciliateur <em>\u201cstack\u201d</em> r\u00e9sout ce probl\u00e8me en faisant de la fonction <code class=\"language-javascript\">mount()</code> une m\u00e9thode au sein d\u2019une classe. Cette approche pr\u00e9sente des inconv\u00e9nients et nous allons dans la direction oppos\u00e9e pour la <a href=\"/react/codebase-overview#fiber-reconciler\">r\u00e9\u00e9criture en cours du r\u00e9conciliateur</a>. Cependant, voici comment \u00e7a fonctionne dans le r\u00e9conciliateur historique.</p>\n<p>Plut\u00f4t que deux fonctions distinctes <code class=\"language-javascript\">mountHost</code> et <code class=\"language-javascript\">mountComposite</code>, nous cr\u00e9erons deux classes\u00a0: <code class=\"language-javascript\">DOMComponent</code> et <code class=\"language-javascript\">CompositeComponent</code>.</p>\n<p>Les deux classes ont un constructeur acceptant <code class=\"language-javascript\">element</code>, ainsi qu\u2019une m\u00e9thode <code class=\"language-javascript\">mount()</code> qui renvoie le n\u0153ud mont\u00e9. Nous remplacerons la fonction racine <code class=\"language-javascript\">mount()</code> par une fabrique <em>(factory, NdT)</em> qui instanciera la bonne classe\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composants d\u00e9finis par l\u2019utilisateur</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompositeComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Composants sp\u00e9cifiques aux plates-formes</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Tout d\u2019abord, examinons l\u2019impl\u00e9mentation de <code class=\"language-javascript\">CompositeComponent</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Pour les composants composites, exposons l\u2019instance de la classe.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Composant bas\u00e9 classe</span>\n      publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Initialise les props</span>\n      publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Appelle le cycle de vie si besoin</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Fonction composant</span>\n      publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Sauvegarde l\u2019instance publique</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Construit l\u2019instance interne de l\u2019enfant en fonction de l\u2019\u00e9l\u00e9ment.</span>\n    <span class=\"token comment\">// Ce sera un DOMComponent pour &lt;div /&gt; ou &lt;p /&gt;,</span>\n    <span class=\"token comment\">// et un CompositeComponent pour &lt;App /&gt; ou &lt;Button /&gt; :</span>\n    <span class=\"token keyword\">var</span> renderedComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> renderedComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Monte le r\u00e9sultat du rendu</span>\n    <span class=\"token keyword\">return</span> renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ce n\u2019est pas tr\u00e8s diff\u00e9rent de notre impl\u00e9mentation pr\u00e9c\u00e9dente de <code class=\"language-javascript\">mountComposite()</code>, mais maintenant, nous pouvons sauver certaines informations, telles que <code class=\"language-javascript\">this.currentElement</code>, <code class=\"language-javascript\">this.renderedComponent</code> et <code class=\"language-javascript\">this.publicInstance</code>, pour les utiliser lors des mises \u00e0 jour d\u2019\u00e9l\u00e9ments.</p>\n<p>Remarquez qu\u2019une instance de <code class=\"language-javascript\">CompositeComponent</code> n\u2019est pas la m\u00eame chose qu\u2019une instance du <code class=\"language-javascript\">element.type</code> fourni par l\u2019utilisateur. <code class=\"language-javascript\">CompositeComponent</code> est un d\u00e9tail d\u2019impl\u00e9mentation de notre r\u00e9conciliateur et n\u2019est jamais expos\u00e9 \u00e0 l\u2019utilisateur. La classe d\u00e9finie par l\u2019utilisateur est celle que nous avons lue dans <code class=\"language-javascript\">element.type</code>, et <code class=\"language-javascript\">CompositeComponent</code> cr\u00e9e une instance de celle-ci.</p>\n<p>Pour \u00e9viter toute confusion, nous appellerons les instances de <code class=\"language-javascript\">CompositeComponent</code> et <code class=\"language-javascript\">DOMComponent</code> des \u00ab\u00a0instances internes\u00a0\u00bb. Elles existent pour nous permettre de leur associer des donn\u00e9es durables. Seuls le moteur de rendu et le r\u00e9conciliateur s\u2019en servent.</p>\n<p>En revanche, nous appelons une instance de classe d\u00e9finie par l\u2019utilisateur \u00ab\u00a0instance publique\u00a0\u00bb. L\u2019instance publique, c\u2019est ce que vous voyez comme <code class=\"language-javascript\">this</code> dans <code class=\"language-javascript\">render()</code> et les autres m\u00e9thodes de vos composants personnalis\u00e9s.</p>\n<p>La fonction <code class=\"language-javascript\">mountHost()</code> a \u00e9t\u00e9 refactoris\u00e9e pour devenir la m\u00e9thode <code class=\"language-javascript\">mount()</code> dans la classe <code class=\"language-javascript\">DOMComponent</code>, et son code a des airs familiers\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Pour les composants DOM, expose uniquement le n\u0153ud du DOM.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      children <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>children<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Cr\u00e9e et sauvegarde le n\u0153ud</span>\n    <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Initialise les attributs</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Cr\u00e9e et sauvegarde les enfants contenus.</span>\n    <span class=\"token comment\">// Chacun d\u2019eux peut \u00eatre un DOMComponent ou un CompositeComponent,</span>\n    <span class=\"token comment\">// selon que le type de l\u2019\u00e9l\u00e9ment est une cha\u00eene de caract\u00e8res ou une fonction.</span>\n    <span class=\"token keyword\">var</span> renderedChildren <span class=\"token operator\">=</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>instantiateComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> renderedChildren<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Collecte les n\u0153uds DOM qui sont renvoy\u00e9s lors du montage</span>\n    <span class=\"token keyword\">var</span> childNodes <span class=\"token operator\">=</span> renderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span> <span class=\"token operator\">=&gt;</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    childNodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">childNode</span> <span class=\"token operator\">=&gt;</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Renvoie le n\u0153ud DOM comme r\u00e9sultat du montage</span>\n    <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Apr\u00e8s la refactorisation de <code class=\"language-javascript\">mountHost()</code>, la diff\u00e9rence principale est que nous conservons <code class=\"language-javascript\">this.node</code> et <code class=\"language-javascript\">this.renderedChildren</code>, qui sont maintenant associ\u00e9s \u00e0 l\u2019instance interne du composant DOM. Nous les utiliserons \u00e9galement \u00e0 l\u2019avenir pour appliquer des mises \u00e0 jour non destructives.</p>\n<p>Par cons\u00e9quent, chaque instance interne, composite ou h\u00f4te, pointe maintenant vers ses instances internes enfants. Pour vous aider \u00e0 le visualiser, si une fonction composant <code class=\"language-javascript\">&lt;App&gt;</code> donne un composant bas\u00e9 classe <code class=\"language-javascript\">&lt;Button&gt;</code>, et qu\u2019un <code class=\"language-javascript\">Button</code> donne une <code class=\"language-javascript\">&lt;div&gt;</code>, l\u2019arbre des instances internes ressemblera \u00e0 ceci\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>object CompositeComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  currentElement<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  publicInstance<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  renderedComponent<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object CompositeComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    currentElement<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n    publicInstance<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object Button<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    renderedComponent<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object DOMComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n      currentElement<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n      node<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object HTMLDivElement<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      renderedChildren<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dans le DOM, vous verriez uniquement la <code class=\"language-javascript\">&lt;div&gt;</code>. Pourtant, l\u2019arbre d\u2019instances internes contient tant les instances internes composites que celles h\u00f4tes.</p>\n<p>Les instances internes composites ont besoin de stocker\u00a0:</p>\n<ul>\n<li>L\u2019\u00e9l\u00e9ment actuel.</li>\n<li>L\u2019instance publique si le type de l\u2019\u00e9l\u00e9ment est une classe.</li>\n<li>L\u2019instance interne unique produite par le rendu. Il peut s\u2019agir d\u2019un <code class=\"language-javascript\">DOMComponent</code> ou d\u2019un <code class=\"language-javascript\">CompositeComponent</code>.</li>\n</ul>\n<p>Les instances internes h\u00f4tes ont besoin de stocker\u00a0:</p>\n<ul>\n<li>L\u2019\u00e9l\u00e9ment actuel.</li>\n<li>Le n\u0153ud DOM.</li>\n<li>Toutes les instances internes enfants. Chacune d\u2019elles peut \u00eatre soit un <code class=\"language-javascript\">DOMComponent</code> soit un <code class=\"language-javascript\">CompositeComponent</code>.</li>\n</ul>\n<p>Si vous avez du mal \u00e0 imaginer la structure d\u2019un arbre d\u2019instances internes dans des applications plus complexes, <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools\">React DevTools</a> peut vous donner une bonne approximation, dans la mesure o\u00f9 il signale les instances h\u00f4tes en gris, et les instances composites en violet\u00a0:</p>\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/d96fec10d250eace9756f09543bf5d58/00d43/implementation-notes-tree.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://fr.reactjs.org//static/d96fec10d250eace9756f09543bf5d58/1e088/implementation-notes-tree.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>Pour terminer cette refactorisation, nous allons introduire une fonction qui monte une arbre complet dans un n\u0153ud conteneur, tout comme <code class=\"language-javascript\">ReactDOM.render()</code>. Elle renvoie une instance publique, l\u00e0 aussi comme <code class=\"language-javascript\">ReactDOM.render()</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Cr\u00e9e une instance interne racine</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Monte le composant racine dans le conteneur</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Renvoie l\u2019instance publique fournie</span>\n  <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> publicInstance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"unmounting\"><a class=\"anchor\" href=\"/react/implementation-notes#unmounting\"></a>D\u00e9montage </h3>\n<p>Maintenant que nous avons des instances internes qui conservent leurs enfants et les n\u0153uds DOM, nous pouvons impl\u00e9menter le d\u00e9montage. Pour un composant composite, le d\u00e9montage appelle une m\u00e9thode de cycle de vie et op\u00e8re r\u00e9cursivement.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Appelle la m\u00e9thode de cycle de vie si besoin</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillUnmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// D\u00e9monte l\u2019unique composant affich\u00e9</span>\n    <span class=\"token keyword\">var</span> renderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">;</span>\n    renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour <code class=\"language-javascript\">DOMComponent</code>, le d\u00e9montage appelle celui de chaque enfant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// D\u00e9monte tous les \u00e9l\u00e9ments enfants</span>\n    <span class=\"token keyword\">var</span> renderedChildren <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren<span class=\"token punctuation\">;</span>\n    renderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span> <span class=\"token operator\">=&gt;</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En pratique, le d\u00e9montage des composants DOM enl\u00e8ve \u00e9galement les \u00e9couteurs d\u2019\u00e9v\u00e9nements et efface certains caches, mais nous ignorerons ces d\u00e9tails.</p>\n<p>Nous pouvons maintenant ajouter une nouvelle fonction racine appel\u00e9e <code class=\"language-javascript\">unmountTree(containerNode)</code>, semblable \u00e0 <code class=\"language-javascript\">ReactDOM.unmountComponentAtNode()</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Lit l\u2019instance interne depuis un n\u0153ud DOM :</span>\n  <span class=\"token comment\">// (\u00c7a ne fonctionne pas encore, il faudra changer mountTree() pour le stocker.)</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>_internalInstance<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// D\u00e9monte l\u2019arbre et efface le conteneur</span>\n  rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pour que \u00e7a fonctionne, nous devons lire une instance interne racine \u00e0 partir d\u2019un n\u0153ud DOM. Nous modifierons <code class=\"language-javascript\">mountTree()</code> pour ajouter la propri\u00e9t\u00e9 <code class=\"language-javascript\">_internalInstance</code> au n\u0153ud DOM racine. Nous apprendrons aussi \u00e0 <code class=\"language-javascript\">mountTree()</code> \u00e0 d\u00e9truire n\u2019importe quel arbre existant, donc nous pourrons l\u2019appeler plusieurs fois\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// D\u00e9truit un \u00e9ventuel arbre existant</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Cr\u00e9e l\u2019instance interne racine</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Monte le composant racine dans un conteneur</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Sauvegarde une r\u00e9f\u00e9rence \u00e0 l\u2019instance interne</span>\n  node<span class=\"token punctuation\">.</span>_internalInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Renvoie l\u2019instance publique fournie</span>\n  <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> publicInstance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00c0 pr\u00e9sent, l\u2019ex\u00e9cution r\u00e9p\u00e9t\u00e9e de <code class=\"language-javascript\">unmountTree()</code> ou de <code class=\"language-javascript\">mountTree()</code> supprime l\u2019ancien arbre et ex\u00e9cute la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentWillUnmount()</code> sur les composants.</p>\n<h3 id=\"updating\"><a class=\"anchor\" href=\"/react/implementation-notes#updating\"></a>Mise \u00e0 jour </h3>\n<p>Dans la section pr\u00e9c\u00e9dente, nous avons impl\u00e9ment\u00e9 le d\u00e9montage. Cependant, React ne serait pas tr\u00e8s utile si \u00e0 chaque modification de prop, l\u2019arbre entier \u00e9tait d\u00e9mont\u00e9 puis remont\u00e9. Le but du r\u00e9conciliateur est de r\u00e9utiliser dans la mesure du possible les instances existantes afin de pr\u00e9server le DOM et l\u2019\u00e9tat local\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Devrait r\u00e9utiliser le DOM existant :</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nous allons ajouter une m\u00e9thode suppl\u00e9mentaire au contrat de nos instances internes. En plus de <code class=\"language-javascript\">mount()</code> et <code class=\"language-javascript\">unmount()</code>, <code class=\"language-javascript\">DOMComponent</code> et <code class=\"language-javascript\">CompositeComponent</code> impl\u00e9menteront une nouvelle m\u00e9thode appel\u00e9e <code class=\"language-javascript\">receive(nextElement)</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Son travail consiste \u00e0 faire tout le n\u00e9cessaire pour mettre \u00e0 jour le composant (et ses enfants) avec la description fournie par <code class=\"language-javascript\">nextElement</code>.</p>\n<p>C\u2019est la partie qui est souvent d\u00e9crite comme la \u00ab\u00a0comparaison de DOM virtuel\u00a0\u00bb <em>(virtual DOM diffing, NdT)</em>, m\u00eame si \u00e7a consiste en r\u00e9alit\u00e9 \u00e0 parcourir r\u00e9cursivement l\u2019arbre interne pour permettre \u00e0 chaque instance interne de recevoir une mise \u00e0 jour.</p>\n<h3 id=\"updating-composite-components\"><a class=\"anchor\" href=\"/react/implementation-notes#updating-composite-components\"></a>Mise \u00e0 jour des composants composites </h3>\n<p>Lorsqu\u2019un composant composite re\u00e7oit un nouvel \u00e9l\u00e9ment, nous ex\u00e9cutons la m\u00e9thode de cycle de vie <code class=\"language-javascript\">componentWillUpdate()</code>.</p>\n<p>Ensuite nous rafra\u00eechissons le composant avec les nouvelles props et r\u00e9cup\u00e9rons le prochain \u00e9l\u00e9ment issu du rendu\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> prevProps <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRenderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRenderedElement <span class=\"token operator\">=</span> prevRenderedComponent<span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Met \u00e0 jour l\u2019\u00e9l\u00e9ment *associ\u00e9*</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextProps <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// D\u00e9termine quel est le prochain r\u00e9sultat de render()</span>\n    <span class=\"token keyword\">var</span> nextRenderedElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Composant bas\u00e9 classe</span>\n      <span class=\"token comment\">// Appelle le cycle de vie si besoin</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Met \u00e0 jour les props</span>\n      publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Rafra\u00eechit</span>\n      nextRenderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Fonction composant</span>\n      nextRenderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Ensuite, nous pouvons regarder le <code class=\"language-javascript\">type</code> de l\u2019\u00e9l\u00e9ment produit. Si le <code class=\"language-javascript\">type</code> n\u2019a pas chang\u00e9 depuis le dernier rendu, le composant sous-jacent peut \u00eatre mis \u00e0 jour directement.</p>\n<p>Par exemple, s\u2019il renvoie <code class=\"language-javascript\">&lt;Button color=\"red\" /&gt;</code> la premi\u00e8re fois et <code class=\"language-javascript\">&lt;Button color=\"blue\" /&gt;</code> la seconde fois, nous pouvons simplement dire \u00e0 l\u2019instance interne correspondante de recevoir (<code class=\"language-javascript\">receive()</code>) l\u2019\u00e9l\u00e9ment mis \u00e0 jour\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Si le type de l\u2019\u00e9l\u00e9ment affich\u00e9 n\u2019a pas chang\u00e9,</span>\n    <span class=\"token comment\">// r\u00e9utilise l\u2019instance du composant existant et sort.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevRenderedElement<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> nextRenderedElement<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>nextRenderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Cependant, si l\u2019\u00e9l\u00e9ment mis \u00e0 jour a un <code class=\"language-javascript\">type</code> diff\u00e9rent de celui affich\u00e9 jusqu\u2019ici, nous ne pouvons pas mettre \u00e0 jour l\u2019instance interne. Un <code class=\"language-javascript\">&lt;button&gt;</code> ne peut pas simplement \u00ab\u00a0devenir\u00a0\u00bb un <code class=\"language-javascript\">&lt;input&gt;</code>.</p>\n<p>Dans ce cas, nous devons d\u00e9monter l\u2019instance interne existante et monter la nouvelle correspondant au type du nouvel \u00e9l\u00e9ment. Par exemple, voici ce qui se produit lorsqu\u2019un composant ayant pr\u00e9c\u00e9demment affich\u00e9 un <code class=\"language-javascript\">&lt;button /&gt;</code> affiche d\u00e9sormais un <code class=\"language-javascript\">&lt;input /&gt;</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Si nous arrivons jusqu\u2019ici, nous devons d\u00e9monter le composant</span>\n    <span class=\"token comment\">// pr\u00e9c\u00e9demment mont\u00e9, monter le nouveau et \u00e9changer leurs n\u0153uds.</span>\n\n    <span class=\"token comment\">// R\u00e9cup\u00e8re l\u2019ancien n\u0153ud car il devra \u00eatre remplac\u00e9</span>\n    <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// D\u00e9monte l\u2019ancien \u00e9l\u00e9ment enfant et en monte un nouveau</span>\n    prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextRenderedComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextRenderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextNode <span class=\"token operator\">=</span> nextRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Remplace la r\u00e9f\u00e9rence \u00e0 l\u2019enfant</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> nextRenderedComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Remplace l\u2019ancien n\u0153ud par le nouveau.</span>\n    <span class=\"token comment\">// Remarque : il s\u2019agit d\u2019un code sp\u00e9cifique au moteur de rendu et</span>\n    <span class=\"token comment\">// id\u00e9alement il devrait vivre en dehors de CompositeComponent :</span>\n    prevNode<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">replaceChild</span><span class=\"token punctuation\">(</span>nextNode<span class=\"token punctuation\">,</span> prevNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>En r\u00e9sum\u00e9, lorsqu\u2019un composant composite re\u00e7oit un nouvel \u00e9l\u00e9ment, il peut soit d\u00e9l\u00e9guer la mise \u00e0 jour \u00e0 son instance interne issue du rendu pr\u00e9c\u00e9dent, soit la d\u00e9monter et en monter une nouvelle en remplacement.</p>\n<p>Il existe un autre cas dans lequel un composant va \u00eatre remont\u00e9 plut\u00f4t que de recevoir un \u00e9l\u00e9ment\u00a0: lorsque la <code class=\"language-javascript\">key</code> de cet \u00e9l\u00e9ment a \u00e9t\u00e9 modifi\u00e9e. Nous ne voyons pas la gestion des <code class=\"language-javascript\">key</code> dans ce document, car elle ajoute une complexit\u00e9 suppl\u00e9mentaire \u00e0 un tutoriel d\u00e9j\u00e0 velu.</p>\n<p>Remarquez que nous devons encore ajouter une m\u00e9thode appel\u00e9e <code class=\"language-javascript\">getHostNode()</code> \u00e0 l\u2019instance interne afin qu\u2019il soit possible de localiser le n\u0153ud sp\u00e9cifique \u00e0 la plate-forme et de le remplacer lors de la mise \u00e0 jour. Son impl\u00e9mentation est simple pour les deux classes\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Demande au composant issu du rendu de le fournir.</span>\n    <span class=\"token comment\">// \u00c7a analysera r\u00e9cursivement tous les composites.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"updating-host-components\"><a class=\"anchor\" href=\"/react/implementation-notes#updating-host-components\"></a>Mise \u00e0 jour des composants h\u00f4tes </h3>\n<p>Les impl\u00e9mentations de composant h\u00f4te, comme <code class=\"language-javascript\">DOMComponent</code>, font leurs mises \u00e0 jour diff\u00e9remment. \u00c0 la r\u00e9ception d\u2019un \u00e9l\u00e9ment, ils ont besoin de mettre \u00e0 jour la vue sp\u00e9cifique \u00e0 la plate-forme sous-jacente. Dans le cas de React DOM, \u00e7a implique de mettre \u00e0 jour les attributs DOM\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevElement <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevProps <span class=\"token operator\">=</span> prevElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextProps <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Supprime les anciens attributs.</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>nextProps<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Initialise les nouveaux attributs.</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Ensuite, les composants h\u00f4tes doivent mettre \u00e0 jour leurs enfants. Contrairement aux composants composites, ils peuvent poss\u00e9der plusieurs enfants.</p>\n<p>Dans cet exemple simplifi\u00e9, nous utilisons un tableau d\u2019instances internes et it\u00e9rons dessus. Si le <code class=\"language-javascript\">type</code> re\u00e7u des instances internes correspond au <code class=\"language-javascript\">type</code> pr\u00e9c\u00e9dent, nous les mettons \u00e0 jour, sinon nous les rempla\u00e7ons. Le vrai r\u00e9conciliateur prend \u00e9galement en compte la <code class=\"language-javascript\">key</code> de l\u2019\u00e9l\u00e9ment et d\u00e9tecte les d\u00e9placements en plus des insertions et des suppressions, mais nous omettons cette logique.</p>\n<p>Nous collectons les op\u00e9rations DOM sur les enfants dans une liste, afin de pouvoir les ex\u00e9cuter par lot\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Ce sont des tableaux d\u2019\u00e9l\u00e9ments React :</span>\n    <span class=\"token keyword\">var</span> prevChildren <span class=\"token operator\">=</span> prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>prevChildren<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>prevChildren<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> nextChildren <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      nextChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nextChildren<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Ce sont des tableaux d\u2019instances internes :</span>\n    <span class=\"token keyword\">var</span> prevRenderedChildren <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextRenderedChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Au fil de l\u2019it\u00e9ration sur les enfants, nous ajouterons des op\u00e9rations dans le tableau.</span>\n    <span class=\"token keyword\">var</span> operationQueue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Remarque : la section ci-dessous est extr\u00eamement simplifi\u00e9e !</span>\n    <span class=\"token comment\">// Elle ne g\u00e8re pas le r\u00e9ordonnancement, les enfants avec des trous ou les cl\u00e9s (`key`).</span>\n    <span class=\"token comment\">// Elle existe uniquement pour illustrer le flux g\u00e9n\u00e9ral, pas les d\u00e9tails.</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nextChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Essaie de r\u00e9cup\u00e9rer une instance interne existante pour cet enfant</span>\n      <span class=\"token keyword\">var</span> prevChild <span class=\"token operator\">=</span> prevRenderedChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// S\u2019il n\u2019y a aucune instance interne pour cet index,</span>\n      <span class=\"token comment\">// c\u2019est qu\u2019un enfant a \u00e9t\u00e9 ajout\u00e9 \u00e0 la fin. Nous cr\u00e9ons une nouvelle</span>\n      <span class=\"token comment\">// instance interne, nous la montons, et nous utilisons son n\u0153ud.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>prevChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> nextChild <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> nextChild<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Enregistre le besoin d'ajouter un n\u0153ud</span>\n        operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'ADD'</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Nous ne pouvons mettre \u00e0 jour l\u2019instance que si le type de son \u00e9l\u00e9ment est identique.</span>\n      <span class=\"token comment\">// Par exemple, &lt;Button size=\"small\" /&gt; peut \u00eatre mis \u00e0 jour par</span>\n      <span class=\"token comment\">// &lt;Button size=\"large\" /&gt; mais pas par un &lt;App /&gt;.</span>\n      <span class=\"token keyword\">var</span> canUpdate <span class=\"token operator\">=</span> prevChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Si nous ne pouvons pas mettre \u00e0 jour une instance existante, nous devons la d\u00e9monter</span>\n      <span class=\"token comment\">// et monter une nouvelle \u00e0 la place.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>canUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> nextChild <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> nextNode <span class=\"token operator\">=</span> nextChild<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Enregistre le besoin de remplacer un n\u0153ud</span>\n        operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'REPLACE'</span><span class=\"token punctuation\">,</span> prevNode<span class=\"token punctuation\">,</span> nextNode<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Si nous pouvons mettre \u00e0 jour une instance existante,</span>\n      <span class=\"token comment\">// laissons-la simplement recevoir l\u2019\u00e9l\u00e9ment cible et g\u00e9rer sa propre mise \u00e0 jour.</span>\n      prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>prevChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Enfin, d\u00e9monte tous les enfants qui n\u2019existent pas :</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> nextChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> prevChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> prevChild <span class=\"token operator\">=</span> prevRenderedChildren<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Enregistre le besoin de supprimer un n\u0153ud</span>\n      operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'REMOVE'</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Actualise la liste des enfants issus du rendu.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> nextRenderedChildren<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Pour finir, nous ex\u00e9cutons les op\u00e9rations sur le DOM. Encore une fois, le vrai code du r\u00e9conciliateur est plus complexe car il g\u00e8re \u00e9galement les d\u00e9placements\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Traite les op\u00e9rations dans la file d\u2019attente</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>operationQueue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> operation <span class=\"token operator\">=</span> operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'ADD'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'REPLACE'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">replaceChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>nextNode<span class=\"token punctuation\">,</span> operation<span class=\"token punctuation\">.</span>prevNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'REMOVE'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Et c\u2019est tout pour la mise \u00e0 jour des composants h\u00f4tes.</p>\n<h3 id=\"top-level-updates\"><a class=\"anchor\" href=\"/react/implementation-notes#top-level-updates\"></a>Mise \u00e0 jour de la racine </h3>\n<p>Maintenant que <code class=\"language-javascript\">CompositeComponent</code> et <code class=\"language-javascript\">DOMComponent</code> impl\u00e9mentent la m\u00e9thode <code class=\"language-javascript\">receive(nextElement)</code>, nous pouvons modifier la fonction racine <code class=\"language-javascript\">mountTree()</code> pour l\u2019utiliser lorsque le <code class=\"language-javascript\">type</code> de l\u2019\u00e9l\u00e9ment est identique \u00e0 celui de la derni\u00e8re fois\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// V\u00e9rifie l'existence d\u2019un arbre</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRootComponent <span class=\"token operator\">=</span> prevNode<span class=\"token punctuation\">.</span>_internalInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevElement <span class=\"token operator\">=</span> prevRootComponent<span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Si possible, r\u00e9utilise le composant racine existant</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevRootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Autrement, d\u00e9monte l\u2019arborescence existante</span>\n    <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>D\u00e9sormais, appeler deux fois <code class=\"language-javascript\">mountTree()</code> avec le m\u00eame type n\u2019est plus destructif\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// R\u00e9utilise le DOM existant :</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Et voil\u00e0 les bases du fonctionnement interne de React.</p>\n<h3 id=\"what-we-left-out\"><a class=\"anchor\" href=\"/react/implementation-notes#what-we-left-out\"></a>Ce que nous avons laiss\u00e9 de c\u00f4t\u00e9 </h3>\n<p>Ce document est simplifi\u00e9 par rapport au vrai code. Il y a quelques aspects importants que nous n\u2019avons pas abord\u00e9s\u00a0:</p>\n<ul>\n<li>Les composants peuvent faire un rendu \u00e0 <code class=\"language-javascript\">null</code> et le r\u00e9conciliateur peut g\u00e9rer des \u00ab\u00a0emplacements vides\u00a0\u00bb dans les tableaux et le r\u00e9sultat du rendu.</li>\n<li>Le r\u00e9conciliateur lit \u00e9galement la <code class=\"language-javascript\">key</code> des \u00e9l\u00e9ments, et l\u2019utilise pour d\u00e9terminer quelle instance interne correspond \u00e0 quel \u00e9l\u00e9ment dans un tableau. Une grande partie de la complexit\u00e9 de la v\u00e9ritable impl\u00e9mentation de React est li\u00e9e \u00e0 \u00e7a.</li>\n<li>En plus des classes d\u2019instance interne composite et h\u00f4te, il existe \u00e9galement des classes pour les composants \u00ab\u00a0texte\u00a0\u00bb et \u00ab\u00a0vide\u00a0\u00bb. Ils repr\u00e9sentent des n\u0153uds de texte et des \u00ab\u00a0emplacements vides\u00a0\u00bb que vous obtenez en faisant un rendu <code class=\"language-javascript\">null</code>.</li>\n<li>Les moteurs de rendu utilisent l\u2019<a href=\"/react/codebase-overview#dynamic-injection\">injection</a> pour passer la classe interne h\u00f4te au r\u00e9conciliateur. Par exemple, React DOM indique au r\u00e9conciliateur d\u2019utiliser <code class=\"language-javascript\">ReactDOMComponent</code> pour l\u2019impl\u00e9mentation de l\u2019instance interne h\u00f4te.</li>\n<li>La logique de mise \u00e0 jour de la liste des enfants est extraite dans un <em>mixin</em> appel\u00e9 <code class=\"language-javascript\">ReactMultiChild</code>, utilis\u00e9 par les impl\u00e9mentations de la classe d\u2019instance interne h\u00f4te dans React DOM comme dans React Native.</li>\n<li>Le r\u00e9conciliateur impl\u00e9mente \u00e9galement la prise en charge de <code class=\"language-javascript\">setState()</code> dans les composants composites. Les mises \u00e0 jour d\u2019\u00e9tat multiples dans les gestionnaires d\u2019\u00e9v\u00e9nements sont regroup\u00e9es en lot pour une mise \u00e0 jour unique.</li>\n<li>Le r\u00e9conciliateur prend \u00e9galement en charge l\u2019attachement et le d\u00e9tachement des refs aux composants composites et aux n\u0153uds h\u00f4tes.</li>\n<li>Les m\u00e9thodes de cycle de vie appel\u00e9es une fois que le DOM est pr\u00eat, telles que <code class=\"language-javascript\">componentDidMount()</code> et <code class=\"language-javascript\">componentDidUpdate()</code>, sont rassembl\u00e9es dans des \u00ab\u00a0files d\u2019attente de fonctions de rappel\u00a0\u00bb et ex\u00e9cut\u00e9es en un seul lot.</li>\n<li>React stocke les informations sur la mise \u00e0 jour en cours dans un objet interne appel\u00e9 \u00ab\u00a0transaction\u00a0\u00bb. Les transactions sont utiles pour garder trace de la liste des m\u00e9thodes de cycle de vie en attente, de l\u2019imbrication actuelle du DOM pour les avertissements et de tout ce qui est \u00ab\u00a0global\u00a0\u00bb \u00e0 une mise \u00e0 jour sp\u00e9cifique. Les transactions garantissent \u00e9galement que React \u00ab\u00a0nettoie tout\u00a0\u00bb apr\u00e8s les mises \u00e0 jour. Par exemple, la classe de transaction fournie par React DOM restaure apr\u00e8s toute mise \u00e0 jour l\u2019\u00e9ventuelle s\u00e9lection d\u2019une saisie.</li>\n</ul>\n<h3 id=\"jumping-into-the-code\"><a class=\"anchor\" href=\"/react/implementation-notes#jumping-into-the-code\"></a>Sauter dans le code </h3>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/client/ReactMount.js\"><code class=\"language-javascript\">ReactMount</code></a> est l\u2019endroit o\u00f9 r\u00e9side le code \u00e9quivalent aux <code class=\"language-javascript\">mountTree()</code> et <code class=\"language-javascript\">unmountTree()</code> de ce tutoriel. Il s\u2019occupe du montage et du d\u00e9montage des composants racines. <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeMount.js\"><code class=\"language-javascript\">ReactNativeMount</code></a> est son homologue pour React Native.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/shared/ReactDOMComponent.js\"><code class=\"language-javascript\">ReactDOMComponent</code></a> est l\u2019\u00e9quivalent de <code class=\"language-javascript\">DOMComponent</code> dans ce tutoriel. Il impl\u00e9mente la classe de composant h\u00f4te pour le moteur de rendu de React DOM. <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeBaseComponent.js\"><code class=\"language-javascript\">ReactNativeBaseComponent</code></a> est son \u00e9quivalent React Native.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\"><code class=\"language-javascript\">ReactCompositeComponent</code></a> est l\u2019\u00e9quivalent de <code class=\"language-javascript\">CompositeComponent</code> dans ce tutoriel. Il g\u00e8re l\u2019appel des composants d\u00e9finis par l\u2019utilisateur et la maintenance de leur \u00e9tat local.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/instantiateReactComponent.js\"><code class=\"language-javascript\">instantiateReactComponent</code></a> contient le code qui s\u00e9lectionne la classe d\u2019instance interne appropri\u00e9e pour construire un \u00e9l\u00e9ment. C\u2019est l\u2019\u00e9quivalent de <code class=\"language-javascript\">instantiateComponent()</code> dans ce tutoriel.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactReconciler.js\"><code class=\"language-javascript\">ReactReconciler</code></a> est un enrobage avec les m\u00e9thodes <code class=\"language-javascript\">mountComponent()</code>, <code class=\"language-javascript\">receiveComponent()</code> et <code class=\"language-javascript\">unmountComponent()</code>. Il appelle les impl\u00e9mentations sous-jacentes des instances internes, mais contient en prime du code de gestion partag\u00e9 par toutes ces impl\u00e9mentations.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactChildReconciler.js\"><code class=\"language-javascript\">ReactChildReconciler</code></a> impl\u00e9mente la logique de montage, de mise \u00e0 jour et de d\u00e9montage des enfants en fonction de la <code class=\"language-javascript\">key</code> de leurs \u00e9l\u00e9ments.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactMultiChild.js\"><code class=\"language-javascript\">ReactMultiChild</code></a> impl\u00e9mente le traitement de la file d\u2019attente des op\u00e9rations pour les insertions, les suppressions et les d\u00e9placements d\u2019enfants ind\u00e9pendamment du moteur de rendu.</li>\n<li><code class=\"language-javascript\">mount()</code>, <code class=\"language-javascript\">receive()</code> et <code class=\"language-javascript\">unmount()</code> sont nomm\u00e9es en r\u00e9alit\u00e9 <code class=\"language-javascript\">mountComponent()</code>, <code class=\"language-javascript\">receiveComponent()</code> et <code class=\"language-javascript\">unmountComponent()</code> dans la base de code React pour des raisons historiques, mais elles re\u00e7oivent des \u00e9l\u00e9ments.</li>\n<li>Les propri\u00e9t\u00e9s des instances internes commencent par un tiret bas <em>(underscore, NdT)</em>, par exemple <code class=\"language-javascript\">_currentElement</code>. Elles sont consid\u00e9r\u00e9es dans la base de code comme des champs publics en lecture seule.</li>\n</ul>\n<h3 id=\"future-directions\"><a class=\"anchor\" href=\"/react/implementation-notes#future-directions\"></a>Orientations futures </h3>\n<p>Le r\u00e9conciliateur <em>\u201cstack\u201d</em> a des limitations intrins\u00e8ques, comme le fait qu\u2019il soit synchrone et incapable d\u2019interrompre le travail ou de le d\u00e9couper en plusieurs morceaux. Le <a href=\"/react/codebase-overview#fiber-reconciler\">nouveau r\u00e9conciliateur <em>\u201cfiber\u201d</em></a> a une <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">architecture compl\u00e8tement diff\u00e9rente</a>. \u00c0 partir de React 16, il remplace le r\u00e9conciliateur <em>\u201cstack\u201d</em>.</p>\n<h3 id=\"next-steps\"><a class=\"anchor\" href=\"/react/implementation-notes#next-steps\"></a>Prochaines \u00e9tapes </h3>\n<p>Lisez la <a href=\"/react/design-principles\">page suivante</a> pour en apprendre davantage sur les principes de conception que nous utilisons pour le d\u00e9veloppement de React.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/implementation-notes.md\">Edit this page</a></p></div></article>", "path": "/react/implementation-notes", "nav": ["/react/codebase-overview", "/react/design-principles"]}, {"key": "Principes de conception", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>Nous avons \u00e9crit ce document afin que vous ayez une meilleure id\u00e9e de la fa\u00e7on dont nous d\u00e9cidons ce que React fait et ne fait pas, et de notre philosophie de d\u00e9veloppement. Bien que nous adorions les contributions de la communaut\u00e9, il est peu probable que nous choisissions un chemin qui enfreindrait un ou plusieurs de ces principes.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Ce document suppose une solide compr\u00e9hension de React. Il d\u00e9crit les principes de conception de <em>React lui-m\u00eame</em>, et non des composants ou des applications React.</p>\n<p>Pour une introduction \u00e0 React, consultez plut\u00f4t <a href=\"/react/thinking-in-react\">Penser en React</a>.</p>\n</div>\n<h3 id=\"composition\"><a class=\"anchor\" href=\"/react/design-principles#composition\"></a>Composition </h3>\n<p>La caract\u00e9ristique principale de React est la composition de composants. Les composants \u00e9crits par des personnes diff\u00e9rentes devraient fonctionner correctement ensemble. Nous tenons \u00e0 ce que vous puissiez ajouter des fonctionnalit\u00e9s \u00e0 un composant sans que \u00e7a impacte le reste de la base de code.</p>\n<p>Par exemple, il devrait \u00eatre possible d\u2019introduire un \u00e9tat local dans un composant sans changer les composants qui l\u2019utilisent. Dans le m\u00eame esprit, il devrait \u00eatre possible d\u2019ajouter du code d\u2019initialisation et de nettoyage \u00e0 n\u2019importe quel composant lorsque c\u2019est n\u00e9cessaire.</p>\n<p>Il n\u2019y a rien de \u00ab\u00a0mauvais\u00a0\u00bb \u00e0 utiliser les m\u00e9thodes d\u2019\u00e9tat ou de cycle de vie dans les composants. Comme n\u2019importe quelle fonctionnalit\u00e9 puissante, elles devraient \u00eatre utilis\u00e9es avec mod\u00e9ration, mais nous n\u2019avons aucune intention de les retirer. Au contraire, nous pensons qu\u2019elles font partie int\u00e9grante de ce qui rend React utile. Nous ajouterons peut-\u00eatre <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State\">des approches plus fonctionnelles</a> (en anglais) \u00e0 l\u2019avenir, mais les m\u00e9thodes d\u2019\u00e9tat local et de cycle de vie feront partie de ce mod\u00e8le.</p>\n<p>Les composants sont souvent d\u00e9crits comme de \u00ab\u00a0simples fonctions\u00a0\u00bb mais \u00e0 nos yeux ils doivent \u00eatre bien plus que \u00e7a pour \u00eatre utiles. Avec React, les composants d\u00e9crivent un comportement composable, ce qui inclut le rendu, le cycle de vie et l\u2019\u00e9tat local. Certaines biblioth\u00e8ques externes telles que <a class=\"external-link\" href=\"https://facebook.github.io/relay/\">Relay</a> ajoutent d\u2019autres responsabilit\u00e9s aux composants comme la description des d\u00e9pendances de donn\u00e9es. Il est possible que ces id\u00e9es reviennent dans React sous une forme ou une autre.</p>\n<h3 id=\"common-abstraction\"><a class=\"anchor\" href=\"/react/design-principles#common-abstraction\"></a>Abstraction commune </h3>\n<p>En g\u00e9n\u00e9ral, nous <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=4anAwXYqLG8\">\u00e9vitons d\u2019ajouter des fonctionnalit\u00e9s</a> (vid\u00e9o en anglais) pouvant \u00eatre mises en \u0153uvre par les utilisateurs. Nous ne voulons pas surcharger vos applications avec du code inutile. Il y a toutefois des exceptions \u00e0 \u00e7a.</p>\n<p>Par exemple, si React ne proposait pas des m\u00e9thodes pour l\u2019\u00e9tat local ou le cycle de vie, les utilisateurs cr\u00e9eraient leurs propres abstractions personnalis\u00e9es pour \u00e7a. Quand plusieurs abstractions s\u2019affrontent, React ne peut garantir ni b\u00e9n\u00e9ficier des propri\u00e9t\u00e9s de l\u2019une ou l\u2019autre. Il doit se contenter du plus petit d\u00e9nominateur commun.</p>\n<p>C\u2019est la raison pour laquelle nous ajoutons parfois des fonctionnalit\u00e9s directement \u00e0 React. Si nous constatons que de nombreux composants impl\u00e9mentent une certaine fonctionnalit\u00e9 de fa\u00e7ons incompatibles ou inefficaces, nous pr\u00e9f\u00e9rons parfois l\u2019int\u00e9grer \u00e0 React. Nous ne le faisons pas \u00e0 la l\u00e9g\u00e8re. Lorsque nous le faisons, c\u2019est parce que nous sommes convaincus qu\u2019\u00e9lever le niveau d\u2019abstraction profite \u00e0 l\u2019ensemble de l\u2019\u00e9cosyst\u00e8me. L\u2019\u00e9tat local, les m\u00e9thodes de cycle de vie ou la normalisation des \u00e9v\u00e9nements des navigateurs en sont de bons exemples.</p>\n<p>Nous discutons toujours de ces propositions d\u2019am\u00e9lioration avec la communaut\u00e9. Vous pouvez trouver certaines de ces discussions avec l\u2019\u00e9tiquette <a class=\"external-link\" href=\"https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22Type:+Big+Picture%22\"><em>\u201cbig picture\u201d</em></a> dans le suivi des probl\u00e8mes et questions de React.</p>\n<h3 id=\"escape-hatches\"><a class=\"anchor\" href=\"/react/design-principles#escape-hatches\"></a>\u00c9chappatoires </h3>\n<p>React est pragmatique. Il est pilot\u00e9 par les besoins des produits d\u00e9velopp\u00e9s chez Facebook. Bien qu\u2019il soit influenc\u00e9 par certains paradigmes qui ne sont pas tout \u00e0 fait populaires comme la programmation fonctionnelle, le rendre accessible \u00e0 un large public de d\u00e9veloppeurs aux comp\u00e9tences et exp\u00e9riences vari\u00e9es est un objectif affich\u00e9 du projet.</p>\n<p>Si nous voulons d\u00e9pr\u00e9cier une approche que nous n\u2019aimons pas, il est de notre responsabilit\u00e9 de consid\u00e9rer tous ses cas d\u2019usage et d\u2019<a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">\u00e9duquer la communaut\u00e9 sur les alternatives</a> avant de la d\u00e9pr\u00e9cier. Si une approche utile pour la cr\u00e9ation d\u2019applications est difficile \u00e0 exprimer de mani\u00e8re d\u00e9clarative, nous lui <a href=\"/react/more-about-refs\">fournirons une API imp\u00e9rative</a>. Si nous ne parvenons pas \u00e0 trouver l\u2019API parfaite pour une fonctionnalit\u00e9 que nous estimons n\u00e9cessaire dans de nombreuses applications, nous <a href=\"/react/legacy-context\">fournirons une API temporaire de moindre qualit\u00e9</a> du moment qu\u2019il reste possible de nous en d\u00e9barrasser ult\u00e9rieurement et qu\u2019elle laisse la porte ouverte \u00e0 de futures am\u00e9liorations.</p>\n<h3 id=\"stability\"><a class=\"anchor\" href=\"/react/design-principles#stability\"></a>Stabilit\u00e9 </h3>\n<p>Nous accordons de l\u2019importance la stabilit\u00e9 de l\u2019API. Chez Facebook, nous avons plus de 50\u00a0000 composants utilisant React. De nombreuses autres soci\u00e9t\u00e9s, telles que <a class=\"external-link\" href=\"https://twitter.com/\">Twitter</a> ou <a class=\"external-link\" href=\"https://www.airbnb.com/\">Airbnb</a>, sont \u00e9galement de grandes utilisatrices de React. C\u2019est pour \u00e7a que nous sommes g\u00e9n\u00e9ralement r\u00e9ticents \u00e0 changer les API ou les comportements publics.</p>\n<p>Cependant, nous pensons que la stabilit\u00e9 au sens o\u00f9 \u00ab\u00a0rien ne change\u00a0\u00bb est surfaite. \u00c7a finit vite par stagner. Nous pr\u00e9f\u00e9rons plut\u00f4t la stabilit\u00e9 au sens o\u00f9 \u00ab\u00a0c\u2019est largement utilis\u00e9 en production et lorsque quelque chose change, il existe un chemin de migration clair (et de pr\u00e9f\u00e9rence automatis\u00e9)\u00a0\u00bb.</p>\n<p>Lorsque nous d\u00e9pr\u00e9cions une approche, nous \u00e9tudions son utilisation interne chez Facebook et nous ajoutons des avertissements de d\u00e9pr\u00e9ciation. Ils nous permettent de mesurer l\u2019impact du changement. Parfois nous renon\u00e7ons quand nous voyons que c\u2019est encore trop t\u00f4t, et nous r\u00e9fl\u00e9chissons de mani\u00e8re plus strat\u00e9gique sur la fa\u00e7on de pr\u00e9parer les bases de code \u00e0 ce changement.</p>\n<p>Si nous sommes convaincus que le changement n\u2019est pas trop disruptif et que la strat\u00e9gie de migration est viable pour tous les cas d\u2019usage, nous livrons les avertissements de d\u00e9pr\u00e9ciation \u00e0 la communaut\u00e9 open source. Nous sommes en contact \u00e9troit avec de nombreux utilisateurs de React en dehors de Facebook, nous surveillons les projets open source populaires et les aidons \u00e0 corriger ces d\u00e9pr\u00e9ciations.</p>\n<p>Compte tenu de la taille consid\u00e9rable de la base de code React chez Facebook, la r\u00e9ussite de la migration en interne est g\u00e9n\u00e9ralement un bon indicateur du fait que les autres soci\u00e9t\u00e9s n\u2019auront pas de probl\u00e8mes non plus. N\u00e9anmoins, il arrive que des personnes nous signalent des cas d\u2019usage auxquels nous n\u2019avons pas pens\u00e9, et nous ajoutons alors des solutions de contournement pour elles ou repensons notre approche.</p>\n<p>Nous ne d\u00e9pr\u00e9cions rien sans une bonne raison. Nous reconnaissons que les avertissements de d\u00e9pr\u00e9ciation sont parfois frustrants, mais nous les ajoutons car les d\u00e9pr\u00e9ciations permettent de pr\u00e9parer le terrain \u00e0 des am\u00e9liorations ou de nouvelles fonctionnalit\u00e9s que la communaut\u00e9 et nous-m\u00eames estimons utiles.</p>\n<p>Par exemple, nous avons ajout\u00e9 un <a class=\"external-link\" href=\"https://fr.reactjs.org//warnings/unknown-prop.html\">avertissement concernant les props DOM inconnues</a> dans React 15.2.0. De nombreux projets en furent impact\u00e9s. Cependant, corriger cet avertissement est important pour pouvoir introduire la prise en charge des <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/140\">attributs personnalis\u00e9s</a> dans React. Il y a une raison comme celle-ci derri\u00e8re chaque d\u00e9pr\u00e9ciation que nous ajoutons.</p>\n<p>Lorsque nous ajoutons un avertissement de d\u00e9pr\u00e9ciation, nous le conservons pour le reste de la version majeure en cours, et nous <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/02/19/new-versioning-scheme.html\">changeons le comportement lors de la version majeure suivante</a>. S\u2019il y a beaucoup de travail manuel r\u00e9p\u00e9titif \u00e0 la cl\u00e9, nous publions un script <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=d0pOgY8__JM\">codemod</a> (vid\u00e9o en anglais) qui automatise la plus grande partie des ajustements n\u00e9cessaires. Les <em>codemods</em> nous permettent d\u2019avancer sans stagner sur une base de code importante, et nous vous encourageons \u00e0 les utiliser \u00e9galement.</p>\n<p>Vous trouverez les codemods que nous publions dans le d\u00e9p\u00f4t <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod\">react-codemod</a>.</p>\n<h3 id=\"interoperability\"><a class=\"anchor\" href=\"/react/design-principles#interoperability\"></a>Interop\u00e9rabilit\u00e9 </h3>\n<p>Nous accordons une grande importance \u00e0 l\u2019interop\u00e9rabilit\u00e9 avec les syst\u00e8mes existants et \u00e0 l\u2019adoption progressive. Facebook a une importante base de code sans React. Son site web utilise \u00e0 la fois un syst\u00e8me de composants c\u00f4t\u00e9 serveur appel\u00e9 XHP, des biblioth\u00e8ques d\u2019interface utilisateur (<em>UI</em>) internes ant\u00e9rieures \u00e0 React et React lui-m\u00eame. Il est important pour nous que n\u2019importe quelle \u00e9quipe produit puisse <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=BF58ZJ1ZQxY\">commencer \u00e0 utiliser React pour une petite fonctionnalit\u00e9</a> (vid\u00e9o en anglais) plut\u00f4t que de r\u00e9\u00e9crire leur code pour pouvoir en b\u00e9n\u00e9ficier.</p>\n<p>C\u2019est pour \u00e7a que React propose des \u00e9chappatoires pour fonctionner avec des mod\u00e8les mutables, et essaie de fonctionner correctement avec d\u2019autres biblioth\u00e8ques d\u2019UI. Vous pouvez enrober une UI imp\u00e9rative existante dans un composant d\u00e9claratif, et inversement. C\u2019est crucial pour une adoption progressive.</p>\n<h3 id=\"scheduling\"><a class=\"anchor\" href=\"/react/design-principles#scheduling\"></a>Planification </h3>\n<p>M\u00eame si vos composants sont d\u00e9crits comme des fonctions, en utilisant React vous ne les appelez pas directement. Chaque composant renvoie une <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2015/12/18/react-components-elements-and-instances.html#elements-describe-the-tree\">description de ce qui doit \u00eatre affich\u00e9</a>, et cette description peut inclure \u00e0 la fois des composants \u00e9crits par l\u2019utilisateur comme <code class=\"language-javascript\">&lt;LikeButton&gt;</code> et des composants sp\u00e9cifiques \u00e0 la plate-forme tels que <code class=\"language-javascript\">&lt;div&gt;</code>. React doit se charger de \u00ab\u00a0d\u00e9rouler\u00a0\u00bb <code class=\"language-javascript\">&lt;LikeButton&gt;</code> plus tard et d\u2019appliquer r\u00e9cursivement \u00e0 l\u2019arbre de l\u2019UI les modifications apport\u00e9es par les rendus des composants.</p>\n<p>Il s\u2019agit d\u2019une distinction subtile mais puissante. Puisque c\u2019est React qui appelle cette fonction de composant \u00e0 votre place, \u00e7a signifie que React peut diff\u00e9rer son appel si n\u00e9cessaire. Dans son impl\u00e9mentation actuelle, React parcourt l\u2019arbre de fa\u00e7on r\u00e9cursive et appelle les fonctions de rendu de l\u2019ensemble de l\u2019arbre mis \u00e0 jour en une seule passe. \u00c0 l\u2019avenir cependant, <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6170\">certaines mises \u00e0 jour pourraient \u00eatre diff\u00e9r\u00e9es pour conserver un affichage fluide</a>.</p>\n<p>C\u2019est un th\u00e8me courant dans la conception de React. Certaines biblioth\u00e8ques populaires impl\u00e9mentent une approche <em>\u201cpush\u201d</em> dans laquelle les calculs sont ex\u00e9cut\u00e9s d\u00e8s que de nouvelles donn\u00e9es sont disponibles. React, quant \u00e0 lui, s\u2019en tient \u00e0 l\u2019approche <em>\u201cpull\u201d</em> o\u00f9 les calculs peuvent \u00eatre diff\u00e9r\u00e9s au besoin.</p>\n<p>React n\u2019est pas une biblioth\u00e8que de traitement de donn\u00e9es g\u00e9n\u00e9rique. C\u2019est une biblioth\u00e8que pour construire des interfaces utilisateurs. Nous pensons que React est particuli\u00e8rement bien plac\u00e9 dans une application pour savoir quels calculs sont pertinents \u00e0 un instant pr\u00e9cis et lesquels ne le sont pas.</p>\n<p>Si quelque chose est en dehors de la zone affich\u00e9e \u00e0 l\u2019\u00e9cran, nous pouvons diff\u00e9rer toute la logique qui y est associ\u00e9e. Si les donn\u00e9es arrivent plus vite que la fr\u00e9quence de rafra\u00eechissement, nous pouvons fusionner et regrouper les mises \u00e0 jour. Nous pouvons donner la priorit\u00e9 au travail r\u00e9sultant des interactions utilisateurs (telles qu\u2019une animation d\u00e9clench\u00e9e par le clic d\u2019un bouton) plut\u00f4t qu\u2019\u00e0 une t\u00e2che de fond de moindre importance (telle que l\u2019affichage d\u2019un nouveau contenu fra\u00eechement charg\u00e9 depuis le r\u00e9seau) afin d\u2019\u00e9viter de produire un affichage saccad\u00e9.</p>\n<p>Pour \u00eatre clairs, nous n\u2019en sommes pas encore l\u00e0. Cependant, c\u2019est pour avoir la libert\u00e9 de faire quelque chose comme \u00e7a que nous pr\u00e9f\u00e9rons avoir le contr\u00f4le de la planification et que <code class=\"language-javascript\">setState()</code> est asynchrone. Sur un plan conceptuel, nous voyons \u00e7a comme la \u00ab\u00a0planification d\u2019une mise \u00e0 jour\u00a0\u00bb.</p>\n<p>Il nous serait plus difficile de contr\u00f4ler la planification si nous permettions \u00e0 l\u2019utilisateur de composer directement des vues avec le paradigme <em>\u201cpush\u201d</em> commun \u00e0 certaines variations de la <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Functional_reactive_programming\">programmation fonctionnelle r\u00e9active</a>. Nous voulons garder le contr\u00f4le du code interm\u00e9diaire qui sert de \u00ab\u00a0colle\u00a0\u00bb.</p>\n<p>React a pour objectif-cl\u00e9 de minimiser la quantit\u00e9 de code utilisateur qui s\u2019ex\u00e9cute avant de lui rendre la main. \u00c7a garantit que React conserve la possibilit\u00e9 de planifier et scinder le travail en segments selon sa connaissance de l\u2019UI.</p>\n<p>Il y a une blague interne dans l\u2019\u00e9quipe selon laquelle React aurait d\u00fb s\u2019appeler <em>\u201cSchedule\u201d</em> parce que React ne veut pas \u00eatre totalement \u00ab\u00a0r\u00e9actif\u00a0\u00bb.</p>\n<h3 id=\"developer-experience\"><a class=\"anchor\" href=\"/react/design-principles#developer-experience\"></a>Exp\u00e9rience de d\u00e9veloppement </h3>\n<p>Nous tenons \u00e0 offrir une bonne exp\u00e9rience de d\u00e9veloppement.</p>\n<p>Par exemple, nous maintenons les <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools\">React DevTools</a> qui vous permettent d\u2019inspecter l\u2019arbre des composants React dans Chrome et Firefox. Nous avons entendu dire que \u00e7a am\u00e9liore consid\u00e9rablement la productivit\u00e9 des ing\u00e9nieur\u00b7e\u00b7s de Facebook et de la communaut\u00e9.</p>\n<p>Nous essayons \u00e9galement de faire un effort suppl\u00e9mentaire pour fournir des avertissements utiles aux d\u00e9veloppeurs. Par exemple, React vous avertit durant le d\u00e9veloppement si vous imbriquez des balises d\u2019une fa\u00e7on que le navigateur ne comprend pas, ou si vous faites une faute de frappe courante dans l\u2019API. Les avertissements aux d\u00e9veloppeurs et les v\u00e9rifications associ\u00e9es sont la raison principale pour laquelle la version de d\u00e9veloppement de React est plus lente que celle de production.</p>\n<p>Les sch\u00e9mas d\u2019utilisation que nous voyons en interne chez Facebook nous aident \u00e0 comprendre quelles sont les erreurs courantes et comment les pr\u00e9venir rapidement. Lorsque nous ajoutons de nouvelles fonctionnalit\u00e9s, nous essayons d\u2019anticiper les erreurs courantes et vous avertissons \u00e0 leur sujet.</p>\n<p>Nous cherchons en permanence des moyens d\u2019am\u00e9liorer l\u2019exp\u00e9rience de d\u00e9veloppement. Nous aimons recueillir vos suggestions et accepter vos contributions visant \u00e0 la rendre encore meilleure.</p>\n<h3 id=\"debugging\"><a class=\"anchor\" href=\"/react/design-principles#debugging\"></a>D\u00e9bogage </h3>\n<p>Lorsque quelque chose se passe mal, il est important que vous ayez des pistes pour remonter jusqu\u2019\u00e0 la source de l\u2019erreur dans votre base de code. Avec React, ces pistes se basent sur les props et l\u2019\u00e9tat local.</p>\n<p>Si quelque chose ne va pas \u00e0 l\u2019\u00e9cran, vous pouvez ouvrir React DevTools, trouver le composant responsable du rendu, et ainsi voir si les props et l\u2019\u00e9tat sont corrects. Si c\u2019est le cas, vous savez que le probl\u00e8me se situe dans la fonction <code class=\"language-javascript\">render()</code> ou dans une fonction appel\u00e9e par <code class=\"language-javascript\">render()</code>. Le probl\u00e8me est isol\u00e9.</p>\n<p>Si l\u2019\u00e9tat est incorrect, vous savez que le probl\u00e8me est d\u00fb \u00e0 l\u2019un des appels \u00e0 <code class=\"language-javascript\">setState()</code> au sein de ce fichier. C\u2019est l\u00e0 aussi facile \u00e0 localiser et \u00e0 corriger car il y a g\u00e9n\u00e9ralement peu d\u2019appels \u00e0 <code class=\"language-javascript\">setState()</code> dans un m\u00eame fichier.</p>\n<p>Si les props sont incorrectes, vous pouvez remonter le long de l\u2019arbre dans l\u2019inspecteur \u00e0 la recherche du composant qui est \u00e0 l\u2019origine des mauvaises props.</p>\n<p>Cette capacit\u00e9 \u00e0 relier n\u2019importe quelle UI aux donn\u00e9es qui l\u2019ont g\u00e9n\u00e9r\u00e9e est tr\u00e8s importante dans React. Un objectif explicite de conception impose de ne pas \u00ab\u00a0emprisonner\u00a0\u00bb l\u2019\u00e9tat au sein de fermetures lexicales <em>(closures, NdT)</em> ou de combinateurs, mais de le rendre plut\u00f4t disponible directement dans React.</p>\n<p>Alors que l\u2019UI est dynamique, nous pensons que les fonctions synchrones <code class=\"language-javascript\">render()</code> bas\u00e9es enti\u00e8rement sur les props et l\u2019\u00e9tat local rendent le d\u00e9bogage certes ennuyeux mais d\u00e9terministe et bien d\u00e9limit\u00e9, plut\u00f4t que de virer au jeu de devinettes. Nous aimerions conserver cette contrainte dans React m\u00eame si \u00e7a complexifie certains cas d\u2019usage, tels que des animations complexes.</p>\n<h3 id=\"configuration\"><a class=\"anchor\" href=\"/react/design-principles#configuration\"></a>Configuration </h3>\n<p>Nous consid\u00e9rons les options de configuration d\u2019ex\u00e9cution comme probl\u00e9matiques.</p>\n<p>Par exemple, on nous demande parfois d\u2019impl\u00e9menter une fonction du genre <code class=\"language-javascript\">React.configure(options)</code> ou <code class=\"language-javascript\">React.register(component)</code>. \u00c7a pose toutefois de nombreux probl\u00e8mes, et nous ne connaissons pas de bonne solution.</p>\n<p>Que se passerait-il si cette fonction \u00e9tait appel\u00e9e depuis une biblioth\u00e8que de composants tierce\u00a0? Et si une application React int\u00e9grait une autre application React et que leurs configurations respectives \u00e9taient incompatibles\u00a0? Comment un composant tiers peut-il sp\u00e9cifier qu\u2019il n\u00e9cessite une configuration sp\u00e9cifique\u00a0? Nous pensons que la configuration globale ne fonctionne pas correctement avec la composition. Puisque la composition est au c\u0153ur de React, nous ne fournissons aucune configuration globale dans le code.</p>\n<p>Nous fournissons cependant une configuration globale au niveau de la construction. Par exemple, nous offrons des versions dinstinctes pour le d\u00e9veloppement et la production. Nous pourrions \u00e9galement <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6627\">ajouter une version de profilage</a> \u00e0 l\u2019avenir, et sommes ouverts \u00e0 l\u2019examen d\u2019autres param\u00e8tres de construction.</p>\n<h3 id=\"beyond-the-dom\"><a class=\"anchor\" href=\"/react/design-principles#beyond-the-dom\"></a>Au-del\u00e0 du DOM </h3>\n<p>Nous voyons l\u2019utilit\u00e9 de React dans la mesure o\u00f9 il nous permet d\u2019\u00e9crire des composants qui ont moins de bugs et se composent facilement entre eux. React visait originellement le DOM, mais <a class=\"external-link\" href=\"https://react-native.dev/\">React Native</a> est tout aussi important pour Facebook et pour la communaut\u00e9.</p>\n<p>\u00catre ind\u00e9pendant du moteur de rendu constitue une contrainte de conception importante pour React. \u00c7a alourdit un peu la repr\u00e9sentation interne. D\u2019un autre c\u00f4t\u00e9, les am\u00e9liorations apport\u00e9es au noyau b\u00e9n\u00e9ficient \u00e0 toutes les plates-formes.</p>\n<p>Avoir un seul mod\u00e8le de programmation nous permet de former des \u00e9quipes d\u2019ing\u00e9nieur\u00b7e\u00b7s autour de produits plut\u00f4t que de plates-formes. Jusqu\u2019\u00e0 pr\u00e9sent le jeu en vaut la chandelle.</p>\n<h3 id=\"implementation\"><a class=\"anchor\" href=\"/react/design-principles#implementation\"></a>Impl\u00e9mentation </h3>\n<p>Nous essayons de fournir des API \u00e9l\u00e9gantes dans la mesure du possible. Nous sommes beaucoup moins pr\u00e9occup\u00e9s par l\u2019\u00e9l\u00e9gance de l\u2019impl\u00e9mentation. Le monde r\u00e9el est loin d\u2019\u00eatre parfait et, dans une mesure raisonnable, nous pr\u00e9f\u00e9rons mettre du code laid dans la biblioth\u00e8que si \u00e7a signifie que l\u2019utilisateur n\u2019aura pas \u00e0 l\u2019\u00e9crire. Lorsque nous \u00e9valuons du nouveau code, nous visons d\u2019abord une impl\u00e9mentation correcte, performante et offrant une bonne exp\u00e9rience de d\u00e9veloppement. L\u2019\u00e9l\u00e9gance est secondaire.</p>\n<p>Nous pr\u00e9f\u00e9rons le code ennuyeux au code trop \u00ab\u00a0malin\u00a0\u00bb. Le code est jetable et change souvent. Il est donc important qu\u2019il <a class=\"external-link\" href=\"https://youtu.be/4anAwXYqLG8?t=13m9s\">n\u2019introduise pas de nouvelles abstractions internes sauf si c\u2019est absolument n\u00e9cessaire</a> (vid\u00e9o en anglais). Un code verbeux qui est facile \u00e0 d\u00e9placer, modifier et retirer reste pr\u00e9f\u00e9rable \u00e0 un code \u00e9l\u00e9gant qui est pr\u00e9matur\u00e9ment abstrait et difficile \u00e0 modifier.</p>\n<h3 id=\"optimized-for-tooling\"><a class=\"anchor\" href=\"/react/design-principles#optimized-for-tooling\"></a>Optimis\u00e9 pour l\u2019outillage </h3>\n<p>Certaines API couramment utilis\u00e9es ont des noms \u00e0 rallonge. Par exemple, nous utilisons <code class=\"language-javascript\">componentDidMount()</code> plut\u00f4t que <code class=\"language-javascript\">didMount()</code> ou <code class=\"language-javascript\">onMount()</code>. C\u2019est <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/issues/40#issuecomment-142442124\">volontaire</a>. L\u2019objectif est de bien mettre en avant les points d\u2019interactions avec la biblioth\u00e8que.</p>\n<p>Dans une base de code aussi vaste que celle de Facebook, il est tr\u00e8s important de pouvoir rechercher les utilisations d\u2019API sp\u00e9cifiques. Nous privil\u00e9gions les noms verbeux et distinctifs, tout particuli\u00e8rement pour les fonctionnalit\u00e9s qui doivent \u00eatre utilis\u00e9es avec parcimonie. Par exemple, il est difficile de rater <code class=\"language-javascript\">dangerouslySetInnerHTML</code> lors d\u2019une revue de code.</p>\n<p>L\u2019optimisation pour la recherche est \u00e9galement importante du fait de notre d\u00e9pendance aux <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=d0pOgY8__JM\">codemods</a> (vid\u00e9o en anglais) pour ex\u00e9cuter des modifications qui rompent la compatibilit\u00e9 ascendante. Nous voulons que les changements automatiques sur la base de code soient faciles et surs, et des noms verbeux nous aident \u00e0 y parvenir. De m\u00eame, des noms ais\u00e9ment identifiables facilitent l\u2019\u00e9criture de <a class=\"external-link\" href=\"https://github.com/yannickcr/eslint-plugin-react\">r\u00e8gles d\u2019analyse statique</a> personnalis\u00e9es pour React sans avoir \u00e0 se soucier de potentiels faux positifs.</p>\n<p><a href=\"/react/introducing-jsx\">JSX</a> joue un r\u00f4le similaire. Bien qu\u2019il ne soit pas n\u00e9cessaire \u00e0 React, nous l\u2019utilisons beaucoup chez Facebook \u00e0 la fois pour des raisons esth\u00e9tiques et pragmatiques.</p>\n<p>Dans notre base de code, JSX indique clairement aux outils qu\u2019ils travaillent avec un arbre d\u2019\u00e9l\u00e9ments React. \u00c7a rend possible l\u2019ajout \u00e0 la construction d\u2019optimisations telles que <a class=\"external-link\" href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-constant-elements/\">l\u2019extraction <em>(hoisting, NdT)</em> des \u00e9l\u00e9ments constants</a> (en anglais), l\u2019utilisation s\u00fbre d\u2018analyseurs statiques et de <em>codemods</em> internes, et <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/6771\">l\u2019inclusion de l\u2019emplacement dans le source JSX</a> au sein des messages d\u2019avertissements.</p>\n<h3 id=\"dogfooding\"><a class=\"anchor\" href=\"/react/design-principles#dogfooding\"></a><em>Dogfooding</em> </h3>\n<p>Nous faisons de notre mieux pour r\u00e9soudre les probl\u00e8mes soulev\u00e9s par la communaut\u00e9. N\u00e9anmoins, nous sommes susceptibles de prioriser les probl\u00e8mes rencontr\u00e9s aussi par les personnes en interne chez Facebook. \u00c7a peut sembler contre-intuitif, mais nous pensons que c\u2019est la raison principale pour laquelle la communaut\u00e9 peut miser sur React.</p>\n<p>L\u2019utilisation importante faite en interne nous conforte dans l\u2019id\u00e9e que React n\u2019est pas pr\u00e8s de dispara\u00eetre. React a \u00e9t\u00e9 cr\u00e9\u00e9 chez Facebook pour r\u00e9soudre ses probl\u00e8mes. Il apporte une valeur m\u00e9tier tangible \u00e0 la soci\u00e9t\u00e9 et est utilis\u00e9 dans bon nombre de ses produits. Notre <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Dogfooding\"><em>dogfooding</em></a> de React signifie que notre vision reste claire et que nous avons une direction bien \u00e9tablie pour l\u2019avenir.</p>\n<p>\u00c7a ne signifie pas que nous ignorons les probl\u00e8mes soulev\u00e9s par la communaut\u00e9. Par exemple, nous avons ajout\u00e9 la prise en charge des <a href=\"/react/webcomponents\">Web Components</a> et de <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/6243\">SVG</a> \u00e0 React alors que nous n\u2019utilisions ni l\u2019un ni l\u2019autre en interne. Nous <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/2686\">\u00e9coutons attentivement vos difficult\u00e9s</a> et nous <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/07/11/introducing-reacts-error-code-system.html\">y r\u00e9pondons</a> au mieux de nos capacit\u00e9s. La communaut\u00e9 est ce qui rend React si sp\u00e9cial pour nous et nous sommes honor\u00e9s d\u2019y contribuer en retour.</p>\n<p>Apr\u00e8s avoir livr\u00e9 de nombreux projets open source chez Facebook, nous avons appris qu\u2019essayer de satisfaire tout le monde en m\u00eame temps aboutissait \u00e0 des projets mal cibl\u00e9s et qui ne grandissaient pas. Au lieu de \u00e7a, nous avons constat\u00e9 que choisir un petit public et s\u2019efforcer de le satisfaire avait un net effet positif. C\u2019est exactement ce que nous avons fait avec React et, jusqu\u2019\u00e0 pr\u00e9sent, la r\u00e9solution des probl\u00e8mes rencontr\u00e9s par les \u00e9quipes de produits chez Facebook s\u2019est bien transpos\u00e9e \u00e0 la communaut\u00e9 open source.</p>\n<p>L\u2019inconv\u00e9nient de cette approche est que parfois nous ne mettons pas assez l\u2019accent sur les probl\u00e8mes auxquels les \u00e9quipes de Facebook n\u2019ont pas \u00e0 faire face, telles que l\u2019exp\u00e9rience de \u00ab\u00a0d\u00e9marrage\u00a0\u00bb. Nous en sommes parfaitement conscients, et nous r\u00e9fl\u00e9chissons aux fa\u00e7ons de nous am\u00e9liorer qui profiteraient \u00e0 toute la communaut\u00e9 sans commettre les m\u00eames erreurs que nous avons faites sur de pr\u00e9c\u00e9dents projets open source.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/design-principles.md\">Edit this page</a></p></div></article>", "path": "/react/design-principles", "nav": ["/react/implementation-notes", "/react/faq-ajax"]}]}, {"key": "FAQ", "values": [{"key": "AJAX et les API", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"how-can-i-make-an-ajax-call\"><a class=\"anchor\" href=\"/react/faq-ajax#how-can-i-make-an-ajax-call\"></a>Comment faire un appel AJAX\u00a0? </h3>\n<p>Vous pouvez utiliser n\u2019importe quelle biblioth\u00e8que AJAX de votre choix avec React. Parmi les plus populaires, on trouve <a class=\"external-link\" href=\"https://github.com/axios/axios\">Axios</a>, <a class=\"external-link\" href=\"https://api.jquery.com/jQuery.ajax/\">jQuery AJAX</a>, et le standard <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/Fetch_API\">window.fetch</a> int\u00e9gr\u00e9 au navigateur.</p>\n<h3 id=\"where-in-the-component-lifecycle-should-i-make-an-ajax-call\"><a class=\"anchor\" href=\"/react/faq-ajax#where-in-the-component-lifecycle-should-i-make-an-ajax-call\"></a>O\u00f9 dois-je faire mon appel AJAX dans le cycle de vie du composant\u00a0? </h3>\n<p>Vous devriez obtenir vos donn\u00e9es via des appels AJAX dans la m\u00e9thode de cycle de vie <a href=\"/react/react-component#mounting\"><code class=\"language-javascript\">componentDidMount</code></a>. De cette fa\u00e7on, vous pourrez y utiliser <code class=\"language-javascript\">setState</code> pour mettre \u00e0 jour votre composant lorsque les donn\u00e9es seront r\u00e9cup\u00e9r\u00e9es.</p>\n<h3 id=\"example-using-ajax-results-to-set-local-state\"><a class=\"anchor\" href=\"/react/faq-ajax#example-using-ajax-results-to-set-local-state\"></a>Exemple\u00a0:\u00a0utiliser des r\u00e9sultats AJAX pour initialiser un \u00e9tat local </h3>\n<p>Le composant ci-dessous montre comment faire un appel AJAX dans <code class=\"language-javascript\">componentDidMount</code> pour peupler l\u2019\u00e9tat local d\u2019un composant.</p>\n<p>Dans l\u2019exemple, l\u2019API renvoie un objet JSON avec la structure suivante\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">{\n  \"items\": [\n    { \"id\": 1, \"name\": \"Apples\",  \"price\": \"$2\" },\n    { \"id\": 2, \"name\": \"Peaches\", \"price\": \"$5\" }\n  ]\n}</code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      error<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      isLoaded<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      items<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.example.com/items\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=&gt;</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            isLoaded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            items<span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>items\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Remarque : il est important de traiter les erreurs ici</span>\n        <span class=\"token comment\">// au lieu d'utiliser un bloc catch(), pour ne pas passer \u00e0 la trappe</span>\n        <span class=\"token comment\">// des exceptions provenant de r\u00e9els bugs du composant.</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            isLoaded<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            error\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">,</span> isLoaded<span class=\"token punctuation\">,</span> items <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Erreur : </span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement\u2026</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voici l\u2019\u00e9quivalent avec les <a href=\"/react/hooks-intro\">Hooks</a>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">,</span> setError<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoaded<span class=\"token punctuation\">,</span> setIsLoaded<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">,</span> setItems<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Remarque : le tableau vide de d\u00e9pendances [] indique</span>\n  <span class=\"token comment\">// que useEffect ne s\u2019ex\u00e9cutera qu\u2019une fois, un peu comme</span>\n  <span class=\"token comment\">// componentDidMount()</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.example.com/items\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=&gt;</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setItems</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Remarque : il faut g\u00e9rer les erreurs ici plut\u00f4t que dans</span>\n        <span class=\"token comment\">// un bloc catch() afin que nous n\u2019avalions pas les exceptions</span>\n        <span class=\"token comment\">// dues \u00e0 de v\u00e9ritables bugs dans les composants.</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Erreur : </span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Chargement...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-ajax.md\">Edit this page</a></p></div></article>", "path": "/react/faq-ajax", "nav": ["/react/design-principles", "/react/faq-build"]}, {"key": "Babel, JSX, et \u00e9tapes de construction", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"do-i-need-to-use-jsx-with-react\"><a class=\"anchor\" href=\"/react/faq-build#do-i-need-to-use-jsx-with-react\"></a>Ai-je besoin d\u2019utiliser JSX avec React\u00a0? </h3>\n<p>Non\u00a0! Pour en apprendre davantage, consultez <a href=\"/react/react-without-jsx\">\u00ab\u00a0React sans JSX\u00a0\u00bb</a>.</p>\n<h3 id=\"do-i-need-to-use-es6--with-react\"><a class=\"anchor\" href=\"/react/faq-build#do-i-need-to-use-es6--with-react\"></a>Ai-je besoin d\u2019utiliser ES6 (+) avec React\u00a0? </h3>\n<p>Non\u00a0! Pour en apprendre davantage, consultez <a href=\"/react/react-without-es6\">\u00ab\u00a0React sans ES6\u00a0\u00bb</a>.</p>\n<h3 id=\"how-can-i-write-comments-in-jsx\"><a class=\"anchor\" href=\"/react/faq-build#how-can-i-write-comments-in-jsx\"></a>Comment \u00e9crire des commentaires en JSX\u00a0? </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Placez un commentaire ici */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  Bonjour, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* \u00c7a fonctionne aussi pour\n   les commentaires sur plusieurs lignes */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  Bonjour, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> !\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-build.md\">Edit this page</a></p></div></article>", "path": "/react/faq-build", "nav": ["/react/faq-ajax", "/react/faq-functions"]}, {"key": "Passer des fonctions aux composants", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"how-do-i-pass-an-event-handler-like-onclick-to-a-component\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-pass-an-event-handler-like-onclick-to-a-component\"></a>Comment passer un gestionnaire d\u2019\u00e9v\u00e9nements (par exemple onClick) \u00e0 un composant\u00a0? </h3>\n<p>On peut passer un gestionnaire d\u2019\u00e9v\u00e9nements et d\u2019autres fonctions dans les props d\u2019un composant, comme n\u2019importe quelle autre valeur\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Si vous avez besoin d\u2019acc\u00e9der au composant parent dans le gestionnaire d\u2019\u00e9v\u00e9nements, vous devrez lier la fonction \u00e0 l\u2019instance du composant (comme ci-dessous).</p>\n<h3 id=\"how-do-i-bind-a-function-to-a-component-instance\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-bind-a-function-to-a-component-instance\"></a>Comment lier une fonction \u00e0 l\u2019instance d\u2019un composant\u00a0? </h3>\n<p>Il y\u2019a plusieurs fa\u00e7ons de s\u2019assurer que des fonctions ont acc\u00e8s aux attributs du composant comme <code class=\"language-javascript\">this.props</code> et <code class=\"language-javascript\">this.state</code>, qui d\u00e9pendent de la syntaxe et de l\u2019outillage \u00e9ventuel que vous utilisez.</p>\n<h4 id=\"bind-in-constructor-es2015\"><a class=\"anchor\" href=\"/react/faq-functions#bind-in-constructor-es2015\"></a>Lier la fonction dans le constructeur (ES2015) </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cliqu\u00e9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"class-properties-stage-3-proposal\"><a class=\"anchor\" href=\"/react/faq-functions#class-properties-stage-3-proposal\"></a>Propri\u00e9t\u00e9 de classe (proposition stade 3) </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Remarque : cette syntaxe est exp\u00e9rimentale et n'est pas encore standardis\u00e9e</span>\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cliqu\u00e9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"bind-in-render\"><a class=\"anchor\" href=\"/react/faq-functions#bind-in-render\"></a>Lier dans la m\u00e9thode <code class=\"language-javascript\">render</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cliqu\u00e9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Utiliser <code class=\"language-javascript\">Function.prototype.bind</code> dans la m\u00e9thode <code class=\"language-javascript\">render</code> cr\u00e9e une nouvelle fonction \u00e0 chaque fois que le composant est affich\u00e9, ce qui peut impacter n\u00e9gativement les performances (voir plus bas).</p>\n</div>\n<h4 id=\"arrow-function-in-render\"><a class=\"anchor\" href=\"/react/faq-functions#arrow-function-in-render\"></a>Fonction fl\u00e9ch\u00e9e dans le rendu </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cliqu\u00e9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Utiliser une fonction fl\u00e9ch\u00e9e dans la fonction de rendu cr\u00e9e une nouvelle fonction \u00e0 chaque fois que le composant est affich\u00e9, ce qui peut impacter n\u00e9gativement les optimisations bas\u00e9es sur une comparaison stricte d\u2019identit\u00e9.</p>\n</div>\n<h3 id=\"is-it-ok-to-use-arrow-functions-in-render-methods\"><a class=\"anchor\" href=\"/react/faq-functions#is-it-ok-to-use-arrow-functions-in-render-methods\"></a>Est-il acceptable d\u2019utiliser une fonction fl\u00e9ch\u00e9e \u00e0 l\u2019int\u00e9rieur de la m\u00e9thode <code class=\"language-javascript\">render</code>\u00a0? </h3>\n<p>C\u2019est g\u00e9n\u00e9ralement acceptable, et c\u2019est souvent la fa\u00e7on la plus facile de passer des arguments \u00e0 une fonction de rappel.</p>\n<p>Si vous avez des probl\u00e8mes de performances, n\u2019h\u00e9sitez pas \u00e0 optimiser\u00a0!</p>\n<h3 id=\"why-is-binding-necessary-at-all\"><a class=\"anchor\" href=\"/react/faq-functions#why-is-binding-necessary-at-all\"></a>Pourquoi est-il parfois n\u00e9cessaire de lier une fonction\u00a0? </h3>\n<p>En JavaScript, ces deux extraits de code ne sont <strong>pas</strong> \u00e9quivalents\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> method <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span>\n<span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Lier les m\u00e9thodes permet de s\u2019assurer que le deuxi\u00e8me extrait de code fonctionne de la m\u00eame mani\u00e8re que le premier.</p>\n<p>Avec React, vous n\u2019avez g\u00e9n\u00e9ralement besoin de lier que les m\u00e9thodes que vous <em>passez</em> \u00e0 d\u2019autres composants. Par exemple, <code class=\"language-javascript\">&lt;button onClick={this.handleClick}&gt;</code> passe <code class=\"language-javascript\">this.handleClick</code>, vous devez donc la lier. Cependant, il n\u2019est pas n\u00e9cessaire de lier la m\u00e9thode <code class=\"language-javascript\">render</code> ou les m\u00e9thodes de cycle de vie\u00a0: on ne les passe pas \u00e0 d\u2019autres composants.</p>\n<p><a class=\"external-link\" href=\"https://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/\">Cet article de Yehuda Katz</a> (en anglais) explique en d\u00e9tail ce qu\u2019est la liaison de m\u00e9thode et comment les fonctions marchent en JavaScript.</p>\n<h3 id=\"why-is-my-function-being-called-every-time-the-component-renders\"><a class=\"anchor\" href=\"/react/faq-functions#why-is-my-function-being-called-every-time-the-component-renders\"></a>Pourquoi ma fonction est appel\u00e9e \u00e0 chaque affichage du composant\u00a0? </h3>\n<p>V\u00e9rifiez que vous <em>n\u2019appelez pas la fonction</em> en la passant au composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Erron\u00e9 : handleClick est appel\u00e9e au lieu d'\u00eatre pass\u00e9e par r\u00e9f\u00e9rence !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Au lieu de \u00e7a, <em>passez la fonction</em> (sans les parenth\u00e8ses)\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Correct : handleClick est pass\u00e9e par r\u00e9f\u00e9rence !</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Cliquez ici</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"how-do-i-pass-a-parameter-to-an-event-handler-or-callback\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-pass-a-parameter-to-an-event-handler-or-callback\"></a>Comment passer un argument \u00e0 un gestionnaire d\u2019\u00e9v\u00e9nements ou une fonction de rappel\u00a0? </h3>\n<p>Vous pouvez utiliser une fonction fl\u00e9ch\u00e9e pour enrober un gestionnaire d\u2019\u00e9v\u00e9nements et lui passer des arguments\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Le code ci-dessous est \u00e9quivalent \u00e0 une utilisation de <code class=\"language-javascript\">.bind</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h4 id=\"example-passing-params-using-arrow-functions\"><a class=\"anchor\" href=\"/react/faq-functions#example-passing-params-using-arrow-functions\"></a>Exemple\u00a0: passer des arguments en utilisant une fonction fl\u00e9ch\u00e9e </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">65</span> <span class=\"token comment\">// Code de caract\u00e8re ASCII</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Alphabet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      justClicked<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      letters<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>length<span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> justClicked<span class=\"token operator\">:</span> letter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Cliqu\u00e9 : </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>justClicked<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>letters<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span> <span class=\"token operator\">=&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"example-passing-params-using-data-attributes\"><a class=\"anchor\" href=\"/react/faq-functions#example-passing-params-using-data-attributes\"></a>Exemple\u00a0: passer des arguments en utilisant des attributs <code class=\"language-javascript\">data-*</code> </h4>\n<p>Une autre approche consiste \u00e0 utiliser des API DOM pour stocker les donn\u00e9es n\u00e9cessaires aux gestionnaires d\u2019\u00e9v\u00e9nements. Pensez-y si vous avez besoin d\u2019optimiser un grand nombre d\u2019\u00e9l\u00e9ments ou si vous avez des composants bas\u00e9s sur <code class=\"language-javascript\">React.PureComponent</code>.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">65</span> <span class=\"token comment\">// Code de caract\u00e8re ASCII</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Alphabet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      justClicked<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      letters<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>length<span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      justClicked<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>letter\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Cliqu\u00e9 : </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>justClicked<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>letters<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span> <span class=\"token operator\">=&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">data-letter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\"><a class=\"anchor\" href=\"/react/faq-functions#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\"></a>Comment \u00e9viter qu\u2019une fonction soit appel\u00e9e trop t\u00f4t ou trop souvent\u00a0? </h3>\n<p>Si vous avez un gestionnaire d\u2019\u00e9v\u00e9nements comme <code class=\"language-javascript\">onClick</code> ou <code class=\"language-javascript\">onScroll</code> et que vous voulez \u00e9viter que la fonction de rappel soit appel\u00e9e trop fr\u00e9quemment, vous pouvez limiter sa fr\u00e9quence d\u2018ex\u00e9cution. Vous pouvez le faire en utilisant\u00a0:</p>\n<ul>\n<li><strong>le <em>throttling</em></strong>\u00a0: limitation de la fr\u00e9quence de d\u00e9clenchement (exemple\u00a0: <a class=\"external-link\" href=\"https://lodash.com/docs#throttle\"><code class=\"language-javascript\">_.throttle</code></a>)</li>\n<li><strong>le <em>debouncing</em></strong>\u00a0: application des modifications apr\u00e8s une p\u00e9riode d\u2019inactivit\u00e9 (exemple\u00a0: <a class=\"external-link\" href=\"https://lodash.com/docs#debounce\"><code class=\"language-javascript\">_.debounce</code></a>)</li>\n<li><strong>le <em>throttling</em> bas\u00e9 sur <code class=\"language-javascript\">requestAnimationFrame</code></strong>\u00a0: limitation de la fr\u00e9quence de d\u00e9clenchement gr\u00e2ce \u00e0 <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/Window/requestAnimationFrame\"><code class=\"language-javascript\">requestAnimationFrame</code></a> (exemple\u00a0: <a class=\"external-link\" href=\"https://github.com/alexreardon/raf-schd\"><code class=\"language-javascript\">raf-schd</code></a>)</li>\n</ul>\n<p>Jetez un coup d\u2019\u0153il \u00e0 <a class=\"external-link\" href=\"http://demo.nimius.net/debounce_throttle/\">cette visualisation</a> pour une comparaison intuitive des fonctions <code class=\"language-javascript\">throttle</code> et <code class=\"language-javascript\">debounce</code>.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p><code class=\"language-javascript\">_.debounce</code>, <code class=\"language-javascript\">_.throttle</code> et <code class=\"language-javascript\">raf-schd</code> fournissent une m\u00e9thode <code class=\"language-javascript\">cancel</code> pour annuler l\u2019appel \u00e0 la fonction de rappel diff\u00e9r\u00e9e. Il est recommand\u00e9 d\u2019appeler cette m\u00e9thode dans <code class=\"language-javascript\">componentWillUnmount</code> <em>ou</em> de s\u2019assurer dans la fonction diff\u00e9r\u00e9e que le composant est toujours mont\u00e9.</p>\n</div>\n<h4 id=\"throttle\"><a class=\"anchor\" href=\"/react/faq-functions#throttle\"></a>Throttle </h4>\n<p>Le <em>throttling</em> \u00e9vite qu\u2019une fonction soit appel\u00e9e plus d\u2019une fois dans un certain laps de temps. L\u2019exemple ci-dessous limite le gestionnaire d\u2019\u00e9v\u00e9nements de clic pour \u00e9viter qu\u2019il soit appel\u00e9 plus d\u2019une fois par seconde.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> throttle <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash.throttle'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LoadMoreButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Charger la suite</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">loadMore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"debounce\"><a class=\"anchor\" href=\"/react/faq-functions#debounce\"></a>Debounce </h4>\n<p>Le <em>debouncing</em> garantit qu\u2019une fonction ne sera appel\u00e9e qu\u2019apr\u00e8s qu\u2018un certain temps a pass\u00e9 depuis le dernier appel \u00e0 cette fonction\u00a0: on garantit un intervalle minimal entre deux ex\u00e9cutions. \u00c7a peut \u00eatre utile quand vous avez un calcul complexe \u00e0 faire en r\u00e9ponse \u00e0 un \u00e9v\u00e9nement susceptible d\u2019\u00eatre d\u00e9clench\u00e9 fr\u00e9quemment (comme le d\u00e9filement d\u2019une page ou les frappes au clavier). L\u2019exemple ci-dessous utilise cette m\u00e9thode sur un champ texte avec un d\u00e9lai de 250\u00a0ms.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> debounce <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash.debounce'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Searchbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChangeDebounced <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChange<span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChangeDebounced<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Recherche...<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">defaultValue</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// React recycle les \u00e9v\u00e9nements, on a donc besoin de lire la valeur avant le diff\u00e9r\u00e9.</span>\n    <span class=\"token comment\">// On aurait aussi pu appeler `event.persist()` et passer l\u2019\u00e9v\u00e9nement complet.</span>\n    <span class=\"token comment\">// Pour en apprendre davantage, consultez fr.reactjs.org/docs/events.html#event-pooling</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">emitChangeDebounced</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">emitChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"requestanimationframe-throttling\"><a class=\"anchor\" href=\"/react/faq-functions#requestanimationframe-throttling\"></a><em>Throttling</em> bas\u00e9 sur <code class=\"language-javascript\">requestAnimationFrame</code> </h4>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/API/Window/requestAnimationFrame\"><code class=\"language-javascript\">requestAnimationFrame</code></a> permet de diff\u00e9rer une fonction pour qu\u2019elle soit ex\u00e9cut\u00e9e par le navigateur \u00e0 un moment optimal pour les performances d\u2019affichage. Une fonction diff\u00e9r\u00e9e avec <code class=\"language-javascript\">requestAnimationFrame</code> sera ex\u00e9cut\u00e9e \u00e0 la prochaine passe d\u2019affichage <em>(frame, NdT)</em>. Le navigateur fera de son mieux pour qu\u2019il y ait toujours 60 passes par seconde (60\u00a0fps). Cependant, si le navigateur n\u2019y arrive pas, il <em>limitera</em> naturellement le nombre de passes par seconde. Par exemple, un appareil pourrait n\u2019\u00eatre capable d\u2019afficher que 30 fps, vous n\u2019obtiendrez donc que 30 passes par seconde. Utiliser <code class=\"language-javascript\">requestAnimationFrame</code> pour limiter l\u2019ex\u00e9cution est une technique pratique afin d\u2019\u00e9viter de faire plus de 60 mises \u00e0 jour par seconde. Si vous faites 100 mises \u00e0 jour en une seconde, vous cr\u00e9ez une charge de travail suppl\u00e9mentaire pour le navigateur que l\u2019utilisateur ne pourra de toutes fa\u00e7ons pas voir.</p>\n<div class=\"blockquote\">\n<strong>Remarque</strong>\n<p>Utiliser cette technique ne capturera que la derni\u00e8re valeur publi\u00e9e \u00e0 chaque passe. Vous pouvez voir un exemple du fonctionnement de cette optimisation sur le <a class=\"external-link\" href=\"https://developer.mozilla.org/fr/docs/Web/Events/scroll\"><code class=\"language-javascript\">MDN</code></a>.</p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> rafSchedule <span class=\"token keyword\">from</span> <span class=\"token string\">'raf-schd'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScrollListener</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleScroll</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Cr\u00e9e une nouvelle fonction \u00e0 planifier</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scheduleUpdate <span class=\"token operator\">=</span> <span class=\"token function\">rafSchedule</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">point</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onScroll</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleScroll</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Quand on re\u00e7oit un \u00e9v\u00e9nement de d\u00e9filement de la page, planifier une mise \u00e0 jour.</span>\n    <span class=\"token comment\">// Si on re\u00e7oit plusieurs mises \u00e0 jour dans la m\u00eame passe, on ne publiera que la</span>\n    <span class=\"token comment\">// derni\u00e8re valeur.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Annule toute mise \u00e0 jour en attente puisqu\u2019on d\u00e9monte le composant</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scheduleUpdate<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> overflow<span class=\"token operator\">:</span> <span class=\"token string\">'scroll'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onScroll</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/my-huge-image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"testing-your-rate-limiting\"><a class=\"anchor\" href=\"/react/faq-functions#testing-your-rate-limiting\"></a>Tester votre limitation de fr\u00e9quence </h4>\n<p>Afin de tester que votre code de limitation de fr\u00e9quence fonctionne correctement, il est utile de pouvoir manipuler le temps. Si vous utilisez <a class=\"external-link\" href=\"https://facebook.github.io/jest/\"><code class=\"language-javascript\">jest</code></a>, vous pouvez utiliser les <a class=\"external-link\" href=\"https://facebook.github.io/jest/docs/en/timer-mocks.html\">fausses horloges</a> <em>(mock timers, NdT)</em> pour acc\u00e9l\u00e9rer le temps. Si vous utilisez <code class=\"language-javascript\">requestAnimationFrame</code>, vous pouvez utiliser <a class=\"external-link\" href=\"https://github.com/alexreardon/raf-stub\"><code class=\"language-javascript\">raf-stub</code></a> afin de contr\u00f4ler la progression des passes d\u2019animation.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-functions.md\">Edit this page</a></p></div></article>", "path": "/react/faq-functions", "nav": ["/react/faq-build", "/react/faq-state"]}, {"key": "\u00c9tat local de composant", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"what-does-setstate-do\"><a class=\"anchor\" href=\"/react/faq-state#what-does-setstate-do\"></a>Que fait <code class=\"language-javascript\">setState</code>\u00a0? </h3>\n<p><code class=\"language-javascript\">setState()</code> planifie la mise \u00e0 jour de l\u2019objet <code class=\"language-javascript\">state</code> du composant. Quand l\u2019\u00e9tat local change, le composant r\u00e9pond en se rafra\u00eechissant.</p>\n<h3 id=\"what-is-the-difference-between-state-and-props\"><a class=\"anchor\" href=\"/react/faq-state#what-is-the-difference-between-state-and-props\"></a>Quelle est la diff\u00e9rence entre <code class=\"language-javascript\">state</code> et <code class=\"language-javascript\">props</code>\u00a0? </h3>\n<p><a href=\"/react/components-and-props\"><code class=\"language-javascript\">props</code></a> (diminutif de \u00ab\u00a0propri\u00e9t\u00e9s\u00a0\u00bb) et <a href=\"/react/state-and-lifecycle\"><code class=\"language-javascript\">state</code></a> sont tous les deux des objets JavaScript bruts. M\u00eame s\u2019ils contiennent tous les deux des informations qui influencent le r\u00e9sultat produit, ils pr\u00e9sentent une diff\u00e9rence majeure\u00a0: <code class=\"language-javascript\">props</code> est pass\u00e9 <em>au</em> composant (\u00e0 la mani\u00e8re des arguments d\u2019une fonction) tandis que <code class=\"language-javascript\">state</code> est g\u00e9r\u00e9 <em>dans</em> le composant (comme le sont les variables d\u00e9clar\u00e9es \u00e0 l\u2019int\u00e9rieur d\u2019une fonction).</p>\n<p>Voici quelques ressources utiles pour mieux comprendre selon quels crit\u00e8res choisir entre <code class=\"language-javascript\">props</code> et <code class=\"language-javascript\">state</code>\u00a0:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/uberVU/react-guide/blob/master/props-vs-state.md\">Props vs State</a></li>\n<li><a class=\"external-link\" href=\"https://lucybain.com/blog/2016/react-state-vs-pros/\">ReactJS: Props vs. State</a></li>\n</ul>\n<h3 id=\"why-is-setstate-giving-me-the-wrong-value\"><a class=\"anchor\" href=\"/react/faq-state#why-is-setstate-giving-me-the-wrong-value\"></a>Pourquoi <code class=\"language-javascript\">setState</code> me renvoie-t-elle une valeur incorrecte\u00a0? </h3>\n<p>En React, <code class=\"language-javascript\">this.props</code> et <code class=\"language-javascript\">this.state</code> repr\u00e9sentent l\u2019un comme l\u2019autre les valeurs du rendu, c\u2019est-\u00e0-dire ce qui est actuellement affich\u00e9.</p>\n<p>Les appels \u00e0 <code class=\"language-javascript\">setState</code> sont asynchrones\u00a0: ne comptez pas sur <code class=\"language-javascript\">this.state</code> pour refl\u00e9ter la nouvelle valeur imm\u00e9diatement apr\u00e8s avoir appel\u00e9 <code class=\"language-javascript\">setState</code>. Passez une fonction de mise \u00e0 jour \u00e0 la place d\u2019un objet si vous devez calculer des valeurs en fonction de l\u2019\u00e9tat actuel (voir ci-dessous pour plus de d\u00e9tails).</p>\n<p>Voici un exemple de code qui ne se comporte <em>pas</em> comme attendu\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Attention : \u00e7a ne va *pas* fonctionner comme pr\u00e9vu.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">handleSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Disons que `this.state.count` commence \u00e0 0.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Lorsque React rafra\u00eechira le composant, `this.state.count` sera \u00e0 1,</span>\n  <span class=\"token comment\">// pourtant, on s'attendait \u00e0 3.</span>\n\n  <span class=\"token comment\">// C'est parce que la fonction `incrementCount()` ci-dessus lit `this.state.count`,</span>\n  <span class=\"token comment\">// mais React ne met pas \u00e0 jour `this.state.count` tant que le composant n'est pas rafra\u00eechi.</span>\n  <span class=\"token comment\">// Du coup `incrementCount()` lit `this.state.count` qui est \u00e9gal \u00e0 0 \u00e0 chaque fois,</span>\n  <span class=\"token comment\">// et le d\u00e9finit \u00e0 1.</span>\n\n  <span class=\"token comment\">// Le correctif est d\u00e9crit ci-dessous !</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voir ci-dessous pour savoir comment r\u00e9soudre ce probl\u00e8me.</p>\n<h3 id=\"how-do-i-update-state-with-values-that-depend-on-the-current-state\"><a class=\"anchor\" href=\"/react/faq-state#how-do-i-update-state-with-values-that-depend-on-the-current-state\"></a>Comment mettre \u00e0 jour l\u2019\u00e9tat avec des valeurs qui d\u00e9pendent de l\u2019\u00e9tat actuel\u00a0? </h3>\n<p>Passez une fonction au lieu d\u2019un objet \u00e0 <code class=\"language-javascript\">setState</code> pour vous assurer que l\u2019appel utilise toujours la version la plus r\u00e9cente de l\u2019\u00e9tat (voir ci-dessous).</p>\n<h3 id=\"what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\"><a class=\"anchor\" href=\"/react/faq-state#what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\"></a>Quelle est la diff\u00e9rence entre passer un objet ou une fonction \u00e0 <code class=\"language-javascript\">setState</code>\u00a0? </h3>\n<p>Passer une fonction de mise \u00e0 jour vous permet d\u2019acc\u00e9der \u00e0 la valeur \u00e0 jour de l\u2019\u00e9tat actuel au sein de cette fonction. Comme les appels <code class=\"language-javascript\">setState</code> sont group\u00e9s par lots, \u00e7a vous permet d\u2019encha\u00eener les mises \u00e0 jour et de vous assurer qu\u2019elles sont effectu\u00e9es les unes apr\u00e8s les autres au lieu d\u2019entrer en conflit\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Important : lisez `state` au lieu de `this.state` lors de la mise \u00e0 jour.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">handleSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Disons que `this.state.count` commence \u00e0 0.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Si vous lisiez `this.state.count` maintenant, il serait toujours \u00e0 0.</span>\n  <span class=\"token comment\">// Mais quand React rafra\u00eechira le composant, il vaudra bien 3.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"/react/react-component#setstate\">En apprendre davantage sur setState</a></p>\n<h3 id=\"when-is-setstate-asynchronous\"><a class=\"anchor\" href=\"/react/faq-state#when-is-setstate-asynchronous\"></a>Quand <code class=\"language-javascript\">setState</code> est-elle asynchrone\u00a0? </h3>\n<p>Actuellement, <code class=\"language-javascript\">setState</code> est asynchrone \u00e0 l\u2019int\u00e9rieur des gestionnaires d\u2019\u00e9v\u00e9nements.</p>\n<p>\u00c7a permet de garantir, par exemple, que si <code class=\"language-javascript\">Parent</code> et <code class=\"language-javascript\">Child</code> appellent tous les deux <code class=\"language-javascript\">setState</code> lors d\u2019un clic, <code class=\"language-javascript\">Child</code> ne sera pas rafra\u00eechi deux fois. Au lieu de \u00e7a, React \u00ab\u00a0apure\u00a0\u00bb les mises \u00e0 jour de l\u2019\u00e9tat \u00e0 la fin de l\u2019\u00e9v\u00e9nement du navigateur. \u00c7a permet une am\u00e9lioration significative des performances pour les applications de grande ampleur.</p>\n<p>Il s\u2019agit d\u2019un d\u00e9tail d\u2019impl\u00e9mentation donc \u00e9vitez de vous appuyer dessus. Dans de futures versions, React groupera par d\u00e9faut les mises \u00e0 jour dans davantage encore de cas de figure.</p>\n<h3 id=\"why-doesnt-react-update-thisstate-synchronously\"><a class=\"anchor\" href=\"/react/faq-state#why-doesnt-react-update-thisstate-synchronously\"></a>Pourquoi React ne met-il pas \u00e0 jour <code class=\"language-javascript\">this.state</code> de fa\u00e7on synchrone\u00a0? </h3>\n<p>Comme expliqu\u00e9 dans la section pr\u00e9c\u00e9dente, React \u00ab\u00a0attend\u00a0\u00bb volontairement que tous les composants aient fini d\u2019appeler <code class=\"language-javascript\">setState()</code> dans leurs gestionnaires d\u2019\u00e9v\u00e9nements avant de commencer \u00e0 mettre \u00e0 jour les rendus. \u00c7a am\u00e9liore les performances en \u00e9vitant des rafra\u00eechissements inutiles.</p>\n<p>Cependant, vous vous demandez peut-\u00eatre toujours pourquoi React ne met pas juste \u00e0 jour <code class=\"language-javascript\">this.state</code> imm\u00e9diatement sans rafra\u00eechir.</p>\n<p>Il y a deux raisons principales\u00a0:</p>\n<ul>\n<li>\u00c7a briserait la coh\u00e9rence entre <code class=\"language-javascript\">props</code> et <code class=\"language-javascript\">state</code>, entra\u00eenant des probl\u00e8mes tr\u00e8s difficiles \u00e0 d\u00e9boguer.</li>\n<li>\u00c7a rendrait certaines nouvelles fonctionnalit\u00e9s sur lesquelles nous travaillons impossibles \u00e0 impl\u00e9menter.</li>\n</ul>\n<p>Ce <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/11527#issuecomment-360199710\">commentaire GitHub</a> entre dans le d\u00e9tail d\u2019exemples sp\u00e9cifiques.</p>\n<h3 id=\"should-i-use-a-state-management-library-like-redux-or-mobx\"><a class=\"anchor\" href=\"/react/faq-state#should-i-use-a-state-management-library-like-redux-or-mobx\"></a>Devrais-je utiliser une biblioth\u00e8que de gestion d\u2019\u00e9tat, comme par exemple Redux ou Mobx\u00a0? </h3>\n<p><a class=\"external-link\" href=\"https://redux.js.org/faq/general#when-should-i-use-redux\">Peut-\u00eatre.</a></p>\n<p>Bien conna\u00eetre React avant d\u2019ajouter des biblioth\u00e8ques suppl\u00e9mentaires reste une bonne id\u00e9e. Vous pouvez cr\u00e9er des applications plut\u00f4t complexes en utilisant uniquement React.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-state.md\">Edit this page</a></p></div></article>", "path": "/react/faq-state", "nav": ["/react/faq-functions", "/react/faq-styling"]}, {"key": "Styles et CSS", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"how-do-i-add-css-classes-to-components\"><a class=\"anchor\" href=\"/react/faq-styling#how-do-i-add-css-classes-to-components\"></a>Comment ajouter des classes CSS aux composants\u00a0? </h3>\n<p>En passant une cha\u00eene \u00e0 la prop <code class=\"language-javascript\">className</code>\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu navigation-menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Menu</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Les classes CSS d\u00e9pendent fr\u00e9quemment des props ou de l\u2019\u00e9tat local du composant\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> className <span class=\"token operator\">=</span> <span class=\"token string\">'menu'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>isActive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    className <span class=\"token operator\">+=</span> <span class=\"token string\">' menu-active'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Menu</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Astuce</strong>\n<p>S\u2019il vous arrive r\u00e9guli\u00e8rement d\u2019\u00e9crire du code comme celui-ci, le module <a class=\"external-link\" href=\"https://www.npmjs.com/package/classnames#usage-with-reactjs\">classnames</a> peut vous aider \u00e0 simplifier votre code.</p>\n</div>\n<h3 id=\"can-i-use-inline-styles\"><a class=\"anchor\" href=\"/react/faq-styling#can-i-use-inline-styles\"></a>Puis-je utiliser des styles en ligne\u00a0? </h3>\n<p>Oui, consultez la documentation sur le style <a href=\"/react/dom-elements#style\">ici</a>.</p>\n<h3 id=\"are-inline-styles-bad\"><a class=\"anchor\" href=\"/react/faq-styling#are-inline-styles-bad\"></a>Est-ce que les styles en ligne sont une mauvaise pratique\u00a0? </h3>\n<p>Les classes CSS sont g\u00e9n\u00e9ralement plus performantes que les styles en ligne.</p>\n<h3 id=\"what-is-css-in-js\"><a class=\"anchor\" href=\"/react/faq-styling#what-is-css-in-js\"></a>Qu\u2019est-ce que CSS-in-JS\u00a0? </h3>\n<p>\u201cCSS-in-JS\u201d fait r\u00e9f\u00e9rence \u00e0 un mod\u00e8le o\u00f9 les styles CSS sont cr\u00e9\u00e9s en utilisant du JavaScript au lieu d\u2019\u00eatre d\u00e9finis dans des fichiers externes.</p>\n<p><em>Remarquez bien que cette fonctionnalit\u00e9 ne fait pas partie de React\u00a0: elle est fournie par des biblioth\u00e8ques tierces.</em> React n\u2019a pas d\u2019opinion sur la mani\u00e8re dont les styles doivent \u00eatre d\u00e9finis\u00a0; si vous avez un doute, une bonne mani\u00e8re de commencer consiste \u00e0 d\u00e9finir vos styles dans des fichiers <code class=\"language-javascript\">*.css</code> s\u00e9par\u00e9s comme d\u2019habitude et \u00e0 y faire r\u00e9f\u00e9rence en utilisant <a href=\"/react/dom-elements#classname\"><code class=\"language-javascript\">className</code></a>.</p>\n<h3 id=\"can-i-do-animations-in-react\"><a class=\"anchor\" href=\"/react/faq-styling#can-i-do-animations-in-react\"></a>Puis-je faire des animations avec React\u00a0? </h3>\n<p>React peut \u00eatre utilis\u00e9 pour g\u00e9n\u00e9rer des animations. Voyez par exemple <a class=\"external-link\" href=\"https://reactcommunity.org/react-transition-group/\">React Transition Group</a> et <a class=\"external-link\" href=\"https://github.com/react-spring/react-spring\">React Spring</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-styling.md\">Edit this page</a></p></div></article>", "path": "/react/faq-styling", "nav": ["/react/faq-state", "/react/faq-structure"]}, {"key": "Structure de fichier", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"is-there-a-recommended-way-to-structure-react-projects\"><a class=\"anchor\" href=\"/react/faq-structure#is-there-a-recommended-way-to-structure-react-projects\"></a>Y-a-t-il une mani\u00e8re \u00e0 privil\u00e9gier pour structurer les projets React\u00a0?\u00a0</h3>\n<p>React n\u2019a pas d\u2019opinion sur la mani\u00e8re dont vous ordonnez vos fichiers \u00e0 l\u2019int\u00e9rieur de vos dossiers. Ceci dit, vous souhaiterez peut-\u00eatre envisager l\u2019une des approches populaires de l\u2019\u00e9cosyst\u00e8me.</p>\n<h4 id=\"grouping-by-features-or-routes\"><a class=\"anchor\" href=\"/react/faq-structure#grouping-by-features-or-routes\"></a>Grouper par fonctionnalit\u00e9 ou par route </h4>\n<p>Une fa\u00e7on courante de structurer les projets consiste \u00e0 placer le CSS, le JS et les tests ensemble dans des dossiers group\u00e9s par fonctionnalit\u00e9 ou par route.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">common/\n  Avatar.js\n  Avatar.css\n  APIUtils.js\n  APIUtils.test.js\nfeed/\n  index.js\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  FeedAPI.js\nprofile/\n  index.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css\n  ProfileAPI.js</code></pre></div>\n<p>La d\u00e9finition d\u2019une \u00ab\u00a0fonctionnalit\u00e9\u00a0\u00bb n\u2019est pas universelle, et il vous appartient d\u2019en d\u00e9finir la granularit\u00e9. Si vous ne parvenez pas \u00e0 cr\u00e9er une liste des dossiers racines, vous pouvez demander aux utilisateurs de votre produit quelles en sont les principales composantes et utiliser leur mod\u00e8le mental comme base.</p>\n<h4 id=\"grouping-by-file-type\"><a class=\"anchor\" href=\"/react/faq-structure#grouping-by-file-type\"></a>Grouper par type de fichier </h4>\n<p>Une autre mani\u00e8re r\u00e9pandue de structurer les projets consiste \u00e0 grouper les fichiers similaires ensemble, par exemple\u00a0:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">api/\n  APIUtils.js\n  APIUtils.test.js\n  ProfileAPI.js\n  UserAPI.js\ncomponents/\n  Avatar.js\n  Avatar.css\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css</code></pre></div>\n<p>Certaines personnes pr\u00e9f\u00e8rent \u00e9galement aller plus loin et s\u00e9parer les composants dans des dossiers diff\u00e9rents en fonction de leur r\u00f4le dans l\u2019application. Par exemple, la <a class=\"external-link\" href=\"http://bradfrost.com/blog/post/atomic-web-design/\">conception atomique</a> est une m\u00e9thode de conception reposant sur ce principe. N\u2019oubliez pas qu\u2019il est souvent plus productif de traiter de telles m\u00e9thodologies comme des exemples utiles plut\u00f4t que comme des r\u00e8gles strictes \u00e0 suivre.</p>\n<h4 id=\"avoid-too-much-nesting\"><a class=\"anchor\" href=\"/react/faq-structure#avoid-too-much-nesting\"></a>\u00c9vitez trop d\u2019imbrication </h4>\n<p>L\u2019imbrication excessive de r\u00e9pertoires dans les projets JavaScript est source de nombreuses souffrances. Il devient plus difficile d\u2019\u00e9crire des importations relatives entre eux ou de mettre \u00e0 jour ces importations lorsque les fichiers sont d\u00e9plac\u00e9s. \u00c0 moins d\u2019avoir une excellente raison d\u2019utiliser une structure de dossiers profonde, limitez-vous \u00e0 un maximum de trois ou quatre imbrications de dossier dans un m\u00eame projet. Bien entendu, il ne s\u2019agit que d\u2019une recommandation, qui n\u2019est peut-\u00eatre pas pertinente pour votre projet.</p>\n<h4 id=\"dont-overthink-it\"><a class=\"anchor\" href=\"/react/faq-structure#dont-overthink-it\"></a>Ne vous prenez pas trop la t\u00eate </h4>\n<p>Si vous d\u00e9marrez tout juste un projet, <a class=\"external-link\" href=\"https://fr.wikipedia.org/wiki/Paralysie_d%27analyse\">ne passez pas plus de cinq minutes</a> \u00e0 choisir une structure de fichiers. Choisissez l\u2019une des approches ci-dessus (ou prenez la v\u00f4tre) et commencez \u00e0 \u00e9crire votre code\u00a0! Vous serez s\u00fbrement amen\u00e9\u00b7e \u00e0 la repenser de toutes fa\u00e7ons une fois que vous aurez produit du vrai code.</p>\n<p>Si vous vous sentez compl\u00e8tement bloqu\u00e9\u00b7e, commencez par garder tous les fichiers dans un seul dossier. Si votre application se met \u00e0 grossir, vous aurez envie de s\u00e9parer certains fichiers du reste. \u00c0 ce moment-l\u00e0, vous aurez une bonne id\u00e9e des fichiers que vous \u00e9ditez ensemble r\u00e9guli\u00e8rement. En g\u00e9n\u00e9ral, il est judicieux de conserver en un m\u00eame endroit des fichiers qui changent souvent ensemble. Ce principe s\u2019appelle \u00ab\u00a0colocation\u00a0\u00bb.</p>\n<p>\u00c0 mesure que les projets prennent de l\u2019ampleur, on utilise souvent un m\u00e9lange des deux approches ci-dessus. Du coup, choisir la \u00ab\u00a0bonne\u00a0\u00bb au d\u00e9but n\u2019est pas si important.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-structure.md\">Edit this page</a></p></div></article>", "path": "/react/faq-structure", "nav": ["/react/faq-styling", "/react/faq-versioning"]}, {"key": "Politique de versions", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><p>React suit les principes de <a class=\"external-link\" href=\"https://semver.org/lang/fr/\">gestion s\u00e9mantique de version (semver)</a>.</p>\n<p>\u00c7a signifie qu\u2019avec un num\u00e9ro de version de type <strong>x.y.z</strong>\u00a0:</p>\n<ul>\n<li>Pour publier des <strong>corrections de bugs critiques</strong>, nous changeons de <strong>version de correctif</strong> en modifiant le nombre <strong>z</strong> (ex. 15.6.2 \u00e0 15.6.3).</li>\n<li>Pour publier des <strong>nouvelles fonctionnalit\u00e9s</strong> ou des <strong>corrections de bugs non-critiques</strong>, nous changeons de <strong>version mineure</strong> en modifiant le nombre <strong>y</strong> (ex. 15.6.2 \u00e0 15.7.0).</li>\n<li>Pour publier des <strong>modifications cassant la compatibilit\u00e9 ascendante</strong>, nous changeons de <strong>version majeure</strong> en modifiant le nombre <strong>x</strong> (ex. 15.6.2 \u00e0 16.0.0).</li>\n</ul>\n<p>Les versions majeures peuvent \u00e9galement contenir de nouvelles fonctionnalit\u00e9s, et toute version peut inclure des corrections de bugs.</p>\n<p>Les versions mineures sont de loin les plus courantes.</p>\n<h3 id=\"breaking-changes\"><a class=\"anchor\" href=\"/react/faq-versioning#breaking-changes\"></a>Ruptures de compatibilit\u00e9 ascendante </h3>\n<div class=\"blockquote\">\n<strong>Cette politique de versions ne s\u2019applique pas aux pr\u00e9-versions dans les canaux Next et Experimental. En savoir plus sur les pr\u00e9-versions.</strong>\n</div>\n<p>Personne n\u2019aime perdre en compatibilit\u00e9 ascendante, nous essayons donc de minimiser le nombre de versions majeures\u00a0; par exemple, React 15 est sorti en avril 2016 et React 16 en septembre 2017\u00a0; React 17 n\u2019est pas pr\u00e9vu avant 2020.</p>\n<p>Au lieu de \u00e7a, nous publions les nouvelles fonctionnalit\u00e9s dans des versions mineures. Celles-ci sont souvent plus int\u00e9ressantes et motivantes que les majeures, malgr\u00e9 leur nom modeste.</p>\n<h3 id=\"commitment-to-stability\"><a class=\"anchor\" href=\"/react/faq-versioning#commitment-to-stability\"></a>Nos engagements en termes de stabilit\u00e9 </h3>\n<p>\u00c0 mesure que nous am\u00e9liorons React, nous essayons d\u2019abaisser la barri\u00e8re d\u2019entr\u00e9e pour tirer parti des nouvelles fonctionnalit\u00e9s. Chaque fois que possible, nous continuons \u00e0 prendre en charge une vieille API, m\u00eame si \u00e7a implique de la placer dans un module s\u00e9par\u00e9. Par exemple, <a class=\"external-link\" href=\"https://fr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">les mixins sont d\u00e9courag\u00e9s depuis des ann\u00e9es</a> mais ils restent pris en charge \u00e0 ce jour <a href=\"/react/react-without-es6#mixins\">via create-react-class</a> et de nombreuses bases de code continuent de les utiliser dans du code historique stable.</p>\n<p>Plus d\u2019un million de d\u00e9veloppeurs utilisent React, qui maintiennent collectivement des millions de composants. La base de code de Facebook contient \u00e0 elle seule plus de 50\u00a0000 composants React.\n\u00c7a signifie que nous devons faciliter au maximum la mise \u00e0 niveau vers les nouvelles versions de React\u00a0; si nous apportons des modifications importantes sans fournir d\u2019aide \u00e0 la migration, les utilisateurs resteront bloqu\u00e9s sur les anciennes versions. Nous testons ces approches de mise \u00e0 niveau sur Facebook m\u00eame\u00a0: si notre \u00e9quipe de moins de 10 personnes peut mettre \u00e0 jour plus de 50\u00a0000 composants \u00e0 elle seule, nous esp\u00e9rons que la mise \u00e0 niveau sera g\u00e9rable pour toute personne utilisant React. Dans de nombreux cas, nous \u00e9crivons des <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod\">scripts automatis\u00e9s</a> pour mettre \u00e0 niveau la syntaxe des composants, que nous incluons ensuite dans la version libre de notre code source pour que chacun\u00b7e puisse les utiliser.</p>\n<h3 id=\"gradual-upgrades-via-warnings\"><a class=\"anchor\" href=\"/react/faq-versioning#gradual-upgrades-via-warnings\"></a>Mises \u00e0 niveau progressives gr\u00e2ce aux avertissements </h3>\n<p>Les versions de d\u00e9veloppement de React incluent de nombreux avertissements utiles. Dans la mesure du possible, nous ajoutons des avertissements en pr\u00e9vision de futurs changements radicaux. Ainsi, si votre application ne contient aucun avertissement sur la derni\u00e8re version, elle sera compatible avec la prochaine version majeure. \u00c7a vous permet de mettre \u00e0 niveau vos applications composant par composant.</p>\n<p>Les avertissements de d\u00e9veloppement n\u2019affecteront pas le comportement d\u2019ex\u00e9cution de votre application. De cette fa\u00e7on, vous pouvez \u00eatre s\u00fbr\u00b7e que votre application se comportera de la m\u00eame fa\u00e7on entre les versions de d\u00e9veloppement et de production. La seule diff\u00e9rence, c\u2019est que la version de production n\u2019\u00e9mettra pas les avertissements et qu\u2019elle sera plus efficace. (Si vous remarquez le contraire, veuillez cr\u00e9er une <em>issue</em> dans le d\u00e9p\u00f4t GitHub.)</p>\n<h3 id=\"what-counts-as-a-breaking-change\"><a class=\"anchor\" href=\"/react/faq-versioning#what-counts-as-a-breaking-change\"></a>Qu\u2019est ce qui constitue une rupture de compatibilit\u00e9\u00a0? </h3>\n<p>En g\u00e9n\u00e9ral, nous <em>n\u2019\u00e9levons pas</em> le num\u00e9ro de version majeure pour les modifications apport\u00e9es aux aspects suivants\u00a0:</p>\n<ul>\n<li><strong>Avertissements de d\u00e9veloppement.</strong> Dans la mesure o\u00f9 ils n\u2019affectent pas le comportement de production, nous nous r\u00e9servons le droit d\u2019ajouter de nouveaux avertissements ou de modifier les avertissements existants entre les versions majeures. En fait, c\u2019est ce qui nous permet de vous avertir de mani\u00e8re fiable des changements \u00e0 venir.</li>\n<li><strong>API commen\u00e7ant par <code class=\"language-javascript\">unstable_</code>.</strong> Celles-ci sont fournies en tant que fonctionnalit\u00e9s exp\u00e9rimentales  et nous ne sommes pas encore satisfaits de leurs API. En les publiant avec un pr\u00e9fixe <code class=\"language-javascript\">unstable_</code>, nous pouvons it\u00e9rer plus rapidement dessus et obtenir une API stable plus t\u00f4t.</li>\n<li><strong>Versions alpha et canary de React.</strong>\nNous fournissons des versions alpha de React afin de tester les nouvelles fonctionnalit\u00e9s \u00e0 un stade pr\u00e9coce, mais nous avons besoin de la souplesse n\u00e9cessaire pour apporter des modifications en fonction de ce que nous apprenons au cours de la p\u00e9riode alpha. Si vous utilisez ces versions, notez que les API peuvent changer avant la version stable.</li>\n<li><strong>API non document\u00e9es et structures de donn\u00e9es internes.</strong> Si vous acc\u00e9dez \u00e0 des noms de propri\u00e9t\u00e9 internes tels que <code class=\"language-javascript\">__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED</code> ou<code class=\"language-javascript\">__reactInternalInstance$uk43rzhitjg</code>, il n\u2019y a aucune garantie. D\u00e9brouillez-vous.</li>\n</ul>\n<p>Cette politique se veut pragmatique\u00a0: nous ne voulons \u00e9videmment pas vous causer de maux de t\u00eate. Si nous \u00e9levions la version majeure pour tous ces changements, nous finirions par publier plus de versions majeures, ce qui s\u2019av\u00e8rerait plus p\u00e9nible pour la communaut\u00e9. \u00c7a signifierait \u00e9galement que nous ne pourrions pas am\u00e9liorer React aussi rapidement que nous le souhaiterions.</p>\n<p>Cela dit, si nous nous attendons \u00e0 ce qu\u2019un changement sur cette liste cause de gros probl\u00e8mes dans la communaut\u00e9, nous ferons tout notre possible pour fournir un chemin de migration progressif.</p>\n<h3 id=\"minors-versus-patches\"><a class=\"anchor\" href=\"/react/faq-versioning#minors-versus-patches\"></a>Si une version mineure n\u2019ajoute pas de fonctionnalit\u00e9s, pourquoi n\u2019est-ce pas un correctif\u00a0? </h3>\n<p>Il est possible qu\u2019une version mineure n\u2019inclue pas de nouvelles fonctionnalit\u00e9s. <a class=\"external-link\" href=\"https://semver.org/#spec-item-7\">Semver autorise \u00e7a</a>, en disant qu\u2019<strong>\u00ab\u00a0[une version mineure] PEUT \u00eatre incr\u00e9ment\u00e9e lors de nouvelles fonctionnalit\u00e9s substancielles ou d\u2019am\u00e9liorations introduites dans le code priv\u00e9. Elle PEUT inclure des modifications de type correctif.\u00a0\u00bb</strong></p>\n<p>Toutefois, cela soul\u00e8ve la question de pourquoi ces versions ne sont pas signal\u00e9es comme de simples correctifs.</p>\n<p>Cela tient au fait que toute modification \u00e0 React (ou \u00e0 d\u2019autres logiciels) emporte un risque de dysfonctionnements inattendus.  Imaginez un sc\u00e9nario dans lequel une version de correctif qui corrige un bug en introduit accidentellement un autre. Ce ne serait pas seulement d\u00e9rangeant pour les d\u00e9veloppeur\u00b7se\u00b7s, mais \u00e7a nuirait \u00e0 la confiance dans les versions de correctif ult\u00e9rieures. C\u2019est particuli\u00e8rement regrettable si le correctif d\u2019origine visait un bug survenant rarement en pratique.</p>\n<p>Nous avons un historique plut\u00f4t honorable de versions de React sans bugs, mais les versions de correctif mettent la barre encore plus haut en termes de fiabilit\u00e9 parce que la plupart des gens supposent qu\u2019ils peuvent les adopter sans risque.</p>\n<p>Voil\u00e0 pourquoi nous r\u00e9servons les versions de correctifs aux bugs les plus critiques et aux failles de s\u00e9curit\u00e9.</p>\n<p>Si une version inclut des modifications qui ne sont pas essentielles\u2014telles que des refactorings internes, des modifications d\u2019impl\u00e9mentation, des am\u00e9liorations de performances ou des correctifs mineurs\u2014nous incr\u00e9menterons la version mineure quand bien m\u00eame aucune nouvelle fonctionnalit\u00e9 n\u2019est pr\u00e9sente.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-versioning.md\">Edit this page</a></p></div></article>", "path": "/react/faq-versioning", "nav": ["/react/faq-structure", "/react/faq-internals"]}, {"key": "DOM virtuel et autres d\u00e9tails", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-lypyba\"><h3 id=\"what-is-the-virtual-dom\"><a class=\"anchor\" href=\"/react/faq-internals#what-is-the-virtual-dom\"></a>Qu\u2019est-ce que le DOM virtuel\u00a0? </h3>\n<p>Le DOM virtuel (VDOM) est un concept de programmation dans lequel une repr\u00e9sentation id\u00e9ale, ou \u00ab\u00a0virtuelle\u00a0\u00bb, d\u2019une interface utilisateur (UI) est conserv\u00e9e en m\u00e9moire et synchronis\u00e9e avec le DOM \u00ab\u00a0r\u00e9el\u00a0\u00bb par une biblioth\u00e8que telle que ReactDOM. Ce processus s\u2019appelle <a href=\"/react/reconciliation\">r\u00e9conciliation</a>.</p>\n<p>Cette approche rend possible l\u2019API d\u00e9clarative de React\u00a0: vous indiquez \u00e0 React dans quel \u00e9tat vous souhaitez que l\u2019UI se trouve, et il s\u2019assure que le DOM correspond \u00e0 cet \u00e9tat. \u00c7a permet de faire abstraction de la manipulation des attributs, de la gestion des \u00e9v\u00e9nements et de la mise \u00e0 jour manuelle du DOM que vous auriez normalement d\u00fb faire vous-m\u00eames pour cr\u00e9er votre application.</p>\n<p>Puisque le \u00ab\u00a0DOM virtuel\u00a0\u00bb est plus un mod\u00e8le qu\u2019une technologie sp\u00e9cifique, on l\u2019emploie parfois pour d\u00e9signer diff\u00e9rentes choses. Dans le monde React, le terme \u00ab\u00a0DOM virtuel\u00a0\u00bb est g\u00e9n\u00e9ralement associ\u00e9 aux <a href=\"/react/rendering-elements\">\u00e9l\u00e9ments React</a>, car il s\u2019agit des objets repr\u00e9sentant l\u2019interface utilisateur. Cependant, React utilise \u00e9galement des objets internes appel\u00e9s \u00ab\u00a0fibres\u00a0\u00bb <em>(fibers, NdT)</em> pour conserver des informations suppl\u00e9mentaires sur l\u2019arbre des composants. Ils peuvent \u00e9galement \u00eatre consid\u00e9r\u00e9s comme faisant partie de l\u2019impl\u00e9mentation du \u00ab\u00a0DOM virtuel\u00a0\u00bb dans React.</p>\n<h3 id=\"is-the-shadow-dom-the-same-as-the-virtual-dom\"><a class=\"anchor\" href=\"/react/faq-internals#is-the-shadow-dom-the-same-as-the-virtual-dom\"></a>Est-ce que le Shadow DOM est identique au DOM virtuel\u00a0? </h3>\n<p>Non, ils sont diff\u00e9rents. Le Shadow DOM est une technologie du navigateur con\u00e7ue principalement pour limiter la port\u00e9e des variables et du CSS dans les Web Components. Le DOM virtuel est un concept impl\u00e9ment\u00e9 par les biblioth\u00e8ques en JavaScript en plus des API des navigateurs.</p>\n<h3 id=\"what-is-react-fiber\"><a class=\"anchor\" href=\"/react/faq-internals#what-is-react-fiber\"></a>Qu\u2019est-ce que \u00ab\u00a0React Fiber\u00a0\u00bb\u00a0? </h3>\n<p>Fiber est le nouveau moteur de r\u00e9conciliation de React 16. Son objectif principal est de permettre le rendu incr\u00e9mentiel du DOM virtuel. <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">En savoir plus</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/fr.reactjs.org/tree/master/content/docs/faq-internals.md\">Edit this page</a></p></div></article>", "path": "/react/faq-internals", "nav": ["/react/faq-versioning"]}]}]