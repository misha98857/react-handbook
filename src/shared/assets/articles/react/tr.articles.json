[{"key": "Kurulum", "values": [{"key": "Ba\u015flang\u0131\u00e7", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bu sayfa React kullan\u0131m k\u0131lavuzu ve ilgili kaynaklara genel bir bak\u0131\u015ft\u0131r.</p>\n<p><strong>React</strong> kullan\u0131c\u0131 aray\u00fczleri geli\u015ftirebilece\u011finiz bir JavaScript k\u00fct\u00fcphanesidir. React\u2019in tam olarak ne oldu\u011funu <a class=\"external-link\" href=\"https://tr.reactjs.org//\">ana sayfam\u0131zdan</a> veya <a class=\"external-link\" href=\"https://tr.reactjs.org//tutorial/tutorial.html\">e\u011fitim b\u00f6l\u00fcm\u00fcnden</a> \u00f6\u011frenin.</p>\n\n<ul>\n<li><a href=\"/react/getting-started#try-react\">React\u2019i deneyin</a></li>\n<li><a href=\"/react/getting-started#learn-react\">React\u2019i \u00f6\u011frenin</a></li>\n<li><a href=\"/react/getting-started#staying-informed\">Haberdar olun</a></li>\n<li><a href=\"/react/getting-started#versioned-documentation\">S\u00fcr\u00fcm bilgileri</a></li>\n<li><a href=\"/react/getting-started#something-missing\">Bir \u015feyler mi eksik?</a></li>\n</ul>\n<h2 id=\"try-react\"><a class=\"anchor\" href=\"/react/getting-started#try-react\"></a>React\u2019i Deneyin </h2>\n<p>React, ba\u015ftan sona a\u015famal\u0131 olarak benimsenmesi i\u00e7in tasarland\u0131. React\u2019i <strong>ihtiyac\u0131n\u0131z kadar az veya daha fazla kullanabilirsiniz</strong>. React\u2019\u0131n tad\u0131na bakmak, basit bir HTML sayfas\u0131na biraz etkile\u015fim katmak veya karma\u015f\u0131k bir React destekli uygulama ba\u015flatmak isteyip istemedi\u011finize g\u00f6re, bu b\u00f6l\u00fcmdeki ba\u011flant\u0131lar ba\u015flaman\u0131za yard\u0131mc\u0131 olacakt\u0131r.</p>\n<h3 id=\"online-playgrounds\"><a class=\"anchor\" href=\"/react/getting-started#online-playgrounds\"></a>\u00c7evrimi\u00e7i Vakit Ge\u00e7irme Alanlar\u0131 </h3>\n<p>React ile vakit ge\u00e7irmek istiyorsan\u0131z, \u00e7evrimi\u00e7i bir kod oyun alan\u0131n\u0131 kullanabilirsiniz. <a class=\"external-link\" href=\"https://tr.reactjs.org//redirect-to-codepen/hello-world\">CodePen</a>, <a class=\"external-link\" href=\"https://codesandbox.io/s/new\">CodeSandbox</a> veya <a class=\"external-link\" href=\"https://stackblitz.com/fork/react\">Stackblitz</a> se\u00e7eneklerinden birisiyle bir Merhaba D\u00fcnya \u015fablonu deneyin.</p>\n<p>Kendi metin d\u00fczenleyicinizi kullanmay\u0131 tercih ediyorsan\u0131z <a class=\"external-link\" href=\"https://raw.githubusercontent.com/reactjs/reactjs.org/main/static/html/single-file-example.html\">bu HTML dosyas\u0131n\u0131</a> da indirebilir, d\u00fczenleyebilir ve sisteminizde kurulu bir taray\u0131c\u0131 ile a\u00e7abilirsiniz. Yava\u015f bir kod i\u015fleme d\u00f6n\u00fc\u015f\u00fcm\u00fc yapar, bu y\u00fczden bunu basit g\u00f6steriler i\u00e7in kullanman\u0131z\u0131 tavsiye ederiz.</p>\n<h3 id=\"add-react-to-a-website\"><a class=\"anchor\" href=\"/react/getting-started#add-react-to-a-website\"></a>Bir Web Sitesine React Ekleyin </h3>\n<p><a href=\"/react/add-react-to-a-website\">Bir dakika i\u00e7inde bir HTML sayfas\u0131na React ekleyebilirsiniz</a>. Daha sonra i\u00e7eri\u011fini a\u015famal\u0131 olarak geni\u015fletebilir veya birka\u00e7 dinamik araca d\u00e2hil edebilirsiniz.</p>\n<h3 id=\"create-a-new-react-app\"><a class=\"anchor\" href=\"/react/getting-started#create-a-new-react-app\"></a>Yeni bir React Uygulamas\u0131 Olu\u015fturun </h3>\n<p>Bir React projesi ba\u015flat\u0131rken, <a href=\"/react/add-react-to-a-website\">script etiketleri olan basit bir HTML sayfas\u0131</a>, h\u00e2l\u00e2 en iyi se\u00e7enek olabilir. Kurulumu sadece bir dakika s\u00fcrer!</p>\n<p>Uygulaman\u0131z b\u00fcy\u00fcd\u00fck\u00e7e, daha entegre bir kurulum d\u00fc\u015f\u00fcnebilirsiniz. Daha b\u00fcy\u00fck uygulamalar i\u00e7in \u00f6nerdi\u011fimiz <a href=\"/react/create-a-new-react-app\">birka\u00e7 JavaScript ara\u00e7-zinciri</a> vard\u0131r. Her biri \u00e7ok az veya s\u0131f\u0131r yap\u0131land\u0131rma ile \u00e7al\u0131\u015fabilir ve zengin React ekosisteminden tam olarak yararlanman\u0131z\u0131 sa\u011flar.</p>\n<h2 id=\"learn-react\"><a class=\"anchor\" href=\"/react/getting-started#learn-react\"></a>React \u00d6\u011frenin </h2>\n<p>\u0130nsanlar farkl\u0131 ge\u00e7mi\u015flerden ve farkl\u0131 \u00f6\u011frenme tarzlar\u0131yla React\u2019e geliyorlar. Tercih etti\u011finiz yakla\u015f\u0131m ister teorik, ister pratik olsun, bu b\u00f6l\u00fcm\u00fc faydal\u0131 bulaca\u011f\u0131n\u0131z\u0131 umuyoruz.</p>\n<ul>\n<li><strong>Yaparak \u00f6\u011frenmeyi</strong> tercih ediyorsan\u0131z, <a class=\"external-link\" href=\"https://tr.reactjs.org//tutorial/tutorial.html\">pratik \u00f6\u011fretici</a>mizle ba\u015flay\u0131n.</li>\n<li><strong>Kavramlar\u0131 ad\u0131m ad\u0131m \u00f6\u011frenmeyi</strong> tercih ediyorsan\u0131z, <a href=\"/react/hello-world\">ana kavramlar rehberi</a>mizle ba\u015flay\u0131n.</li>\n</ul>\n<p>Bilinmeyen herhangi bir teknoloji gibi, React de bir \u00f6\u011frenme e\u011frisine sahiptir. Pratik yaparak ve biraz da sab\u0131r ile \u00fcstesinden <em>geleceksiniz</em>.</p>\n<h3 id=\"first-examples\"><a class=\"anchor\" href=\"/react/getting-started#first-examples\"></a>\u0130lk \u00d6rnekler </h3>\n<p><a class=\"external-link\" href=\"https://tr.reactjs.org//\">React anasayfa</a> canl\u0131 edit\u00f6r\u00fc ile birka\u00e7 k\u00fc\u00e7\u00fck React \u00f6rne\u011fi i\u00e7erir. Hen\u00fcz React hakk\u0131nda bir \u015fey bilmiyorsan\u0131z bile kodlar\u0131n\u0131 de\u011fi\u015ftirmeyi deneyin ve sonucu nas\u0131l etkiledi\u011finizi g\u00f6r\u00fcn.</p>\n<h3 id=\"react-for-beginners\"><a class=\"anchor\" href=\"/react/getting-started#react-for-beginners\"></a>Yeni Ba\u015flayanlar \u0130\u00e7in React </h3>\n<p>React anlat\u0131mlar\u0131n\u0131n h\u0131zl\u0131 ge\u00e7ti\u011fini d\u00fc\u015f\u00fcn\u00fcyorsan\u0131z, <a class=\"external-link\" href=\"https://www.taniarascia.com/getting-started-with-react/\">Tania Rascia ile React\u2019e genel bak\u0131\u015f</a>\u0131 inceleyin. En \u00f6nemli React konseptlerini ayr\u0131nt\u0131l\u0131, acemi \u200b\u200bdostu bir \u015fekilde sunar. \u0130\u015finiz bitti\u011finde anlat\u0131mlar\u0131 bir kez daha deneyin!</p>\n<h3 id=\"react-for-designers\"><a class=\"anchor\" href=\"/react/getting-started#react-for-designers\"></a>Tasar\u0131mc\u0131lar \u0130\u00e7in React </h3>\n<p>Tasar\u0131m tecr\u00fcbeniz varsa, <a class=\"external-link\" href=\"https://reactfordesigners.com/\">bu kaynaklar</a> ba\u015flaman\u0131z i\u00e7in uygundur.</p>\n<h3 id=\"javascript-resources\"><a class=\"anchor\" href=\"/react/getting-started#javascript-resources\"></a>JavaScript Kaynaklar\u0131 </h3>\n<p>React anlat\u0131mlar\u0131, JavaScript dilinde programlama konusunda biraz bilgi sahibi oldu\u011funuzu varsaymaktad\u0131r. Uzman olman\u0131z gerekmiyor, ancak hem React hem de JavaScript\u2019i ayn\u0131 anda \u00f6\u011frenmek zor.</p>\n<p>Seviyenizi kontrol etmek i\u00e7in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript\u2019e genel bak\u0131\u015f</a> sayfas\u0131na gitmenizi \u00f6neririz. 30 dakika ile bir saat aras\u0131nda s\u00fcrecek ama React \u00f6\u011frenirken daha rahat ve \u00f6zg\u00fcvenli hissedeceksiniz.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>JavaScript\u2019te bir konuda ne zaman kafan\u0131z kar\u0131\u015f\u0131rsa, <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">MDN</a> ve <a class=\"external-link\" href=\"https://javascript.info/\">javascript.info</a> kontrol etmek i\u00e7in harika web siteleridir. Ayr\u0131ca yard\u0131m isteyebilece\u011finiz <a class=\"external-link\" href=\"https://tr.reactjs.org//community/support.html\">topluluk destek forumlar\u0131</a> da vard\u0131r.</p>\n</div>\n<h3 id=\"practical-tutorial\"><a class=\"anchor\" href=\"/react/getting-started#practical-tutorial\"></a>Pratik \u00d6\u011fretici </h3>\n<p><strong>Yaparak \u00f6\u011frenmeyi</strong> tercih ediyorsan\u0131z <a class=\"external-link\" href=\"https://tr.reactjs.org//tutorial/tutorial.html\">pratik \u00f6\u011freticimize</a> g\u00f6z at\u0131n. Bu derste, React ile bir Tic Tac Toe oyunu in\u015fa ediyoruz. Oyun in\u015fa etmedi\u011finiz i\u00e7in bu k\u0131sm\u0131 atlamak isteyebilirsiniz - ama bir \u015fans verin. Derste \u00f6\u011frenece\u011finiz teknikler herhangi bir React uygulamas\u0131 olu\u015fturmak i\u00e7in temeldir ve uygulaman\u0131n ileri seviyesi size daha derin bir anlay\u0131\u015f verecektir.</p>\n<h3 id=\"step-by-step-guide\"><a class=\"anchor\" href=\"/react/getting-started#step-by-step-guide\"></a>Ad\u0131m ad\u0131m rehber </h3>\n<p><strong>Kavramlar\u0131 ad\u0131m ad\u0131m \u00f6\u011frenmeyi</strong> tercih ederseniz <a href=\"/react/hello-world\">ana kavramlar rehberi</a> ba\u015flamak i\u00e7in en iyi yerdir. Her bir sonraki b\u00f6l\u00fcm, \u00f6nceki b\u00f6l\u00fcmlerde sunulan bilgilere dayan\u0131yor, b\u00f6ylece ilerledik\u00e7e hi\u00e7bir \u015feyi ka\u00e7\u0131rmayacaks\u0131n\u0131z.</p>\n<h3 id=\"thinking-in-react\"><a class=\"anchor\" href=\"/react/getting-started#thinking-in-react\"></a>React\u2019te D\u00fc\u015f\u00fcnmek </h3>\n<p>Pek \u00e7ok React kullan\u0131c\u0131s\u0131 <a href=\"/react/thinking-in-react\">React\u2019te D\u00fc\u015f\u00fcnmek</a> b\u00f6l\u00fcm\u00fcn\u00fc nihayet \u201ckafama dank etti\u201d an\u0131 olarak belirtir. Muhtemelen React\u2019in en eski \u2018oyun nas\u0131l bitirilir rehberi\u2019 ama hala ayn\u0131 derecede alakal\u0131.</p>\n<h3 id=\"recommended-courses\"><a class=\"anchor\" href=\"/react/getting-started#recommended-courses\"></a>\u00d6nerilen Kurslar </h3>\n<p>Bazen insanlar \u00fc\u00e7\u00fcnc\u00fc \u015fah\u0131s kitaplar\u0131 ve video kurslar\u0131n\u0131 resmi anlat\u0131mlara g\u00f6re daha yararl\u0131 bulurlar. Baz\u0131lar\u0131 \u00fccretsiz olan, <a class=\"external-link\" href=\"https://tr.reactjs.org//community/courses.html\">s\u0131k\u00e7a tavsiye edilen kaynaklar\u0131n bir listesini</a> sunuyoruz.</p>\n<h3 id=\"advanced-concepts\"><a class=\"anchor\" href=\"/react/getting-started#advanced-concepts\"></a>Geli\u015fmi\u015f Kavramlar </h3>\n<p><a href=\"/react/getting-started#main-concepts\">Ana kavramlarda</a> bilgi sahibi olup biraz React ile oynad\u0131\u011f\u0131n\u0131zda, daha ileri konulara ilgi duyabilirsiniz. Bu b\u00f6l\u00fcm size <a href=\"/react/context\">context</a> ve <a href=\"/react/refs-and-the-dom\">ref\u2019ler</a> gibi g\u00fc\u00e7l\u00fc fakat daha az kullan\u0131lan React \u00f6zelliklerini tan\u0131tacakt\u0131r\u2026</p>\n<h3 id=\"api-reference\"><a class=\"anchor\" href=\"/react/getting-started#api-reference\"></a>API Referans\u0131 </h3>\n<p>Bu b\u00f6l\u00fcm, belirli bir React API hakk\u0131nda daha fazla ayr\u0131nt\u0131 \u00f6\u011frenmek istedi\u011finizde faydal\u0131d\u0131r. \u00d6rne\u011fin, <a href=\"/react/react-component\"><code class=\"language-javascript\">React.Component</code> API reference</a> size <code class=\"language-javascript\">setState()</code>\u2018in nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ve hangi \u2018ya\u015fam d\u00f6ng\u00fcs\u00fc\u2019 metodunun i\u015finize yarayaca\u011f\u0131 konusunda ayr\u0131nt\u0131l\u0131 bilgi verebilir.</p>\n<h3 id=\"glossary-and-faq\"><a class=\"anchor\" href=\"/react/getting-started#glossary-and-faq\"></a>Terimler s\u00f6zl\u00fc\u011f\u00fc ve SSS </h3>\n<p><a href=\"/react/glossary\">Terimler s\u00f6zl\u00fc\u011f\u00fc</a> React anlat\u0131mlar\u0131nda g\u00f6rece\u011finiz en yayg\u0131n terimlerin bir \u00f6zetini i\u00e7erir. <a href=\"/react/faq-ajax\">AJAX iste\u011fi yapma</a>, <a href=\"/react/faq-state\">bile\u015fen durumu</a>, ve <a href=\"/react/faq-structure\">dosya yap\u0131s\u0131</a> d\u00e2hil olmak \u00fczere ortak konular hakk\u0131nda k\u0131sa soru ve cevaplara ayr\u0131lm\u0131\u015f bir SSS b\u00f6l\u00fcm\u00fc de bulunmaktad\u0131r.</p>\n<h2 id=\"staying-informed\"><a class=\"anchor\" href=\"/react/getting-started#staying-informed\"></a>Haberdar olun </h2>\n<p><a class=\"external-link\" href=\"https://tr.reactjs.org//blog/\">React blog</a>, React ekibinden yap\u0131lan g\u00fcncellemelerin resmi kayna\u011f\u0131d\u0131r. S\u00fcr\u00fcm notlar\u0131 veya itiraz bildirimleri d\u00e2hil olmak \u00fczere, \u00f6nemli olan her \u015fey \u00f6nce buraya g\u00f6nderilecektir.</p>\n<p>Twitter\u2019da <a class=\"external-link\" href=\"https://twitter.com/reactjs\">@reactjs hesab\u0131n\u0131</a> da takip edebilirsiniz, ama sadece blogu okursan\u0131z \u00f6nemli hi\u00e7 bir \u015feyi ka\u00e7\u0131rmazs\u0131n\u0131z.</p>\n<p>Her React s\u00fcr\u00fcm\u00fc kendi blog g\u00f6nderisini hak etmiyor ama her s\u00fcr\u00fcm i\u00e7in yap\u0131lan de\u011fi\u015fikliklerin ayr\u0131nt\u0131lar\u0131n\u0131 <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/main/CHANGELOG.md\">React reposundaki <code class=\"language-javascript\">CHANGELOG.md</code> dosyas\u0131nda</a> ve <a class=\"external-link\" href=\"https://github.com/facebook/react/releases\">S\u00fcr\u00fcmler</a> sayfas\u0131nda bulabilirsiniz.</p>\n<h2 id=\"versioned-documentation\"><a class=\"anchor\" href=\"/react/getting-started#versioned-documentation\"></a>Versiyon Anlat\u0131m\u0131 </h2>\n<p>Bu b\u00f6l\u00fcm her zaman React\u2019in en son kararl\u0131 versiyonunu yans\u0131t\u0131r. React 16\u2019dan beri, a\u00e7\u0131klamalar\u0131n eski s\u00fcr\u00fcmlerini <a class=\"external-link\" href=\"https://tr.reactjs.org//versions\">ayr\u0131 bir sayfada</a> bulabilirsiniz. Ge\u00e7mi\u015f s\u00fcr\u00fcmlere ait a\u00e7\u0131klamalar\u0131n yay\u0131nlanma tarihinde anl\u0131k olarak g\u00f6r\u00fcnt\u00fclendi\u011fini ve s\u00fcrekli g\u00fcncellenmedi\u011fini unutmay\u0131n.</p>\n<h2 id=\"something-missing\"><a class=\"anchor\" href=\"/react/getting-started#something-missing\"></a>Bir \u015feyler mi eksik? </h2>\n<p>Anlat\u0131mlarda bir \u015fey eksikse veya kafa kar\u0131\u015ft\u0131r\u0131c\u0131 bir b\u00f6l\u00fcm bulursan\u0131z, l\u00fctfen d\u00fczeltme/geli\u015ftirme \u00f6nerilerinizle <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org/issues/new\">ilgili issue</a> g\u00f6nderin veya <a class=\"external-link\" href=\"https://twitter.com/reactjs\">@reactjs hesab\u0131na</a> tweet at\u0131n. Sizden bildirim almay\u0131 \u00e7ok seviyoruz!</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/getting-started.md\">Edit this page</a></p></div></article>", "path": "/react/getting-started", "nav": ["/react", "/react/add-react-to-a-website"]}, {"key": "Bir Web Sitesine React Eklemek", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>\u0130htiyac\u0131n\u0131z kadar az veya daha fazla React kullan\u0131n.</p>\n<p>React, ba\u015ftan sona a\u015famal\u0131 olarak benimsenmesi i\u00e7in tasarland\u0131. React\u2019i <strong>ihtiyac\u0131n\u0131z kadar az veya daha fazla kullanabilirsiniz</strong>. Belki de sadece var olan bir sayfaya biraz \u201cinteraktif par\u00e7alar\u201d eklemek istiyorsunuz. React bile\u015fenleri bunu yapmak i\u00e7in harika bir yoldur.</p>\n<p>Web sitelerinin \u00e7o\u011fu, tek sayfal\u0131 uygulamalar de\u011fildir ve olmas\u0131 da gerekmez. <strong>Hi\u00e7bir kurulum arac\u0131 olmadan sadece birka\u00e7 sat\u0131r kod</strong> ile web sitenizin k\u00fc\u00e7\u00fck bir b\u00f6l\u00fcm\u00fcnde React\u2019i deneyin. Daha sonra i\u00e7eri\u011fini a\u015famal\u0131 olarak geni\u015fletebilir veya sadece birka\u00e7 dinamik bile\u015fen olarak tutabilirsiniz.</p>\n\n<ul>\n<li><a href=\"/react/add-react-to-a-website#add-react-in-one-minute\">Bir Dakikada React Ekleyin</a></li>\n<li><a href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\">\u0130ste\u011fe ba\u011fl\u0131: JSX ile React\u2019i deneyin</a> (ek pakete gerek yok!)</li>\n</ul>\n<h2 id=\"add-react-in-one-minute\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#add-react-in-one-minute\"></a>Bir Dakikada React Eklemek </h2>\n<p>Bu b\u00f6l\u00fcmde, mevcut bir HTML sayfas\u0131na nas\u0131l React bile\u015feni eklenece\u011fini g\u00f6sterece\u011fiz. Kendi web sitenizle birlikte takip edebilir veya pratik yapmak i\u00e7in bo\u015f bir HTML dosyas\u0131 olu\u015fturabilirsiniz.</p>\n<p>Karma\u015f\u0131k bir ara\u00e7 veya y\u00fckleme gereksinimi olmayacak. <strong>Bu b\u00f6l\u00fcm\u00fc tamamlamak i\u00e7in sadece bir internet ba\u011flant\u0131s\u0131na ve bir dakikan\u0131za ihtiyac\u0131n\u0131z var.</strong></p>\n<p>\u0130ste\u011fe ba\u011fl\u0131: <a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/87f0b6f34238595b44308acfb86df6ea43669c08.zip\">T\u00fcm \u00f6rne\u011fi indirin (2KB s\u0131k\u0131\u015ft\u0131r\u0131lm\u0131\u015f)</a></p>\n<h3 id=\"step-1-add-a-dom-container-to-the-html\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-1-add-a-dom-container-to-the-html\"></a>Ad\u0131m 1: HTML koduna bir Div Ekleme </h3>\n<p>\u0130lk \u00f6nce, d\u00fczenlemek istedi\u011finiz HTML sayfas\u0131n\u0131 a\u00e7\u0131n. React ile bir \u015fey g\u00f6r\u00fcnt\u00fclemek istedi\u011finiz yeri i\u015faretlemek i\u00e7in bo\u015f bir <code class=\"language-javascript\">&lt;div&gt;</code> etiketi ekleyin. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token comment\">&lt;!-- ... mevcut HTML ... --&gt;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button_container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"token comment\">&lt;!-- ... mevcut HTML ... --&gt;</span></code></pre></div>\n<p>Bu <code class=\"language-javascript\">&lt;div&gt;</code>\u2018e \u00f6zg\u00fcn bir <code class=\"language-javascript\">id</code> HTML \u00f6zelli\u011fi verdik. Bu <code class=\"language-javascript\">id</code>, daha sonra JavaScript kodundan bu <code class=\"language-javascript\">&lt;div&gt;</code>\u2018i bulmam\u0131za ve i\u00e7inde bir React bile\u015feni g\u00f6stermemize izin verir.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p><code class=\"language-javascript\">&lt;body&gt;</code> etiketinin i\u00e7inde <strong>herhangi bir yere</strong> b\u00f6yle bir <code class=\"language-javascript\">&lt;div&gt;</code> yerle\u015ftirebilirsiniz. Tek bir sayfada istedi\u011finiz kadar ba\u011f\u0131ms\u0131z DOM konteyneriniz olabilir. Bunlar genellikle bo\u015ftur. React, DOM konteynerlerinin i\u00e7indeki mevcut t\u00fcm i\u00e7eri\u011fi de\u011fi\u015ftirir.</p>\n</div>\n<h3 id=\"step-2-add-the-script-tags\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-2-add-the-script-tags\"></a>Ad\u0131m 2: Script Etiketlerini Ekleyin </h3>\n<p>Daha sonra, <code class=\"language-javascript\">&lt;/body&gt;</code> etiketini kapatmadan hemen \u00f6nce HTML sayfas\u0131na \u00fc\u00e7 <code class=\"language-javascript\">&lt;script&gt;</code> etiketi ekleyin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\">  <span class=\"token comment\">&lt;!-- ... di\u011fer HTML ... --&gt;</span>\n\n  <span class=\"token comment\">&lt;!-- React'i y\u00fckle. --&gt;</span>\n  <span class=\"token comment\">&lt;!-- Not: yay\u0131nlama i\u00e7in haz\u0131rlan\u0131rken, \"development.js\" yi \"production.min.js\" ile de\u011fi\u015ftirin --&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@18/umd/react.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@18/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span>\n  <span class=\"token comment\">&lt;!-- React bile\u015fenimizi y\u00fckleyin. --&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u0130lk iki etiket React\u2019i y\u00fckler. \u00dc\u00e7\u00fcnc\u00fcs\u00fc, bile\u015fen kodunuzu y\u00fckleyecektir.</p>\n<h3 id=\"step-3-create-a-react-component\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#step-3-create-a-react-component\"></a>Ad\u0131m 3: Bir React Bile\u015feni Olu\u015fturun </h3>\n<p>HTML sayfan\u0131z\u0131n yan\u0131na <code class=\"language-javascript\">like_button.js</code> adl\u0131 bir dosya olu\u015fturun.</p>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\">Bu ba\u015flang\u0131\u00e7 \u200b\u200bkodunu</a></strong> a\u00e7\u0131n ve olu\u015fturdu\u011funuz dosyaya yap\u0131\u015ft\u0131r\u0131n.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Bu kod, <code class=\"language-javascript\">LikeButton</code> ad\u0131 verilen bir React bile\u015fenini tan\u0131mlar. Hen\u00fcz anlamad\u0131ysan\u0131z endi\u015felenmeyin. React\u2019in yap\u0131 ta\u015flar\u0131n\u0131 daha sonra <a class=\"external-link\" href=\"https://tr.reactjs.org//tutorial/tutorial.html\">uygulamal\u0131 e\u011fitim</a> ve <a href=\"/react/hello-world\">ana kavramlar rehberi</a>nde ele alaca\u011f\u0131z. \u015eimdilik sadece ekranda g\u00f6sterelim!</p>\n</div>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\">Ba\u015flang\u0131\u00e7 \u200b\u200bkodundan</a></strong> sonra, <code class=\"language-javascript\">like_button.js</code>\u2018in en alt\u0131na iki sat\u0131r ekleyin :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ... yap\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131z ba\u015flang\u0131\u00e7 kodu ...</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> domContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#like_button_container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>domContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>LikeButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Bu \u00fc\u00e7 kod sat\u0131r\u0131 ilk ad\u0131mda HTML\u2019e ekledi\u011fimiz <code class=\"language-javascript\">&lt;div&gt;</code>\u2018i bulur ve ard\u0131ndan i\u00e7inde React bile\u015feni olan \u201cBe\u011fen\u201d d\u00fc\u011fmesini g\u00f6sterir.</p>\n<h3 id=\"thats-it\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#thats-it\"></a>Bu kadar! </h3>\n<p>D\u00f6rd\u00fcnc\u00fc ad\u0131m yok. <strong>Web sitenize ilk React bile\u015fenini eklediniz bile.</strong></p>\n<p>React\u2019i entegre etmekle ilgili daha fazla \u0130pucu i\u00e7in sonraki b\u00f6l\u00fcmlere g\u00f6z at\u0131n.</p>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605\">\u00d6rnek kaynak kodunun tamam\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyin</a></strong></p>\n<p><strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/87f0b6f34238595b44308acfb86df6ea43669c08.zip\">T\u00fcm \u00f6rne\u011fi indirin (2KB s\u0131k\u0131\u015ft\u0131r\u0131lm\u0131\u015f)</a></strong></p>\n<h3 id=\"tip-reuse-a-component\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#tip-reuse-a-component\"></a>\u0130pucu: Bir Bile\u015feni Yeniden Kullanma </h3>\n<p>Genellikle, HTML sayfas\u0131ndaki React bile\u015fenlerini birden fazla yerde g\u00f6r\u00fcnt\u00fclemek isteyebilirsiniz. \u201cLike\u201d d\u00fc\u011fmesini \u00fc\u00e7 kez g\u00f6r\u00fcnt\u00fcleyen ve baz\u0131 verileri ona ileten bir \u00f6rnek:</p>\n<p><a class=\"external-link\" href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda\">\u00d6rnek kaynak kodunun tamam\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyin</a></p>\n<p><a class=\"external-link\" href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda/archive/279839cb9891bd41802ebebc5365e9dec08eeb9f.zip\">T\u00fcm \u00f6rne\u011fi indirin (2KB s\u0131k\u0131\u015ft\u0131r\u0131lm\u0131\u015f)</a></p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Bu strateji \u00e7o\u011funlukla, sayfan\u0131n React destekli b\u00f6l\u00fcmleri birbirinden izole edilirken kullan\u0131\u015fl\u0131d\u0131r. Bunun yerine React kodunun i\u00e7inde <a href=\"/react/components-and-props#composing-components\">bile\u015fen kompozisyonu</a> kullanmak daha kolayd\u0131r.</p>\n</div>\n<h3 id=\"tip-minify-javascript-for-production\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#tip-minify-javascript-for-production\"></a>\u0130pucu: Canl\u0131 Ortam \u0130\u00e7in JavaScript\u2019i K\u00fc\u00e7\u00fclt\u00fcn </h3>\n<p>Web sitenizi yay\u0131na almadan \u00f6nce, k\u00fc\u00e7\u00fclt\u00fclmemi\u015f JavaScript\u2019in sayfan\u0131z\u0131 kullan\u0131c\u0131lar\u0131n\u0131z i\u00e7in \u00f6nemli \u00f6l\u00e7\u00fcde yava\u015flatabilece\u011fine dikkat edin.</p>\n<p>Uygulama komut dosyalar\u0131n\u0131 k\u00fc\u00e7\u00fclt\u00fcrseniz ve yay\u0131nlamaya haz\u0131r hale getirilen HTML\u2019in de React\u2019in <code class=\"language-javascript\">production.min.js</code> i\u00e7inde biten s\u00fcr\u00fcmlerini y\u00fckledi\u011finden emin olursan\u0131z <strong>siteniz yay\u0131na haz\u0131r</strong> olur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@18/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@18/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>JavaScript dosyalar\u0131n\u0131z i\u00e7in bir k\u00fc\u00e7\u00fcltme ad\u0131m\u0131n\u0131z yoksa <a class=\"external-link\" href=\"https://gist.github.com/gaearon/42a2ffa41b8319948f9be4076286e1f3\">ayarlaman\u0131n bir yolu budur</a>.</p>\n<h2 id=\"optional-try-react-with-jsx\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\"></a>\u0130ste\u011fe ba\u011fl\u0131: React\u2019i JSX ile deneyin </h2>\n<p>Yukar\u0131daki \u00f6rneklerde, yaln\u0131zca taray\u0131c\u0131lar taraf\u0131ndan do\u011fal olarak desteklenen \u00f6zelliklere itibar ettik. Bu y\u00fczden React\u2019e ne g\u00f6sterece\u011fini s\u00f6ylemek i\u00e7in bir JavaScript fonksiyon \u00e7a\u011fr\u0131s\u0131 kulland\u0131k:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>createElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bir \"Like\" &lt;button&gt;'u g\u00f6ster</span>\n<span class=\"token keyword\">return</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">liked</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Like'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bunun yerine, React\u2019te <a href=\"/react/introducing-jsx\">JSX</a> kullanma se\u00e7ene\u011fi de mevcuttur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Bir \"Like\" &lt;button&gt;'u g\u00f6ster</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">liked</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    Like\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu iki kod par\u00e7ac\u0131\u011f\u0131 e\u015fde\u011ferdir. <strong>JSX <a href=\"/react/react-without-jsx\">tamamen iste\u011fe ba\u011fl\u0131</a></strong> olsa da, hem React\u2019i hem de di\u011fer k\u00fct\u00fcphaneleri kullanan bir\u00e7ok ki\u015fi, kullan\u0131c\u0131 aray\u00fcz\u00fc kodu yazmak i\u00e7in JSX\u2019i yararl\u0131 bulmaktad\u0131r.</p>\n<p><a class=\"external-link\" href=\"https://babeljs.io/en/repl#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=false&amp;code_lz=DwIwrgLhD2B2AEcDCAbAlgYwNYF4DeAFAJTw4B88EAFmgM4B0tAphAMoQCGETBe86WJgBMAXJQBOYJvAC-RGWQBQ8FfAAyaQYuAB6cFDhkgA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=es2015%2Creact%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=7.15.7\">Bu \u00e7evrimi\u00e7i d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fcy\u00fc</a> kullanarak JSX ile oynayabilirsiniz.</p>\n<h3 id=\"quickly-try-jsx\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#quickly-try-jsx\"></a>JSX\u2019i h\u0131zl\u0131ca deneyin </h3>\n<p>JSX\u2019i projenizde denemenin en h\u0131zl\u0131 yolu, bu <code class=\"language-javascript\">&lt;script&gt;</code> etiketini sayfan\u0131za eklemektir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/babel-standalone@6/babel.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u015eimdi JSX\u2019i, herhangi bir <code class=\"language-javascript\">&lt;script&gt;</code> etikete <code class=\"language-javascript\">type=\"text/babel\"</code> niteligini ekleyerek kullanabilirsiniz. \u0130\u015fte indirebilece\u011finiz ve JSX ile oynayabilece\u011finiz <a class=\"external-link\" href=\"https://raw.githubusercontent.com/reactjs/reactjs.org/main/static/html/single-file-example.html\">\u00f6rnek bir HTML dosyas\u0131</a>.</p>\n<p>Bu yakla\u015f\u0131m, \u00f6\u011frenmek ve basit demolar olu\u015fturmak i\u00e7in iyidir. Ancak, web sitenizi yava\u015flat\u0131r ve <strong>uygulamay\u0131 yay\u0131nlamaya uygun de\u011fildir</strong>. \u0130lerlemeye haz\u0131r oldu\u011funuzda, bu yeni <code class=\"language-javascript\">&lt;script&gt;</code> etiketi ve ekledi\u011finiz <code class=\"language-javascript\">type=\"text/babel\"</code> \u00f6zelliklerini kald\u0131r\u0131n. Bunun yerine, bir sonraki b\u00f6l\u00fcmde t\u00fcm <code class=\"language-javascript\">&lt;script&gt;</code> etiketlerinizi otomatik olarak d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in bir JSX \u00f6n-i\u015fleyici kuracaks\u0131n\u0131z.</p>\n<h3 id=\"add-jsx-to-a-project\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#add-jsx-to-a-project\"></a>Bir projeye JSX ekleme </h3>\n<p>Bir projeye JSX eklemek, bir paketleyici veya geli\u015ftirme sunucusu gibi karma\u015f\u0131k ara\u00e7lar gerektirmez. Temel olarak, JSX eklemek <strong>bir CSS \u00f6n i\u015fleyicisi eklemek gibi bir \u015feydir.</strong> Tek gereksinim, bilgisayar\u0131n\u0131zda <a class=\"external-link\" href=\"https://nodejs.org/\">Node.js</a>\u2018in y\u00fckl\u00fc olmas\u0131.</p>\n<p>Terminal i\u00e7inde proje klas\u00f6r\u00fcn\u00fcze gidin ve \u015fu iki komutu yap\u0131\u015ft\u0131r\u0131n:</p>\n<ol>\n<li><strong>Ad\u0131m 1:</strong> <code class=\"language-javascript\">npm init -y</code> komutunu \u00e7al\u0131\u015ft\u0131r (ba\u015far\u0131s\u0131z olursa, <a class=\"external-link\" href=\"https://gist.github.com/gaearon/246f6380610e262f8a648e3e51cad40d\"> bu d\u00fczeltmeye</a> bak\u0131n\u0131z.)</li>\n<li><strong>Step 2:</strong> <code class=\"language-javascript\">npm install babel-cli@6 babel-preset-react-app@3</code> komutunu \u00e7al\u0131\u015ft\u0131r</li>\n</ol>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p><strong>Burada sadece JSX \u00f6n-i\u015fleyici y\u00fcklemek i\u00e7in npm kullan\u0131yoruz;</strong> ba\u015fka hi\u00e7bir \u015fey i\u00e7in buna ihtiyac\u0131n\u0131z olmayacak. Hem React hem de uygulama kodu, <code class=\"language-javascript\">&lt;script&gt;</code> etiketi olarak de\u011fi\u015fiklik yap\u0131lmadan kalabilir.</p>\n</div>\n<p>Tebrikler! Projenize bir <strong>yay\u0131na haz\u0131r JSX kurulumu</strong> eklediniz bile.</p>\n<h3 id=\"run-jsx-preprocessor\"><a class=\"anchor\" href=\"/react/add-react-to-a-website#run-jsx-preprocessor\"></a>JSX \u00d6n-i\u015fleyicisini \u00c7al\u0131\u015ft\u0131r\u0131n </h3>\n<p><code class=\"language-javascript\">src</code> ad\u0131nda bir klas\u00f6r olu\u015fturun ve bu terminal komutunu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-console\"><code class=\"language-javascript\">npx babel --watch src --out-dir . --presets react-app/prod</code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p><code class=\"language-javascript\">npx</code> bir harf hatas\u0131 de\u011fildir. <a class=\"external-link\" href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\">npm 5.2+ ile birlikte gelen bir paket \u00e7al\u0131\u015ft\u0131rma arac\u0131d\u0131r.</a>.</p>\n<p>E\u011fer \u201cYou have mistakenly installed the <code class=\"language-javascript\">babel</code> package\u201d \u015feklinde bir hata mesaj\u0131 g\u00f6r\u00fcrseniz, <a href=\"/react/add-react-to-a-website#add-jsx-to-a-project\">bir \u00f6nceki ad\u0131m\u0131</a> atlam\u0131\u015f olabilirsiniz. Ayn\u0131 klas\u00f6r alt\u0131nda ad\u0131m\u0131 uygulay\u0131p tekrar deneyin.</p>\n</div>\n<p>Bitmesini beklemeyin \u2014 bu komut JSX i\u00e7in otomatik bir izleyici ba\u015flat\u0131r.</p>\n<p>\u015eimdi <strong><a class=\"external-link\" href=\"https://gist.github.com/gaearon/c8e112dc74ac44aac4f673f2c39d19d1/raw/09b951c86c1bf1116af741fa4664511f2f179f0a/like_button.js\">JSX ba\u015flang\u0131\u00e7 \u200b\u200bkodu</a></strong> ile <code class=\"language-javascript\">src/like_button.js</code> adl\u0131 bir dosya olu\u015fturursan\u0131z, izleyici taray\u0131c\u0131ya uygun sade JavaScript koduyla olu\u015fturulmu\u015f bir \u00f6ni\u015flenmi\u015f <code class=\"language-javascript\">like_button.js</code> dosyas\u0131 olu\u015fturur. Kaynak dosyay\u0131 JSX ile d\u00fczenledi\u011finizde, d\u00f6n\u00fc\u015ft\u00fcrme otomatik olarak yeniden \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r.</p>\n<p>Bu ayn\u0131 zamanda eski taray\u0131c\u0131larda \u00e7\u00f6kme konusunda endi\u015felenmeden, s\u0131n\u0131flar (classes) gibi modern JavaScript s\u00f6zdizimi \u00f6zelliklerini kullanman\u0131z\u0131 sa\u011flar. Az \u00f6nce kulland\u0131\u011f\u0131m\u0131z araca Babel denir ve <a class=\"external-link\" href=\"https://babeljs.io/docs/en/babel-cli/\">bu dok\u00fcmantasyondan</a> daha fazla bilgi edinebilirsiniz.</p>\n<p>Yap\u0131 ara\u00e7lar\u0131yla rahat edece\u011finizi fark ederseniz ve onlar\u0131n sizin i\u00e7in daha fazlas\u0131n\u0131 yapmalar\u0131n\u0131 isterseniz, <a href=\"/react/create-a-new-react-app\">bir sonraki b\u00f6l\u00fcmde</a> en pop\u00fcler ve ula\u015f\u0131labilir ara\u00e7 serilerinden baz\u0131lar\u0131 a\u00e7\u0131klanmaktad\u0131r. Yap\u0131 ara\u00e7lar\u0131n\u0131 istemiyorsan\u0131z bu script etiketleri de yeterli olacakt\u0131r!</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/add-react-to-a-website.md\">Edit this page</a></p></div></article>", "path": "/react/add-react-to-a-website", "nav": ["/react/getting-started", "/react/create-a-new-react-app"]}, {"key": "Yeni bir React Uygulamas\u0131 Olu\u015fturun", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>En iyi kullan\u0131c\u0131 ve geli\u015ftirici deneyimi i\u00e7in t\u00fcmle\u015fik ara\u00e7 kullan\u0131n.</p>\n<p>Bu sayfa, g\u00f6revlere yard\u0131mc\u0131 olan baz\u0131 pop\u00fcler ara\u00e7lar\u0131 anlat\u0131r.</p>\n<ul>\n<li>Bir\u00e7ok dosya ve bile\u015fene \u00f6l\u00e7eklendirme.</li>\n<li>Npm\u2019den \u00fc\u00e7\u00fcnc\u00fc parti k\u00fct\u00fcphanelerin kullan\u0131m\u0131.</li>\n<li>Yayg\u0131n hatalar\u0131n erken fark edilmesi.</li>\n<li>JS ve CSS\u2019in geli\u015ftirme an\u0131nda canl\u0131 olarak g\u00fcncellenmesi.</li>\n<li>\u00c7\u0131kt\u0131n\u0131n canl\u0131 ortam (production) i\u00e7in optimize edilmesi.</li>\n</ul>\n<p>Bu sayfada tavsiye edilen ara\u00e7lar <strong>ba\u015flang\u0131\u00e7 i\u00e7in ayarlama gerektirmez</strong>.</p>\n<h2 id=\"you-might-not-need-a-toolchain\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#you-might-not-need-a-toolchain\"></a>Bir Araca \u0130htiyac\u0131n\u0131z Olmayabilir </h2>\n<p>E\u011fer yukar\u0131da anlat\u0131lan sorunlarla kar\u015f\u0131la\u015fmazsan\u0131z veya hen\u00fcz kendinizi JavaScript ara\u00e7lar\u0131 kullanmak konusunda rahat hissetmiyorsan\u0131z, <a href=\"/react/add-react-to-a-website\">React\u2019i yal\u0131n <code class=\"language-javascript\">&lt;script&gt;</code> etiketi ile HTML sayfas\u0131na eklemek</a> (isterseniz <a href=\"/react/add-react-to-a-website#optional-try-react-with-jsx\">JSX ile birlikte</a>) se\u00e7ene\u011fini akl\u0131n\u0131zda bulundurun.</p>\n<p>Bu ayn\u0131 zamanda, <strong>h\u00e2lihaz\u0131rda var olan web sitesine React\u2019i entegre etmenin en kolay yoludur.</strong> E\u011fer yard\u0131mc\u0131 olabilece\u011fini d\u00fc\u015f\u00fcn\u00fcyorsan\u0131z, her zaman daha b\u00fcy\u00fck bir ara\u00e7 ekleyebilirsiniz!</p>\n<h2 id=\"recommended-toolchains\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#recommended-toolchains\"></a>Tavsiye Edilen Ara\u00e7lar </h2>\n<p>React tak\u0131m\u0131 \u00f6ncelikli olarak \u015fu \u00e7\u00f6z\u00fcmleri \u00f6neriyor:</p>\n<ul>\n<li>E\u011fer <strong>React \u00f6\u011freniyorsan\u0131z</strong> veya <strong>yeni bir <a href=\"/react/glossary#single-page-application\">tek sayfa</a> uygulama olu\u015fturuyorsan\u0131z,</strong> <a href=\"/react/create-a-new-react-app#create-react-app\">Create React App</a> kullan\u0131n.</li>\n<li>E\u011fer <strong>Node.js ile sunucu taraf\u0131nda i\u015flenen bir sayfa</strong> geli\u015ftiriyorsan\u0131z, <a href=\"/react/create-a-new-react-app#nextjs\">Next.js</a>\u2018i deneyin.</li>\n<li>E\u011fer <strong>sabit i\u00e7erikli bir web sitesi,</strong> geli\u015ftiriyorsan\u0131z, <a href=\"/react/create-a-new-react-app#gatsby\">Gatsby</a>\u2018yi deneyin.</li>\n<li>E\u011fer <strong>bile\u015fen k\u00fct\u00fcphanesi</strong> geli\u015ftiriyor veya <strong>var olan bir kod temeli ile entegre ediyorsan\u0131z</strong>, <a href=\"/react/create-a-new-react-app#daha-esnek-araclar\">Daha esnek ara\u00e7lar</a>\u2018\u0131 deneyin.</li>\n</ul>\n<h3 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#create-react-app\"></a>Create React App </h3>\n<p><a class=\"external-link\" href=\"https://github.com/facebook/create-react-app\">Create React App</a>, <strong>React \u00f6\u011frenmek</strong> i\u00e7in rahat bir ortamd\u0131r ve React ile <strong>yeni bir <a href=\"/react/glossary#single-page-application\">tek sayfa</a> uygulama</strong> geli\u015ftirmeye ba\u015flaman\u0131n en iyi yoludur.</p>\n<p>En son JavaScript \u00f6zelliklerini kullanabilmeniz i\u00e7in geli\u015ftirme ortam\u0131n\u0131z\u0131 kurar, g\u00fczel bir geli\u015ftirici deneyimi sa\u011flar ve uygulaman\u0131z\u0131 canl\u0131 ortam (production) i\u00e7in optimize eder. Bilgisayar\u0131n\u0131zda <a class=\"external-link\" href=\"https://nodejs.org/\">Node &gt;= 14.0.0 ve npm &gt;= 5.6</a> s\u00fcr\u00fcmlerinin y\u00fckl\u00fc olmas\u0131 gerekir. Bir proje olu\u015fturmak i\u00e7in, a\u015fa\u011f\u0131da yer alan komutlar\u0131 \u00e7al\u0131\u015ft\u0131r\u0131n.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx create-react-app my-app\n<span class=\"token builtin class-name\">cd</span> my-app\n<span class=\"token function\">npm</span> start</code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>\u0130lk sat\u0131rdaki <code class=\"language-javascript\">npx</code> bir harf hatas\u0131 de\u011fildir. \u2014 <a class=\"external-link\" href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\">npm 5.2+ ile gelen bir paket \u00e7al\u0131\u015ft\u0131rma arac\u0131d\u0131r</a>.</p>\n</div>\n<p>Create React App, backend mant\u0131\u011f\u0131 veya veri tabanlar\u0131n\u0131 idare etmez; sadece frontend geli\u015ftirme d\u00fczenini olu\u015fturur, yani bunu istedi\u011finiz herhangi bir backend ile kullanabilirsiniz. Arka planda, <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> ve <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a> kullan\u0131r, fakat bunlar hakk\u0131nda hi\u00e7bir \u015fey bilmeniz gerekmiyor.</p>\n<p>\u00dcr\u00fcn yay\u0131nlamaya haz\u0131r oldu\u011funuzda, <code class=\"language-javascript\">npm run build</code> komutunu \u00e7al\u0131\u015ft\u0131rmak <code class=\"language-javascript\">build</code> klas\u00f6r\u00fcnde uygulaman\u0131z\u0131n optimize edilmi\u015f bir derlemesini olu\u015fturur. Create React App hakk\u0131nda daha fazlas\u0131n\u0131 <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app#create-react-app--\">kendi README\u2019sinden</a> ve <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/\">kullan\u0131c\u0131 rehberinden</a> \u00f6\u011frenebilirsiniz.</p>\n<h3 id=\"nextjs\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#nextjs\"></a>Next.js </h3>\n<p><a class=\"external-link\" href=\"https://nextjs.org/\">Next.js</a>, React ile <strong>statik ve sunucu taraf\u0131ndan i\u015flenen uygulamalar</strong> geli\u015ftirmek i\u00e7in pop\u00fcler ve hafif bir \u00e7at\u0131d\u0131r. Haz\u0131r olarak <strong>stillendirme ve y\u00f6nlendirme \u00e7\u00f6z\u00fcmleri</strong> i\u00e7erir, ve sunucu ortam\u0131 olarak <a class=\"external-link\" href=\"https://nodejs.org/\">Node.js</a> kulland\u0131\u011f\u0131n\u0131z\u0131 varsayar.</p>\n<p>Next.js\u2019i <a class=\"external-link\" href=\"https://nextjs.org/learn/\">resmi rehberinden</a> \u00f6\u011frenin.</p>\n<h3 id=\"gatsby\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#gatsby\"></a>Gatsby </h3>\n<p><a class=\"external-link\" href=\"https://www.gatsbyjs.org/\">Gatsby</a>, React ile <strong>statik web siteleri</strong> geli\u015ftirmenin en iyi yoludur. React bile\u015fenlerini kullanman\u0131za olanak sa\u011flar, fakat en h\u0131zl\u0131 y\u00fckleme s\u00fcresini garanti etmek i\u00e7in \u00f6nceden i\u015flenmi\u015f HTML ve CSS \u00e7\u0131kt\u0131lar\u0131n\u0131 verir.</p>\n<p>Gatsby\u2019yi <a class=\"external-link\" href=\"https://www.gatsbyjs.org/docs/\">resmi rehberinden</a> veya <a class=\"external-link\" href=\"https://www.gatsbyjs.org/docs/gatsby-starters/\">yeni ba\u015flayanlar galerisinden</a> \u00f6\u011frenin.</p>\n<h3 id=\"more-flexible-toolchains\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#more-flexible-toolchains\"></a>Daha Esnek Ara\u00e7lar </h3>\n<p>A\u015fa\u011f\u0131daki ara\u00e7lar daha fazla esneklik ve se\u00e7enek sunmaktad\u0131r. Bunlar\u0131 daha tecr\u00fcbeli kullan\u0131c\u0131lar i\u00e7in \u00f6neriyoruz:</p>\n<ul>\n<li><strong><a class=\"external-link\" href=\"https://neutrinojs.org/\">Neutrino</a></strong>; <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a>\u2018in g\u00fcc\u00fcn\u00fc \u00f6n ayarlar\u0131n sadeli\u011fi ile birle\u015ftirir, <a class=\"external-link\" href=\"https://neutrinojs.org/packages/react/\">React uygulamalar\u0131</a> ve <a class=\"external-link\" href=\"https://neutrinojs.org/packages/react-components/\">React bile\u015fenleri</a> i\u00e7in bir \u00f6n ayar da i\u00e7erir.</li>\n<li><strong><a class=\"external-link\" href=\"https://nx.dev/react\">Nx</a></strong>, yerle\u015fik olarak React, Next.js, <a class=\"external-link\" href=\"https://expressjs.com/\">Express</a> ve daha fazlas\u0131 i\u00e7in deste\u011fe sahip, tam donan\u0131ml\u0131 bir monorepo olu\u015fturma arac\u0131d\u0131r.</li>\n<li><strong><a class=\"external-link\" href=\"https://parceljs.org/\">Parcel</a></strong>; <a class=\"external-link\" href=\"https://parceljs.org/recipes/react\">React ile \u00e7al\u0131\u015fan</a>, h\u0131zl\u0131, ayarlama gerektirmeyen bir web uygulama paketleyicisidir.</li>\n<li><strong><a class=\"external-link\" href=\"https://github.com/jaredpalmer/razzle\">Razzle</a></strong>; herhangi bir yap\u0131land\u0131rma gerektirmeyen ancak Next.js\u2019e g\u00f6re daha fazla esneklik sunan, bir sunucu taraf\u0131nda i\u015fleme \u00e7at\u0131s\u0131d\u0131r.</li>\n</ul>\n<h2 id=\"creating-a-toolchain-from-scratch\"><a class=\"anchor\" href=\"/react/create-a-new-react-app#creating-a-toolchain-from-scratch\"></a>S\u0131f\u0131rdan Bir Ara\u00e7 Zinciri Olu\u015fturmak </h2>\n<p>Bir JavaScript derleme ara\u00e7 zinciri tipik olarak a\u015fa\u011f\u0131dakilerden olu\u015fur:</p>\n<ul>\n<li>Bir <strong>paket y\u00f6neticisi</strong>, <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> veya <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> gibi. Bu, u\u00e7suz bucaks\u0131z \u00fc\u00e7\u00fcnc\u00fc parti paket ekosisteminden faydalanman\u0131za ve bunlar\u0131 kolayca y\u00fcklemenize ve g\u00fcncellemenize olanak sa\u011flar.</li>\n<li>Bir <strong>paketleyici</strong>, <a class=\"external-link\" href=\"https://webpack.js.org/\">webpack</a> veya <a class=\"external-link\" href=\"https://parceljs.org/\">Parcel</a> gibi. Bu, mod\u00fcler kod yazman\u0131za ve yazd\u0131\u011f\u0131n\u0131z kodlar\u0131 y\u00fckleme zaman\u0131n\u0131 optimize etmek i\u00e7in k\u00fc\u00e7\u00fck par\u00e7alar halinde beraber paketlemenize olanak sa\u011flar.</li>\n<li>Bir <strong>derleyici</strong> <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> gibi. Bu, yazd\u0131\u011f\u0131n\u0131z modern JavaScript kodunun eski taray\u0131c\u0131larda da \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.</li>\n</ul>\n<p>E\u011fer s\u0131f\u0131rdan kendi JavaScript ara\u00e7 zincirinizi kurmay\u0131 tercih ederseniz, baz\u0131 Create React App fonksiyonelliklerini yeniden olu\u015fturan <a class=\"external-link\" href=\"https://blog.usejournal.com/creating-a-react-app-from-scratch-f3c693b84658\">\u015fu rehbere bir g\u00f6z at\u0131n</a>.</p>\n<p>\u00d6zel ara\u00e7 zincirinizin <a href=\"/react/optimizing-performance#use-the-production-build\">\u00fcr\u00fcn i\u00e7in do\u011fru bir \u015fekilde kuruldu\u011funu</a> garanti alt\u0131na almay\u0131 unutmay\u0131n.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/create-a-new-react-app.md\">Edit this page</a></p></div></article>", "path": "/react/create-a-new-react-app", "nav": ["/react/add-react-to-a-website", "/react/cdn-links"]}, {"key": "CDN Ba\u011flant\u0131lar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Hem React\u2019e hem de ReactDOM\u2019a CDN \u00fczerinden ula\u015f\u0131labilir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@18/umd/react.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@18/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Yukar\u0131daki s\u00fcr\u00fcmler yaln\u0131zca geli\u015ftirme ama\u00e7l\u0131d\u0131r ve yay\u0131nlamaya uygun de\u011fildir. React\u2019in k\u00fc\u00e7\u00fclt\u00fclm\u00fc\u015f ve optimize edilmi\u015f yay\u0131nlamaya uygun s\u00fcr\u00fcmleri \u015fu adreste mevcuttur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@18/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@18/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">react</code>\u2018in ve <code class=\"language-javascript\">react-dom</code>\u2018un belirli bir s\u00fcr\u00fcm\u00fcn\u00fc y\u00fcklemek i\u00e7in, <code class=\"language-javascript\">18</code>\u2018i istedi\u011finiz s\u00fcr\u00fcm numaras\u0131 ile de\u011fi\u015ftirin.</p>\n<h3 id=\"why-the-crossorigin-attribute\"><a class=\"anchor\" href=\"/react/cdn-links#why-the-crossorigin-attribute\"></a>Neden <code class=\"language-javascript\">crossorigin</code> \u00d6zelli\u011fi? </h3>\n<p>Bir CDN\u2019den React kullan\u0131yorsan\u0131z, <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes\"><code class=\"language-javascript\">crossorigin</code></a> \u00f6zelli\u011fini ayarl\u0131 tutman\u0131z\u0131 \u00f6neririz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Ayr\u0131ca, kulland\u0131\u011f\u0131n\u0131z CDN\u2019nin <code class=\"language-javascript\">Access-Control-Allow-Origin: *</code> HTTP ba\u015fl\u0131\u011f\u0131n\u0131 ayarlad\u0131\u011f\u0131n\u0131 do\u011frulaman\u0131z\u0131 \u00f6neririz:</p>\n<p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/89baed0a6540f29e954065ce04661048/13ae7/cdn-cors-header.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/89baed0a6540f29e954065ce04661048/13ae7/cdn-cors-header.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Bu, React 16 ve sonraki s\u00fcr\u00fcmlerinde daha iyi bir <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/07/26/error-handling-in-react-16.html\">hata y\u00f6netme deneyimi</a> sa\u011flar.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/cdn-links.md\">Edit this page</a></p></div></article>", "path": "/react/cdn-links", "nav": ["/react/create-a-new-react-app", "/react/release-channels"]}, {"key": "Yay\u0131n Kanallar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React, hata raporlar\u0131n\u0131 dosyalamak, pull request a\u00e7mak ve <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">RFC g\u00f6ndermek</a> i\u00e7in ba\u015far\u0131l\u0131 bir a\u00e7\u0131k kaynak toplulu\u011funa g\u00fcvenir. Geri bildirimi te\u015fvik etmek i\u00e7in bazen yay\u0131nlanmam\u0131\u015f \u00f6zellikler i\u00e7eren \u00f6zel React yap\u0131lar\u0131n\u0131 payla\u015f\u0131r\u0131z.</p>\n<div class=\"blockquote\">\n<strong>Bu belge, en \u00e7ok \u00e7at\u0131, k\u00fct\u00fcphane veya geli\u015ftirici ara\u00e7lar\u0131 \u00fczerinde \u00e7al\u0131\u015fan yaz\u0131l\u0131mc\u0131lar i\u00e7in uygundur. React\u2019i \u00f6ncelikle kullan\u0131c\u0131lara y\u00f6nelik uygulamalar olu\u015fturmak i\u00e7in kullanan yaz\u0131l\u0131mc\u0131lar\u0131n yay\u0131n \u00f6ncesi kanallar\u0131m\u0131z hakk\u0131nda endi\u015felenmeleri gerekmez.</strong>\n</div>\n<p> React\u2019in yay\u0131n kanallar\u0131n\u0131n her biri ayr\u0131 bir kullan\u0131m i\u00e7in tasarlanm\u0131\u015ft\u0131r:</p>\n<ul>\n<li><a href=\"/react/release-channels#latest-channel\"><strong>En Yeni</strong></a>, istikrarl\u0131, semver React s\u00fcr\u00fcmleri i\u00e7indir. React\u2019i npm\u2019den y\u00fckledi\u011finizde elde edece\u011finiz \u015fey budur. Bug\u00fcn kulland\u0131\u011f\u0131n\u0131z kanal bu. <strong>Bunu kullan\u0131c\u0131lara y\u00f6nelik t\u00fcm React uygulamalar\u0131 i\u00e7in kullan\u0131n.</strong></li>\n<li><a href=\"/react/release-channels#next-channel\"><strong>Sonraki</strong></a>, React kaynak kodu veri havuzunun ana dal\u0131n\u0131 izler. Bunlar\u0131 bir sonraki k\u00fc\u00e7\u00fck semver s\u00fcr\u00fcm\u00fc i\u00e7in aday olarak d\u00fc\u015f\u00fcnebilirsiniz. React ve \u00fc\u00e7\u00fcnc\u00fc taraf projeleri aras\u0131ndaki entegrasyon testi i\u00e7in bunu kullan\u0131n.</li>\n<li><a href=\"/react/release-channels#eperimental-channel\"><strong>Deneysel</strong></a>, kararl\u0131 s\u00fcr\u00fcmlerde bulunmayan deneysel API\u2019leri ve \u00f6zellikleri i\u00e7erir. Bunlar ayr\u0131ca ana dal\u0131 izler, ancak ek \u00f6zellik bayraklar\u0131 a\u00e7\u0131kt\u0131r. Gelecek \u00f6zellikleri yay\u0131nlanmadan \u00f6nce denemek i\u00e7in bunu kullan\u0131n.</li>\n</ul>\n<p>T\u00fcm s\u00fcr\u00fcmler npm\u2019de yay\u0131nlan\u0131r, ancak yaln\u0131zca en yeni kullan\u0131mlar <a href=\"/react/faq-versioning\">anlamsal s\u00fcr\u00fcm olu\u015fturma</a>. \u00d6n yay\u0131nlar (Sonraki ve Deneysel kanallar\u0131nda bulunanlar), kendi i\u00e7eriklerinin bir karma de\u011ferinden olu\u015fturulan s\u00fcr\u00fcmlere sahiptir, \u00f6rne\u011fin \u0130leri i\u00e7in <code class=\"language-javascript\">0.0.0-1022ee0ec</code> ve Deney i\u00e7in <code class=\"language-javascript\">0.0.0-experimental-1022ee0ec</code>.</p>\n<p><strong>Kullan\u0131c\u0131ya y\u00f6nelik uygulamalar i\u00e7in resmi olarak desteklenen tek yay\u0131n kanal\u0131 En Yeni kanal\u0131d\u0131r</strong>. Sonraki ve Deneysel s\u00fcr\u00fcmler yaln\u0131zca test amac\u0131yla sa\u011flanm\u0131\u015ft\u0131r ve En Yeni s\u00fcr\u00fcmler i\u00e7in kulland\u0131\u011f\u0131m\u0131z semver protokol\u00fcn\u00fc takip etmediklerinden dolay\u0131 s\u00fcr\u00fcmler aras\u0131nda davran\u0131\u015f\u0131n de\u011fi\u015fmeyece\u011fine dair hi\u00e7bir garanti vermiyoruz. </p>\n<p>\u00d6n s\u00fcr\u00fcmleri, istikrarl\u0131 s\u00fcr\u00fcmler i\u00e7in kulland\u0131\u011f\u0131m\u0131z kay\u0131t defterinde yay\u0131nlayarak, <a class=\"external-link\" href=\"https://unpkg.com\">unpkg</a> ve <a class=\"external-link\" href=\"https://codesandbox.io\">CodeSandbox</a> gibi npm i\u015f ak\u0131\u015f\u0131n\u0131 destekleyen bir\u00e7ok ara\u00e7tan yararlanabiliyoruz. .</p>\n<h3 id=\"latest-channel\"><a class=\"anchor\" href=\"/react/release-channels#latest-channel\"></a>En Yeni Kanal\u0131 </h3>\n<p>En Yeni, istikrarl\u0131 React s\u00fcr\u00fcmleri i\u00e7in kullan\u0131lan kanald\u0131r. Npm\u2019deki <code class=\"language-javascript\">latest</code> etiketine kar\u015f\u0131l\u0131k gelir. Ger\u00e7ek kullan\u0131c\u0131lara g\u00f6nderilen t\u00fcm React uygulamalar\u0131 i\u00e7in \u00f6nerilen kanald\u0131r.</p>\n<p><strong>Hangi kanal\u0131 kullanman\u0131z gerekti\u011finden emin de\u011filseniz, kullanman\u0131z gereken kanal En Yeni kanal\u0131d\u0131r.</strong> Bir React yaz\u0131l\u0131mc\u0131s\u0131ysan\u0131z, zaten kulland\u0131\u011f\u0131n\u0131z budur.</p>\n<p>The Next channel is a prerelease channel that tracks the main branch of the React repository. We use prereleases in the Next channel as release candidates for the Latest channel. You can think of Next as a superset of Latest that is updated more frequently.</p>\n<p>G\u00fcncellemelerin son derece istikrarl\u0131 olmas\u0131n\u0131 bekleyebilirsiniz. S\u00fcr\u00fcmler semantik versiyonlama \u015femas\u0131n\u0131 takip eder. <a href=\"/react/faq-versioning\">S\u00fcr\u00fcm olu\u015fturma politikam\u0131z</a> sayfas\u0131ndan istikrarl\u0131l\u0131k ve a\u015famal\u0131 ge\u00e7i\u015f taahh\u00fcd\u00fcm\u00fcz hakk\u0131nda daha fazla bilgi edininiz.</p>\n<h3 id=\"next-channel\"><a class=\"anchor\" href=\"/react/release-channels#next-channel\"></a>Sonraki Kanal\u0131 </h3>\n<p>Sonraki kanal, React kaynak kodu ana dal\u0131n\u0131 izleyen bir yay\u0131n \u00f6ncesi kanald\u0131r. Bir Sonraki kanaldaki yay\u0131n \u00f6ncesi s\u00fcr\u00fcmleri, En Son kanal i\u00e7in yay\u0131n adaylar\u0131 olarak kullan\u0131yoruz. \u0130leri kanal\u0131n\u0131 , daha s\u0131k g\u00fcncellenen En Yeni kanal\u0131n\u0131n  \u00fcstk\u00fcmesi olarak d\u00fc\u015f\u00fcnebilirsiniz.</p>\n<p>Releases in Next are published with the <code class=\"language-javascript\">next</code> tag on npm. Versions are generated from a hash of the build\u2019s contents and the commit date, e.g. <code class=\"language-javascript\">0.0.0-68053d940-20210623</code>.</p>\n<p>En son yay\u0131nlanan Sonraki s\u00fcr\u00fcm ile en Yeni s\u00fcr\u00fcm aras\u0131ndaki fark, iki k\u00fc\u00e7\u00fck d\u00f6nem s\u00fcr\u00fcm\u00fc aras\u0131nda bulaca\u011f\u0131n\u0131z farkla yakla\u015f\u0131k olarak ayn\u0131 de\u011fere sahiptir. Ancak, <strong>Sonraki kanal\u0131, semantik s\u00fcr\u00fcmlemeye uymaz.</strong> Sonraki kanalda birbirini izleyen s\u00fcr\u00fcmler aras\u0131nda zaman zaman de\u011fi\u015fiklik yap\u0131lmas\u0131 beklenmelidir.</p>\n<p><strong>\u00d6n s\u00fcr\u00fcmleri kullan\u0131c\u0131lara y\u00f6nelik uygulamalarda kullanmay\u0131n\u0131z.</strong></p>\n<p>Sonraki kanal\u0131ndaki s\u00fcr\u00fcmler npm\u2019de <code class=\"language-javascript\">next</code> etiketi ile yay\u0131nlan\u0131r. S\u00fcr\u00fcmler, yap\u0131n\u0131n kendi i\u00e7eri\u011finin bir karma de\u011ferinden olu\u015fturulur; <code class=\"language-javascript\">0.0.0-1022ee0ec</code>.</p>\n<h4 id=\"using-the-next-channel-for-integration-testing\"><a class=\"anchor\" href=\"/react/release-channels#using-the-next-channel-for-integration-testing\"></a>Sonraki Kanal\u0131n\u0131 Entegrasyon Testi i\u00e7in  Kullanma </h4>\n<p>Sonraki kanal\u0131, React ve di\u011fer projeler aras\u0131ndaki entegrasyon testini desteklemek i\u00e7in tasarlanm\u0131\u015ft\u0131r.</p>\n<p>React\u2019teki t\u00fcm de\u011fi\u015fiklikler kamuya a\u00e7\u0131klanmadan \u00f6nce kapsaml\u0131 dahili testlerden ge\u00e7er. Bununla birlikte, React ekosisteminde kullan\u0131lan say\u0131s\u0131z ortam ve konfig\u00fcrasyon vard\u0131r ve her birine kar\u015f\u0131 test etmemiz m\u00fcmk\u00fcn de\u011fildir.</p>\n<p>\u00dc\u00e7\u00fcnc\u00fc taraf React \u00e7at\u0131s\u0131n\u0131n, kitapl\u0131\u011f\u0131n\u0131n, geli\u015ftirici arac\u0131n\u0131n veya benzer altyap\u0131 tipi bir projenin sahibiyseniz, test paketinizi en yeni s\u00fcr\u00fcmlere kar\u015f\u0131 d\u00fczenli olarak \u00e7al\u0131\u015ft\u0131rarak, React\u2019i kullan\u0131c\u0131lar\u0131n\u0131z ve t\u00fcm React toplulu\u011fu i\u00e7in istikrarl\u0131 tutmam\u0131za yard\u0131mc\u0131 olabilirsiniz. \u0130lgileniyorsan\u0131z \u015fu ad\u0131mlar\u0131 izleyiniz:</p>\n<ul>\n<li>Tercih etti\u011finiz s\u00fcrekli entegrasyon platformunu kullanarak bir cron i\u015fi olu\u015fturun. Cron i\u015fleri hem <a class=\"external-link\" href=\"https://circleci.com/docs/2.0/triggers/#scheduled-builds\">CircleCI</a> hem de <a class=\"external-link\" href=\"https://docs.travis-ci.com/user/cron-jobs/\">Travis CI</a> taraf\u0131ndan desteklenmektedir. </li>\n<li>\n<p>Cron i\u015finde, npm\u2019de <code class=\"language-javascript\">next</code> etiketini kullanarak React paketlerinizi Sonraki kanal\u0131ndaki en son React s\u00fcr\u00fcm\u00fcne g\u00fcncelleyin. Npm cli kullanarak:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-console\"><code class=\"language-javascript\">npm update react@next react-dom@next</code></pre></div>\n<p>Ya da yarn ile:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-console\"><code class=\"language-javascript\">yarn upgrade react@next react-dom@next</code></pre></div>\n</li>\n<li>Test paketinizi g\u00fcncellenmi\u015f paketlere kar\u015f\u0131 \u00e7al\u0131\u015ft\u0131r\u0131n.</li>\n<li>Her \u015fey ge\u00e7erse harika! Projenizin bir sonraki k\u00fc\u00e7\u00fck React s\u00fcr\u00fcm\u00fcyle \u00e7al\u0131\u015fmas\u0131n\u0131 bekleyebilirsiniz.</li>\n<li>Beklenmedik bir \u015fekilde herhangi bir \u015feyin \u00e7al\u0131\u015fmamas\u0131 durumunda, l\u00fctfen <a class=\"external-link\" href=\"https://github.com/facebook/react/issues\">bir sorun bildirerek</a> bizimle ileti\u015fime ge\u00e7iniz.</li>\n</ul>\n<p>Next.js bu i\u015f ak\u0131\u015f\u0131n\u0131 kullanan projelerden birisidir. (Kelime oyunu yok! Ger\u00e7ekten!) \u00d6rnek olarak <a class=\"external-link\" href=\"https://github.com/zeit/next.js/blob/c0a1c0f93966fe33edd93fb53e5fafb0dcd80a9e/.circleci/config.yml\">CircleCI yap\u0131land\u0131rmas\u0131</a>\u2018na  ba\u015fvurabilirsiniz.</p>\n<h3 id=\"experimental-channel\"><a class=\"anchor\" href=\"/react/release-channels#experimental-channel\"></a>Deneysel Kanal </h3>\n<p>Sonraki kanal\u0131 gibi, Deneysel kanal da React deposunun ana dal\u0131n\u0131 izleyen bir yay\u0131n \u00f6ncesi kanald\u0131r. Sonraki\u2019nin aksine, Deneysel s\u00fcr\u00fcmler, geni\u015f bir s\u00fcr\u00fcme haz\u0131r olmayan ek \u00f6zellikler ve API\u2019ler i\u00e7erir.</p>\n<p>Genellikle Sonraki kanal\u0131na y\u00f6nelik bir g\u00fcncellemeye, Deneysel kanal\u0131na kar\u015f\u0131l\u0131k gelen bir g\u00fcncelleme e\u015flik eder. Ayn\u0131 kaynak revizyonuna dayan\u0131rlar, ancak farkl\u0131 bir \u00f6zellik bayra\u011f\u0131 seti kullan\u0131larak olu\u015fturulmu\u015ftur.</p>\n<p>Like Next, the Experimental channel is a prerelease channel that tracks the main branch of the React repository. Unlike Next, Experimental releases include additional features and APIs that are not ready for wider release.</p>\n<p>Deneysel s\u00fcr\u00fcmler, Sonraki ve En Yeni s\u00fcr\u00fcmlerden daha farkl\u0131 olabilir. <strong>Deneysel s\u00fcr\u00fcmleri kullan\u0131c\u0131lara y\u00f6nelik uygulamalarda kullanmay\u0131n\u0131z.</strong> Deney kanal\u0131ndaki s\u00fcr\u00fcmler aras\u0131nda s\u0131k s\u0131k de\u011fi\u015fiklik yap\u0131lmas\u0131n\u0131 beklemelisiniz.</p>\n<p>Deneysel s\u00fcr\u00fcmler npm\u2019de <code class=\"language-javascript\">experimental</code> etiketi ile yay\u0131nlan\u0131r. S\u00fcr\u00fcmler, yap\u0131n\u0131n kendi i\u00e7eri\u011finin bir karma de\u011ferinden olu\u015fturulur, \u00f6rne\u011fin; <code class=\"language-javascript\">0.0.0-experimental-68053d940-20210623</code>.</p>\n<h4 id=\"what-goes-into-an-experimental-release\"><a class=\"anchor\" href=\"/react/release-channels#what-goes-into-an-experimental-release\"></a>Deneysel Bir S\u00fcr\u00fcmde Neler Oluyor? </h4>\n<p>Deneysel \u00f6zellikler, daha geni\u015f bir kitleye sunulmaya haz\u0131r olmayan \u00f6zelliklerdir ve sonu\u00e7land\u0131r\u0131lmadan \u00f6nce b\u00fcy\u00fck \u00f6l\u00e7\u00fcde de\u011fi\u015febilirler. Baz\u0131 deneyler asla sonu\u00e7land\u0131r\u0131lamaz \u2014 deney yapmam\u0131z\u0131n nedeni, \u00f6nerilen de\u011fi\u015fikliklerin uygulanabilirli\u011fini test etmektir.</p>\n<p>\u00d6rne\u011fin, Hooks\u2019u duyurdu\u011fumuzda Deneysel kanal mevcut olsayd\u0131, Hooks\u2019u En Yeni kanal\u0131nda kullan\u0131ma sunmadan haftalar \u00f6nce Deneysel kanal\u0131nda yay\u0131nlard\u0131k.</p>\n<p>Denemeye kar\u015f\u0131 entegrasyon testleri yapmay\u0131 de\u011ferli bulabilirsiniz. Bu size kalm\u0131\u015f. Ancak, Deneysel kanal\u0131n\u0131n Sonraki kanal\u0131ndan daha az istikrarl\u0131 oldu\u011funu unutmay\u0131n\u0131z. <strong>Deneysel s\u00fcr\u00fcmler aras\u0131nda herhangi bir istikrar\u0131 garanti etmiyoruz.</strong></p>\n<h4 id=\"how-can-i-learn-more-about-experimental-features\"><a class=\"anchor\" href=\"/react/release-channels#how-can-i-learn-more-about-experimental-features\"></a>Deneysel \u00d6zellikler Hakk\u0131nda Nas\u0131l Daha Fazla Bilgi Edinebilirim? </h4>\n<p>Deneysel \u00f6zellikler belgelenebilir veya belgelenmeyebilir. Genellikle, deneyler Sonrakine veya En yeni\u2019ye g\u00f6nderime yak\u0131n olana kadar belgelenmez.</p>\n<p>Bir \u00f6zellik belgelenmezse, bir <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">RFC</a> e\u015flik edebilir.</p>\n<p>Yeni deneyleri duyurmaya haz\u0131r oldu\u011fumuzda <a class=\"external-link\" href=\"https://tr.reactjs.org//blog\">React blog</a>\u2018da  yay\u0131nlayaca\u011f\u0131z, ancak bu, her denemeyi yay\u0131nlayaca\u011f\u0131m\u0131z anlam\u0131na gelmez.</p>\n<p>Kapsaml\u0131 bir de\u011fi\u015fiklik listesi i\u00e7in her zaman herkese a\u00e7\u0131k olan GitHub depomuzun <a class=\"external-link\" href=\"https://github.com/facebook/react/commits/main\">ge\u00e7mi\u015fine</a> ba\u015fvurabilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/release-channels.md\">Edit this page</a></p></div></article>", "path": "/react/release-channels", "nav": ["/react/cdn-links", "/react/hello-world"]}]}, {"key": "Temel Kavramlar", "values": [{"key": "1. Merhaba D\u00fcnya", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>En basit React \u00f6rne\u011fi a\u015fa\u011f\u0131daki gibidir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba, d\u00fcnya!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ekrana \u201cMerhaba d\u00fcnya!\u201d ba\u015fl\u0131\u011f\u0131n\u0131 yazd\u0131r\u0131r.</p>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/rrpgNB?editors=1010\">Codepen\u2019de A\u00e7</a></strong></p>\n<p>Yukar\u0131daki linke t\u0131klayarak online d\u00fczenleyiciyi a\u00e7abilirsiniz. De\u011fi\u015fiklik yapmaktan \u00e7ekinmeyin ve yapt\u0131\u011f\u0131n\u0131z de\u011fi\u015fikliklerin \u00e7\u0131kt\u0131s\u0131n\u0131 g\u00f6zlemleyin. Bu rehberdeki \u00e7o\u011fu sayfada bunun gibi d\u00fczenlenebilir \u00f6rnekler g\u00f6receksiniz.</p>\n<h2 id=\"how-to-read-this-guide\"><a class=\"anchor\" href=\"/react/hello-world#how-to-read-this-guide\"></a>Bu Rehberi Nas\u0131l Okumal\u0131s\u0131n\u0131z? </h2>\n<p>Bu rehberde, React uygulamalar\u0131n\u0131n yap\u0131 ta\u015flar\u0131 olan elemanlar\u0131 (Element) ve bile\u015fenleri (Component) inceleyece\u011fiz. Bunlarda uzmanla\u015ft\u0131\u011f\u0131n\u0131zda, k\u00fc\u00e7\u00fck ve tekrar kullan\u0131labilir par\u00e7alardan karma\u015f\u0131k uygulamalar olu\u015fturabilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Bu rehber <strong>ad\u0131m ad\u0131m \u00f6\u011frenme</strong> konseptini tercih eden ki\u015filer i\u00e7in haz\u0131rlanm\u0131\u015ft\u0131r. E\u011fer yaparak \u00f6\u011frenmeyi tercih ediyorsan\u0131z, <a class=\"external-link\" href=\"https://tr.reactjs.org//tutorial/tutorial.html\">pratik \u00f6\u011fretici</a> sayfam\u0131za g\u00f6z atabilirsiniz. Bu rehberi ve prati\u011fe dayal\u0131 dersleri birbirine tamamlay\u0131c\u0131 olarak kullanabilirsiniz.</p>\n</div>\n<p>Bu b\u00f6l\u00fcm, ad\u0131m ad\u0131m temel React konseptlerinin ilk b\u00f6l\u00fcm\u00fc. Yandaki men\u00fcden di\u011fer b\u00f6l\u00fcmlere ula\u015fabilirsiniz. E\u011fer bunu mobil cihazda okuyorsan\u0131z, sa\u011f alt k\u00f6\u015fedeki butona basarak men\u00fcye ula\u015fabilirsiniz.</p>\n<p>Bu rehberdeki her b\u00f6l\u00fcm, \u00f6nceki b\u00f6l\u00fcmlerden edinilen bilgilere dayanarak ilerlemektedir. <strong>Yan men\u00fcde \u201cTemel Konseptler\u201d ba\u015fl\u0131\u011f\u0131 alt\u0131ndaki b\u00f6l\u00fcmleri s\u0131ras\u0131yla okuyarak React hakk\u0131ndaki \u00f6nemli konular\u0131 \u00f6\u011frenebilirsiniz.</strong> \u00d6rne\u011fin bundan sonraki b\u00f6l\u00fcm, <a href=\"/react/introducing-jsx\">\u201cJSX\u2019e Giri\u015f\u201d</a>.</p>\n<h2 id=\"knowledge-level-assumptions\"><a class=\"anchor\" href=\"/react/hello-world#knowledge-level-assumptions\"></a>Bilgi Seviyesi Varsay\u0131mlar\u0131 </h2>\n<p>React bir JavaScript k\u00fct\u00fcphanesidir ve bu y\u00fczden sizin temel d\u00fczeyde JavaScript dilini anlad\u0131\u011f\u0131n\u0131z\u0131 varsayaca\u011f\u0131z. <strong>E\u011fer yeteri kadar rahat hissetmiyorsan\u0131z, <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript derslerine</a> g\u00f6z atman\u0131z\u0131 ve bilgi seviyenizi kontrol etmenizi</strong> tavsiye ederiz. B\u00f6ylelikle bu rehberi takip ederken kaybolmazs\u0131n\u0131z. Bu, yakla\u015f\u0131k 30 dakika ile 1 saat aras\u0131 bir s\u00fcrenizi alabilir; fakat sonu\u00e7 olarak ayn\u0131 anda hem React hem JavaScript \u00f6\u011freniyormu\u015f gibi hissetmek zorunda hissetmeyeceksiniz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Bu rehberdeki \u00f6rneklerde bazen yeni JavaScript s\u00f6zdizimi kullan\u0131mlar\u0131na rastlayabilirsiniz. E\u011fer son bir ka\u00e7 y\u0131ld\u0131r JavaScript\u2019le \u00e7al\u0131\u015fmad\u0131ysan\u0131z,\n<a class=\"external-link\" href=\"https://gist.github.com/gaearon/683e676101005de0add59e8bb345340c\">bu \u00fc\u00e7 madde</a> \u015fu an i\u00e7in yeterli olacakt\u0131r.</p>\n</div>\n<h2 id=\"lets-get-started\"><a class=\"anchor\" href=\"/react/hello-world#lets-get-started\"></a>Hadi Ba\u015flayal\u0131m! </h2>\n<p>A\u015fa\u011f\u0131 inmeye devam edin, sayfan\u0131n en alt\u0131ndan hemen \u00f6nce, <a href=\"/react/introducing-jsx\">bu rehberin bir sonraki b\u00f6l\u00fcm\u00fc</a>n\u00fcn linkini bulacaks\u0131n\u0131z.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hello-world.md\">Edit this page</a></p></div></article>", "path": "/react/hello-world", "nav": ["/react/release-channels", "/react/introducing-jsx"]}, {"key": "2. JSX'e Giri\u015f", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>A\u015fa\u011f\u0131daki de\u011fi\u015fken tan\u0131m\u0131n\u0131 ele alal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Burada acayip bir \u015fekilde yaz\u0131lan s\u00f6z dizimi ne bir string ne de HTML\u2019e aittir.</p>\n<p>Bu s\u00f6z dizimi JSX olarak adland\u0131r\u0131l\u0131r ve JavaScript\u2019in bir s\u00f6z dizimi uzant\u0131s\u0131d\u0131r. Aray\u00fcz\u00fcn nas\u0131l g\u00f6r\u00fcnmesi gerekti\u011fini tan\u0131mlamak i\u00e7in, React ile birlikte JSX\u2019i kullanman\u0131z\u0131 tavsiye ederiz. JSX, bu ba\u011flamda size kullan\u0131c\u0131 aray\u00fcz\u00fc olu\u015fturmay\u0131 sa\u011flayan bir \u015fablon dili gibi g\u00f6r\u00fcnebilir. Fakat JavaScript\u2019i t\u00fcm g\u00fcc\u00fcyle kullanman\u0131z\u0131 sa\u011flayacak yeteneklerle donat\u0131lm\u0131\u015ft\u0131r.</p>\n<p>JSX, React elementleri olu\u015fturman\u0131z\u0131 sa\u011flar. <a href=\"/react/rendering-elements\">Sonraki b\u00f6l\u00fcmde</a> bu elementlerin nas\u0131l DOM\u2019a render edilece\u011fine de\u011finece\u011fiz. A\u015fa\u011f\u0131daki b\u00f6l\u00fcmlerde, JSX\u2019e ba\u015flang\u0131\u00e7 yapabilmeniz i\u00e7in gerekli bilgiler mevcuttur.</p>\n<h3 id=\"why-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#why-jsx\"></a>Neden JSX? </h3>\n<p>React, render edilecek k\u0131s\u0131mlar\u0131n yer ald\u0131\u011f\u0131 kodlar ile di\u011fer aray\u00fcz kodlar\u0131n\u0131n birbirinden ayr\u0131lmas\u0131n\u0131 te\u015fvik eder. Di\u011fer aray\u00fcz kodlar\u0131na \u00f6rnek verecek olursak: <code class=\"language-javascript\">onClick</code> gibi olaylar\u0131n nas\u0131l i\u015flenece\u011fi, state\u2019in zaman i\u00e7erisinde nas\u0131l de\u011fi\u015ftirilece\u011fi ve g\u00f6sterim i\u00e7in verilerin nas\u0131l haz\u0131rlanaca\u011f\u0131d\u0131r.</p>\n<p>HTML ve JavaScript kodlar\u0131n\u0131n ayr\u0131 dosyalarda tutularak <em>teknolojilerin</em> birbirinden yapay bir \u015fekilde ayr\u0131lmas\u0131 yerine React, hem HTML hem de JavaScript kodu bar\u0131nd\u0131ran ve birbirine gev\u015fek bir \u015fekilde ba\u011fl\u0131 olan bile\u015fenler (components) sayesinde ilgili <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Separation_of_concerns\"><em>i\u015flerin</em> ayr\u0131lmas\u0131n\u0131</a> sa\u011flar. <a href=\"/react/components-and-props\">\u0130lerleyen b\u00f6l\u00fcmlerde</a> bile\u015fenlere tekrar de\u011finece\u011fiz. Fakat hala HTML kodlar\u0131n\u0131n JavaScript i\u00e7erisine konulmas\u0131 sizi rahats\u0131z ediyorsa <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=x7cQ3mrcKaY\">bu video</a> sizi ikna edecektir.</p>\n<p>React, JSX kullan\u0131m\u0131n\u0131 <a href=\"/react/react-without-jsx\">zorunlu tutmaz</a>. Fakat bir\u00e7ok geli\u015ftirici, JavaScript kodu i\u00e7erisinde aray\u00fcz ile ilgili \u00e7al\u0131\u015f\u0131rken JSX\u2019in kullan\u0131lmas\u0131n\u0131n, g\u00f6rsel anlamda yard\u0131mc\u0131 oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyor. Ayr\u0131ca JSX, React i\u00e7in daha anla\u015f\u0131l\u0131r hata ve uyar\u0131 mesajlar\u0131n\u0131n g\u00f6r\u00fcnt\u00fclenmesini sa\u011fl\u0131yor.</p>\n<p>Bu k\u0131s\u0131mda anla\u015ft\u0131ysak, art\u0131k JSX ile React kullan\u0131m\u0131na ge\u00e7ebiliriz.</p>\n<h3 id=\"embedding-expressions-in-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#embedding-expressions-in-jsx\"></a>JSX \u0130\u00e7erisinde JavaScript Kodlar\u0131n\u0131n Kullan\u0131m\u0131 </h3>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekte ilk sat\u0131rda <code class=\"language-javascript\">name</code> de\u011fi\u015fkenini tan\u0131ml\u0131yoruz. Ard\u0131ndan bu de\u011fi\u015fkeni s\u00fcsl\u00fc parantezler ile sarmalayarak JSX kodu i\u00e7erisinde kullan\u0131yoruz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Josh Perez'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>JSX\u2019te s\u00fcsl\u00fc parantezler aras\u0131na diledi\u011finiz herhangi bir <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions\">JavaScript ifadesini</a> yazabilirsiniz. \u00d6rne\u011fin, <code class=\"language-javascript\">2 + 2</code>, <code class=\"language-javascript\">user.firstName</code>, veya <code class=\"language-javascript\">formatName(user)</code> gibi JavaScript ifadelerini kullanabilirsiniz.</p>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekte, bir JavaScript fonksiyonun \u00e7a\u011fr\u0131s\u0131n\u0131n sonucu JSX i\u00e7erisine g\u00f6m\u00fclmektedir. Yani <code class=\"language-javascript\">formatName(user)</code>, <code class=\"language-javascript\">&lt;h1&gt;</code> eleman\u0131n\u0131n i\u00e7erisine konulmaktad\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Harper'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Perez'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    Hello, </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/PGEjdG?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>Okunabilirli\u011fi artt\u0131rmak i\u00e7in JSX kodunu birka\u00e7 sat\u0131r halinde yazd\u0131k. Buradaki gibi, JSX kodunu bir\u00e7ok sat\u0131r halinde yazarken, kodu parantezler ile sarmalaman\u0131z\u0131 \u00f6neririz. Bu sayede <a class=\"external-link\" href=\"https://stackoverflow.com/q/2846283\">otomatik olarak noktal\u0131 virg\u00fcl eklenmesi</a> ile olu\u015fan bir\u00e7ok hatan\u0131n \u00f6n\u00fcne ge\u00e7ebilirsiniz. </p>\n<h3 id=\"jsx-is-an-expression-too\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-is-an-expression-too\"></a>JSX de bir JavaScript \u0130fadesidir </h3>\n<p>Olu\u015fan derlemenin ard\u0131ndan JSX ifadeleri, s\u0131radan JavaScript fonksiyon \u00e7a\u011fr\u0131lar\u0131na d\u00f6n\u00fc\u015f\u00fcr ve bu fonksiyonlar JavaScript nesnelerini i\u015fleyecek \u015fekilde \u00e7al\u0131\u015f\u0131rlar.</p>\n<p>Bu sayede <code class=\"language-javascript\">if</code> ifadelerini ve <code class=\"language-javascript\">for</code> d\u00f6ng\u00fclerini JSX i\u00e7erisinde kullanabilir, de\u011fi\u015fkenlere atama yapabilir, fonksiyona parametre olarak ge\u00e7ebilir ve fonksiyondan geri d\u00f6nd\u00fcrebilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, Stranger.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"specifying-attributes-with-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#specifying-attributes-with-jsx\"></a>JSX ile \u00d6zelliklerin Tan\u0131mlanmas\u0131 </h3>\n<p>Bir HTML eleman\u0131 i\u00e7in string ifadelerini \u00e7ift t\u0131rnak i\u00e7erisinde atayabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.reactjs.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> link </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ayr\u0131ca bir JavaScript ifadesini, eleman\u0131n \u00f6zelli\u011fi olarak tan\u0131mlamak i\u00e7in s\u00fcsl\u00fc parantezler ile sarmalayabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>img</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir JavaScript ifadesini, herhangi bir \u00f6zellik i\u00e7erisine yazarken \u00e7ift t\u0131rnak kullanmay\u0131n\u0131z. String i\u00e7in \u00e7ift t\u0131rnak, JavaScript ifadeleri i\u00e7in s\u00fcsl\u00fc parantezler kullanmal\u0131s\u0131n\u0131z. Ayn\u0131 \u00f6zellik i\u00e7in hem \u00e7ift t\u0131rnak hem de s\u00fcsl\u00fc parantez <strong>kullanmay\u0131n\u0131z</strong>.</p>\n<div class=\"blockquote\">\n<strong>Uyar\u0131:</strong>\n<p>JSX ifadeleri, HTML\u2019den ziyade JavaScript\u2019e daha yak\u0131nd\u0131rlar. Bu nedenle React DOM, \u00f6zellik isimlendirme i\u00e7in HTML\u2019deki gibi bir isimlendirme yerine <code class=\"language-javascript\">camelCase</code> isimlendirme standard\u0131n\u0131 kullanmaktad\u0131r.</p>\n<p>\u00d6rne\u011fin JSX i\u00e7erisinde <code class=\"language-javascript\">class</code> \u00f6zelli\u011fi <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/className\"><code class=\"language-javascript\">className</code></a>, ve <code class=\"language-javascript\">tabindex</code> \u00f6zelli\u011fi de <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/tabIndex\"><code class=\"language-javascript\">tabIndex</code></a> olarak yaz\u0131lmal\u0131d\u0131r.</p>\n</div>\n<h3 id=\"specifying-children-with-jsx\"><a class=\"anchor\" href=\"/react/introducing-jsx#specifying-children-with-jsx\"></a>JSX ile Alt Elemanlar\u0131n Tan\u0131mlanmas\u0131 </h3>\n<p>E\u011fer bir HTML etiketinin i\u00e7eri\u011fi bo\u015f ise, XML\u2019deki gibi <code class=\"language-javascript\">/&gt;</code> kullanarak etiketi kapatabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>JSX etiketleri alt elemanlar da i\u00e7erebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Good to see you here.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"jsx-prevents-injection-attacks\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-prevents-injection-attacks\"></a>JSX, Injection Sald\u0131r\u0131lar\u0131n\u0131 Engeller </h3>\n<p>JSX\u2019te kullan\u0131c\u0131 girdisini koda direkt olarak g\u00f6mmek g\u00fcvenlidir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>potentiallyMaliciousInput<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Bu kullan\u0131m g\u00fcvenlidir:</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u00c7\u00fcnk\u00fc varsay\u0131lan olarak React DOM, render i\u015flemi \u00f6ncesinde g\u00f6m\u00fclen de\u011ferlerdeki <code class=\"language-javascript\">&lt;</code>, <code class=\"language-javascript\">&amp;</code> gibi baz\u0131 \u00f6zel karakterleri <code class=\"language-javascript\">&amp;lt;</code> ve <code class=\"language-javascript\">&amp;amp;</code> olacak \u015fekilde <a class=\"external-link\" href=\"https://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html\">d\u00f6n\u00fc\u015ft\u00fcr\u00fcr</a>. B\u00f6ylece uygulama i\u00e7erisinde, kullan\u0131c\u0131n\u0131n yazabilece\u011fi k\u00f6t\u00fc ama\u00e7l\u0131 kodlar\u0131n enjekte edilmesi engellenmi\u015f olur. Render i\u015flemi \u00f6ncesi her \u015fey string ifadeye d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc\u011f\u00fcnden dolay\u0131, <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">XSS</a> sald\u0131r\u0131lar\u0131 engellenmi\u015f olur.</p>\n<h3 id=\"jsx-represents-objects\"><a class=\"anchor\" href=\"/react/introducing-jsx#jsx-represents-objects\"></a>JSX, JavaScript Nesnelerini Temsil Eder </h3>\n<p>Babel derleyicisi, JSX kodlar\u0131n\u0131 <code class=\"language-javascript\">React.createElement()</code> \u00e7a\u011fr\u0131lar\u0131na d\u00f6n\u00fc\u015ft\u00fcr\u00fcr.</p>\n<p>Bu nedenle a\u015fa\u011f\u0131daki iki kod \u00f6rne\u011fi de ayn\u0131 i\u015flemi ger\u00e7ekle\u015ftirir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>greeting<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    Hello, world!\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Hello, world!'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">React.createElement()</code> \u00e7a\u011fr\u0131s\u0131, hatas\u0131z kod yazman\u0131z i\u00e7in size yard\u0131mc\u0131 olacak birtak\u0131m kontrolleri ger\u00e7ekle\u015ftirir. Asl\u0131nda yapt\u0131\u011f\u0131 \u015fey, a\u015fa\u011f\u0131daki gibi bir nesne olu\u015fturmaktad\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Not: bu yap\u0131 basitle\u015ftirilmi\u015ftir</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello, world!'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu nesnelere \u201cReact elementleri\u201d ad\u0131 verilir. Bunu, ekranda g\u00f6rmek istedi\u011finiz kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcn kodlar ile tasvir edilmesi gibi d\u00fc\u015f\u00fcnebilirsiniz. React, bu nesneleri okuyarak DOM\u2019\u0131 olu\u015fturur ve aray\u00fcz\u00fc g\u00fcnceller.</p>\n<p><a href=\"/react/rendering-elements\">Sonraki b\u00f6l\u00fcmde</a>, React elementlerinin DOM\u2019a render edilmesi i\u015flemini daha detayl\u0131 bir \u015fekilde ele alaca\u011f\u0131z.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu:</strong>\n<p>ES6 ve JSX kodlar\u0131n\u0131n uygun \u015fekilde renklendirilmesi i\u00e7in, kod edit\u00f6r\u00fcn\u00fczde <a class=\"external-link\" href=\"https://babeljs.io/docs/en/editors\">\u201cBabel\u201d dil tan\u0131mlamalar\u0131n\u0131</a> kullanman\u0131z\u0131 \u00f6neririz.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/introducing-jsx.md\">Edit this page</a></p></div></article>", "path": "/react/introducing-jsx", "nav": ["/react/hello-world", "/react/rendering-elements"]}, {"key": "3. Elementlerin Render Edilmesi", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Elementler, React uygulamalar\u0131n\u0131n en k\u00fc\u00e7\u00fck yap\u0131 birimidir.</p>\n<p>Bir element, ekranda neyi g\u00f6rmek istiyorsan\u0131z onu tasvir eder:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Taray\u0131c\u0131n\u0131n DOM elementlerinin aksine, React elementleri daha sade nesnelerdir ve olu\u015fturulmalar\u0131 daha kolayd\u0131r; \u00e7\u00fcnk\u00fc React DOM, elementler ile e\u015fle\u015fmek i\u00e7in DOM\u2019\u0131n g\u00fcncellenmesi i\u015fini kendisi halleder.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>\u201cBile\u015fen\u201d (component) konsepti daha yayg\u0131n olarak bilindi\u011fi i\u00e7in, anlam bak\u0131m\u0131ndan elementler ile kar\u0131\u015ft\u0131r\u0131labilir. <a href=\"/react/components-and-props\">Sonraki b\u00f6l\u00fcmde</a> React bile\u015fenlerine de de\u011finece\u011fiz. Fakat elementler, React bile\u015fenlerinin en k\u00fc\u00e7\u00fck yap\u0131 ta\u015flar\u0131d\u0131r. Bu nedenle sonraki b\u00f6l\u00fcme atlamadan \u00f6nce bu b\u00f6l\u00fcm\u00fc okuman\u0131z\u0131 tavsiye ederiz.</p>\n</div>\n<h2 id=\"rendering-an-element-into-the-dom\"><a class=\"anchor\" href=\"/react/rendering-elements#rendering-an-element-into-the-dom\"></a>Bir Elementin DOM\u2019a Render Edilmesi </h2>\n<p>HTML dosyan\u0131z\u0131n herhangi bir yerinde <code class=\"language-javascript\">&lt;div&gt;</code> oldu\u011funu d\u00fc\u015f\u00fcnelim:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Buna \u201croot\u201d (k\u00f6k) d\u00fc\u011f\u00fcm denir; \u00e7\u00fcnk\u00fc i\u00e7erisindeki her \u015fey React DOM taraf\u0131ndan y\u00f6netilir.</p>\n<p>Genellikle React ile yaz\u0131lan uygulamalar, sadece bir adet k\u00f6k DOM d\u00fc\u011f\u00fcm\u00fc i\u00e7erirler. E\u011fer React\u2019i mevcut uygulaman\u0131za entegre ediyorsan\u0131z, birbirinden izole olacak \u015fekilde diledi\u011finiz kadar k\u00f6k DOM d\u00fc\u011f\u00fcm\u00fcne sahip olabilirsiniz.</p>\n<p>Bir React elementini render etmek istiyorsan\u0131z, \u00f6ncelikle dom eleman\u0131 ile <a href=\"/react/react-dom-client#createroot\"><code class=\"language-javascript\">ReactDOM.createRoot()</code></a> metodunu \u00e7a\u011f\u0131r\u0131n, ard\u0131ndan React eleman\u0131n\u0131, <code class=\"language-javascript\">root.render()</code> metoduna parametre olarak ge\u00e7irmeniz gereklidir:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZpvBNJ?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>Sayfada \u201cHello, world\u201d mesaj\u0131 g\u00f6r\u00fcnt\u00fclenecektir.</p>\n<h2 id=\"updating-the-rendered-element\"><a class=\"anchor\" href=\"/react/rendering-elements#updating-the-rendered-element\"></a>Render Edilmi\u015f Elementin G\u00fcncellenmesi </h2>\n<p>React elementleri <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Immutable_object\">immutable(de\u011fi\u015fmez)</a>\u2018d\u0131r. Yani bir kez React elementi olu\u015fturduktan sonra, o elementin alt elemanlar\u0131n\u0131 veya \u00f6zelliklerini de\u011fi\u015ftiremezsiniz. Bu nedenle element, b\u00fct\u00fcn bir videonun tek bir karesi gibidir: aray\u00fcz\u00fcn belirli bir andaki g\u00f6r\u00fcnt\u00fcs\u00fcn\u00fc temsil eder.</p>\n<p>Bu zamana kadar edindi\u011fimiz bilgiler \u0131\u015f\u0131\u011f\u0131nda, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcn g\u00fcncellenmesi i\u00e7in tek yolun, yeni bir element olu\u015fturup, onu <code class=\"language-javascript\">root.render()</code> metoduna aktarmak oldu\u011funu biliyoruz.</p>\n<p>A\u015fa\u011f\u0131daki saat \u00f6rne\u011fini ele alal\u0131m:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwoJZk?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval\"><code class=\"language-javascript\">setInterval()</code></a> metodu ile her saniye bitiminde <a href=\"/react/react-dom#render\"><code class=\"language-javascript\">root.render()</code></a> metodu \u00e7a\u011fr\u0131l\u0131yor.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Genelde bir\u00e7ok React uygulamas\u0131nda <code class=\"language-javascript\">root.render()</code> yaln\u0131zca bir kez \u00e7a\u011fr\u0131l\u0131r. Sonraki b\u00f6l\u00fcmlerde bu tarz kodlar\u0131n nas\u0131l <a href=\"/react/state-and-lifecycle\">state\u2019li bile\u015fenlere</a> d\u00f6n\u00fc\u015ft\u00fcr\u00fclece\u011fine de\u011finece\u011fiz.</p>\n<p>Her bir konu di\u011feri i\u00e7in zemin haz\u0131rlad\u0131\u011f\u0131ndan, bu konular\u0131 atlamaman\u0131z\u0131 \u00f6neririz. </p>\n</div>\n<h2 id=\"react-only-updates-whats-necessary\"><a class=\"anchor\" href=\"/react/rendering-elements#react-only-updates-whats-necessary\"></a>React Yaln\u0131zca Gerekli K\u0131s\u0131mlar\u0131 G\u00fcnceller </h2>\n<p>React DOM, ilgili elementi ve elementin alt elemanlar\u0131n\u0131, bir \u00f6nceki versiyonlar\u0131yla kar\u015f\u0131la\u015ft\u0131r\u0131r. Farklar\u0131 tespit ettikten sonra yaln\u0131zca gerekli olan k\u0131s\u0131mlarda DOM g\u00fcncellemesi yapar. Bu sayede DOM, istenen duruma getirilmi\u015f olur.</p>\n<p>Taray\u0131c\u0131 ara\u00e7lar\u0131n\u0131 kullanarak <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwoJZk?editors=1010\">son \u00f6rne\u011fi</a> inceledi\u011finizde de bu durumu g\u00f6rebilirsiniz:</p>\n<p><a class=\"external-link\" href=\"https://tr.reactjs.org//c158617ed7cc0eac8f58330e49e48224/granular-dom-updates.gif\">Image link</a></p>\n<p>B\u00fct\u00fcn UI a\u011fac\u0131n\u0131 her saniye bir g\u00f6r\u00fcnt\u00fcleyen bir element olu\u015fturmam\u0131za ra\u011fmen, React DOM taraf\u0131ndan <strong>yaln\u0131zca i\u00e7eri\u011fi de\u011fi\u015fen</strong> metin d\u00fc\u011f\u00fcm\u00fc g\u00fcncellenir.</p>\n<p>Deneyimlerimizden yola \u00e7\u0131karsak, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcn zaman i\u00e7erisinde nas\u0131l de\u011fi\u015ftirilece\u011finden ziyade herhangi bir anda nas\u0131l g\u00f6r\u00fcnmesi gerekti\u011fini d\u00fc\u015f\u00fcnmek bir\u00e7ok hatan\u0131n olu\u015fmas\u0131n\u0131 engellemektedir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/rendering-elements.md\">Edit this page</a></p></div></article>", "path": "/react/rendering-elements", "nav": ["/react/introducing-jsx", "/react/components-and-props"]}, {"key": "4. Bile\u015fenler ve Prop'lar", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bile\u015fenler, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc ayr\u0131\u015ft\u0131rarak birbirinden ba\u011f\u0131ms\u0131z ve tekrar kullan\u0131labilen par\u00e7alar olu\u015fturman\u0131z\u0131 sa\u011flar. Bu sayede her bir par\u00e7ay\u0131, birbirinden izole bir \u015fekilde d\u00fc\u015f\u00fcnerek kodlayabilirsiniz.</p>\n<p>Bu sayfa, bile\u015fenlerin ne oldu\u011funa dair bir fikir edinmenizi sa\u011flayacakt\u0131r. <a href=\"/react/react-component\">Bile\u015fenler API dok\u00fcman\u0131n\u0131</a> inceleyerek daha detayl\u0131 bilgi edinebilirsiniz.</p>\n<p>Kavramsal olarak bile\u015fenler, JavaScript fonksiyonlar\u0131 gibidir. Bile\u015fenler, \u201cprops\u201d ad\u0131ndaki girdileri opsiyonel olarak al\u0131rlar ve ekranda g\u00f6r\u00fcnt\u00fclenecek React elementlerini geri d\u00f6nd\u00fcr\u00fcrler.</p>\n<h2 id=\"function-and-class-components\"><a class=\"anchor\" href=\"/react/components-and-props#function-and-class-components\"></a>Fonksiyon ve S\u0131n\u0131f Bile\u015fenleri </h2>\n<p>Bir bile\u015fen olu\u015fturmak i\u00e7in en basit yol, bir JavaScript fonksiyonu yazmakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu fonksiyon, girdi olarak \u201cprops\u201d (properties) ad\u0131ndaki tek bir nesneyi ald\u0131\u011f\u0131 ve geriye bir React elementi d\u00f6nd\u00fcrd\u00fc\u011f\u00fc i\u00e7in ge\u00e7erli bir React bile\u015fenidir. Bu tarz bile\u015fenler, ger\u00e7ekten de birer JavaScript fonksiyonlar\u0131 olduklar\u0131 i\u00e7in ad\u0131na \u201cfonksiyonel bile\u015fenler\u201d denir.</p>\n<p>Fonksiyon yerine, bir <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes\">ES6 s\u0131n\u0131f\u0131</a> kullanarak da React bile\u015feni olu\u015fturabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00dcstteki her iki bile\u015fen de React\u2019in bak\u0131\u015f a\u00e7\u0131s\u0131ndan birbirine e\u015fittirler.</p>\n<p>S\u0131n\u0131f ve fonksiyon bile\u015fenlerinin her birisi baz\u0131 ek \u00f6zelliklere sahiptirler. Buna <a href=\"/react/state-and-lifecycle\">sonraki b\u00f6l\u00fcmlerde</a> de\u011finece\u011fiz.</p>\n<h2 id=\"rendering-a-component\"><a class=\"anchor\" href=\"/react/components-and-props#rendering-a-component\"></a>Bir Bile\u015fenin Render Edilmesi </h2>\n<p>\u00d6nceki b\u00f6l\u00fcmlerde, React elementi olarak sadece DOM elementlerini ele alm\u0131\u015ft\u0131k.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ancak elementler, kullan\u0131c\u0131 tan\u0131ml\u0131 bile\u015fenler de olabilirler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>React, kullan\u0131c\u0131 tan\u0131ml\u0131 bir bile\u015feni g\u00f6rd\u00fc\u011f\u00fc zaman, JSX \u00f6zelliklerini ve alt elemanlar\u0131n\u0131 bu bile\u015fene tek bir nesne olarak aktar\u0131r. Bu nesneye \u201cprops\u201d ad\u0131 verilir.</p>\n<p>\u00d6rne\u011fin a\u015fa\u011f\u0131daki kod, sayfada \u201cHello, Sara\u201d mesaj\u0131n\u0131 g\u00f6r\u00fcnt\u00fcler:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/YGYmEG?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>Bu \u00f6rnekte, hangi olaylar\u0131n ger\u00e7ekle\u015fti\u011fine bir bakal\u0131m:</p>\n<ol>\n<li><code class=\"language-javascript\">&lt;Welcome name=\"Sara\" /&gt;</code> elementi ile birlikte <code class=\"language-javascript\">root.render()</code> fonksiyonunu \u00e7a\u011f\u0131r\u0131yoruz.</li>\n<li>Devam\u0131nda React, <code class=\"language-javascript\">{name: 'Sara'}</code> prop\u2019u ile <code class=\"language-javascript\">Welcome</code> bile\u015fenini \u00e7a\u011f\u0131r\u0131yor.</li>\n<li><code class=\"language-javascript\">Welcome</code> bile\u015fenimiz, sonu\u00e7 olarak geriye bir <code class=\"language-javascript\">&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code> elementi d\u00f6nd\u00fcr\u00fcyor.</li>\n<li>React DOM, <code class=\"language-javascript\">&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code> ile e\u015fle\u015fmek i\u00e7in, DOM\u2019\u0131 arka planda efektif bir \u015fekilde g\u00fcncelliyor.</li>\n</ol>\n<div class=\"blockquote\">\n<strong>Not: Bile\u015fen isimlendirmelerinde daima b\u00fcy\u00fck harfle ba\u015flay\u0131n\u0131z.</strong>\n<p>\u00c7\u00fcnk\u00fc React, k\u00fc\u00e7\u00fck harfle ba\u015flayan bile\u015fenlere DOM etiketleri gibi davran\u0131r. \u00d6rne\u011fin <code class=\"language-javascript\">&lt;div /&gt;</code>, bir HTML div etiketini temsil eder, fakat <code class=\"language-javascript\">&lt;Welcome /&gt;</code> ise bir bile\u015feni temsil eder ve kodun etki alan\u0131nda <code class=\"language-javascript\">Welcome</code>\u2018\u0131n tan\u0131ml\u0131 olmas\u0131n\u0131 gerektirir.</p>\n<p>Bu isimlendirmenin nedeni hakk\u0131nda detayl\u0131 bilgi edinmek i\u00e7in l\u00fctfen <a href=\"/react/jsx-in-depth#user-defined-components-must-be-capitalized\">Derinlemesine JSX</a> sayfas\u0131na bak\u0131n\u0131z.</p>\n</div>\n<h2 id=\"composing-components\"><a class=\"anchor\" href=\"/react/components-and-props#composing-components\"></a>Bile\u015fenlerden Kompozisyon Olu\u015fturulmas\u0131 </h2>\n<p>Bile\u015fenler, \u00e7\u0131kt\u0131lar\u0131nda di\u011fer bile\u015fenleri g\u00f6sterebilir. Bu sayede soyutlanan bir bile\u015fen, herhangi bir ayr\u0131nt\u0131 d\u00fczeyinde tekrar kullan\u0131labilir. Butonlar, formlar, diyaloglar, ekranlar ve daha nicesi React uygulamalar\u0131nda yayg\u0131n bir \u015fekilde bile\u015fen olarak ifade edilebilirler.</p>\n<p>\u00d6rne\u011fin, <code class=\"language-javascript\">Welcome</code>\u2018\u0131 istedi\u011fimiz kadar g\u00f6r\u00fcnt\u00fcleyecek bir <code class=\"language-javascript\">App</code> bile\u015feni olu\u015fturabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Cahal<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Edite<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/KgQKPr?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>Genellikle, yeni React uygulamalar\u0131, en \u00fcstte bir tane <code class=\"language-javascript\">App</code> bile\u015feni i\u00e7erirler. Ancak React\u2019i mevcut uygulaman\u0131za entegre ediyorsan\u0131z, <code class=\"language-javascript\">Button</code> gibi en k\u00fc\u00e7\u00fck bile\u015fenlerden ba\u015flayacak \u015fekilde, basitten karma\u015f\u0131\u011fa do\u011fru ilerleyerek bile\u015fen hiyerar\u015fisini olu\u015fturabilirsiniz.</p>\n<h2 id=\"extracting-components\"><a class=\"anchor\" href=\"/react/components-and-props#extracting-components\"></a>Bile\u015fenlerin \u00c7\u0131kar\u0131lmas\u0131 </h2>\n<p>B\u00fcy\u00fck bile\u015fenleri, sade ve y\u00f6netilebilir olmas\u0131 ad\u0131na daha k\u00fc\u00e7\u00fck bile\u015fenlere b\u00f6lebilirsiniz.</p>\n<p>\u00d6rne\u011fin a\u015fa\u011f\u0131daki <code class=\"language-javascript\">Comment</code> bile\u015fenini ele alal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/VKQwEo?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>\u00dcstteki bile\u015fen; <code class=\"language-javascript\">author</code> nesnesini, <code class=\"language-javascript\">text</code> metnini ve bir <code class=\"language-javascript\">date</code> tarihini prop olarak al\u0131r. Bu bile\u015fen, bir sosyal medya sitesinde yorum kutucu\u011funun g\u00f6r\u00fcnt\u00fclenmesini sa\u011flar.</p>\n<p>\u0130\u00e7 i\u00e7e halde bulunan bu bile\u015fenin \u00fczerinde de\u011fi\u015fiklik yapmak zor olabilir. Ayr\u0131ca b\u00fcnyesindeki DOM elementlerinin de tekrar kullan\u0131labilirli\u011fi olduk\u00e7a d\u00fc\u015f\u00fck seviyededir. Bu durumu \u00e7\u00f6zmek i\u00e7in, kod i\u00e7erisinden birka\u00e7 bile\u015fen \u00e7\u0131karabiliriz.</p>\n<p>\u00d6ncelikle <code class=\"language-javascript\">Avatar</code> bile\u015fenini \u00e7\u0131karal\u0131m:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">Avatar</code> bile\u015feninin, bir <code class=\"language-javascript\">Comment</code> bile\u015feni i\u00e7erisinde render edildi\u011fini bilmesi gerekli de\u011fildir. Bu nedenle <code class=\"language-javascript\">Avatar</code> bile\u015fenini, gelecekte uygulaman\u0131n daha farkl\u0131 yerlerinde de kullanma ihtimalimiz bulundu\u011fundan dolay\u0131, prop de\u011fi\u015fkenleri i\u00e7in <code class=\"language-javascript\">author</code> yerine <code class=\"language-javascript\">user</code> gibi daha genel bir isim verebiliriz.</p>\n<p>Prop\u2019lar isimlendirilirken, ilgili bile\u015fenin hangi bile\u015fen i\u00e7erisinde kullan\u0131ld\u0131\u011f\u0131n\u0131 ele almak yerine, bile\u015feni ba\u011f\u0131ms\u0131z olarak ele alman\u0131z gerekmektedir.</p>\n<p>Yapt\u0131\u011f\u0131m\u0131z de\u011fi\u015fiklikle <code class=\"language-javascript\">Comment</code> bile\u015fenini az bir miktar basitle\u015ftirmi\u015f olduk:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi <code class=\"language-javascript\">Avatar</code> ile birlikte, kullan\u0131c\u0131 ad\u0131n\u0131 da render edecek olan <code class=\"language-javascript\">UserInfo</code> bile\u015fenini kod i\u00e7erisinden \u00e7\u0131karabiliriz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">UserInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu sayede <code class=\"language-javascript\">Comment</code> bile\u015feni daha da basitle\u015fmi\u015f hale geldi:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserInfo</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/rrJNJY?editors=1010\">Codepen\u2019de Deneyin</a></strong></p>\n<p>Bile\u015fenlerin \u00e7\u0131kar\u0131lmas\u0131 en ba\u015fta angarya bir i\u015flem gibi g\u00f6r\u00fcnebilir. Fakat b\u00fcy\u00fck \u00e7apl\u0131 uygulamalarda, tekrar kullan\u0131labilir bile\u015fenler i\u00e7eren bir <strong>bile\u015fen paletine</strong> sahip olmak olduk\u00e7a faydal\u0131 hale gelecektir. Bile\u015fen \u00e7\u0131karman\u0131n genel mant\u0131\u011f\u0131 a\u015fa\u011f\u0131daki gibidir:</p>\n<ul>\n<li>E\u011fer kullan\u0131c\u0131 aray\u00fcz\u00fcndeki bir eleman (<code class=\"language-javascript\">Button</code>, <code class=\"language-javascript\">Panel</code>, <code class=\"language-javascript\">Avatar</code>) uygulama i\u00e7erisinde bir\u00e7ok defa kullan\u0131l\u0131yorsa,</li>\n<li>E\u011fer bir bile\u015fen (<code class=\"language-javascript\">App</code>, <code class=\"language-javascript\">FeedStory</code>, <code class=\"language-javascript\">Comment</code>) olduk\u00e7a karma\u015f\u0131k hale geldiyse,</li>\n</ul>\n<p>Bu bile\u015fen, i\u00e7erisinden bile\u015fenler \u00e7\u0131karmak i\u00e7in iyi bir adayd\u0131r diyebiliriz.</p>\n<h2 id=\"props-are-read-only\"><a class=\"anchor\" href=\"/react/components-and-props#props-are-read-only\"></a>Prop\u2019lar Salt Okunurdur </h2>\n<p><a href=\"/react/components-and-props#function-and-class-components\">Fonksiyon veya s\u0131n\u0131f</a> bile\u015feninden herhangi birini olu\u015fturdu\u011funuzda, bu bile\u015fen kendi prop\u2019lar\u0131n\u0131 asla de\u011fi\u015ftirmemelidir. \u00d6rne\u011fin a\u015fa\u011f\u0131daki <code class=\"language-javascript\">sum</code> fonksiyonunu ele alal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu tarz fonksiyonlar, kendi girdi parametrelerini de\u011fi\u015ftirmedikleri ve her zaman ayn\u0131 parametreler i\u00e7in ayn\u0131 sonucu \u00fcrettiklerinden dolay\u0131 <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Pure_function\">\u201cpure\u201d</a> (saf) fonksiyonlard\u0131r.</p>\n<p>Tam ters \u00f6rnek verecek olursak, a\u015fa\u011f\u0131daki fonksiyon impure\u2019d\u00fcr (saf de\u011fildir). \u00c7\u00fcnk\u00fc kendi girdi de\u011ferini de\u011fi\u015ftirmektedir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">account<span class=\"token punctuation\">,</span> amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  account<span class=\"token punctuation\">.</span>total <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React, kod yaz\u0131m\u0131nda olduk\u00e7a esnek olmas\u0131na ra\u011fmen, sadece bir tek kural\u0131 \u015fart ko\u015fmaktad\u0131r:</p>\n<p><strong>B\u00fct\u00fcn React bile\u015fenleri yal\u0131n (<code class=\"language-javascript\">pure</code>) fonksiyonlar gibi davranmal\u0131 ve prop\u2019lar\u0131n\u0131 asla de\u011fi\u015ftirmemelidirler.</strong></p>\n<p>Tabii ki kullan\u0131c\u0131 aray\u00fczleri dinamiktir ve zaman i\u00e7erisinde de\u011fi\u015fiklik g\u00f6sterir. <a href=\"/react/state-and-lifecycle\">Sonraki b\u00f6l\u00fcmde</a>, \u201cstate\u201d (durum) ad\u0131ndaki yeni konsepte de\u011finece\u011fiz. State bu kurala sad\u0131k kalarak; kullan\u0131c\u0131 etkile\u015fimleri, a\u011f istekleri ve di\u011fer \u015feylerden dolay\u0131 zaman i\u00e7erisinde de\u011fi\u015fen aray\u00fcz\u00fcn g\u00f6r\u00fcnt\u00fclenmesi i\u00e7in, React bile\u015fenlerinin kendi \u00e7\u0131kt\u0131lar\u0131n\u0131 de\u011fi\u015ftirebilmesine izin verir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/components-and-props.md\">Edit this page</a></p></div></article>", "path": "/react/components-and-props", "nav": ["/react/rendering-elements", "/react/state-and-lifecycle"]}, {"key": "5. State ve Ya\u015fam D\u00f6ng\u00fcs\u00fc", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bu sayfada, state kavram\u0131 ve React bile\u015fenlerinin ya\u015fam d\u00f6ng\u00fcs\u00fc tan\u0131t\u0131lacakt\u0131r. Bile\u015fen API\u2019si hakk\u0131nda ayr\u0131nt\u0131l\u0131 bilgi i\u00e7in, <a href=\"/react/react-component\">bu dok\u00fcmana</a> bakabilirsiniz.</p>\n<p><a href=\"/react/rendering-elements#updating-the-rendered-element\">\u00d6nceki b\u00f6l\u00fcmlerde bahsetti\u011fimiz</a>, analog saat \u00f6rne\u011fini ele alaca\u011f\u0131z. Hat\u0131rlayaca\u011f\u0131n\u0131z gibi, <a href=\"/react/rendering-elements#rendering-an-element-into-the-dom\">Elementlerin Render Edilmesi</a> b\u00f6l\u00fcm\u00fcnde, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcn yaln\u0131zca tek y\u00f6nl\u00fc g\u00fcncellenmesine yer vermi\u015ftik. Bunu <code class=\"language-javascript\">root.render()</code> metodu ile ger\u00e7ekle\u015ftirebiliyorduk:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n<span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/gwoJZk?editors=0010\"><strong>CodePen\u2019de deneyin</strong></a></p>\n<p>Bu b\u00f6l\u00fcmde ise, <code class=\"language-javascript\">Clock</code> bile\u015fenini nas\u0131l sarmalayaca\u011f\u0131m\u0131za ve tekrar kullan\u0131labilir hale getirece\u011fimize de\u011finece\u011fiz. Bu bile\u015fen, kendi zamanlay\u0131c\u0131s\u0131n\u0131 ba\u015flatacak ve her saniye kendisini g\u00fcncelleyecek.</p>\n<p>\u00d6ncelikle Clock\u2019u, ayr\u0131 bir bile\u015fen halinde sarmalayarak g\u00f6r\u00fcnt\u00fcleyelim:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Clock</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token attr-name\">date</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/dpdoYR?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>G\u00fczel g\u00f6r\u00fcn\u00fcyor ancak bu a\u015famada kritik bir gereksinimi atlad\u0131k: <code class=\"language-javascript\">Clock</code>\u2018un kendi zamanlay\u0131c\u0131s\u0131n\u0131 ayarlamas\u0131 ve her saniye kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc g\u00fcncellemesi i\u015fini kendi b\u00fcnyesinde ger\u00e7ekle\u015ftirmesi gerekiyordu.</p>\n<p>A\u015fa\u011f\u0131daki kodu bir kere yazd\u0131\u011f\u0131m\u0131zda, <code class=\"language-javascript\">Clock</code>\u2018un art\u0131k kendi kendisini g\u00fcncellemesini istiyoruz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bunu yapmak i\u00e7in, <code class=\"language-javascript\">Clock</code> bile\u015fenine <strong>state</strong> eklememiz gerekiyor.</p>\n<p>State\u2019ler, prop\u2019larla benzerlik g\u00f6sterir. Fakat sadece ilgili bile\u015fene \u00f6zeldir ve yaln\u0131zca o bile\u015fen taraf\u0131ndan kontrol edilirler.</p>\n<p>S\u0131n\u0131f olarak olu\u015fturulan bile\u015fenlerin, fonksiyon bile\u015fenlerine g\u00f6re baz\u0131 ek \u00f6zelliklerinin bulundu\u011fundan <a href=\"/react/components-and-props#functional-and-class-components\">bahsetmi\u015ftik</a>. Bahsetti\u011fimiz ek \u00f6zellik yerel state de\u011fi\u015fkenidir ve sadece s\u0131n\u0131f bile\u015fenlerine \u00f6zg\u00fcd\u00fcr.</p>\n<h2 id=\"converting-a-function-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#converting-a-function-to-a-class\"></a>Bir Fonksiyonun S\u0131n\u0131fa D\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi </h2>\n<p><code class=\"language-javascript\">Clock</code> gibi bir fonksiyon bile\u015fenini 5 ad\u0131mda s\u0131n\u0131f bile\u015fenine d\u00f6n\u00fc\u015ft\u00fcrebilirsiniz:</p>\n<ol>\n<li>\u00d6ncelikle, fonksiyon ismiyle ayn\u0131 isimde bir <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes\">ES6 s\u0131n\u0131f\u0131</a> olu\u015fturun. Ve bu s\u0131n\u0131f\u0131 <code class=\"language-javascript\">React.Component</code>\u2018tan t\u00fcretin.</li>\n<li>S\u0131n\u0131f\u0131n i\u00e7erisine, <code class=\"language-javascript\">render()</code> ad\u0131nda bo\u015f bir fonksiyon ekleyin.</li>\n<li>Fonksiyon bile\u015feni i\u00e7erisindeki kodlar\u0131 <code class=\"language-javascript\">render()</code> metoduna ta\u015f\u0131y\u0131n.</li>\n<li><code class=\"language-javascript\">render()</code> metodu i\u00e7erisindeki <code class=\"language-javascript\">props</code> yazan yerleri, <code class=\"language-javascript\">this.props</code> ile de\u011fi\u015ftirin.</li>\n<li>Son olarak, i\u00e7i bo\u015falt\u0131lm\u0131\u015f fonksiyonu tamamen silin.</li>\n</ol>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/zKRGpo?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>\u00d6nceden fonksiyon bile\u015feni olan <code class=\"language-javascript\">Clock</code>, art\u0131k bir s\u0131n\u0131f bile\u015feni haline gelmi\u015f oldu.</p>\n<p>Bu kodda <code class=\"language-javascript\">render</code> metodumuz, her g\u00fcncelleme oldu\u011funda yeniden \u00e7a\u011fr\u0131lacakt\u0131r. Fakat <code class=\"language-javascript\">&lt;Clock /&gt;</code> bile\u015fenini ayn\u0131 DOM d\u00fc\u011f\u00fcm\u00fcnde render etti\u011fimizden, <code class=\"language-javascript\">Clock</code> s\u0131n\u0131f\u0131n\u0131n yaln\u0131zca bir \u00f6rne\u011fi kullan\u0131lacakt\u0131r.</p>\n<h2 id=\"adding-local-state-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\"></a>Bir S\u0131n\u0131fa Yerel State\u2019in Eklenmesi </h2>\n<p><code class=\"language-javascript\">date</code> de\u011fi\u015fkenini, props\u2019tan state\u2019e ta\u015f\u0131mam\u0131z gerekiyor. Bunu 3 ad\u0131mda ger\u00e7ekle\u015ftirebiliriz:</p>\n<ol>\n<li><code class=\"language-javascript\">render()</code> metodundaki <code class=\"language-javascript\">this.props.date</code>\u2018i <code class=\"language-javascript\">this.state.date</code> ile de\u011fi\u015ftirelim:</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-javascript\">state</code>\u2018in ilk kez olu\u015fturulaca\u011f\u0131 yer olan <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Constructor\">s\u0131n\u0131f constructor</a>\u2018\u0131n\u0131 ekleyelim:</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">props</code>\u2018\u0131, constructor i\u00e7erisinde nas\u0131l olu\u015fturdu\u011fumuza yak\u0131ndan bakal\u0131m:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>S\u0131n\u0131f bile\u015fenleri <code class=\"language-javascript\">React.Component</code> s\u0131n\u0131f\u0131ndan t\u00fcretildikleri i\u00e7in, daima <code class=\"language-javascript\">super(props)</code>\u2018u \u00e7a\u011f\u0131rmalar\u0131 gerekir.</p>\n<ol>\n<li><code class=\"language-javascript\">&lt;Clock /&gt;</code> elementinden <code class=\"language-javascript\">date</code> prop\u2019unu \u00e7\u0131karal\u0131m:</li>\n</ol>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Zamanlay\u0131c\u0131 kodunu, daha sonra <code class=\"language-javascript\">Clock</code> bile\u015fenin i\u00e7erisine ekleyece\u011fiz. Fakat \u015fimdilik <code class=\"language-javascript\">Clock</code> bile\u015feninin son hali a\u015fa\u011f\u0131daki gibi olacakt\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/KgQpJd?editors=0010\"><strong>CodePen\u2019de deneyin</strong></a></p>\n<p>\u015eimdi <code class=\"language-javascript\">Clock</code> bile\u015fenini, kendi zamanlay\u0131c\u0131s\u0131n\u0131 kuracak ve her saniye kendisini g\u00fcncelleyecek \u015fekilde ayarlayal\u0131m.</p>\n<h2 id=\"adding-lifecycle-methods-to-a-class\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#adding-lifecycle-methods-to-a-class\"></a>Bir S\u0131n\u0131f\u0131n Ya\u015fam D\u00f6ng\u00fcs\u00fc Kodlar\u0131n\u0131n Eklenmesi </h2>\n<p>Bir\u00e7ok bile\u015fene sahip uygulamalarda, bile\u015fenler yok edildi\u011finde ilgili kaynaklar\u0131n b\u0131rak\u0131lmas\u0131 \u00e7ok \u00f6nemlidir.</p>\n<p><code class=\"language-javascript\">Clock</code> bile\u015feni ilk kez DOM\u2019a render edildi\u011finde bir <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval\">zamanlay\u0131c\u0131</a> kurmak istiyoruz. React\u2019te bu olaya \u201cmounting\u201d (de\u011fi\u015fkenin tak\u0131lmas\u0131) ad\u0131 verilir.</p>\n<p>Ayr\u0131ca, <code class=\"language-javascript\">Clock</code> bile\u015feni DOM\u2019dan \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda, zamanlay\u0131c\u0131n\u0131n da <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval\">temizlenmesini</a> istiyoruz. React\u2019te bu olaya \u201cunmounting\u201d (de\u011fi\u015fkenin \u00e7\u0131kar\u0131lmas\u0131) ad\u0131 verilir.</p>\n<p><code class=\"language-javascript\">Clock</code> bile\u015feni tak\u0131l\u0131p \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda baz\u0131 i\u015fleri ger\u00e7ekle\u015ftirebilmek i\u00e7in \u00f6zel metotlar tan\u0131mlayabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu metotlara \u201clifecycle methods\u201d (ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131) ad\u0131 verilir.</p>\n<p>Bile\u015fenin \u00e7\u0131kt\u0131s\u0131, DOM\u2019a render edildikten sonra <code class=\"language-javascript\">componentDidMount()</code> metodu \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Buras\u0131 ayn\u0131 zamanda bir zamanlay\u0131c\u0131 olu\u015fturmak i\u00e7in en elveri\u015fli yerdir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token number\">1000</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">this</code>\u2018e (<code class=\"language-javascript\">this.timerID</code>) zamanlay\u0131c\u0131 ID\u2019sini nas\u0131l atad\u0131\u011f\u0131m\u0131z\u0131 inceleyebilirsiniz.</p>\n<p>Daha \u00f6nce de belirtti\u011fimiz gibi, <code class=\"language-javascript\">this.props</code> React taraf\u0131ndan y\u00f6netiliyor ve <code class=\"language-javascript\">this.state</code>\u2018in de \u00f6zel bir ya\u015fam d\u00f6ng\u00fcs\u00fc var. E\u011fer <code class=\"language-javascript\">timerID</code> gibi veri ak\u0131\u015f\u0131na dahil olmayan de\u011fi\u015fkenleri saklaman\u0131z gerekiyorsa, bu \u00f6rnekte yapt\u0131\u011f\u0131m\u0131z gibi s\u0131n\u0131f i\u00e7erisinde de\u011fi\u015fkenler tan\u0131mlayabilirsiniz.</p>\n<p>Olu\u015fturdu\u011fumuz zamanlay\u0131c\u0131y\u0131 <code class=\"language-javascript\">componentWillUnmount()</code> ya\u015fam d\u00f6ng\u00fcs\u00fc metodu i\u00e7erisinde <code class=\"language-javascript\">Clock</code> bile\u015feninden s\u00f6k\u00fcp \u00e7\u0131karal\u0131m:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Son olarak, <code class=\"language-javascript\">Clock</code> bile\u015feninin saniyede bir \u00e7al\u0131\u015ft\u0131raca\u011f\u0131 <code class=\"language-javascript\">tick()</code> fonksiyonunu kodlayal\u0131m.</p>\n<p><code class=\"language-javascript\">tick()</code> fonksiyonu, <code class=\"language-javascript\">this.setState()</code>\u2018i \u00e7a\u011f\u0131rarak <code class=\"language-javascript\">Clock</code> bile\u015feninin yerel state\u2019ini g\u00fcncelleyecektir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/amqdNA?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Art\u0131k saat, her saniye ba\u015f\u0131 tikleyerek mevcut zaman\u0131 g\u00f6r\u00fcnt\u00fcleyecektir.</p>\n<p>\u015eimdi k\u0131sa bir \u00f6zet ge\u00e7erek neler yapt\u0131\u011f\u0131m\u0131z\u0131 ve s\u0131ras\u0131yla hangi metotlar\u0131n \u00e7a\u011fr\u0131ld\u0131\u011f\u0131n\u0131 kontrol edelim:</p>\n<ol>\n<li><code class=\"language-javascript\">root.render()</code> metoduna <code class=\"language-javascript\">&lt;Clock /&gt;</code> aktar\u0131ld\u0131\u011f\u0131 zaman React, <code class=\"language-javascript\">Clock</code> bile\u015feninin constructor\u2019\u0131n\u0131 \u00e7a\u011f\u0131r\u0131r. <code class=\"language-javascript\">Clock</code> bile\u015feni, mevcut saati g\u00f6r\u00fcnt\u00fclemesi gerekti\u011finden, <code class=\"language-javascript\">this.state</code>\u2018e o anki zaman\u0131 atar. Daha sonra bu state g\u00fcncellenecektir.</li>\n<li>Devam\u0131nda React, <code class=\"language-javascript\">Clock</code> bile\u015feninin <code class=\"language-javascript\">render()</code> metodunu \u00e7a\u011f\u0131r\u0131r. Bu sayede React, ekranda nelerin g\u00f6sterilmesi gerekti\u011fini bilir. Sonras\u0131nda ise <code class=\"language-javascript\">Clock</code>\u2018un render edilmi\u015f \u00e7\u0131kt\u0131s\u0131 ile e\u015fle\u015fmek i\u00e7in ilgili DOM g\u00fcncellemelerini ger\u00e7ekle\u015ftirir.</li>\n<li><code class=\"language-javascript\">Clock</code> bile\u015feninin \u00e7\u0131kt\u0131s\u0131 DOM\u2019a eklendi\u011finde, ya\u015fam d\u00f6ng\u00fcs\u00fcndeki <code class=\"language-javascript\">componentDidMount()</code> metodu \u00e7a\u011fr\u0131l\u0131r. Bu metotta <code class=\"language-javascript\">Clock</code> bile\u015feni, her saniyede bir <code class=\"language-javascript\">tick()</code> metodunun \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 gerekti\u011fini taray\u0131c\u0131ya bildirir.</li>\n<li>Taray\u0131c\u0131 her saniyede bir <code class=\"language-javascript\">tick()</code> metodunu \u00e7a\u011f\u0131r\u0131r. <code class=\"language-javascript\">tick()</code> metodunda <code class=\"language-javascript\">Clock</code> bile\u015feni, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc g\u00fcncellemek i\u00e7in <code class=\"language-javascript\">setState()</code> metodunu \u00e7a\u011f\u0131r\u0131r ve bu metoda mevcut tarih/saat de\u011ferini aktar\u0131r. <code class=\"language-javascript\">setState()</code>\u2018in \u00e7a\u011fr\u0131lmas\u0131 sayesinde React, state\u2019in de\u011fi\u015fti\u011fini anlar ve ekranda neyin g\u00f6r\u00fcnt\u00fclenece\u011fini anlamak i\u00e7in tekrar <code class=\"language-javascript\">render()</code> metodunu \u00e7a\u011f\u0131r\u0131r. Art\u0131k <code class=\"language-javascript\">render()</code> metodundaki <code class=\"language-javascript\">this.state.date</code>\u2018in de\u011feri eski halinden farkl\u0131 oldu\u011fundan, render \u00e7\u0131kt\u0131s\u0131 g\u00fcncellenmi\u015f zaman\u0131 i\u00e7erecek demektir. Buna g\u00f6re React, DOM\u2019\u0131 ilgili \u015fekilde g\u00fcnceller.</li>\n<li>E\u011fer <code class=\"language-javascript\">Clock</code> bile\u015feni, DOM\u2019dan \u00e7\u0131kar\u0131l\u0131rsa, ya\u015fam d\u00f6ng\u00fcs\u00fcndeki <code class=\"language-javascript\">componentWillUnmount()</code> metodu \u00e7a\u011fr\u0131l\u0131r ve taray\u0131c\u0131 taraf\u0131ndan zamanlay\u0131c\u0131 durdurulmu\u015f olur.</li>\n</ol>\n<h2 id=\"using-state-correctly\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#using-state-correctly\"></a>State\u2019in Do\u011fru Kullan\u0131m\u0131 </h2>\n<p><code class=\"language-javascript\">setState()</code> hakk\u0131nda bilmeniz gereken 3 \u015fey bulunmaktad\u0131r.</p>\n<h3 id=\"do-not-modify-state-directly\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#do-not-modify-state-directly\"></a>State\u2019i Do\u011frudan De\u011fi\u015ftirmeyiniz </h3>\n<p>\u00d6rne\u011fin, a\u015fa\u011f\u0131daki kod bile\u015feni yeniden render <strong>etmeyecektir</strong>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Yanl\u0131\u015f kullan\u0131m</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bunun yerine <code class=\"language-javascript\">setState()</code> kullan\u0131n\u0131z:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Do\u011fru kullan\u0131m</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">this.state</code>\u2018e atama yapman\u0131z gereken tek yer, ilgili bile\u015fenin constructor\u2019\u0131d\u0131r.</p>\n<h3 id=\"state-updates-may-be-asynchronous\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#state-updates-may-be-asynchronous\"></a>State G\u00fcncellemeleri Asenkron Olabilir </h3>\n<p>React, \u00e7oklu <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131lar\u0131n\u0131, performans i\u00e7in tekil bir g\u00fcncellemeye d\u00f6n\u00fc\u015ft\u00fcrebilir.</p>\n<p><code class=\"language-javascript\">this.props</code> ve <code class=\"language-javascript\">this.state</code>, asenkron olarak g\u00fcncellenebildiklerinden, sonraki state\u2019i hesaplarken bu nesnelerin mevcut de\u011ferlerine <strong>g\u00fcvenmemelisiniz</strong>.</p>\n<p>\u00d6rne\u011fin, a\u015fa\u011f\u0131daki kod <code class=\"language-javascript\">counter</code>\u2018\u0131 g\u00fcncellemeyebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Yanl\u0131\u015f kullan\u0131m</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>increment<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bunu d\u00fczeltmek i\u00e7in, <code class=\"language-javascript\">setState()</code>\u2018in ikinci formunu kullanmam\u0131z gerekir. Bu formda  <code class=\"language-javascript\">setState()</code> fonksiyonu, parametre olarak nesne yerine fonksiyon al\u0131r. Bu fonksiyon, ilk parametre olarak \u00f6nceki state\u2019i, ikinci parametre olarak da o anda g\u00fcncellenen props de\u011ferini al\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Do\u011fru kullan\u0131m</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yukar\u0131da bir <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">ok fonksiyonu</a> kulland\u0131k. Fakat normal fonksiyonlarla da gayet \u00e7al\u0131\u015fabilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Do\u011fru kullan\u0131m</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"state-updates-are-merged\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#state-updates-are-merged\"></a>State G\u00fcncellemeleri Birle\u015ftirilir </h3>\n<p>React, <code class=\"language-javascript\">setState()</code>\u2018i \u00e7a\u011f\u0131rd\u0131\u011f\u0131n\u0131zda, parametre olarak verdi\u011finiz nesneyi al\u0131p mevcut state\u2019e aktar\u0131r.</p>\n<p>\u00d6rne\u011fin, state\u2019iniz a\u015fa\u011f\u0131daki gibi bir\u00e7ok ba\u011f\u0131ms\u0131z de\u011fi\u015fkeni i\u00e7erebilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">posts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">comments</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ve siz de bu de\u011fi\u015fkenleri, ayr\u0131 birer <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131lar\u0131 ile g\u00fcncellemek isteyebilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">posts</span><span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>posts</span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">fetchComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">comments</span><span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>comments</span>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Birle\u015fme i\u015flemi y\u00fczeysel oldu\u011fundan, <code class=\"language-javascript\">this.setState({comments})</code> \u00e7a\u011fr\u0131s\u0131 <code class=\"language-javascript\">this.state.posts</code> de\u011fi\u015fkenini de\u011fi\u015fmeden b\u0131rak\u0131rken, <code class=\"language-javascript\">this.state.comments</code>\u2018i tamam\u0131yla de\u011fi\u015ftirecektir.</p>\n<h2 id=\"the-data-flows-down\"><a class=\"anchor\" href=\"/react/state-and-lifecycle#the-data-flows-down\"></a>Verinin Alt Bile\u015fenlere Aktar\u0131lmas\u0131 </h2>\n<p>Ne \u00fcst ne de alt bile\u015fenler, belirli bir bile\u015fenin state\u2019li veya state\u2019siz oldu\u011funu bilebilir. Ayr\u0131ca o bile\u015fenin fonksiyon veya s\u0131n\u0131f olarak tan\u0131mlanmas\u0131n\u0131 da \u00f6nemsemezler.</p>\n<p>Bu nedenle state\u2019e, <strong>yerel state</strong> denir. State, kendisine sahip olan ve kendisini ayarlayan bile\u015fen haricinde hi\u00e7bir bile\u015fen i\u00e7in eri\u015filebilir de\u011fildir.</p>\n<p>Bir bile\u015fen kendi state\u2019ini, prop\u2019lar arac\u0131l\u0131\u011f\u0131yla alt bile\u015fenlere aktarabilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedDate</span></span> <span class=\"token attr-name\">date</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">FormattedDate</code> bile\u015feni, <code class=\"language-javascript\">date</code> de\u011fi\u015fkenini props\u2019tan alabilir ve bunu al\u0131rken <code class=\"language-javascript\">Clock</code>\u2018un state\u2019inden mi yoksa prop\u2019undan m\u0131 geldi\u011fini bilemez. Hatta <code class=\"language-javascript\">date</code> de\u011fi\u015fkeni, <code class=\"language-javascript\">Clock</code> bile\u015feni i\u00e7erisinde state\u2019ten harici olarak tan\u0131mlanm\u0131\u015f bir de\u011fer de olabilir ve bunu bilmesi m\u00fcmk\u00fcn de\u011fildir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FormattedDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/zKRqNB?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bu olaya genellikle <strong>yukar\u0131dan-a\u015fa\u011f\u0131ya</strong> veya <strong>tek y\u00f6nl\u00fc</strong> veri ak\u0131\u015f\u0131 denir. Her state, belirli bir bile\u015fen taraf\u0131ndan tutulur. Bu bile\u015fenden t\u00fcretilen herhangi bir veri veya kullan\u0131c\u0131 aray\u00fcz\u00fc, yaln\u0131zca bu bile\u015fenin alt\u0131ndaki bile\u015fen a\u011fac\u0131na etki edebilir.</p>\n<p>Bile\u015fen a\u011fac\u0131n\u0131, prop\u2019lardan olu\u015fan bir \u015felale olarak d\u00fc\u015f\u00fcnebilirsiniz. Her bile\u015fenin state\u2019i, prop\u2019lar\u0131 istenilen bir noktada birle\u015ftirebilen ve ayn\u0131 zamanda alt bile\u015fenlere de ak\u0131tan ek bir su kayna\u011f\u0131 gibidir.</p>\n<p>T\u00fcm bile\u015fenlerin tamamen izole oldu\u011funu g\u00f6stermek i\u00e7in, 3 adet <code class=\"language-javascript\">&lt;Clock&gt;</code> render eden bir <code class=\"language-javascript\">App</code> bile\u015feni olu\u015fturabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/vXdGmd?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bu \u00f6rnekte yer alan her bir <code class=\"language-javascript\">Clock</code> bile\u015feni, kendi zamanlay\u0131c\u0131s\u0131n\u0131 olu\u015fturup birbirinden ba\u011f\u0131ms\u0131z bir \u015fekilde g\u00fcncellemektedir.</p>\n<p>React uygulamalar\u0131nda, bir bile\u015fenin state\u2019li veya state\u2019siz olmas\u0131, bir kodlama detay\u0131d\u0131r ve zaman i\u00e7erisinde de\u011fi\u015fkenlik g\u00f6sterebilir. State\u2019li bile\u015fenler i\u00e7erisinde, state\u2019siz bile\u015fenleri kullanabilirsiniz veya bu durumun tam tersi de ge\u00e7erlidir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/state-and-lifecycle.md\">Edit this page</a></p></div></article>", "path": "/react/state-and-lifecycle", "nav": ["/react/components-and-props", "/react/handling-events"]}, {"key": "6. Olay Y\u00f6netimi", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React\u2019teki olay y\u00f6netimi, DOM elementlerindeki olay y\u00f6netimi ile olduk\u00e7a benzerdir. Sadece, baz\u0131 k\u00fc\u00e7\u00fck s\u00f6zdizimi farkl\u0131l\u0131klar\u0131 bulunmaktad\u0131r:</p>\n<ul>\n<li>Olay isimleri, DOM\u2019da lowercase iken, React\u2019te camelCase olarak adland\u0131r\u0131l\u0131r.</li>\n<li>DOM\u2019da fonksiyon isimleri, ilgili olaya string olarak atan\u0131rken, JSX\u2019te direkt fonksiyon olarak atan\u0131r.</li>\n</ul>\n<p>\u00d6rne\u011fin HTML\u2019de a\u015fa\u011f\u0131daki gibi olan kod:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">activateLasers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  Activate Lasers\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React\u2019te biraz daha farkl\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>activateLasers<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  Activate Lasers</span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React\u2019teki di\u011fer bir farkl\u0131l\u0131k ise, olaylardaki varsay\u0131lan davran\u0131\u015f\u0131n <code class=\"language-javascript\">false</code> de\u011feri d\u00f6nd\u00fcr\u00fclerek engellenemiyor olu\u015fudur. Bunun i\u00e7in <code class=\"language-javascript\">preventDefault</code> \u015feklinde a\u00e7\u0131k\u00e7a yazarak taray\u0131c\u0131ya belirtmeniz gerekir. \u00d6rne\u011fin d\u00fcz bir HTML kodunda, form eleman\u0131n\u0131n varsay\u0131lan davran\u0131\u015f\u0131 olan <code class=\"language-javascript\">submit</code>i engellemek i\u00e7in a\u015fa\u011f\u0131daki gibi bir kod yazabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onsubmit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked submit.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React\u2019te ise varsay\u0131lan <code class=\"language-javascript\">form</code> elementi davran\u0131\u015f\u0131n\u0131 <code class=\"language-javascript\">e.preventDefault()</code> kodu ile engellemeniz gerekir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked submit.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Submit</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Burada <code class=\"language-javascript\">e</code>, bir sentetik olayd\u0131r. React, bu sentetik olaylar\u0131 <a class=\"external-link\" href=\"https://www.w3.org/TR/DOM-Level-3-Events/\">W3C \u015fartnamesine</a> g\u00f6re tan\u0131mlar. Bu sayede, taray\u0131c\u0131lar aras\u0131 uyumsuzluk problemi olu\u015fmaz. React olaylar\u0131, do\u011fal (native) olaylarla tam olarak ayn\u0131 \u015fekilde \u00e7al\u0131\u015fmaz. Bu konuda daha fazla bilgi edinmek i\u00e7in <a href=\"/react/events\"><code class=\"language-javascript\">Sentetik Olaylar</code></a> rehberini inceleyebilirsiniz.</p>\n<p>React ile kod yazarken, bir DOM elementi olu\u015fturulduktan sonra ona bir dinleyici (<code class=\"language-javascript\">listener</code>) atamak i\u00e7in, <code class=\"language-javascript\">addEventListener</code> fonksiyonunu \u00e7a\u011f\u0131rman\u0131za gerek yoktur. Bunun yerine <code class=\"language-javascript\">render</code> fonksiyonunda, ilgili element ilk kez render oldu\u011funda ona bir dinleyici (<code class=\"language-javascript\">listener</code>) ataman\u0131z do\u011fru olacakt\u0131r.</p>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes\">ES6 s\u0131n\u0131f\u0131</a> kullanarak bir bile\u015fen olu\u015fturuldu\u011funda, ilgili olay\u0131n tan\u0131mlanmas\u0131 i\u00e7in en yayg\u0131n yakla\u015f\u0131m, ilgili metodun o s\u0131n\u0131f i\u00e7erisinde  olu\u015fturulmas\u0131d\u0131r. \u00d6rne\u011fin a\u015fa\u011f\u0131daki <code class=\"language-javascript\">Toggle</code> bile\u015feni, \u201cON\u201d ve \u201cOFF\u201d durumlar\u0131n\u0131n ger\u00e7ekle\u015ftirilmesi i\u00e7in bir butonu render etmektedir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Toggle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">isToggleOn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Callback i\u00e7erisinde `this` eri\u015fiminin \u00e7al\u0131\u015fabilmesi i\u00e7in, `bind(this)` gereklidir</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">isToggleOn</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>prevState<span class=\"token punctuation\">.</span>isToggleOn</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isToggleOn <span class=\"token operator\">?</span> <span class=\"token string\">'ON'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'OFF'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"http://codepen.io/gaearon/pen/xEmzGg?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>JSX callback\u2019lerinde <code class=\"language-javascript\">this</code> kullan\u0131rken dikkat etmeniz gerekmektedir. \u00c7\u00fcnk\u00fc JavaScript\u2019te, s\u0131n\u0131f metotlar\u0131 varsay\u0131lan olarak <code class=\"language-javascript\">this</code>\u2018e <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\">ba\u011fl\u0131 de\u011fillerdir</a>. Bu nedenle, <code class=\"language-javascript\">this.handleClick</code>\u2018i <code class=\"language-javascript\">bind(this)</code> ile ba\u011flamay\u0131 unutarak <code class=\"language-javascript\">onClick</code>\u2018e yazarsan\u0131z, fonksiyon \u00e7a\u011fr\u0131ld\u0131\u011f\u0131nda <code class=\"language-javascript\">this</code> de\u011fi\u015fkeni <code class=\"language-javascript\">undefined</code> hale gelecek ve hatalara sebep olacakt\u0131r.</p>\n<p>Bu durum, React\u2019e \u00f6zg\u00fc bir davran\u0131\u015f bi\u00e7imi de\u011fildir. Aslen, <a class=\"external-link\" href=\"https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/\">fonksiyonlar\u0131n JavaScript\u2019te nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131</a> ile ilgilidir. Genellikle, <code class=\"language-javascript\">onClick={this.handleClick}</code> gibi bir metot, parantez kullanmadan \u00e7a\u011f\u0131r\u0131rken, o metodun <code class=\"language-javascript\">bind</code> edilmesi gerekir.</p>\n<p>E\u011fer s\u00fcrekli her metot i\u00e7in <code class=\"language-javascript\">bind</code> eklemek istemiyorsan\u0131z, bunun yerine farkl\u0131 y\u00f6ntemler de kullanabilirsiniz. \u00d6rne\u011fin <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields#public_instance_fields\">public class fields</a> y\u00f6ntemini kullan\u0131rsan\u0131z, callback\u2019leri ba\u011flamak i\u00e7in s\u0131n\u0131f de\u011fi\u015fkenlerini kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bu yaz\u0131m \u015fekli, `this`'in handleClick i\u00e7erisinde ba\u011flanmas\u0131n\u0131 sa\u011flar.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu y\u00f6ntem, <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a> ile olu\u015fturulan geli\u015ftirim ortam\u0131nda varsay\u0131lan olarak gelir. B\u00f6ylece hi\u00e7bir ayarlama yapmadan kullanabilirsiniz.</p>\n<p>E\u011fer bu y\u00f6ntemi kullanmak istemiyorsan\u0131z, callback i\u00e7erisinde <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">ok fonksiyonunu</a> da kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Bu yaz\u0131m \u015fekli, `this`'in handleClick i\u00e7erisinde ba\u011flanmas\u0131n\u0131 sa\u011flar.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fakat bu y\u00f6ntemin bir dezavantaj\u0131 vard\u0131r. <code class=\"language-javascript\">LoggingButton</code> bile\u015feni her render edildi\u011finde, yeni bir callback olu\u015fturulur. Bir\u00e7ok durumda bu olay bir sorun te\u015fkil etmez. Ancak ilgili callback, prop arac\u0131l\u0131\u011f\u0131yla alt bile\u015fenlere aktar\u0131l\u0131rsa, bu bile\u015fenler fazladan render edilebilir. Bu tarz problemlerle kar\u015f\u0131la\u015fmamak i\u00e7in binding i\u015fleminin, ya s\u0131n\u0131f\u0131n constructor\u2019\u0131nda ya da class fields y\u00f6ntemi ile yap\u0131lmas\u0131n\u0131 \u00f6neririz.</p>\n<h2 id=\"passing-arguments-to-event-handlers\"><a class=\"anchor\" href=\"/react/handling-events#passing-arguments-to-event-handlers\"></a>Olay Y\u00f6neticilerine Parametre G\u00f6nderimi </h2>\n<p>Bir d\u00f6ng\u00fc i\u00e7erisinde, olay fonksiyonuna fazladan parametre g\u00f6ndermek isteyebilirsiniz. \u00d6rne\u011fin, bir sat\u0131r ID\u2019si i\u00e7in <code class=\"language-javascript\">id</code> parametresi, a\u015fa\u011f\u0131daki kodlardan her ikisi de i\u015finizi g\u00f6recektir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u00dcstteki iki sat\u0131r birbiriyle e\u015f niteliktedir. Ve s\u0131ras\u0131yla <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">ok fonksiyonu</a> ile <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\"><code class=\"language-javascript\">Function.prototype.bind</code> fonksiyonu</a> kullan\u0131rlar.</p>\n<p>Her iki durum i\u00e7in de <code class=\"language-javascript\">e</code> parametresi, ID\u2019den sonra ikinci parametre olarak aktar\u0131lacak bir React olay\u0131n\u0131 temsil eder. Ok fonksiyonunda bu parametre a\u00e7\u0131k bir \u015fekilde tan\u0131mlan\u0131rken, <code class=\"language-javascript\">bind</code> fonksiyonunda ise otomatik olarak di\u011fer parametreler ile birlikte g\u00f6nderilir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/handling-events.md\">Edit this page</a></p></div></article>", "path": "/react/handling-events", "nav": ["/react/state-and-lifecycle", "/react/conditional-rendering"]}, {"key": "7. Ko\u015fullu Renderlama", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React\u2019te, ihtiyac\u0131n\u0131z olan duruma g\u00f6re farkl\u0131 bile\u015fenler olu\u015fturabilirsiniz. B\u00f6ylelikle, uygulaman\u0131z\u0131n durumuna g\u00f6re, bile\u015fenlerinizin yaln\u0131zca baz\u0131lar\u0131n\u0131 render edebilirsiniz.</p>\n<p>React\u2019te, ko\u015fullu renderlama ayn\u0131 JavaScript\u2019te oldu\u011fu gibi \u00e7al\u0131\u015f\u0131r. JavaScript\u2019teki <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else\"><code class=\"language-javascript\">if</code></a> veya <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">ko\u015ful operat\u00f6r\u00fc</a>, size uygulaman\u0131z\u0131n durumuna g\u00f6re bile\u015fen renderlama imk\u00e2n\u0131 sunar. Ve React, aray\u00fczde uygun bile\u015feni render eder.</p>\n<p>Bu iki bile\u015feni dikkate alal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">UserGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Ho\u015f geldiniz!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">GuestGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">L\u00fctfen kay\u0131t olun</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">Greeting</code> ad\u0131nda bir bile\u015fen daha olu\u015fturuyoruz. Bu bile\u015fen, kullan\u0131c\u0131n\u0131n giri\u015f yapma durumuna g\u00f6re yukar\u0131da yazd\u0131\u011f\u0131m\u0131z bile\u015fenleri g\u00f6sterecek.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GuestGreeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// Kodu de\u011fi\u015ftirerek deneyin: isLoggedIn={true}:</span>\n<span class=\"gatsby-highlight-code-line\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZpVxNq?editors=0011\"><strong>Codepen\u2019de Deneyin</strong></a></p>\n<p>Bu \u00f6rnek uygulama, <code class=\"language-javascript\">isLoggedIn</code> de\u011ferine g\u00f6re farkl\u0131 bir kar\u015f\u0131lama yapacak.</p>\n<h3 id=\"element-variables\"><a class=\"anchor\" href=\"/react/conditional-rendering#element-variables\"></a>Eleman De\u011fi\u015fkenleri </h3>\n<p>HTML elemanlar\u0131n\u0131 saklamak i\u00e7in de\u011fi\u015fkenleri kullanabilirsiniz. Bu size, bile\u015fen yarat\u0131rken, bile\u015fenin bir b\u00f6l\u00fcm\u00fcn\u00fc ko\u015fullu hale getirmenize yard\u0131m eder.</p>\n<p>A\u015fa\u011f\u0131daki iki yeni bile\u015fenin <code class=\"language-javascript\">Giri\u015f</code> ve <code class=\"language-javascript\">\u00c7\u0131k\u0131\u015f</code> butonlar\u0131n\u0131 temsil etti\u011fini varsayal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">LoginButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Giri\u015f Yap\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">LogoutButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      \u00c7\u0131k\u0131\u015f Yap\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu \u00f6rnek blo\u011funda, <code class=\"language-javascript\">LoginControl</code>\u00fc <a href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\">stateful component</a> yard\u0131m\u0131yla olu\u015fturaca\u011f\u0131z.</p>\n<p><code class=\"language-javascript\">LoginControl</code>, o anki durumuna g\u00f6re <code class=\"language-javascript\">&lt;LoginButton /&gt;</code> ya da <code class=\"language-javascript\">&lt;LogoutButton /&gt;</code> bile\u015fenlerinden birini render edecek. Ayr\u0131ca, \u00f6nceki \u00f6rnekteki <code class=\"language-javascript\">&lt;Greeting /&gt;</code> bile\u015fenini de render edecek.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginControl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> button<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>button<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginControl</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/QKzAgB?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bir de\u011fi\u015fken tan\u0131mlamak ve <code class=\"language-javascript\">if</code> ifadesini kullanmak, bir bile\u015feni ko\u015fullu olarak render etmek i\u00e7in iyi bir yol olsa da, bazen daha k\u0131sa bir s\u00f6zdizimi kullanmak isteyebilirsiniz. JSX\u2019te sat\u0131r i\u00e7i ko\u015fullama yapman\u0131n, a\u015fa\u011f\u0131da a\u00e7\u0131klanm\u0131\u015f birka\u00e7 yolu vard\u0131r.</p>\n<h3 id=\"inline-if-with-logical--operator\"><a class=\"anchor\" href=\"/react/conditional-rendering#inline-if-with-logical--operator\"></a>Mant\u0131ksal &amp;&amp; Operat\u00f6r\u00fc ile Tek Sat\u0131rda if </h3>\n<p>S\u00fcsl\u00fc parantez kullanarak istedi\u011finiz ifadeyi <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">JSX i\u00e7ine g\u00f6mebilirsiniz</a>. Buna JavaScript\u2019teki mant\u0131ksal <code class=\"language-javascript\">&amp;&amp;</code> operat\u00f6r\u00fc de d\u00e2hildir. Bu bile\u015fenin i\u00e7inde ko\u015ful vermek i\u00e7in kullan\u0131\u015fl\u0131 olabilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Mailbox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> unreadMessages <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>unreadMessages<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> adet okunmam\u0131\u015f mesaj\u0131n\u0131z var.</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re: React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re:Re: React'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mailbox</span></span> <span class=\"token attr-name\">unreadMessages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ozJddz?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bu kod JavaScript\u2019te \u00e7al\u0131\u015f\u0131r \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">true &amp;&amp; expression</code> her zaman <code class=\"language-javascript\">expression</code> k\u0131sm\u0131n\u0131 \u00e7al\u0131\u015ft\u0131r\u0131r, fakat <code class=\"language-javascript\">false &amp;&amp; expression</code> her zaman <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcr\u00fcr.</p>\n<p>Bu y\u00fczden, e\u011fer ko\u015fulunuz <code class=\"language-javascript\">true</code> ise, <code class=\"language-javascript\">&amp;&amp;</code>\u2018den sonra yazacaklar\u0131n\u0131z \u00e7\u0131kt\u0131 olur. E\u011fer ko\u015fulunuz <code class=\"language-javascript\">false</code> ise, React onu g\u00f6rmezden gelip atlayacakt\u0131r.</p>\n<p>De\u011fer olarak <code class=\"language-javascript\">falsy</code> bir ifade d\u00f6nd\u00fcrmek, React\u2019in <code class=\"language-javascript\">&amp;&amp;</code> ifadesinden sonra gelen k\u0131sm\u0131 atlamas\u0131na neden olacakt\u0131r. Ancak yine de o <code class=\"language-javascript\">falsy</code> de\u011feri d\u00f6n\u00fcp render edece\u011fini unutmay\u0131n. A\u015fa\u011f\u0131daki \u00f6rnekte <code class=\"language-javascript\">render</code> metodundan <code class=\"language-javascript\">&lt;div&gt;0&lt;/div&gt;</code> de\u011feri d\u00f6necektir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>count <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Messages: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"inline-if-else-with-conditional-operator\"><a class=\"anchor\" href=\"/react/conditional-rendering#inline-if-else-with-conditional-operator\"></a>Ko\u015ful Operat\u00f6r\u00fc ile Tek Sat\u0131rda if-else </h3>\n<p>Ko\u015fullu renderlama i\u00e7in farkl\u0131 bir y\u00f6ntem ise JavaScript ko\u015ful operat\u00f6r\u00fcn\u00fc <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\"><code class=\"language-javascript\">condition ? true : false</code></a> kullanmakt\u0131r.</p>\n<p>Bu \u00f6rnekte, yaz\u0131n\u0131n yaln\u0131zca bir k\u0131sm\u0131n\u0131 ko\u015fullayaca\u011f\u0131z.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      Bu kullan\u0131c\u0131 \u015fuan </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token string\">'\u00e7evrimi\u00e7i'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'\u00e7evrimd\u0131\u015f\u0131'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Her ne kadar neler oldu\u011fu daha az belirgin olsa da daha b\u00fcy\u00fck ifadeler i\u00e7in de kullan\u0131labilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>isLoggedIn</span>        <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JavaScript\u2019te oldu\u011fu gibi, hangisinin daha iyi bir yakla\u015f\u0131m oldu\u011fu size ve sizin tak\u0131m\u0131n\u0131za kalm\u0131\u015ft\u0131r. Bu arada, ne zaman ko\u015fulland\u0131rma \u00e7ok karma\u015f\u0131k bir hal almaya ba\u015flarsa <a href=\"/react/components-and-props#extracting-components\">bir bile\u015fen \u00e7\u0131karman\u0131n</a> zaman\u0131 gelmi\u015ftir.</p>\n<h3 id=\"preventing-component-from-rendering\"><a class=\"anchor\" href=\"/react/conditional-rendering#preventing-component-from-rendering\"></a>Bile\u015fenin Render Edilmesini Engellemek </h3>\n<p>Nadir durumlarda, render edilmi\u015f bir bile\u015fenin kendisini gizlemesini isteyebilirsiniz. B\u00f6yle durumlarda <code class=\"language-javascript\">null</code> d\u00f6nd\u00fcr\u00fcn.</p>\n<p>Bu \u00f6rnekte <code class=\"language-javascript\">WarningBanner</code> bile\u015feni, <code class=\"language-javascript\">warn</code> prop\u2019una g\u00f6re kendini render edecektir. E\u011fer bu \u00f6zellik <code class=\"language-javascript\">false</code> olursa, bile\u015fen render edilmeyecektir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">WarningBanner</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Bu konuda seni uyar\u0131yorum!</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">showWarning</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">showWarning</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>showWarning\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WarningBanner</span></span> <span class=\"token attr-name\">warn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning <span class=\"token operator\">?</span> <span class=\"token string\">'Gizle'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'G\u00f6ster'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/Xjoqwm?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bir bile\u015fenin <code class=\"language-javascript\">render</code> metodundan <code class=\"language-javascript\">null</code> d\u00f6nd\u00fcrmesi ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131n\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 engellemez. \u00d6rne\u011fin <code class=\"language-javascript\">componentDidUpdate</code> gerekti\u011fi zaman \u00e7al\u0131\u015fmaya devam edecektir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/conditional-rendering.md\">Edit this page</a></p></div></article>", "path": "/react/conditional-rendering", "nav": ["/react/handling-events", "/react/lists-and-keys"]}, {"key": "8. Listeler ve Anahtarlar", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>\u00d6ncelikle listelerin JavaScript\u2019te nas\u0131l d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc\u011f\u00fcn\u00fc g\u00f6zden ge\u00e7irelim.</p>\n<p>A\u015fa\u011f\u0131daki kod g\u00f6z \u00f6n\u00fcne al\u0131nd\u0131\u011f\u0131nda, <code class=\"language-javascript\">say\u0131lardan</code> olu\u015fan bir diziyi almak ve de\u011ferlerini iki kat\u0131na \u00e7\u0131karmak i\u00e7in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code class=\"language-javascript\">map()</code></a> fonksiyonunu kullan\u0131r\u0131z. <code class=\"language-javascript\">map()</code> taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen yeni diziyi <code class=\"language-javascript\">doubled</code> de\u011fi\u015fkenine atay\u0131p ekrana yazd\u0131r\u0131r\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> doubled <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doubled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu kod konsol ekran\u0131na <code class=\"language-javascript\">[2, 4, 6, 8, 10]</code> yazd\u0131r\u0131r.</p>\n<p>React\u2019te, dizileri <a href=\"/react/rendering-elements\">element</a> listelerine d\u00f6n\u00fc\u015ft\u00fcrmek de neredeyse ayn\u0131d\u0131r.</p>\n<h3 id=\"rendering-multiple-components\"><a class=\"anchor\" href=\"/react/lists-and-keys#rendering-multiple-components\"></a>\u00c7oklu Bile\u015fenleri Render Etmek </h3>\n<p>Elementlerden koleksiyonlar olu\u015fturabilir ve bu koleksiyonlar\u0131 s\u00fcsl\u00fc parantezleri <code class=\"language-javascript\">{}</code> kullanarak <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">JSX\u2019e dahil edebilirsiniz</a>.</p>\n<p>A\u015fa\u011f\u0131da, JavaScript\u2019in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code class=\"language-javascript\">map()</code></a> fonksiyonunu kullanarak <code class=\"language-javascript\">numbers</code> dizisinin i\u00e7inde geziyoruz. Her bir element i\u00e7in bir <code class=\"language-javascript\">&lt;li&gt;</code> eleman\u0131 d\u00f6nd\u00fcr\u00fcyoruz. Son olarak da, ortaya \u00e7\u0131kan diziyi <code class=\"language-javascript\">listItems</code>a at\u0131yoruz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">listItems</code> dizisinin tamam\u0131n\u0131 bir <code class=\"language-javascript\">&lt;ul&gt;</code> eleman\u0131n\u0131n i\u00e7ine ekliyoruz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/GjPyQr?editors=0011\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bu kod 1 ile 5 aras\u0131ndaki say\u0131lar\u0131n madde i\u015faretli listesini d\u00f6nd\u00fcr\u00fcr.</p>\n<h3 id=\"basic-list-component\"><a class=\"anchor\" href=\"/react/lists-and-keys#basic-list-component\"></a>Temel Liste Bile\u015feni </h3>\n<p>Genellikle listeleri bir <a href=\"/react/components-and-props\">bile\u015fenin</a> i\u00e7inde render edersiniz.</p>\n<p>Bir \u00f6nceki \u00f6rne\u011fi, bir <code class=\"language-javascript\">say\u0131</code> dizisini kabul eden ve bir \u00f6\u011fe listesi \u00e7\u0131kt\u0131s\u0131 veren bir bile\u015fende yeniden d\u00fczenleyebiliriz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NumberList</span></span> <span class=\"token attr-name\">numbers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Bu kodu \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131zda liste elemanlar\u0131 i\u00e7in bir anahtar verilmesi gerekti\u011fi konusunda size bir uyar\u0131 verilir. Bir \u201canahtar\u201d \u00f6\u011fe listeleri olu\u015ftururken eklemeniz gereken bir string \u00f6zelli\u011fidir. Bunun neden \u00f6nemli oldu\u011funu bir sonraki b\u00f6l\u00fcmde inceleyece\u011fiz.</p>\n<p><code class=\"language-javascript\">numbers.map()</code> i\u00e7indeki liste elemanlar\u0131na birer <code class=\"language-javascript\">anahtar</code> atayal\u0131m ve eksik anahtar sorununu d\u00fczeltelim:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jrXYRR?editors=0011\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h2 id=\"keys\"><a class=\"anchor\" href=\"/react/lists-and-keys#keys\"></a>Anahtarlar </h2>\n<p>Anahtarlar; hangi \u00f6\u011felerin de\u011fi\u015fti\u011fini, eklendi\u011fini ya da silindi\u011fini belirleme noktas\u0131nda React\u2019e yard\u0131mc\u0131 olur:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir anahtar se\u00e7menin en iyi yolu, karde\u015fleri aras\u0131nda bir liste \u00f6\u011fesini benzersiz olarak tan\u0131mlayan bir string kullanmakt\u0131r. \u00c7o\u011fu zaman verinizin i\u00e7indeki ID\u2019leri anahtar olarak kullan\u0131rs\u0131n\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> todoItems <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Render edilen \u00f6\u011feleriniz i\u00e7in sabit ID\u2019leriniz yoksa son \u00e7are olarak \u00f6\u011fenin index numaras\u0131n\u0131 anahtar olarak kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> todoItems <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bunu yaln\u0131zca \u00f6\u011felerinizin sabit ID'leri yoksa yap\u0131n</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Dizi i\u00e7indeki elemanlar\u0131n de\u011fi\u015fme ihtimali varsa, anahtarlar i\u00e7in index numaralar\u0131n\u0131n kullan\u0131lmas\u0131n\u0131 \u00f6nermiyoruz. Bu, performans\u0131 olumsuz y\u00f6nde etkileyebilir ve bile\u015fen state\u2019i ile ilgili sorunlara neden olabilir. <a class=\"external-link\" href=\"https://robinpokorny.com/blog/index-as-a-key-is-an-anti-pattern/\">Index numaras\u0131n\u0131n anahtar olarak kullan\u0131lmas\u0131n\u0131n olumsuz etkilerine dair detayl\u0131 a\u00e7\u0131klama</a> i\u00e7in Robin Pokorny\u2019nin makalesine g\u00f6z at\u0131n. \u00d6\u011feleri listelemek i\u00e7in belirgin bir anahtar atamamay\u0131 se\u00e7ti\u011finizde, React varsay\u0131lan olarak index numaralar\u0131n\u0131 anahtar olarak kullanacakt\u0131r.</p>\n<p>Daha fazla bilgi edinmek istiyorsan\u0131z, i\u015fte size <a href=\"/react/reconciliation#recursing-on-children\">neden anahtarlar\u0131n gerekli oldu\u011funa dair</a> detayl\u0131 bir a\u00e7\u0131klama.</p>\n<h3 id=\"extracting-components-with-keys\"><a class=\"anchor\" href=\"/react/lists-and-keys#extracting-components-with-keys\"></a>Anahtarlar\u0131 Olan Bile\u015fenleri \u00c7\u0131karmak </h3>\n<p>Anahtarlar yaln\u0131zca \u00e7evreleyen dizinin ba\u011flam\u0131nda anlaml\u0131d\u0131r.</p>\n<p>\u00d6rne\u011fin bir <code class=\"language-javascript\">ListItem</code> bile\u015fenini <a href=\"/react/components-and-props#extracting-components\">\u00e7\u0131kar\u0131rsan\u0131z</a>, anahtar\u0131 <code class=\"language-javascript\">ListItem</code>\u2018in i\u00e7indeki <code class=\"language-javascript\">&lt;li&gt;</code> \u00f6\u011fesinde de\u011fil, dizinin i\u00e7indeki <code class=\"language-javascript\">&lt;ListItem /&gt;</code> \u00f6\u011felerinde tutmal\u0131s\u0131n\u0131z.</p>\n<p><strong>\u00d6rnek: Yanl\u0131\u015f Anahtar Kullan\u0131m\u0131</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Yanl\u0131\u015f! Anahtar\u0131 burada belirtmeye gerek yok:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Yanl\u0131\u015f! Anahtar burada tan\u0131mlanmal\u0131yd\u0131:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>\u00d6rnek: Do\u011fru Anahtar Kullan\u0131m\u0131</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Do\u011fru! Anahtar\u0131 burada belirtmeye gerek yok:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Do\u011fru! Anahtar dizinin i\u00e7inde belirtilmelidir:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZXeOGM?editors=0010\"><strong>CodePen\u2019de deneyin</strong></a></p>\n<p>Temel bir kural da, <code class=\"language-javascript\">map()</code> \u00e7a\u011fr\u0131s\u0131n\u0131n i\u00e7indeki elemanlar\u0131n anahtarlara ihtiya\u00e7 duymas\u0131d\u0131r.</p>\n<h3 id=\"keys-must-only-be-unique-among-siblings\"><a class=\"anchor\" href=\"/react/lists-and-keys#keys-must-only-be-unique-among-siblings\"></a>Anahtarlar Sadece Karde\u015fler Aras\u0131nda Benzersiz Olmal\u0131d\u0131r </h3>\n<p>Dizilerde kullan\u0131lan anahtarlar karde\u015fleri aras\u0131nda benzersiz olmal\u0131d\u0131r. Ancak, k\u00fcresel olarak (uygulama genelinde) benzersiz olmalar\u0131 gerekmez. \u0130ki farkl\u0131 dizi \u00fcretti\u011fimizde ayn\u0131 anahtarlar\u0131 kullanabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Blog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> sidebar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>sidebar<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merhaba D\u00fcnya'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'React \u00d6\u011frenmeye Ho\u015fgeldiniz!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Kurulum'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'React\\'i npm \u00fczerinden kurabilirsiniz.'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Blog</span></span> <span class=\"token attr-name\">posts</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/NRZYGN?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Anahtarlar, React\u2019e bir ipucu olarak hizmet eder, ancak bile\u015fenlerinize aktar\u0131lmazlar. Bile\u015feninizde ayn\u0131 de\u011fere ihtiyac\u0131n\u0131z varsa, belirgin bir \u015fekilde farkl\u0131 bir ada sahip bir <code class=\"language-javascript\">prop</code> olarak iletin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Post</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span></span>    <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yukar\u0131daki \u00f6rnekte, <code class=\"language-javascript\">Post</code> bile\u015feni <code class=\"language-javascript\">props.id</code> yi okuyabilir, ancak <code class=\"language-javascript\">props.key</code> i okuyamaz.</p>\n<h3 id=\"embedding-map-in-jsx\"><a class=\"anchor\" href=\"/react/lists-and-keys#embedding-map-in-jsx\"></a>JSX \u0130\u00e7inde map() Kullan\u0131m\u0131 </h3>\n<p>Yukar\u0131daki \u00f6rneklerde ayr\u0131 bir <code class=\"language-javascript\">listItems</code> de\u011fi\u015fkeni tan\u0131mlad\u0131k ve JSX\u2019e d\u00e2hil ettik:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> listItems <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">              <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>listItems<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JSX, <a href=\"/react/introducing-jsx#embedding-expressions-in-jsx\">herhangi bir ifadeyi s\u00fcsl\u00fc parantezler i\u00e7erisine yerle\u015ftirmeye</a> izin verir, b\u00f6ylece <code class=\"language-javascript\">map ()</code> sonucunu sat\u0131r i\u00e7i olarak ekleyebiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">                  <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/BLvYrB?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bazen bu y\u00f6ntem daha temiz bir kodla sonu\u00e7lan\u0131r; ancak bu tarz da k\u00f6t\u00fcye kullan\u0131labilir. JavaScript\u2019te oldu\u011fu gibi, okunabilirlik i\u00e7in, bir de\u011fi\u015fken \u00e7\u0131karmaya de\u011fip de\u011fmeyece\u011fine karar vermek size kalm\u0131\u015ft\u0131r. <code class=\"language-javascript\">map()</code> g\u00f6vdesi \u00e7ok fazla i\u00e7 i\u00e7e ge\u00e7mi\u015fse, <a href=\"/react/components-and-props#extracting-components\">bir bile\u015fen \u00e7\u0131karmak</a> i\u00e7in iyi bir zaman olabilece\u011fini unutmay\u0131n.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/lists-and-keys.md\">Edit this page</a></p></div></article>", "path": "/react/lists-and-keys", "nav": ["/react/conditional-rendering", "/react/forms"]}, {"key": "9. Formlar", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>HTML form elemanlar\u0131, React\u2019te di\u011fer DOM elemanlar\u0131ndan biraz farkl\u0131 \u00e7al\u0131\u015f\u0131r; \u00e7\u00fcnk\u00fc form elemanlar\u0131n\u0131n kendilerine has i\u00e7 state\u2019leri vard\u0131r. \u00d6rne\u011fin, d\u00fcz HTML\u2019de yaz\u0131lm\u0131\u015f bu form, tek bir isim (name) de\u011feri kabul etmektedir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    Name:\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu form, kullan\u0131c\u0131 formu g\u00f6nderdi\u011finde yeni bir sayfaya g\u00f6z atmak gibi varsay\u0131lan bir HTML formu davran\u0131\u015f\u0131na sahiptir. Bu davran\u0131\u015f\u0131 React\u2019te istiyorsan\u0131z, zaten \u00e7al\u0131\u015fmaktad\u0131r. Ancak \u00e7o\u011fu durumda, formun g\u00f6nderimini i\u015fleyen ve kullan\u0131c\u0131n\u0131n forma girdi\u011fi verilere eri\u015fen bir JavaScript fonksiyonuna sahip olmak uygundur. Bunu ba\u015farman\u0131n standart yolu da \u201ckontroll\u00fc bile\u015fenler\u201d ad\u0131 verilen bir tekniktir.</p>\n<h2 id=\"controlled-components\"><a class=\"anchor\" href=\"/react/forms#controlled-components\"></a>Kontroll\u00fc Bile\u015fenler </h2>\n<p>HTML\u2019de, <code class=\"language-javascript\">&lt;input&gt;</code>, <code class=\"language-javascript\">&lt;textarea&gt;</code> ve <code class=\"language-javascript\">&lt;select&gt;</code> gibi form elemanlar\u0131 genellikle kendi state\u2019ini korur ve kullan\u0131c\u0131 girdisine dayal\u0131 olarak g\u00fcncellenir. React\u2019te ise state\u2019ler genellikle bile\u015fenlerin <code class=\"language-javascript\">this.state</code> \u00f6zelli\u011finde saklan\u0131r ve yaln\u0131zca  <a href=\"/react/react-component#setstate\"><code class=\"language-javascript\">setState()</code></a> ile g\u00fcncellenir.</p>\n<p>React state\u2019inde tek bir kaynak olarak ikisini birle\u015ftirebiliriz. Ard\u0131ndan form olu\u015fturan React bile\u015feni, sonraki kullan\u0131c\u0131 giri\u015fi \u00fczerinde bu formda olan\u0131 da kontrol eder. De\u011feri React taraf\u0131ndan bu \u015fekilde kontrol edilen bir girdi (input) form eleman\u0131na kontroll\u00fc bile\u015fen denir.</p>\n<p>\u00d6rne\u011fin bir \u00f6nceki \u00f6rnekte, <code class=\"language-javascript\">name</code> girdisine yaz\u0131l\u0131p butona bas\u0131ld\u0131\u011f\u0131 zaman <code class=\"language-javascript\">name</code>\u2018in de\u011ferini <code class=\"language-javascript\">alert</code> ile yazd\u0131rmak istiyorsak, formu kontroll\u00fc bir bile\u015fen olarak olu\u015fturabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A name was submitted: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Name:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/VmmPgp?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p><code class=\"language-javascript\">value</code> \u00f6zelle\u011fi input\u2019un kendisinde zaten var. \u00d6yleyse bu de\u011feri almak i\u00e7in yeni bir React state\u2019i olu\u015fturmaya gerek yok. Bu inputta <code class=\"language-javascript\">value</code> olarak state\u2019i yazd\u0131raca\u011f\u0131z ve input\u2019ta her de\u011fi\u015fiklik oldu\u011funda bu state\u2019i g\u00fcncelleyece\u011fiz.</p>\n<p>Kontroll\u00fc bir bile\u015fende, input\u2019un de\u011feri her zaman React state\u2019i taraf\u0131ndan kontrol edilir. Bu biraz daha fazla kod yazman\u0131z anlam\u0131na gelse de; art\u0131k input\u2019un de\u011ferini di\u011fer UI elemanlar\u0131na g\u00f6nderebilir, ya da ba\u015fka olay y\u00f6neticileri ile s\u0131f\u0131rlayabilirsiniz.</p>\n<h2 id=\"the-textarea-tag\"><a class=\"anchor\" href=\"/react/forms#the-textarea-tag\"></a>Textarea Eleman\u0131 </h2>\n<p>HTML\u2019de, <code class=\"language-javascript\">&lt;textarea&gt;</code> eleman\u0131 yaz\u0131y\u0131 alt eleman\u0131nda tan\u0131mlar:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  Merhaba, buras\u0131 textarea yaz\u0131 alan\u0131d\u0131r.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bunun yerine React, <code class=\"language-javascript\">&lt;textarea&gt;</code> i\u00e7in bir <code class=\"language-javascript\">value</code> \u00f6zelli\u011fi kullan\u0131r. Bu \u015fekilde <code class=\"language-javascript\">&lt;textarea&gt;</code> kullanan bir form, tek sat\u0131rl\u0131 bir girdi kullanan bir forma \u00e7ok benzer \u015fekilde yaz\u0131labilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EssayForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bu k\u0131sma bir \u015feyler yaz\u0131n\u0131z.'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'G\u00f6nderilen de\u011fer: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Essay:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>G\u00f6nder<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">this.state.value</code>\u2018nun constructor\u2019da ba\u015flat\u0131ld\u0131\u011f\u0131na dikkat edin, b\u00f6ylece textarea i\u00e7erisinde varsay\u0131lan olarak bu yaz\u0131 bulunacakt\u0131r.</p>\n<h2 id=\"the-select-tag\"><a class=\"anchor\" href=\"/react/forms#the-select-tag\"></a>Select Eleman\u0131 </h2>\n<p>HTML\u2019de <code class=\"language-javascript\">&lt;select&gt;</code>, bir a\u00e7\u0131l\u0131r liste olu\u015fturur. \u00d6rne\u011fin, a\u015fa\u011f\u0131daki kod baz\u0131 meyveleri listeler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grapefruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Grapefruit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Lime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">selected</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coconut<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Coconut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mango<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Mango<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">Coconut</code> se\u00e7ene\u011finin ba\u015flang\u0131\u00e7ta <code class=\"language-javascript\">selected</code> \u00f6zelli\u011fi y\u00fcz\u00fcnden se\u00e7ili olarak gelece\u011fini unutmay\u0131n. React, bu <code class=\"language-javascript\">selected</code> \u00f6zelli\u011fini kullanmak yerine, <code class=\"language-javascript\">select</code> etiketinde bir <code class=\"language-javascript\">value</code> \u00f6zelli\u011fi kullan\u0131r. Kontroll\u00fc bir bile\u015fende bu daha kullan\u0131\u015fl\u0131d\u0131r \u00e7\u00fcnk\u00fc yaln\u0131zca bir yerde g\u00fcncelleme yapman\u0131z\u0131 sa\u011flar. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FlavorForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'havu\u00e7'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Favori meyveniz: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Favori meyveni se\u00e7:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>elma<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Elma</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>armut<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Armut</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>havu\u00e7<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Havu\u00e7</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>muz<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Muz</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>G\u00f6nder<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/JbbEzX?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Genel olarak bu, <code class=\"language-javascript\">&lt;input type=\"text\"&gt;</code>, <code class=\"language-javascript\">&lt;textarea&gt;</code> ve <code class=\"language-javascript\">&lt;select&gt;</code> elemanlar\u0131n\u0131n \u00e7ok benzer \u015fekilde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Bir <code class=\"language-javascript\">select</code> etiketinde birden fazla se\u00e7ene\u011fi se\u00e7menize izin veren bir diziyi <code class=\"language-javascript\">value</code> \u00f6zelli\u011fine yazabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">multiple</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n</div>\n<h2 id=\"the-file-input-tag\"><a class=\"anchor\" href=\"/react/forms#the-file-input-tag\"></a>Dosya Giri\u015fi Eleman\u0131 </h2>\n<p>HTML\u2019de bir <code class=\"language-javascript\">&lt;input type=\"file\"&gt;</code> eleman\u0131, kullan\u0131c\u0131y\u0131 cihaz\u0131n\u0131n depolama alan\u0131ndan bir veya daha fazla dosyay\u0131 sunucuya y\u00fcklemesini ya da JavaScript\u2019in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications\">File API</a> arac\u0131l\u0131\u011f\u0131yla manip\u00fcle etmesini sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>De\u011feri salt okunur oldu\u011fu i\u00e7in, React\u2019te <strong>kontrols\u00fcz</strong> bir bile\u015fendir. Daha sonra di\u011fer kontrol edilemeyen bile\u015fenlerle birlikte <a href=\"/react/uncontrolled-components#the-file-input-tag\">dok\u00fcmanlarda</a> ele al\u0131nm\u0131\u015ft\u0131r.</p>\n<h2 id=\"handling-multiple-inputs\"><a class=\"anchor\" href=\"/react/forms#handling-multiple-inputs\"></a>Birden Fazla Girdiyi Y\u00f6netmek </h2>\n<p>Birden fazla kontroll\u00fc <code class=\"language-javascript\">input</code> eleman\u0131n\u0131 y\u00f6netmeniz gerekti\u011finde, her \u00f6\u011feye bir <code class=\"language-javascript\">name</code> \u00f6zelli\u011fi ekleyebilir ve y\u00f6netici (handler) fonksiyonun <code class=\"language-javascript\">event.target.name</code> de\u011ferine dayanarak ne yap\u0131laca\u011f\u0131n\u0131 se\u00e7mesine izin verebilirsiniz.</p>\n<p>\u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Reservation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isGoing</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">numberOfGuests</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">?</span> target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">:</span> target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value</span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Is going:</span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isGoing<span class=\"token punctuation\">\"</span></span></span>            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">checked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isGoing<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Number of guests:</span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numberOfGuests<span class=\"token punctuation\">\"</span></span></span>            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>numberOfGuests<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/wgedvV?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Verilen girdi ismine kar\u015f\u0131l\u0131k gelen state anahtar\u0131n\u0131 g\u00fcncellemek i\u00e7in <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names\">ES6 syntax</a>\u2019\u0131n\u0131 nas\u0131l kulland\u0131\u011f\u0131m\u0131za dikkat edin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu da ES5\u2019teki e\u015fde\u011fer kodudur.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> partialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">partialState<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>partialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ayr\u0131ca, <code class=\"language-javascript\">setState()</code> otomatik olarak <a href=\"/react/state-and-lifecycle#state-updates-are-merged\">k\u0131smi bir durumu ge\u00e7erli duruma birle\u015ftirir</a> oldu\u011fundan, yaln\u0131zca de\u011fi\u015ftirilen par\u00e7alarla \u00e7a\u011f\u0131rmam\u0131z gerekiyor.</p>\n<h2 id=\"controlled-input-null-value\"><a class=\"anchor\" href=\"/react/forms#controlled-input-null-value\"></a>Kontroll\u00fc Girdilerde <code class=\"language-javascript\">Null</code> De\u011feri </h2>\n<p><a href=\"/react/forms#controlled-components\">Kontroll\u00fc bir bile\u015fen</a> \u00fczerindeki <code class=\"language-javascript\">value</code> prop\u2019unu belirtmek, sizin iste\u011finiz d\u0131\u015f\u0131nda kullan\u0131c\u0131n\u0131n girdi de\u011ferini de\u011fi\u015ftirmesini \u00f6nler. <code class=\"language-javascript\">value</code> belirttiyseniz ancak girdi hala d\u00fczenlenebilir ise, yanl\u0131\u015fl\u0131kla <code class=\"language-javascript\">value</code> \u00f6zelli\u011fini <code class=\"language-javascript\">undefined</code> veya <code class=\"language-javascript\">null</code> olarak ayarlam\u0131\u015f olabilirsiniz.</p>\n<p>A\u015fa\u011f\u0131daki kod bunu g\u00f6stermektedir. (Giri\u015f ilk \u00f6nce kilitlenir ancak k\u0131sa bir gecikme sonras\u0131nda d\u00fczenlenebilir hale gelir.)</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>mountNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selam<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>mountNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"alternatives-to-controlled-components\"><a class=\"anchor\" href=\"/react/forms#alternatives-to-controlled-components\"></a>Kontroll\u00fc Bile\u015fenlere Alternatifler </h2>\n<p>Kontroll\u00fc bile\u015fenleri kullanmak bazen s\u0131k\u0131c\u0131 olabilir, \u00e7\u00fcnk\u00fc verilerinizin bir React bile\u015feniyle t\u00fcm giri\u015f durumunu de\u011fi\u015ftirebilmesi ve yay\u0131nlayabilmesi i\u00e7in bir olay y\u00f6neticisi yazman\u0131z gerekir. Bu \u00f6zellikle, \u00f6nceden var olan bir kod taban\u0131n\u0131 React\u2019e d\u00f6n\u00fc\u015ft\u00fcr\u00fcrken veya bir React uygulamas\u0131n\u0131 React olmayan bir k\u00fct\u00fcphaneyle birle\u015ftirirken can s\u0131k\u0131c\u0131 olabilir. Bu durumlarda, giri\u015f formlar\u0131n\u0131 uygulamak i\u00e7in alternatif bir teknik olan <a href=\"/react/uncontrolled-components\">kontrols\u00fcz bile\u015fenler</a>\u2018i kontrol etmek isteyebilirsiniz.</p>\n<h2 id=\"fully-fledged-solutions\"><a class=\"anchor\" href=\"/react/forms#fully-fledged-solutions\"></a>Tam Te\u015fekk\u00fcll\u00fc \u00c7\u00f6z\u00fcmler </h2>\n<p>Do\u011frulama, ziyaret edilen alanlar\u0131 takip etme ve form teslimini i\u00e7eren eksiksiz bir \u00e7\u00f6z\u00fcm ar\u0131yorsan\u0131z <a class=\"external-link\" href=\"https://jaredpalmer.com/formik\">Formik</a> pop\u00fcler se\u00e7eneklerden biridir. Bununla birlikte, ayn\u0131 kontrol bile\u015fenlerinin ve y\u00f6netim durumunun ayn\u0131 ilkeleri \u00fczerine kuruludur - bu y\u00fczden bunlar\u0131 \u00f6\u011frenmeyi ihmal etmeyin.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/forms.md\">Edit this page</a></p></div></article>", "path": "/react/forms", "nav": ["/react/lists-and-keys", "/react/lifting-state-up"]}, {"key": "10. State'i Yukar\u0131 Ta\u015f\u0131ma", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>\u00c7o\u011fu zaman, birden \u00e7ok bile\u015fenin de\u011fi\u015fen ayn\u0131 state\u2019i yans\u0131tmas\u0131 gerekmektedir. Bu durum i\u00e7in payla\u015f\u0131lan state\u2019i en yak\u0131n ortak \u00fcst elemana ta\u015f\u0131may\u0131 tavsiye etmekteyiz. Bunun nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 g\u00f6relim.</p>\n<p>Bu b\u00f6l\u00fcmde, suyun belirli bir s\u0131cakl\u0131kta kaynay\u0131p kaynayamayaca\u011f\u0131n\u0131 hesaplayan bir s\u0131cakl\u0131k hesaplay\u0131c\u0131s\u0131 olu\u015fturaca\u011f\u0131z.</p>\n<p><code class=\"language-javascript\">BoilingVerdict</code> diye isimlendirdi\u011fimiz bir bile\u015fenle i\u015fe ba\u015flayaca\u011f\u0131z. Bu bile\u015fen <code class=\"language-javascript\">celsius</code> de\u011ferini bir <code class=\"language-javascript\">prop</code> olarak kabul edip bu de\u011ferin suyu kaynatmaya yeterli olup olmayaca\u011f\u0131n\u0131 g\u00f6sterecektir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">BoilingVerdict</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>celsius <span class=\"token operator\">&gt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Su kaynar.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Su kaynamaz.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bir sonraki ad\u0131mda, <code class=\"language-javascript\">Calculator</code> diye isimlendirdi\u011fimiz bir bile\u015fen olu\u015fturaca\u011f\u0131z. Bu bile\u015fen s\u0131cakl\u0131k de\u011ferini girmemizi sa\u011flayacak bir <code class=\"language-javascript\">&lt;input&gt;</code> eleman\u0131na sahip olacak ve bu input eleman\u0131nda <code class=\"language-javascript\">this.state.temperature</code> de\u011feri tutulacakt\u0131r.</p>\n<p>Bu bile\u015fen ayr\u0131ca, <code class=\"language-javascript\">&lt;input&gt;</code>\u2018ta tuttu\u011fumuz de\u011fer i\u00e7in <code class=\"language-javascript\">BoilingVerdict</code> bile\u015fenini de ekrana yans\u0131tacakt\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Santigrat cinsinden s\u0131cakl\u0131k girin:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BoilingVerdict</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">celsius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ZXeOBm?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h2 id=\"adding-a-second-input\"><a class=\"anchor\" href=\"/react/lifting-state-up#adding-a-second-input\"></a>\u0130kinci Input Eleman\u0131n\u0131 Ekleme </h2>\n<p>Santigrat input\u2019una ek olarak Fahrenayt cinsinden de s\u0131cakl\u0131k de\u011feri girebilece\u011fimiz bir input\u2019a ve s\u0131cakl\u0131k de\u011ferlerinin birbirleri cinsinden senkronize \u015fekilde \u00e7al\u0131\u015fabilece\u011fi yeni bir gereksinimimizin oldu\u011funu d\u00fc\u015f\u00fcnelim.</p>\n<p>\u00d6ncelikle <code class=\"language-javascript\">TemperatureInput</code> bile\u015fenini <code class=\"language-javascript\">Calculator</code> bile\u015feninden ay\u0131rarak i\u015fe ba\u015flayaca\u011f\u0131z. Santigrat birimi olan <code class=\"language-javascript\">\"c\"</code> veya Fahrenayt birimi olan <code class=\"language-javascript\">\"f\"</code> de\u011ferine sahip olacak <code class=\"language-javascript\">scale</code> prop\u2019unu ekleyece\u011fiz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> scaleNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token string\">'Santigrat'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">f</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fahrenayt'</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> cinsinden s\u0131cakl\u0131k girin:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span>\n               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi iki ayr\u0131 s\u0131cakl\u0131k \u00f6l\u00e7\u00fc biriminden de de\u011fer girebilmek i\u00e7in <code class=\"language-javascript\">Calculator</code> bile\u015fenini a\u015fa\u011f\u0131daki gibi de\u011fi\u015ftirebiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jGBryx?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>\u015eu an s\u0131cakl\u0131k de\u011ferini girebilece\u011fimiz iki input\u2019unuz var, ancak herhangi birinde s\u0131cakl\u0131k de\u011feri girdi\u011fimizde di\u011fer input g\u00fcncellenmemektedir. Bu durum, de\u011ferleri birbiri cinsinden senkronize etme gereksinimimizi kar\u015f\u0131lamamaktad\u0131r.</p>\n<p>Ayr\u0131ca <code class=\"language-javascript\">Calculator</code> bile\u015feninde <code class=\"language-javascript\">BoilingVerdict</code> bile\u015fenini g\u00f6r\u00fcnt\u00fcleyememekteyiz. S\u0131cakl\u0131k de\u011feri <code class=\"language-javascript\">TemperatureInput</code> bile\u015feninde gizli oldu\u011fundan dolay\u0131 <code class=\"language-javascript\">Calculator</code> bile\u015feni girilen s\u0131cakl\u0131\u011f\u0131 bilmemektedir.</p>\n<h2 id=\"writing-conversion-functions\"><a class=\"anchor\" href=\"/react/lifting-state-up#writing-conversion-functions\"></a>D\u00f6n\u00fc\u015ft\u00fcrme Fonksiyonlar\u0131n\u0131 Yazma </h2>\n<p>\u00d6ncelikle, Santigrat-Fahrenayt ve Fahrenayt-Santigrat d\u00f6n\u00fc\u015f\u00fcmlerini sa\u011flayabilmek i\u00e7in iki ayr\u0131 fonksiyon yazaca\u011f\u0131z.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toCelsius</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fahrenheit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">toFahrenheit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">celsius</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>celsius <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu iki fonksiyon, s\u0131cakl\u0131k de\u011ferlerini birbiri cinsinden d\u00f6n\u00fc\u015ft\u00fcrmeyi sa\u011flamaktad\u0131r. </p>\n<p>String olan <code class=\"language-javascript\">temperature</code> de\u011ferini ve d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc (<code class=\"language-javascript\">convert</code>) fonksiyonunu arg\u00fcman olarak alan, geriye string d\u00f6nd\u00fcren ba\u015fka bir fonksiyon yazaca\u011f\u0131z. Bu fonksiyonu input\u2019lardaki de\u011ferleri birbirleri cinsinden hesaplayabilmek ama\u00e7l\u0131 kullanaca\u011f\u0131z. Bu fonksiyon ge\u00e7erli olmayan bir <code class=\"language-javascript\">temperature</code> de\u011feri i\u00e7in geriye bo\u015f string d\u00f6nd\u00fcrecektir. Ge\u00e7erli bir de\u011fer girildi\u011finde ise virg\u00fclden sonra 3 basama\u011fa yuvarlanm\u0131\u015f bir string d\u00f6nd\u00fcrecektir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature<span class=\"token punctuation\">,</span> convert</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rounded <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>output <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> rounded<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00d6rne\u011fin, <code class=\"language-javascript\">tryConvert('abc', toCelsius)</code> geriye bo\u015f string d\u00f6nd\u00fcr\u00fcrken, <code class=\"language-javascript\">tryConvert('10.22', toFahrenheit)</code> ise geriye <code class=\"language-javascript\">'50.396'</code> de\u011ferini d\u00f6nd\u00fcrecektir.</p>\n<h2 id=\"lifting-state-up\"><a class=\"anchor\" href=\"/react/lifting-state-up#lifting-state-up\"></a>State\u2019i Yukar\u0131 Ta\u015f\u0131ma </h2>\n<p>\u015eu anda, her iki <code class=\"language-javascript\">TemperatureInput</code> bile\u015feni birbirlerinden ba\u011f\u0131ms\u0131z olarak de\u011ferlerini kendi yerel state\u2019lerinde tutmaktad\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...  </span></code></pre></div>\n<p>Ancak, bu iki giri\u015fin birbiriyle senkronize olmas\u0131n\u0131 istedi\u011fimiz i\u00e7in Santigrat input\u2019unu g\u00fcncelledi\u011fimizde, Fahrenayt input\u2019u d\u00f6n\u00fc\u015ft\u00fcr\u00fclen s\u0131cakl\u0131\u011f\u0131 yans\u0131tmal\u0131d\u0131r ya da ayn\u0131 \u015fekilde Fahrenayt input\u2019unu g\u00fcncelledi\u011fimizde Santigrat input\u2019u d\u00f6n\u00fc\u015ft\u00fcr\u00fclen s\u0131cakl\u0131\u011f\u0131 yans\u0131tmal\u0131d\u0131r.</p>\n<p>React\u2019te state payla\u015f\u0131m\u0131, state\u2019i, ihtiyac\u0131 olan bile\u015fenlerin en yak\u0131n ortak \u00fcst elemana ta\u015f\u0131yarak ger\u00e7ekle\u015ftirilir. Buna \u201clifting state up\u201d yani state\u2019i yukar\u0131 ta\u015f\u0131ma denir. Yerel state\u2019i <code class=\"language-javascript\">TemperatureInput</code>\u2018dan kald\u0131r\u0131p, <code class=\"language-javascript\">Calculator</code> bile\u015finine ta\u015f\u0131yaca\u011f\u0131z.</p>\n<p><code class=\"language-javascript\">Calculator</code> bile\u015feni payla\u015f\u0131lan state\u2019e sahip olaca\u011f\u0131 i\u00e7in, bu bile\u015fen her iki input\u2019ta ge\u00e7erli s\u0131cakl\u0131k de\u011feri i\u00e7in \u201csource of truth\u201d yani ger\u00e7ek veri kayna\u011f\u0131 olacakt\u0131r. Bu \u015fekilde <code class=\"language-javascript\">Calculator</code>, her iki input\u2019a birbirleriyle tutarl\u0131 de\u011ferlere sahip olma talimat\u0131n\u0131 verebilecektir. Her iki <code class=\"language-javascript\">TemperatureInput</code> bile\u015feninin <code class=\"language-javascript\">prop</code>\u2018lar\u0131 \u00fcst eleman olan <code class=\"language-javascript\">Calculator</code> bile\u015feninden geldi\u011fi i\u00e7in, her iki input de\u011feri her zaman senkronize olacakt\u0131r.</p>\n<p>Nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 \u015fimdi ad\u0131m ad\u0131m inceleyelim.</p>\n<p>\u0130lk olarak, <code class=\"language-javascript\">TemperatureInput</code> bile\u015feninde <code class=\"language-javascript\">this.state.temperature</code>\u2018u <code class=\"language-javascript\">this.props.temperature</code> olarak de\u011fi\u015ftirece\u011fiz. \u015eimdilik, <code class=\"language-javascript\">this.props.temperature</code> hali haz\u0131rda varm\u0131\u015f gibi d\u00fc\u015f\u00fcnelim, ancak ileride bunu <code class=\"language-javascript\">Calculator</code> bile\u015feninden g\u00f6ndermemiz gerekecek.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \u00d6nceki hali: const temperature = this.state.temperature;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...</span></code></pre></div>\n<p><a href=\"/react/components-and-props#props-are-read-only\">Prop\u2019lar\u0131n salt okunur</a> oldu\u011funu biliyoruz. <code class=\"language-javascript\">temperature</code> yerel state\u2019te bulunuyorken, <code class=\"language-javascript\">TemperatureInput</code> bile\u015feni  bu de\u011feri de\u011fi\u015ftirebilmek i\u00e7in <code class=\"language-javascript\">this.setState()</code>\u2018i \u00e7a\u011f\u0131rabiliyordu. Ancak \u015fimdi, <code class=\"language-javascript\">temperature</code> de\u011feri \u00fcst elemandan prop olarak geldi\u011fi i\u00e7in <code class=\"language-javascript\">TemperatureInput</code> bile\u015feninin art\u0131k <code class=\"language-javascript\">temperature</code>\u2018\u0131n \u00fczerinde bir kontrol\u00fc kalmad\u0131.</p>\n<p>React\u2019te, bu durum genellikle bile\u015fen olu\u015fturulurken, \u201ckontroll\u00fc\u201d bile\u015fen bi\u00e7iminde yap\u0131larak \u00e7\u00f6z\u00fcl\u00fcr. DOM\u2019da <code class=\"language-javascript\">&lt;input&gt;</code> \u00f6\u011fesinin hem <code class=\"language-javascript\">value</code> hem de <code class=\"language-javascript\">onChange</code> prop\u2019unu kabul etmesi gibi, olu\u015fturdu\u011fumuz <code class=\"language-javascript\">TemperatureInput</code> bile\u015feni hem <code class=\"language-javascript\">temperature</code> hem de <code class=\"language-javascript\">onTemperatureChange</code> prop\u2019lar\u0131n\u0131 \u00fcst eleman olan <code class=\"language-javascript\">Calculator</code> bile\u015feninden kabul alabilecektir.</p>\n<p>\u015eimdi, <code class=\"language-javascript\">TemperatureInput</code> kendi <code class=\"language-javascript\">temperature</code>\u2018unu g\u00fcncellemek ya da de\u011fi\u015ftirmek istedi\u011finde <code class=\"language-javascript\">this.props.onTemperatureChange</code>\u2018i \u00e7a\u011f\u0131racakt\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \u00d6nceki hali: this.setState({temperature: e.target.value});</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token comment\">// ...</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bile\u015fenlerdeki <code class=\"language-javascript\">temperature</code> veya <code class=\"language-javascript\">onTemperatureChange</code> prop isimlerinin \u00f6zel bir anlam\u0131 bulunmamaktad\u0131r. Onlara herhangi farkl\u0131 bir \u015fey diyebilirdik, \u00f6rne\u011fin onlar\u0131 <code class=\"language-javascript\">value</code> ve <code class=\"language-javascript\">onChange</code> gibi genel konvansiyonla isimlendirebilirdik. </p>\n</div>\n<p><code class=\"language-javascript\">onTemperatureChange</code> prop\u2019u, <code class=\"language-javascript\">Calculator</code> bile\u015feni taraf\u0131ndan <code class=\"language-javascript\">temperature</code> prop\u2019u ile birlikte verilecektir. De\u011fer de\u011fi\u015fimini kendi yerel state\u2019ini de\u011fi\u015ftirerek halledecek, b\u00f6ylece her iki input yeni de\u011ferlerle beraber g\u00f6sterilecektir. Birazdan <code class=\"language-javascript\">Calculator</code>\u2018un yeni implementasyonuna birlikte bakaca\u011f\u0131z.</p>\n<p><code class=\"language-javascript\">Calculator</code>\u2018deki de\u011fi\u015fikliklere ba\u015flamadan \u00f6nce, h\u0131zl\u0131 bir \u015fekilde <code class=\"language-javascript\">TemperatureInput</code> bile\u015fenimizdeki yapt\u0131\u011f\u0131m\u0131z de\u011fi\u015fikliklere bakal\u0131m. Yerel state\u2019i bile\u015fenden kald\u0131rd\u0131k ve <code class=\"language-javascript\">this.state.temperature</code> okumak yerine art\u0131k <code class=\"language-javascript\">this.props.temperature</code> okumaktay\u0131z. Ayr\u0131ca de\u011fer de\u011fi\u015ftirmek i\u00e7in <code class=\"language-javascript\">this.setState()</code> \u00e7a\u011f\u0131rmak yerine, <code class=\"language-javascript\">Calculator</code> taraf\u0131ndan sa\u011flanan <code class=\"language-javascript\">this.props.onTemperatureChange()</code> \u00e7a\u011f\u0131rmaktay\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> cinsinden s\u0131cakl\u0131k girin:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>legend</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span></span>\n               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi <code class=\"language-javascript\">Calculator</code> bile\u015fenimize d\u00f6nebiliriz.</p>\n<p>Input\u2019un <code class=\"language-javascript\">temperature</code> ve <code class=\"language-javascript\">scale</code> de\u011ferlerini bile\u015fenimizin yerel state\u2019inde saklayaca\u011f\u0131z. B\u00f6ylelikle input\u2019lar\u0131m\u0131zdan \u201cstate\u2019i ta\u015f\u0131m\u0131\u015f\u201d olduk. Bu bize her iki input de\u011feri i\u00e7in \u201csource of truth\u201d yani do\u011fru veri kayna\u011f\u0131n\u0131 sa\u011flam\u0131\u015f olacakt\u0131r. \u201cSource of truth\u201d her iki input de\u011ferini senkron bir \u015fekilde g\u00f6stermek i\u00e7in bilmemiz gereken t\u00fcm verilerin asgari temsilidir.</p>\n<p>\u00d6rne\u011fin, Santigrat input eleman\u0131na 37 yazarsak, <code class=\"language-javascript\">Calculator</code> bile\u015fenindeki state a\u015fa\u011f\u0131daki gibi olacakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">'37'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>E\u011fer daha sonra Fahrenayt input eleman\u0131n\u0131 212 olarak de\u011fi\u015ftirirsek, <code class=\"language-javascript\">Calculator</code> bile\u015finindeki state a\u015fa\u011f\u0131daki gibi olacakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">'212'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'f'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Her iki input de\u011ferini de kaydedebilirdik ancak bu gereksiz g\u00f6r\u00fcnmektedir. En son de\u011fi\u015ftirilen input de\u011ferini ve onun birimini kaydetmek yeterlidir. Daha sonra <code class=\"language-javascript\">temperature</code> ve <code class=\"language-javascript\">scale</code> de\u011ferlerine ba\u011fl\u0131 olarak di\u011ferinin de\u011ferini hesaplayabiliriz.</p>\n<p>Input\u2019lardaki de\u011ferler senkron bir \u015fekilde kalmaktad\u0131r, \u00e7\u00fcnk\u00fc de\u011ferleri ayn\u0131 state \u00fczerinden hesaplanmaktad\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> celsius <span class=\"token operator\">=</span> scale <span class=\"token operator\">===</span> <span class=\"token string\">'f'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toCelsius<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> fahrenheit <span class=\"token operator\">=</span> scale <span class=\"token operator\">===</span> <span class=\"token string\">'c'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toFahrenheit<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature<span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span>\n          <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">temperature</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>celsius<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onTemperatureChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TemperatureInput</span></span>\n          <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>f<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">temperature</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fahrenheit<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">onTemperatureChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BoilingVerdict</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">celsius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>celsius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/WZpxpz?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>\u015eimdi, hangi input\u2019u de\u011fi\u015ftirdi\u011finizin \u00f6nemi olmaks\u0131z\u0131n, <code class=\"language-javascript\">Calculator</code> bile\u015fenindeki <code class=\"language-javascript\">this.state.temperature</code> ve <code class=\"language-javascript\">this.state.scale</code> g\u00fcncellenmektedir. Input\u2019lardan herhangi birisinin de\u011feri oldu\u011fu gibi al\u0131nmaktad\u0131r, b\u00f6ylelikle kullan\u0131c\u0131 girdisi korunmaktad\u0131r, ve di\u011fer input de\u011feri girilen de\u011fere g\u00f6re yeniden hesaplanmaktad\u0131r.</p>\n<p>Herhangi bir input\u2019a de\u011fer girildi\u011finde ne oldu\u011funu \u00f6zetleyelim:</p>\n<ul>\n<li>React, DOM\u2019daki <code class=\"language-javascript\">&lt;input&gt;</code> \u00fczerinde <code class=\"language-javascript\">onChange</code> olarak belirtilen fonksiyonu \u00e7a\u011f\u0131r\u0131r. Bizim \u00f6rne\u011fimizde, <code class=\"language-javascript\">TemperatureInput</code> bile\u015fenindeki <code class=\"language-javascript\">handleChange</code> metodudur.</li>\n<li><code class=\"language-javascript\">TemperatureInput</code> bile\u015fenindeki <code class=\"language-javascript\">handleChange</code> metodu <code class=\"language-javascript\">this.props.onTemperatureChange()</code>\u2018i yeni girilen de\u011ferle \u00e7a\u011f\u0131r\u0131r. <code class=\"language-javascript\">TemperatureInput</code> bile\u015fenindeki prop\u2019lar, <code class=\"language-javascript\">onTemperatureChange</code> ile beraber, \u00fcst eleman olan <code class=\"language-javascript\">Calculator</code> taraf\u0131ndan verilmektedir.</li>\n<li><code class=\"language-javascript\">Calculator</code> bile\u015feninde bulunan Santigrat cinsindeki <code class=\"language-javascript\">TempratureInput</code> bile\u015feninin <code class=\"language-javascript\">onTemperatureChange</code> fonksiyonunu <code class=\"language-javascript\">handleCelsiusChange</code> metodu olarak belirledik. Ayn\u0131 \u015fekilde Fahrenayt i\u00e7in ise <code class=\"language-javascript\">handleFahrenheitChange</code> olarak belirledik. <code class=\"language-javascript\">Calculator</code>\u2018deki bu iki fonksiyondan herhangi biri, de\u011fi\u015fen input\u2019a ba\u011fl\u0131 olarak \u00e7a\u011fr\u0131l\u0131r.</li>\n<li>Bu metodlarda, <code class=\"language-javascript\">Calculator</code> bile\u015feni React\u2019e kendisini tekrar ekranda sunabilmek i\u00e7in <code class=\"language-javascript\">this.setState()</code>\u2018i yeni input de\u011feri ve input\u2019un ba\u011fl\u0131 oldu\u011fu \u00f6l\u00e7\u00fcm birim de\u011feri ile \u00e7a\u011f\u0131r\u0131r.</li>\n<li>React <code class=\"language-javascript\">Calculator</code> bile\u015feninin <code class=\"language-javascript\">render</code> metodunu \u00e7a\u011f\u0131rarak yeni UI\u2019\u0131n nas\u0131l sunaca\u011f\u0131n\u0131 \u00f6\u011frenir. Input\u2019lardaki her iki de\u011fer kendi birimlerine g\u00f6re tekrar hesaplan\u0131r. S\u0131cakl\u0131k d\u00f6n\u00fc\u015f\u00fcm\u00fc bu ad\u0131mda ger\u00e7ekle\u015fir.</li>\n<li>React her bir <code class=\"language-javascript\">TemperatureInput</code> bile\u015feninin <code class=\"language-javascript\">render</code> metodunu <code class=\"language-javascript\">Calculator</code> bile\u015feni taraf\u0131ndan belirlenen yeni prop\u2019lar ile \u00e7a\u011f\u0131r\u0131r. Bu \u015fekilde ekrana bu input\u2019lar\u0131 nas\u0131l g\u00f6sterece\u011fini \u00f6\u011frenir.</li>\n<li>React <code class=\"language-javascript\">BoilingVerdict</code> bile\u015feninin <code class=\"language-javascript\">render</code> metodunu \u00e7a\u011f\u0131r\u0131r. \u00c7a\u011f\u0131r\u0131rken Santigrat cinsinden olan de\u011feri prop olarak bile\u015fene g\u00f6nderir.</li>\n<li>React DOM, DOM\u2019da suyun kaynayaca\u011f\u0131n\u0131 ya da kaynamayaca\u011f\u0131n\u0131 g\u00f6steren bir mesajla g\u00fcnceller. Ayr\u0131ca input de\u011ferlerini g\u00fcncel hesaplanan de\u011ferler ile ekrana yans\u0131t\u0131r.</li>\n</ul>\n<p>Her g\u00fcncelleme ayn\u0131 ad\u0131mlardan ge\u00e7er, b\u00f6ylece input\u2019lar senkronize kal\u0131r.</p>\n<h2 id=\"lessons-learned\"><a class=\"anchor\" href=\"/react/lifting-state-up#lessons-learned\"></a>Neler \u00d6\u011frendik </h2>\n<p>React uygulamas\u0131nda de\u011fi\u015fen veriler i\u00e7in tek bir ger\u00e7ek veri kayna\u011f\u0131 olmal\u0131d\u0131r. Genelde, state onu kullanacak olan bile\u015fene eklenir. Daha sonra, di\u011fer bile\u015fenlerde bu state\u2019e ihtiya\u00e7 duyarsa state\u2019i en yak\u0131n ortak \u00fcst elemana ta\u015f\u0131yabilirsiniz. State\u2019i farkl\u0131 bile\u015fenler aras\u0131nda senkronize etmektense, <a href=\"/react/state-and-lifecycle#the-data-flows-down\">yukar\u0131dan-a\u015fa\u011f\u0131ya veri ak\u0131\u015f\u0131</a>\u2018\u0131n kullanabilirsiniz.</p>\n<p>State ta\u015f\u0131ma daha \u00e7ok genel hatlar\u0131yla kod yazmay\u0131 ve iki y\u00f6nl\u00fc ba\u011flama yakla\u015f\u0131m\u0131n\u0131 gerektirmektedir. Bu i\u015fin getirisi hatalar\u0131 bulup ay\u0131klamak i\u00e7in daha az i\u015f gerektirmektedr. Herhangi bir state, baz\u0131 bile\u015fenlerde \u201cya\u015fad\u0131\u011f\u0131ndan\u201d ve bile\u015fenler tek ba\u015f\u0131na onu de\u011fi\u015ftirebildi\u011finden, hatalar\u0131n kapsam alan\u0131 b\u00fcy\u00fck \u00f6l\u00e7\u00fcde azalmaktad\u0131r. Ek olarak, kullan\u0131c\u0131 taraf\u0131ndan girilen input de\u011ferlerini reddetmek veya d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in herhangi bir \u00f6zel mant\u0131k uygulayabilirsiniz.</p>\n<p>E\u011fer herhangi bir \u015fey prop\u2019tan veya state\u2019ten t\u00fcretilebilirse, b\u00fcy\u00fck ihtimalle o state\u2019te olmamal\u0131d\u0131r. \u00d6rne\u011fin, hem <code class=\"language-javascript\">celsiusValue</code> hem de <code class=\"language-javascript\">fahrenheitValue</code> tutmaktansa, sadece en son de\u011fi\u015ftirilen <code class=\"language-javascript\">temperature</code> ve onun <code class=\"language-javascript\">scale</code>\u2018ini tutar\u0131z. Di\u011fer input\u2019un de\u011feri b\u00f6ylelikle bu de\u011ferler ile <code class=\"language-javascript\">render()</code> metodunda hesaplanabilir. Bu bize, kullan\u0131c\u0131 input giri\u015finde herhangi bir hesaplama hassasiyetini kaybetirmeden yuvarlama i\u015flemini di\u011fer input\u2019a uygulamam\u0131z\u0131 veya silmemizi sa\u011flar.</p>\n<p>Kullan\u0131c\u0131 aray\u00fcz\u00fcnde yanl\u0131\u015f bir \u015fey g\u00f6rd\u00fc\u011f\u00fcn\u00fczde, <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-devtools\">React Developer Tools</a>\u2018u prop\u2019lar\u0131 incelemek ve state\u2019i g\u00fcncellemekle sorumlu olan bile\u015feni bulabilmek i\u00e7in kullanabilirsiniz. Bu, size hatalar\u0131 kayna\u011f\u0131na kadar izleme olana\u011f\u0131 sa\u011flar:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//ef94afc3447d75cdc245c77efb0d63be/react-devtools-state.gif\">Image link</a></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/lifting-state-up.md\">Edit this page</a></p></div></article>", "path": "/react/lifting-state-up", "nav": ["/react/forms", "/react/composition-vs-inheritance"]}, {"key": "11. Bile\u015fim vs Kal\u0131t\u0131m", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React g\u00fc\u00e7l\u00fc bir bile\u015fim modeline sahiptir. Ayn\u0131 kodu bile\u015fenler aras\u0131nda tekrar kullanmak i\u00e7in kal\u0131t\u0131m yerine bile\u015fim modelini kullanman\u0131z\u0131 \u00f6neririz.</p>\n<p>Bu b\u00f6l\u00fcmde, React\u2019te yeni geli\u015ftiricilerin kal\u0131t\u0131m ile ilgili kar\u015f\u0131la\u015ft\u0131\u011f\u0131 birka\u00e7 sorunu ele alaca\u011f\u0131z ve bunlar\u0131 bile\u015fimlerle nas\u0131l \u00e7\u00f6zebilece\u011fimizi g\u00f6sterece\u011fiz.</p>\n<h2 id=\"containment\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#containment\"></a>Kapsama </h2>\n<p>Baz\u0131 bile\u015fenler \u00f6nceden alt elemanlar\u0131n\u0131 bilmezler. Bu, \u00f6zellikle genel \u201ckutular\u0131\u201d temsil eden <code class=\"language-javascript\">Sidebar</code> veya <code class=\"language-javascript\">Dialog</code> gibi bile\u015fenler i\u00e7in ge\u00e7erlidir.</p>\n<p>Bu t\u00fcr bile\u015fenlerin, alt elemanlar\u0131n\u0131 do\u011frudan \u00e7\u0131kt\u0131lar\u0131na ge\u00e7irmek i\u00e7in \u00f6zel <code class=\"language-javascript\">children</code> prop\u2019unu kullanmas\u0131n\u0131 \u00f6neririz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyBorder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'FancyBorder FancyBorder-'</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu, JSX\u2019i i\u00e7 i\u00e7e koyarak di\u011fer bile\u015fenlere ge\u00e7irmelerini sa\u011flar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Ho\u015fgeldiniz</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        Uzay arac\u0131m\u0131z\u0131 ziyaret etti\u011finiz i\u00e7in te\u015fekk\u00fcr ederiz!</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/ozqNOV?editors=0010\">CodePen\u2019de Deneyin</a></strong></p>\n<p><code class=\"language-javascript\">FancyBorder</code> JSX etiketinin i\u00e7indeki herhangi bir \u015fey <code class=\"language-javascript\">children</code> prop\u2019u olarak <code class=\"language-javascript\">FancyBorder</code> bile\u015fenine ge\u00e7er. <code class=\"language-javascript\">FancyBorder</code>, bir <code class=\"language-javascript\">&lt;div&gt;</code> i\u00e7inde <code class=\"language-javascript\">{props.children}</code> render edildi\u011finden, iletilen \u00f6\u011feler son \u00e7\u0131kt\u0131da g\u00f6r\u00fcn\u00fcr.</p>\n<p>Daha az yayg\u0131n olsa da, bazen bir bile\u015fende birden fazla \u201cdelik\u201d gerekebilir. Bu gibi durumlarda, <code class=\"language-javascript\">children</code> kullanmak yerine kendi y\u00f6nteminizi uygulayabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">SplitPane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane-left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>SplitPane-right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SplitPane</span></span>\n      <span class=\"token attr-name\">left</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Contacts</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">right</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chat</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>      <span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwZOJp?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p><code class=\"language-javascript\">&lt;Contacts /&gt;</code> ve <code class=\"language-javascript\">&lt;Chat /&gt;</code> gibi React elementleri yaln\u0131zca nesnelerdir; bu nedenle bunlar\u0131, di\u011fer veriler gibi, prop\u2019lar olarak ge\u00e7irebilirsiniz. Bu yakla\u015f\u0131m size di\u011fer k\u00fct\u00fcphanelerdeki \u201cslotlar\u0131\u201d hat\u0131rlatabilir ancak React\u2019te prop olarak ne ge\u00e7ece\u011finiz konusunda hi\u00e7bir s\u0131n\u0131rlama yoktur.</p>\n<h2 id=\"specialization\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#specialization\"></a>\u00d6zelle\u015fme </h2>\n<p>Bazen bile\u015fenleri di\u011fer bile\u015fenlerin \u201c\u00f6zel durumlar\u0131\u201d olarak d\u00fc\u015f\u00fcn\u00fcr\u00fcz. \u00d6rne\u011fin, bir <code class=\"language-javascript\">WelcomeDialog</code> <code class=\"language-javascript\">Dialog</code>unun \u00f6zel bir durumu oldu\u011funu s\u00f6yleyebiliriz.</p>\n<p>Bu yakla\u015f\u0131m React\u2019te, ayn\u0131 zamanda daha \u201cspesifik\u201d bir bile\u015fenin daha \u201cjenerik\u201d bir bile\u015fen olu\u015fturdu\u011fu ve onu prop gere\u00e7leriyle konfig\u00fcre etti\u011fi bile\u015fimlerle de elde edilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialog</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Ho\u015fgeldiniz<span class=\"token punctuation\">\"</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Uzay arac\u0131m\u0131z\u0131 ziyaret etti\u011finiz i\u00e7in te\u015fekk\u00fcr ederiz!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/kkEaOZ?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bile\u015fim, s\u0131n\u0131f olarak tan\u0131mlanan bile\u015fenler i\u00e7in e\u015fit derecede iyi \u00e7al\u0131\u015f\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyBorder</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dialog-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyBorder</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUpDialog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">login</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dialog</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Mars Ke\u015fif Program\u0131<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Size nas\u0131l ba\u015fvurabiliriz?<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">               <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          Beni kaydet!</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Dialog</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">login</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Welcome aboard, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gwZbYa?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h2 id=\"so-what-about-inheritance\"><a class=\"anchor\" href=\"/react/composition-vs-inheritance#so-what-about-inheritance\"></a>Kal\u0131t\u0131m Hakk\u0131nda Ne S\u00f6yleyebiliriz? </h2>\n<p>Facebook binlerce bile\u015fende React kullan\u0131yor ve bile\u015fen hiyerar\u015fileri olu\u015ftururken \u00f6nerdi\u011fimiz herhangi bir kullan\u0131m durumu bulamad\u0131k.</p>\n<p>Prop\u2019lar ve bile\u015fimler, bir bile\u015fenin g\u00f6r\u00fcn\u00fc\u015f\u00fcn\u00fc ve davran\u0131\u015f\u0131n\u0131 a\u00e7\u0131k ve g\u00fcvenli bir \u015fekilde \u00f6zelle\u015ftirmek i\u00e7in ihtiyac\u0131n\u0131z olan t\u00fcm esnekli\u011fi sunar. Bile\u015fenlerin, ilkel de\u011ferler, React \u00f6\u011feleri veya fonksiyonlar dahil olmak \u00fczere iste\u011fe ba\u011fl\u0131 prop\u2019lar\u0131 kabul edebilece\u011fini unutmay\u0131n.</p>\n<p>UI (Kullan\u0131c\u0131 Aray\u00fcz\u00fc) d\u0131\u015f\u0131 i\u015flevselli\u011fi bile\u015fenler aras\u0131nda yeniden kullanmak istiyorsan\u0131z, ayr\u0131 bir JavaScript mod\u00fcl\u00fcne \u00e7\u0131karman\u0131z\u0131 \u00f6neririz. Bile\u015fenler onu i\u00e7e dahil edebilir ve geni\u015fletmeden bu fonksiyonu, nesneyi veya bir s\u0131n\u0131f\u0131 kullanabilir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/composition-vs-inheritance.md\">Edit this page</a></p></div></article>", "path": "/react/composition-vs-inheritance", "nav": ["/react/lifting-state-up", "/react/thinking-in-react"]}, {"key": "12. React'te D\u00fc\u015f\u00fcnmek", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React, bize g\u00f6re, JavaScript ile b\u00fcy\u00fck ve h\u0131zl\u0131 Web uygulamalar\u0131 olu\u015fturman\u0131n en \u00f6nde gelen yoludur. Bizim i\u00e7in Facebook ve Instagram\u2019\u0131n geli\u015ftirilmesinde \u00e7ok etkili oldu.</p>\n<p>React\u2019in en harika yanlar\u0131ndan biri de, uygulamalar\u0131 olu\u015ftururken size kazand\u0131rd\u0131\u011f\u0131 bak\u0131\u015f a\u00e7\u0131s\u0131d\u0131r. Bu d\u00f6k\u00fcmanda, React\u2019i kullanarak arama \u00f6zelli\u011fi olan bir \u00fcr\u00fcn tablosu olu\u015fturman\u0131n d\u00fc\u015f\u00fcnce s\u00fcrecinde size yol g\u00f6sterece\u011fiz.</p>\n<h2 id=\"start-with-a-mock\"><a class=\"anchor\" href=\"/react/thinking-in-react#start-with-a-mock\"></a>Bir Taslakla Ba\u015flay\u0131n </h2>\n<p>Zaten bir JSON API\u2019\u0131m\u0131z\u0131n ve tasar\u0131mc\u0131m\u0131zdan gelen bir tasla\u011f\u0131m\u0131z\u0131n oldu\u011funu hayal edin. Taslak bunun gibi g\u00f6z\u00fck\u00fcyor:</p>\n<p>\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/1071fbcc9eed01fddc115b41e193ec11/d4770/thinking-in-react-mock.png\">Image link</a>\n</span>\n</span>\n</p>\n<p>JSON API\u2019\u0131m\u0131z a\u015fa\u011f\u0131dakine benzeyen bir veri d\u00f6n\u00fcyor:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">[\n  {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n  {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n  {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n  {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n  {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n  {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"}\n];</code></pre></div>\n<h2 id=\"step-1-break-the-ui-into-a-component-hierarchy\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-1-break-the-ui-into-a-component-hierarchy\"></a>Ad\u0131m 1: Kullan\u0131c\u0131 Arabirimini Bile\u015fen Hiyerar\u015fisine B\u00f6l\u00fcn </h2>\n<p>Yapmak isteyece\u011finiz ilk \u015fey, taslaktaki her bile\u015fenin (ve alt bile\u015fenlerin) etrafina kutular \u00e7izip, her birisine isimler vermektir.\nE\u011fer bir tasar\u0131mc\u0131yla \u00e7al\u0131\u015f\u0131yorsan\u0131z, bunu zaten yapm\u0131\u015f olabilirler; o zaman gidip onlarla konu\u015fun! Photoshop\u2019taki katman isimleri React bile\u015fenlerinin isimleri olabilir!</p>\n<p>Ama nelerin kendi ba\u015f\u0131na birer bile\u015fen olaca\u011f\u0131na nas\u0131l karar vereceksiniz? Yeni bir nesne ya da fonksiyon olu\u015fturup olu\u015fturmayaca\u011f\u0131n\u0131za karar vermek i\u00e7in yine ayn\u0131 teknikleri kullan\u0131n. Bu tekniklerden biri, <a class=\"external-link\" href=\"https://eksisozluk.com/tek-sorumluluk-prensibi--1667342\">tek sorumluluk ilkesidir</a>; yani bir bile\u015fen ideal olarak sadece tek bir \u015fey yapmal\u0131d\u0131r. Bile\u015fen b\u00fcy\u00fcd\u00fc\u011f\u00fc taktirde, daha k\u00fc\u00e7\u00fck alt bile\u015fenlere ayr\u0131lmal\u0131d\u0131r.</p>\n<p>\u00c7o\u011fu zaman kullan\u0131c\u0131ya bir JSON veri modeli g\u00f6sterece\u011finiz i\u00e7in, modeliniz do\u011fru in\u015fa edildiyse, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcz\u00fcn (ve dolay\u0131s\u0131yla bile\u015fen yap\u0131n\u0131z\u0131n) g\u00fczel bir \u015fekilde e\u015fle\u015fece\u011fini g\u00f6receksiniz. Bunun nedeni, kullan\u0131c\u0131 arabirimi ve veri modellerinin ayn\u0131 <em>bilgi mimarisine</em> ba\u011fl\u0131 kalma e\u011filiminde olmas\u0131d\u0131r. Bu y\u00fczden kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcz\u00fc bile\u015fenlere ay\u0131rma i\u015fi genellikle \u00f6nemsizdir. Aray\u00fcz\u00fcn\u00fcz\u00fc sadece, her birisi veri modelinizin bir par\u00e7as\u0131n\u0131 temsil edecek \u015fekilde, bile\u015fenlere b\u00f6l\u00fcn.</p>\n<p>\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/9381f09e609723a8bb6e4ba1a7713b46/90cbd/thinking-in-react-components.png\">Image link</a>\n</span>\n</span>\n</p>\n<p>Burada uygulamam\u0131z\u0131n be\u015f tane bile\u015feni oldu\u011funu g\u00f6receksiniz. Her bile\u015fenin temsil etti\u011fi verileri italik halde a\u015fa\u011f\u0131da belirttik. Resimdeki say\u0131lar a\u015fa\u011f\u0131daki say\u0131lara kar\u015f\u0131l\u0131k gelmektedir.</p>\n<ol>\n<li><strong><code class=\"language-javascript\">FilterableProductTable</code> (turuncu):</strong> \u00f6rnek uygulaman\u0131n tamam\u0131n\u0131 i\u00e7erir.</li>\n<li><strong><code class=\"language-javascript\">SearchBar</code> (mavi):</strong> b\u00fct\u00fcn <em>kullan\u0131c\u0131 girdilerini</em> al\u0131r.</li>\n<li><strong><code class=\"language-javascript\">ProductTable</code> (ye\u015fil):</strong> <em>kullan\u0131c\u0131 girdisine</em> ba\u011fl\u0131 olarak <em>veri koleksiyonunu</em> g\u00f6r\u00fcnt\u00fcler ve filtreler.</li>\n<li><strong><code class=\"language-javascript\">ProductCategoryRow</code> (turkuaz):</strong> her bir <em>kategori</em> i\u00e7in bir ba\u015fl\u0131k g\u00f6sterir.</li>\n<li><strong><code class=\"language-javascript\">ProductRow</code> (k\u0131rm\u0131z\u0131):</strong> her bir <em>\u00fcr\u00fcn</em> i\u00e7in bir sat\u0131r g\u00f6sterir.</li>\n</ol>\n<p><code class=\"language-javascript\">ProductTable</code>\u2018a bakarsan\u0131z, tablo ba\u015fl\u0131\u011f\u0131n\u0131n (\u201cName\u201d ve \u201cPrice\u201d etiketlerini i\u00e7eren k\u0131s\u0131m) kendi bile\u015feni olmad\u0131\u011f\u0131n\u0131 g\u00f6receksiniz. Bu bir tercih meselesi ve her iki \u015fekilde de yap\u0131lmas\u0131n\u0131 savunan bir arg\u00fcman var. Bu \u00f6rnekte, tablo ba\u015fl\u0131\u011f\u0131n\u0131 <code class=\"language-javascript\">ProductTable</code>\u2019\u0131n bir par\u00e7as\u0131 olarak b\u0131rakt\u0131k. \u00c7\u00fcnk\u00fc tablo ba\u015fl\u0131\u011f\u0131, ProductTable\u2019\u0131n sorumlulu\u011funda olan <em>veri koleksiyonunu</em> render etme i\u015fleminin bir par\u00e7as\u0131d\u0131r. Yine de, e\u011fer bu ba\u015fl\u0131k giderek karma\u015f\u0131k bir hale gelirse (Mesela s\u0131ralama \u00f6zelli\u011fi ekleseydik), kendi ayr\u0131 <code class=\"language-javascript\">ProductTableHeader</code> bile\u015fenini yapmak kesinlikle daha mant\u0131kl\u0131 olurdu.</p>\n<p>\u015eimdi, tasla\u011f\u0131m\u0131zdaki bile\u015fenleri belirledi\u011fimize g\u00f6re, onlar\u0131 bir hiyerar\u015fiye g\u00f6re d\u00fczenleyelim. Bu kolay. Taslakta ba\u015fka bir bile\u015fen i\u00e7inde g\u00f6r\u00fcnen bile\u015fenler, hiyerar\u015fideki bir alt eleman olarak g\u00f6r\u00fcnmelidir:</p>\n<ul>\n<li>\n<p><code class=\"language-javascript\">FilterableProductTable</code></p>\n<ul>\n<li><code class=\"language-javascript\">SearchBar</code></li>\n<li>\n<p><code class=\"language-javascript\">ProductTable</code></p>\n<ul>\n<li><code class=\"language-javascript\">ProductCategoryRow</code></li>\n<li><code class=\"language-javascript\">ProductRow</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"step-2-build-a-static-version-in-react\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-2-build-a-static-version-in-react\"></a>Ad\u0131m 2: React\u2019te Statik Versiyonunu Olu\u015fturun </h2>\n<p class=\"codepen\"><a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>'deki <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/BwWzwm\">React'te D\u00fc\u015f\u00fcnmek: Ad\u0131m 2</a> sayfas\u0131n\u0131 ziyaret edin.</p>\n<script></script>\n<p>Art\u0131k bile\u015fen hiyerar\u015fisine sahip oldu\u011funuza g\u00f6re, uygulaman\u0131z\u0131 hayata ge\u00e7irme vakti geldi. Bunun en kolay yolu, veri modelinizi al\u0131p, kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc olu\u015fturan; ancak etkile\u015fimli (interaktif) olmayan bir s\u00fcr\u00fcm olu\u015fturmakt\u0131r. Bu noktada en iyi yakla\u015f\u0131m bu s\u00fcre\u00e7leri birbirinden ay\u0131rmakt\u0131r. \u00c7\u00fcnk\u00fc statik bir versiyonu olu\u015fturmak \u00e7ok fazla yazmay\u0131 ama \u00e7ok az d\u00fc\u015f\u00fcnmeyi gerektirir. Bunun yan\u0131nda etkile\u015fimli (interaktif) versiyonunu yapmak \u00e7ok daha fazla d\u00fc\u015f\u00fcnmeyi ama daha az yazmay\u0131 gerektirir. Neden b\u00f6yle oldu\u011funu g\u00f6rece\u011fiz.</p>\n<p>Veri modelinizi render eden bir statik versiyonu yapmak i\u00e7in, di\u011fer bile\u015fenleri kullanan ve <em>prop\u2019lar</em> arac\u0131l\u0131\u011f\u0131yla veri ileten bile\u015fenler olu\u015fturmak isteyeceksiniz. <em>prop\u2019lar</em> bile\u015fenler aras\u0131nda yukar\u0131dan a\u015fa\u011f\u0131ya veri iletmenin bir yoludur. E\u011fer <em>state</em> konseptine a\u015finaysan\u0131z, bu statik versiyonu olu\u015fturmak i\u00e7in <strong>state\u2019leri hi\u00e7bir \u015fekilde kullanmay\u0131n.</strong> State konsepti sadece etkile\u015fim, yani zaman i\u00e7inde de\u011fi\u015fen verilerin oldu\u011fu durumlar, i\u00e7in ayr\u0131lm\u0131\u015ft\u0131r. Buna, uygulaman\u0131n statik bir s\u00fcr\u00fcm\u00fc oldu\u011fundan, ihtiyac\u0131n\u0131z yoktur.</p>\n<p>Yukar\u0131dan a\u015fa\u011f\u0131ya veya a\u015fa\u011f\u0131dan yukar\u0131ya olu\u015fturabilirsiniz. Di\u011fer bir deyi\u015fle, olu\u015fturmaya hiyerar\u015fide daha yukar\u0131daki (\u00f6rne\u011fin, <code class=\"language-javascript\">FilterableProductTable</code>) veya daha a\u015fa\u011f\u0131daki (<code class=\"language-javascript\">ProductRow</code>) bile\u015fenler ile ba\u015flayabilirsiniz. Daha basit \u00f6rneklerde, yukar\u0131dan a\u015fa\u011f\u0131ya gitmek genellikle daha kolayd\u0131r ve daha b\u00fcy\u00fck projelerde, a\u015fa\u011f\u0131dan yukar\u0131ya gitmek ve de bile\u015fenleri olu\u015fturduk\u00e7a testler yazmak daha kolayd\u0131r.</p>\n<p>Bu ad\u0131m\u0131n sonunda, veri modelinizi olu\u015fturan yeniden kullan\u0131labilir bile\u015fenlerden olu\u015fan bir k\u00fct\u00fcphaneye sahip olacaks\u0131n\u0131z. Bile\u015fenler yaln\u0131zca <code class=\"language-javascript\">render()</code> metotlar\u0131na sahip olacakt\u0131r, \u00e7\u00fcnk\u00fc bu, uygulaman\u0131z\u0131n statik bir s\u00fcr\u00fcm\u00fcd\u00fcr. Hiyerar\u015finin en \u00fcst\u00fcndeki bile\u015fen (<code class=\"language-javascript\">FilterableProductTable</code>) veri modelinizi bir prop olarak al\u0131r. Temel veri modelinizde de\u011fi\u015fiklik yaparsan\u0131z ve tekrar <code class=\"language-javascript\">root.render()</code>\u2018\u0131 \u00e7a\u011f\u0131r\u0131rsan\u0131z, kullan\u0131c\u0131 aray\u00fcz\u00fc g\u00fcncellenecektir. Aray\u00fcz\u00fcn\u00fcz\u00fcn nas\u0131l g\u00fcncellendi\u011fini ve, karma\u015f\u0131k bir \u015fey olmad\u0131\u011f\u0131ndan, nerede de\u011fi\u015fiklik yap\u0131laca\u011f\u0131n\u0131 g\u00f6rmek kolayd\u0131r. React\u2019in <strong>tek y\u00f6nl\u00fc veri ak\u0131\u015f\u0131</strong> (ayr\u0131ca <em>tek y\u00f6nl\u00fc ba\u011flama</em> olarak da bilinir) her \u015feyi mod\u00fcler ve h\u0131zl\u0131 tutar.</p>\n<p>Bu ad\u0131m\u0131 uygulamak i\u00e7in yard\u0131ma ihtiya\u00e7 duyarsan\u0131z, basit\u00e7e <a href=\"/react/\">React Dok\u00fcmanlar\u0131na</a> bak\u0131n.</p>\n<h3 id=\"a-brief-interlude-props-vs-state\"><a class=\"anchor\" href=\"/react/thinking-in-react#a-brief-interlude-props-vs-state\"></a>K\u0131sa bir araya girme: Prop\u2019lar vs State </h3>\n<p>React\u2019ta iki t\u00fcr \u201cmodel\u201d datas\u0131 vard\u0131r: props ve state. Bunlar aras\u0131ndaki fark\u0131 anlamak \u00f6nemlidir. E\u011fer aradaki fark\u0131n ne oldu\u011fundan emin de\u011filseniz <a href=\"/react/state-and-lifecycle\">React Dok\u00fcmanlar\u0131na</a> a g\u00f6z gezdirin. <a href=\"/react/faq-state#what-is-the-difference-between-state-and-props\">SSS: state ve props aras\u0131ndaki farklar nelerdir?</a> k\u0131sm\u0131na da bak\u0131n\u0131z.</p>\n<h2 id=\"step-3-identify-the-minimal-but-complete-representation-of-ui-state\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-3-identify-the-minimal-but-complete-representation-of-ui-state\"></a>Ad\u0131m 3: UI State\u2019inin Minimal (ancak eksiksiz) Temsilini Belirleme </h2>\n<p>E\u011fer bu ad\u0131m\u0131 uygularken yard\u0131ma ihtiyac\u0131n\u0131z olursa <a href=\"/react/getting-started\">Ba\u015flang\u0131\u00e7 rehberine</a> ba\u015fvurabilirsiniz.</p>\n<p>Kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcz\u00fc etkile\u015fimli hale getirmek i\u00e7in, temel veri modelinizde de\u011fi\u015fiklikleri tetikleyebilmeniz gerekir. React bunu <strong>state</strong> ile kolayla\u015ft\u0131rmaktad\u0131r.</p>\n<p>Uygulaman\u0131z\u0131 do\u011fru bir \u015fekilde olu\u015fturmak i\u00e7in, \u00f6ncelikle uygulaman\u0131z\u0131n ihtiya\u00e7 duydu\u011fu minimum de\u011fi\u015fken <code class=\"language-javascript\">state</code> k\u00fcmesini d\u00fc\u015f\u00fcnmeniz gerekir. Burada anahtar kelime <a class=\"external-link\" href=\"https://eksisozluk.com/entry/35405641\"><em>TEK: Tekrar Etme Kendini</em></a> (DRY: <em>Don\u2019t Repeat Yourself</em>) dir.\nUygulaman\u0131z\u0131n ihtiya\u00e7 duydu\u011fu state\u2019in mutlak asgari temsilini belirleyin ve talep \u00fczerine ihtiyac\u0131n\u0131z olan her \u015feyi hesaplay\u0131n. \u00d6rne\u011fin; bir YAPILACAKLAR listesi olu\u015fturuyorsan\u0131z, sadece YAPILACAKLAR listesini tutan bir dizi saklay\u0131n; listedeki madde say\u0131s\u0131 i\u00e7in ayr\u0131 bir state de\u011fi\u015fkeni tutmay\u0131n. Bunun yerine, listedeki madde say\u0131s\u0131n\u0131 render etmek istedi\u011finizde, sadece YAPILACAKLAR dizisinin uzunlu\u011funu al\u0131p kullan\u0131n.</p>\n<p>\u00d6rnek uygulamam\u0131zdaki sahip oldu\u011fumuz t\u00fcm veri par\u00e7alar\u0131na bakal\u0131m:</p>\n<ul>\n<li>Orijinal \u00fcr\u00fcn listesi</li>\n<li>Kullan\u0131c\u0131n\u0131n girdi\u011fi arama metni</li>\n<li>Checkbox\u2019\u0131n de\u011feri</li>\n<li>Filtrelenmi\u015f \u00fcr\u00fcn listesi</li>\n</ul>\n<p>Her birini g\u00f6zden ge\u00e7irelim ve hangisinin state\u2019e dahil oldu\u011funu bulal\u0131m. Bunun i\u00e7in, her veri par\u00e7as\u0131na dair \u00fc\u00e7 soru sorun:</p>\n<ol>\n<li>\u00dcst elemandan prop\u2019lar arac\u0131l\u0131\u011f\u0131yla m\u0131 iletilmi\u015f? \u00d6yleyse state\u2019e ait de\u011fildir.</li>\n<li>Zaman i\u00e7erisinde de\u011fi\u015fiklik g\u00f6stermiyor mu? \u00d6yleyse state\u2019e ait de\u011fildir.</li>\n<li>Bile\u015feninizdeki herhangi ba\u015fka bir state\u2019e veya prop\u2019a g\u00f6re hesaplayabiliyor musunuz? \u00d6yleyse state\u2019e ait de\u011fildir.</li>\n</ol>\n<p><code class=\"language-javascript\">Orijinal \u00fcr\u00fcn listesi</code> prop olarak iletildi\u011fi i\u00e7in state\u2019e ait de\u011fildir. <code class=\"language-javascript\">Arama metni</code> ve <code class=\"language-javascript\">checkbox</code>, zaman i\u00e7erisinde de\u011fi\u015ftikleri ve ba\u015fka bir \u015fey \u00fczerinden hesaplanamad\u0131klar\u0131 i\u00e7in state\u2019e ait gibi duruyorlar. Ve son olarak, <code class=\"language-javascript\">filtrelenmi\u015f \u00fcr\u00fcn listesi</code> de; orijinal \u00fcr\u00fcn listesi, arama metni ve checkbox \u0131n de\u011ferine g\u00f6re hesaplanabilece\u011fi i\u00e7in, state\u2019e ait de\u011fildir.</p>\n<p>Sonu\u00e7 olarak, state\u2019imiz a\u015fa\u011f\u0131daki gibidir:</p>\n<ul>\n<li>Kullan\u0131c\u0131n\u0131n girdi\u011fi arama metni</li>\n<li>Checkbox\u2019\u0131n de\u011feri</li>\n</ul>\n<h2 id=\"step-4-identify-where-your-state-should-live\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-4-identify-where-your-state-should-live\"></a>Ad\u0131m 4: State\u2019inizin Nerede Ya\u015famas\u0131 Gerekti\u011fini Belirleyin </h2>\n<p class=\"codepen\"><a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>'deki <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/qPrNQZ\">React'te D\u00fc\u015f\u00fcnmek: Ad\u0131m 4</a> sayfas\u0131n\u0131 ziyaret edin.</p>\n<p>Evet, uygulama state\u2019inin asgari d\u00fczeydeki setinin ne oldu\u011funu belirledik. \u015eimdi, hangi bile\u015fenin bu state\u2019i de\u011fi\u015ftirdi\u011fini veya <em>sahip oldu\u011funu</em> belirlememiz gerekir.</p>\n<p>Unutmay\u0131n: React\u2019in t\u00fcm olay\u0131, bile\u015fen hiyerar\u015fisinde yukar\u0131dan a\u015fa\u011f\u0131 do\u011fru tek y\u00f6nl\u00fc veri ak\u0131\u015f\u0131d\u0131r. Hangi bile\u015fenin hangi state\u2019e sahip olmas\u0131 gerekti\u011fi hemen belli olmayabilir. <strong>Bu, yeni gelenlerin anlamas\u0131 i\u00e7in en zor k\u0131s\u0131md\u0131r.</strong> Bu y\u00fczden, bunu anlamak i\u00e7in \u015fu ad\u0131mlar\u0131 izleyin:</p>\n<p>Uygulaman\u0131zdaki her state par\u00e7as\u0131 i\u00e7in:</p>\n<ul>\n<li>O state\u2019e g\u00f6re bir \u015feyler render eden her bile\u015feni belirleyin.</li>\n<li>Ortak bir sahip bile\u015fen bulun. (Hiyerar\u015fide, state\u2019e ihtiya\u00e7 duyan b\u00fct\u00fcn bile\u015fenlerin \u00fczerinde bulunan tek bir bile\u015fen)</li>\n<li><em>Ya ortak bir sahip bile\u015fen ya da hiyerar\u015fide daha y\u00fcksekte bulunan bir bile\u015fen</em> state\u2019e sahip olmal\u0131d\u0131r.</li>\n<li>State\u2019e sahip olmas\u0131 mant\u0131kl\u0131 olmayan bir bile\u015fen bulamazsan\u0131z, yaln\u0131zca state\u2019i tutmas\u0131 i\u00e7in yeni bir bile\u015fen olu\u015fturun ve onu hiyerar\u015fide ortak sahip bile\u015feninin \u00fczerindeki bir yere ekleyin.</li>\n</ul>\n<p>\u015eimdi bu stratejiyi uygulamam\u0131z i\u00e7in hayata ge\u00e7irelim:</p>\n<ul>\n<li><code class=\"language-javascript\">ProductTable</code> \u00fcr\u00fcn listesini state\u2019e g\u00f6re filtrelemeli ve <code class=\"language-javascript\">SearchBar</code> arama metnini ve <em>Checkbox</em>\u2018\u0131n durumunu g\u00f6stermelidir.</li>\n<li>Ortak sahip bile\u015fen <code class=\"language-javascript\">FilterableProductTable</code> bile\u015finidir.</li>\n<li>Filtre metninin ve <em>Checkbox</em> de\u011ferininin <code class=\"language-javascript\">FilterableProductTable</code> i\u00e7inde ya\u015famas\u0131 mant\u0131kl\u0131d\u0131r.</li>\n</ul>\n<p>Harika; state\u2019imizin <code class=\"language-javascript\">FilterableProductTable</code> bile\u015feninde ya\u015famas\u0131na karar verdik. \u0130lk olarak, uygulaman\u0131n ba\u015flang\u0131\u00e7 state\u2019ini belirlemek i\u00e7in <code class=\"language-javascript\">this.state = {filterText: '', inStockOnly: false}</code> nesne \u00f6zelli\u011fini <code class=\"language-javascript\">constructor</code>\u2018a ekleyin. Devam\u0131nda, <code class=\"language-javascript\">filterText</code> ve <code class=\"language-javascript\">inStockOnly</code> de\u011ferlerini <code class=\"language-javascript\">ProductTable</code> ve <code class=\"language-javascript\">SearchBar</code> bile\u015fenlerine prop olarak iletin. Son olarak, <code class=\"language-javascript\">ProductTable</code>\u2018daki sat\u0131rlar\u0131 filtrelemek ve form alanlar\u0131n\u0131n de\u011ferlerini <code class=\"language-javascript\">SearchBar</code>\u2018da ayarlamak i\u00e7in bu prop\u2019lar\u0131 kullan\u0131n.</p>\n<p>Uygulaman\u0131z\u0131n nas\u0131l davranaca\u011f\u0131n\u0131 g\u00f6rmeye ba\u015flayabilirsiniz: <code class=\"language-javascript\">filterText</code>\u2018i <code class=\"language-javascript\">ball</code> olarak ayarlay\u0131n ve uygulaman\u0131z\u0131 yenileyin. Veri tablosunun do\u011fru bir \u015fekilde g\u00fcncellendi\u011fini g\u00f6receksiniz.</p>\n<h2 id=\"step-5-add-inverse-data-flow\"><a class=\"anchor\" href=\"/react/thinking-in-react#step-5-add-inverse-data-flow\"></a>Ad\u0131m 5: Ters Veri Ak\u0131\u015f\u0131 Ekleyin </h2>\n<p class=\"codepen\"><a class=\"external-link\" href=\"https://codepen.io\">CodePen</a>'deki <a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/LzWZvb\">React'te D\u00fc\u015f\u00fcnmek: Ad\u0131m 5</a> sayfas\u0131n\u0131 ziyaret edin.</p>\n<p>\u015eimdiye kadar, hiyerar\u015fide <code class=\"language-javascript\">yukar\u0131dan a\u015fa\u011f\u0131</code> akan prop\u2019lar\u0131n ve state\u2019in bir fonksiyonu olarak do\u011fru \u015fekilde i\u015fleyen bir uygulama geli\u015ftirdik. \u015eimdi di\u011fer tarafa do\u011fru akan verileri destekleme zaman\u0131: Hiyerar\u015fide derinlerde bulunan form bile\u015fenlerinin <code class=\"language-javascript\">FilterableProductTable</code>\u2018da state \u2018i g\u00fcncellemesi gerekir.</p>\n<p>React, program\u0131n\u0131z\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 anlamay\u0131 kolayla\u015ft\u0131rmak i\u00e7in bu veri ak\u0131\u015f\u0131n\u0131 a\u00e7\u0131k bir hale getirir, ancak geleneksel iki y\u00f6nl\u00fc (yukar\u0131dan a\u015fa\u011f\u0131 ve a\u015fa\u011f\u0131dan yukar\u0131) veri ak\u0131\u015f\u0131ndan biraz daha fazla yazma gerektirir.</p>\n<p>E\u011fer yukar\u0131daki \u00f6rnekte metin kutusuna yazmay\u0131 ya da kutucu\u011fu i\u015faretlemeyi denedi\u011finiz taktirde, React\u2019in bunu yoksayd\u0131\u011f\u0131n\u0131 g\u00f6receksiniz. Bu kas\u0131tl\u0131 olarak b\u00f6yledir. \u00c7\u00fcnk\u00fc <code class=\"language-javascript\">input</code> un <code class=\"language-javascript\">value</code> prop\u2019unu, her zaman <code class=\"language-javascript\">FilterableProductTable</code> bile\u015feninden gelen <code class=\"language-javascript\">state</code>\u2018e e\u015fit olacak \u015fekilde ayarlad\u0131k.</p>\n<p>Ne olmas\u0131n\u0131 istedi\u011fimizi d\u00fc\u015f\u00fcnelim. Kullan\u0131c\u0131 form\u2019u her de\u011fi\u015ftirdi\u011finde, kullan\u0131c\u0131n\u0131n yapt\u0131\u011f\u0131 de\u011fi\u015fikli\u011fi yans\u0131tacak \u015fekilde state\u2019i g\u00fcncelledi\u011fimizden emin olmak istiyoruz. Bile\u015fenlerin yaln\u0131zca kendi state\u2019lerini g\u00fcncellemesi gerekti\u011fi i\u00e7in, <code class=\"language-javascript\">FilterableProductTable</code> bile\u015feni, <code class=\"language-javascript\">SearchBar</code> bile\u015fenine, state\u2019in her g\u00fcncellenmesinde \u00e7a\u011fr\u0131lacak <code class=\"language-javascript\">callback</code>\u2018ler iletir. Girdilerin (input) <code class=\"language-javascript\">OnChange</code> olay\u0131n\u0131, <code class=\"language-javascript\">SearchBar</code> bile\u015fenini bilgilendirmek i\u00e7in kullanabiliriz. <code class=\"language-javascript\">FilterableProductTable</code> taraf\u0131ndan iletilen callBack\u2019ler <code class=\"language-javascript\">setState()</code>\u2018i \u00e7a\u011f\u0131racak ve uygulama g\u00fcncellenecektir.</p>\n<p>Kar\u0131\u015f\u0131k g\u00f6r\u00fcnmesine ra\u011fmen, asl\u0131nda sadece birka\u00e7 kod sat\u0131r\u0131ndan ibaret. Ve verilerinizin uygulama boyunca nas\u0131l akt\u0131\u011f\u0131 da ger\u00e7ekten \u00e7ok belirgindir.</p>\n<h2 id=\"and-thats-it\"><a class=\"anchor\" href=\"/react/thinking-in-react#and-thats-it\"></a>Ve Bu Kadar </h2>\n<p>Umuyoruz ki bu b\u00f6l\u00fcm, React ile bile\u015fen ve uygulamalar olu\u015ftururken nas\u0131l d\u00fc\u015f\u00fcnmeniz gerekti\u011fi hakk\u0131nda size bir fikir vermi\u015ftir. Normalde al\u0131\u015ft\u0131\u011f\u0131n\u0131zdan biraz daha fazla kod yazman\u0131z gerekebilir. Ancak kodun yaz\u0131ld\u0131\u011f\u0131ndan \u00e7ok daha fazla okundu\u011funu; ve bu mod\u00fcler, a\u00e7\u0131k kodun okumak i\u00e7in olduk\u00e7a kolay oldu\u011funu unutmay\u0131n. B\u00fcy\u00fck bile\u015fen k\u00fct\u00fcphaneleri olu\u015fturmaya ba\u015flad\u0131\u011f\u0131n\u0131zda, bu a\u00e7\u0131kl\u0131k ve mod\u00fclerli\u011fi takdir edeceksiniz ve yazd\u0131\u011f\u0131n\u0131z kodu yeniden kulland\u0131k\u00e7a kod sat\u0131rlar\u0131n\u0131z k\u00fc\u00e7\u00fclmeye ba\u015flayacak. :)</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/thinking-in-react.md\">Edit this page</a></p></div></article>", "path": "/react/thinking-in-react", "nav": ["/react/composition-vs-inheritance", "/react/accessibility"]}]}, {"key": "Geli\u015fmi\u015f K\u0131lavuz", "values": [{"key": "Eri\u015febilirlik", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h2 id=\"why-accessibility\"><a class=\"anchor\" href=\"/react/accessibility#why-accessibility\"></a>Ni\u00e7in Eri\u015filebilirlik? </h2>\n<p>(<a class=\"external-link\" href=\"https://en.wiktionary.org/wiki/a11y\"><strong>a11y</strong></a>) olarak da an\u0131lan web eri\u015filebilirli\u011fi, herkes taraf\u0131ndan kullan\u0131labilir web sitelerinin tasar\u0131m\u0131 ve olu\u015fturulmas\u0131d\u0131r. Eri\u015filebilirlik deste\u011fi, yard\u0131mc\u0131 teknolojinin web sayfalar\u0131n\u0131 yorumlamas\u0131na izin vermek i\u00e7in gereklidir.</p>\n<p>React, s\u0131kl\u0131kla standart HTML tekniklerini kullanarak, tamamen eri\u015filebilir web siteleri olu\u015fturmay\u0131 destekler.</p>\n<h2 id=\"standards-and-guidelines\"><a class=\"anchor\" href=\"/react/accessibility#standards-and-guidelines\"></a>Standartlar ve Y\u00f6nergeler </h2>\n<h3 id=\"wcag\"><a class=\"anchor\" href=\"/react/accessibility#wcag\"></a>WCAG </h3>\n<p><a class=\"external-link\" href=\"https://www.w3.org/WAI/intro/wcag\">Web \u0130\u00e7eri\u011fi Eri\u015filebilirlik Y\u00f6nergeleri</a>, eri\u015filebilir web siteleri olu\u015fturmak i\u00e7in y\u00f6nergeler sa\u011flar.</p>\n<p>A\u015fa\u011f\u0131daki WCAG kontrol listeleri genel bir bak\u0131\u015f sa\u011flar:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.wuhcag.com/wcag-checklist/\">Wuhcag\u2019dan WCAG Kontrol Listesi</a></li>\n<li><a class=\"external-link\" href=\"https://webaim.org/standards/wcag/checklist\">WebAIM\u2019den WCAG Kontrol Listesi</a></li>\n<li><a class=\"external-link\" href=\"https://a11yproject.com/checklist.html\">A11Y Projesi\u2019nden Kontrol Listesi</a></li>\n</ul>\n<h3 id=\"wai-aria\"><a class=\"anchor\" href=\"/react/accessibility#wai-aria\"></a>WAI-ARIA </h3>\n<p><a class=\"external-link\" href=\"https://www.w3.org/WAI/intro/aria\">Web Eri\u015filebilirlik Giri\u015fimi - Eri\u015filebilir Zengin \u0130nternet Uygulamalar\u0131</a> belgesi, tamamen eri\u015filebilir JavaScript widgetleri olu\u015fturmak i\u00e7in teknikler i\u00e7erir.</p>\n<p>T\u00fcm <code class=\"language-javascript\">aria- *</code> HTML \u00f6zelliklerinin, JSX\u2019te tam olarak desteklendi\u011fini unutmay\u0131n. React\u2019teki \u00e7o\u011fu DOM \u00f6zellikleri ve nitelikleri camelCased iken, bu nitelikler d\u00fcz HTML\u2019de oldu\u011fu gibi hyphen-cased \u015feklinde olmal\u0131d\u0131r (kebab-case, lisp-case, ve benzeri olarak da bilinir):</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">aria-label</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>labelText<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">aria-required</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span></span>  <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onchangeHandler<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputValue<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h2 id=\"semantic-html\"><a class=\"anchor\" href=\"/react/accessibility#semantic-html\"></a>Anlamsal HTML </h2>\n<p>Anlamsal HTML, bir web uygulamas\u0131nda eri\u015filebilirli\u011fin temelidir. Web sitelerimizdeki bilginin anlam\u0131n\u0131 peki\u015ftirmek i\u00e7in, \u00e7e\u015fitli HTML \u00f6\u011felerini kullanmak s\u0131kl\u0131kla bize \u00fccretsiz olarak eri\u015filebilirlik sa\u011flayacakt\u0131r.</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">MDN HTML \u00f6\u011feleri referans\u0131</a></li>\n</ul>\n<p>Bazen, React kodumuzun \u00e7al\u0131\u015fmas\u0131 i\u00e7in JSX\u2019imize <code class=\"language-javascript\">&lt;div&gt;</code> \u00f6\u011feleri ekledi\u011fimizde, HTML\u2019in anlamsall\u0131\u011f\u0131n\u0131 bozar\u0131z, \u00f6zellikle listeler (<code class=\"language-javascript\">&lt;ol&gt;</code>, <code class=\"language-javascript\">&lt;ul&gt;</code> ve <code class=\"language-javascript\">&lt;dl&gt;</code>), ve HTML <code class=\"language-javascript\">&lt;table&gt;</code> ile \u00e7al\u0131\u015f\u0131rken.\nBu durumlarda, \u00e7oklu \u00f6\u011feleri gruplamak i\u00e7in <a href=\"/react/fragments\">React Fragmentleri</a> kullanmay\u0131 tercih etmelisiniz.</p>\n<p>\u00d6rne\u011fin,</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Fragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">item</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ba\u015fka herhangi bir \u00f6\u011fe t\u00fcr\u00fcnde yapaca\u011f\u0131n\u0131z gibi, bir \u00f6\u011fe koleksiyonunu bir fragment dizisine (array\u2019ine) e\u015fleyebilirsiniz :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token comment\">// Kolleksiyonlar\u0131 e\u015fle\u015ftirirken, fragmentler de bir `anahtar` prop'a sahip olmal\u0131d\u0131r. </span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fragment etiketinde herhangi bir prop\u2019a ihtiyac\u0131n\u0131z olmad\u0131\u011f\u0131nda, e\u011fer ara\u00e7 gere\u00e7leriniz onu destekliyorsa <a href=\"/react/fragments#short-syntax\">k\u0131sa s\u00f6zdizimi(syntax)</a>\u2018ni kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Daha fazla bilgi i\u00e7in, <a href=\"/react/fragments\">Fragmentler dok\u00fcmantasyonu</a>\u2018na bak\u0131n\u0131z.</p>\n<h2 id=\"accessible-forms\"><a class=\"anchor\" href=\"/react/accessibility#accessible-forms\"></a>Eri\u015filebilir Formlar </h2>\n<h3 id=\"labeling\"><a class=\"anchor\" href=\"/react/accessibility#labeling\"></a>Etiketlemek </h3>\n<p><code class=\"language-javascript\">&lt;input&gt;</code> ve <code class=\"language-javascript\">&lt;textarea&gt;</code> gibi her HTML form kontrolunun (form control), eri\u015filebilir halde etiketlenmi\u015f olmas\u0131 gerekir. Ekran okuyucular\u0131 tarafndan da ortaya \u00e7\u0131kan, a\u00e7\u0131klay\u0131c\u0131 etiketler sa\u011flamam\u0131z gerekir.</p>\n<p>A\u015fa\u011f\u0131daki kaynaklar bize bunun nas\u0131l yap\u0131laca\u011f\u0131n\u0131 g\u00f6sterir:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/WAI/tutorials/forms/labels/\">W3C bize \u00f6\u011felerin nas\u0131l etiketlenece\u011fini g\u00f6sterir</a></li>\n<li><a class=\"external-link\" href=\"https://webaim.org/techniques/forms/controls\">WebAIM bize \u00f6\u011felerin nas\u0131l etiketlenece\u011fini g\u00f6sterir</a></li>\n<li><a class=\"external-link\" href=\"https://www.paciellogroup.com/blog/2017/04/what-is-an-accessible-name/\">Paciello Group eri\u015filebilir isimleri a\u00e7\u0131klar</a></li>\n</ul>\n<p>Bu standart HTML uygulamalar\u0131 do\u011frudan React\u2019te kullan\u0131labilmesine ra\u011fmen, <code class=\"language-javascript\">for</code> niteli\u011finin JSX\u2019de <code class=\"language-javascript\">htmlFor</code> olarak yaz\u0131ld\u0131\u011f\u0131na dikkat edin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namedInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Name:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>namedInput<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h3 id=\"notifying-the-user-of-errors\"><a class=\"anchor\" href=\"/react/accessibility#notifying-the-user-of-errors\"></a>Kullan\u0131c\u0131 hatalar\u0131n\u0131 bildirmek </h3>\n<p>Hata durumlar\u0131n\u0131n t\u00fcm kullan\u0131c\u0131lar taraf\u0131ndan anla\u015f\u0131lm\u0131\u015f olmas\u0131 gerekir.\nA\u015fa\u011f\u0131daki link, hata metinlerinin de ekran okuyucular\u0131 taraf\u0131ndan nas\u0131l alg\u0131land\u0131\u011f\u0131n\u0131 g\u00f6sterir:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/WAI/tutorials/forms/notifications/\">W3C, kullan\u0131c\u0131 bildirimlerini g\u00f6sterir</a></li>\n<li><a class=\"external-link\" href=\"https://webaim.org/techniques/formvalidation/\">WebAIM, form do\u011frulamaya bakar</a></li>\n</ul>\n<h2 id=\"focus-control\"><a class=\"anchor\" href=\"/react/accessibility#focus-control\"></a>Odak Kontrol\u00fc </h2>\n<p>Web uygulaman\u0131z\u0131n yaln\u0131zca klavye ile tam olarak \u00e7al\u0131\u015ft\u0131r\u0131labildi\u011finden emin olun:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/techniques/keyboard/\">WebAIM, klavye eri\u015filebilirli\u011fi hakk\u0131nda konu\u015fur</a></li>\n</ul>\n<h3 id=\"keyboard-focus-and-focus-outline\"><a class=\"anchor\" href=\"/react/accessibility#keyboard-focus-and-focus-outline\"></a>Klavye oda\u011f\u0131 ve odak ana hatlar\u0131 </h3>\n<p>Klavye oda\u011f\u0131, klavyeden giri\u015fi kabul etmek i\u00e7in se\u00e7ilen DOM\u2019daki varolan \u00f6\u011feye ba\u015fvurur. Bunu her yerde a\u015fa\u011f\u0131daki resimde g\u00f6sterilene benzer bir odak anahat olarak g\u00f6r\u00fcr\u00fcz:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/dec0e6bcc1f882baf76ebc860d4f04e5/4fcfe/keyboard-focus.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/dec0e6bcc1f882baf76ebc860d4f04e5/4fcfe/keyboard-focus.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>E\u011fer onu ba\u015fka bir odak anahat uygulamas\u0131yla de\u011fi\u015ftiriyorsan\u0131z, sadece bu anahatt\u0131 kald\u0131ran CSS\u2019ini kullan\u0131n.</p>\n<h3 id=\"mechanisms-to-skip-to-desired-content\"><a class=\"anchor\" href=\"/react/accessibility#mechanisms-to-skip-to-desired-content\"></a>\u0130stenilen i\u00e7eri\u011fe atlama mekanizmalar\u0131</h3>\n<p>Klavyede gezinmeye yard\u0131mc\u0131 oldu\u011fundan ve h\u0131zland\u0131rd\u0131\u011f\u0131ndan, kullan\u0131c\u0131lar\u0131n uygulaman\u0131zdaki ge\u00e7mi\u015f navigasyon b\u00f6l\u00fcmlerini atlamas\u0131na izin veren bir mekanizma sa\u011flay\u0131n.</p>\n<p>AtlamaLinkleri (Skiplinks) veya Navigasyon Linklerini Atlamak (Skip Navigation Links), klavye kullan\u0131c\u0131lar\u0131, sadece sayfa ile etkile\u015fimde bulunduklar\u0131 zaman g\u00f6r\u00fcn\u00fcr olan gizli navigasyon linkleridir. Bunlar\u0131n i\u00e7 sayfa ba\u011flant\u0131lar\u0131 ve baz\u0131 stillerle uygulanmas\u0131 \u00e7ok kolayd\u0131r:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/techniques/skipnav/\">WebAIM - Navigasyon Linklerini Atlamak</a></li>\n</ul>\n<p>Yard\u0131mc\u0131 teknoloji, kullan\u0131c\u0131n\u0131n bu b\u00f6l\u00fcmlere \u00e7abuk bir \u015fekilde gezinmesine olanak tan\u0131d\u0131\u011f\u0131ndan, sayfa b\u00f6l\u00fcmlerini ay\u0131rmak i\u00e7in <code class=\"language-javascript\">&lt;main&gt;</code> ve <code class=\"language-javascript\">&lt;aside&gt;</code> gibi belirgin i\u015faret (landmark) \u00f6\u011feleri ve rolleri de kullan\u0131n.</p>\n<p>Eri\u015filebilirli\u011fi geli\u015ftirmek i\u00e7in, bu \u00f6\u011felerin kullan\u0131m\u0131 hakk\u0131nda daha fazlas\u0131n\u0131 buradan okuyun</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.scottohara.me/blog/2018/03/03/landmarks.html\">Eri\u015filebilir Belirgin \u0130\u015faretler</a></li>\n</ul>\n<h3 id=\"programmatically-managing-focus\"><a class=\"anchor\" href=\"/react/accessibility#programmatically-managing-focus\"></a>Programlayarak oda\u011f\u0131 y\u00f6netmek </h3>\n<p>React uygulamalar\u0131m\u0131z, \u00e7al\u0131\u015fma s\u00fcresinde, HTML DOM\u2019u de\u011fi\u015ftirir, bazen klavye oda\u011f\u0131n\u0131n kaybolmas\u0131na veya beklenmedik bir \u00f6\u011feye ayarlanmas\u0131na yol a\u00e7ar. Bunu d\u00fczeltmek amac\u0131yla, klavye oda\u011f\u0131n\u0131 programl\u0131 olarak do\u011fru y\u00f6nde itelemek gerekir. \u00d6rne\u011fin, modal penceresi kapat\u0131ld\u0131ktan sonra, bir modal penceresi a\u00e7an bir butona klavye oda\u011f\u0131n\u0131 s\u0131f\u0131rlatmak.</p>\n<p>MDN Web Dok\u00fcmanlar\u0131 buna bakar ve <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\">gezinilebilir-klavye JavaScript widgetleri</a>\u2018ni nas\u0131l in\u015fa edebildi\u011fimizi a\u00e7\u0131klar.</p>\n<p>React\u2019te oda\u011f\u0131 ayarlamak i\u00e7in <a href=\"/react/refs-and-the-dom\">DOM \u00f6\u011felerine Ref\u2019ler</a>\u2018i kullanabiliriz.</p>\n<p>Bunu kullanarak, \u00f6ncelikle, bir bile\u015fen s\u0131n\u0131f\u0131n\u0131n JSX\u2019indeki bir \u00f6\u011feye bir ref olu\u015ftururuz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// textInput DOM \u00f6\u011fesini depolamak i\u00e7in bir ref olu\u015fturun</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// text input DOM'a bir referans depolamak i\u00e7in `ref` callback'i (geri \u00e7a\u011fr\u0131) kullan\u0131n</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// bir instance alan\u0131ndaki \u00f6\u011fe (\u00f6rne\u011fin, this.textInput).</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span></span>      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Daha sonra, gerekti\u011finde bile\u015fenimizde onu ba\u015fka bir yere odaklayabiliriz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// A\u00e7\u0131k bir \u015fekilde, i\u015flenmemi\u015f DOM API'\u0131 kullanarak metin giri\u015fine odaklan\u0131n</span>\n  <span class=\"token comment\">// Not: DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc almak i\u00e7in \"current\"e eri\u015fiyoruz</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bazen bir \u00fcst bile\u015fenin, bir alt bile\u015fendeki bir \u00f6\u011feye oda\u011f\u0131n\u0131n ayarlanmas\u0131 gerekir. Bunu <a href=\"/react/refs-and-the-dom#exposing-dom-refs-to-parent-components\">DOM ref\u2019lerini \u00fcst bile\u015fenler de ortaya \u00e7\u0131kartarak</a>, \u00fcst \u00f6\u011fenin ref\u2019ini alt \u00f6\u011fenin DOM d\u00fc\u011f\u00fcm\u00fcne ileten alt bile\u015fen \u00fczerindeki \u00f6zel bir prop yoluyla yapabiliriz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span> <span class=\"token attr-name\">inputRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Simdi gerekti\u011finde oda\u011f\u0131 ayarlayabilirsiniz.</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bile\u015fenleri geni\u015fletmek i\u00e7in bir <a href=\"/react/higher-order-components\">HOC</a> kullan\u0131rken, React\u2019in <code class=\"language-javascript\">forwardRef</code> fonksiyonu kullan\u0131larak sar\u0131lm\u0131\u015f bile\u015fene <a href=\"/react/forwarding-refs\">ref\u2019i iletmesi</a> \u00f6nerilir. E\u011fer \u00fc\u00e7\u00fcnc\u00fc bir taraf HOC, ref iletmeyi uygulamazsa, yukar\u0131daki \u015fablon yine de bir geri \u00e7ekilme olarak kullan\u0131labilir.</p>\n<p><a class=\"external-link\" href=\"https://github.com/davidtheclark/react-aria-modal\">react-aria-modal</a>, harika bir odak y\u00f6netimi \u00f6rne\u011fidir. Bu, tamamen eri\u015filebilir bir modal penceresinin g\u00f6receli olarak nadir bir \u00f6rne\u011fidir.<br/>\nSadece ilk oda\u011f\u0131 iptal butonuna ayarlamak (klavye kullan\u0131c\u0131s\u0131n\u0131n ba\u015far\u0131l\u0131 eylemi yanl\u0131\u015fl\u0131kla etkinle\u015ftirmesini engeller) ve klavye oda\u011f\u0131n\u0131 modal i\u00e7inde hapsetmekle kalmaz, onu ba\u015flang\u0131\u00e7ta modal\u0131 tetikleyen \u00f6\u011feye geri odaklanarak s\u0131f\u0131rlar. </p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu \u00e7ok \u00f6nemli bir eri\u015filebilirlik \u00f6zelli\u011fi iken, adilce kullan\u0131lmas\u0131 da gereken bir tekniktir. Nas\u0131l yap\u0131laca\u011f\u0131n\u0131 tahmin etmek i\u00e7in de\u011fil, rahats\u0131z edildi\u011finde klavye odak ak\u0131\u015f\u0131n\u0131 onarmak i\u00e7in kullan\u0131n.\nkullan\u0131c\u0131lar uygulamalar\u0131 kullanmak ister.</p>\n</div>\n<h2 id=\"mouse-and-pointer-events\"><a class=\"anchor\" href=\"/react/accessibility#mouse-and-pointer-events\"></a>Fare ve imle\u00e7 olaylar\u0131 </h2>\n<p>Bir fare veya imle\u00e7 olay\u0131 arac\u0131l\u0131\u011f\u0131yla a\u00e7\u0131\u011fa \u00e7\u0131kan t\u00fcm fonksiyonlar\u0131n yaln\u0131zca klavye kullan\u0131larak da eri\u015filebildi\u011finden emin olun. Sadece imle\u00e7 cihaz\u0131na ba\u011fl\u0131 olarak, klavye kullan\u0131c\u0131lar\u0131 uygulaman\u0131z\u0131n kullan\u0131lamayaca\u011f\u0131 bir\u00e7ok duruma y\u00f6nlendirilecektir.</p>\n<p>Bunu g\u00f6stermek i\u00e7in, t\u0131klama olaylar\u0131n\u0131n sebep oldu\u011fu bozuk eri\u015filebilirli\u011fin verimli bir \u00f6rne\u011fine bakal\u0131m. Bu, bir kullan\u0131c\u0131n\u0131n \u00f6\u011fenin d\u0131\u015f\u0131na t\u0131klayarak, bir anda a\u00e7\u0131lan pencereyi (popover) engelledi\u011fi d\u0131\u015f t\u0131klama \u015fablonudur.</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//5523b05b22210c5a2fa0bd1f01339cb3/outerclick-with-mouse.gif\">Image link</a>\n<p>Bu genellikle popover\u2019\u0131 kapatan <code class=\"language-javascript\">window</code> nesnesine bir <code class=\"language-javascript\">click</code> olay\u0131n\u0131n ba\u011flanarak uygulanmas\u0131d\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">OuterClickExample</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickOutsideHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickOutsideHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>currentState<span class=\"token punctuation\">.</span>isOpen\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onClickOutsideHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleContainer<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Select an option</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 3</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu fare gibi imle\u00e7li cihaz kullanan kullan\u0131c\u0131lar i\u00e7in iyi \u00e7al\u0131\u015fabilir. Ama bunun tek olarak klavye ile \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131, sonraki \u00f6\u011feye sekme yap\u0131ld\u0131\u011f\u0131nda bozuk fonksiyonelli\u011fe yol a\u00e7ar, \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">window</code> nesnesi asla <code class=\"language-javascript\">click</code> olay\u0131n\u0131 almaz. Bu, kullan\u0131c\u0131lar\u0131n uygulaman\u0131z\u0131 kullanmas\u0131n\u0131 engelleyen belirsiz fonksiyonellige yol a\u00e7abilir. </p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//eca0ca825c8c5e2aa609cee72ef47e27/outerclick-with-keyboard.gif\">Image link</a>\n<p>Bunun yerine <code class=\"language-javascript\">onBlur</code> ve <code class=\"language-javascript\">onFocus</code> gibi, ayn\u0131 fonksiyonellik, uygun olay y\u00f6neticilerini kullanarak ula\u015f\u0131labilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BlurExample</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBlurHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onBlurHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onFocusHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onFocusHandler</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>currentState<span class=\"token punctuation\">.</span>isOpen\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bir sonraki t\u0131klamada, setTimeout kullanarak a\u00e7\u0131l\u0131r pencereyi (popover) kapat\u0131yoruz.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bu gereklidir \u00e7\u00fcnk\u00fc \u00f6nce kontrol etmemiz gerekiyor, e\u011fer</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u00f6\u011fenin ba\u015fka bir alt \u00f6\u011fesine odaklan\u0131lm\u0131\u015fsa, </span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// bulan\u0131kl\u0131k olay\u0131, yeni odak olay\u0131ndan \u00f6nce tetiklendi\u011fi.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onBlurHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">isOpen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bir alt \u00f6\u011feye odaklan\u0131l\u0131rsa, a\u00e7\u0131l\u0131r pencereyi (popover) kapatmay\u0131n</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">onFocusHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timeOutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// React bulan\u0131kl\u0131\u011f\u0131 k\u00f6p\u00fcrterek ve</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// olaylar\u0131 \u00fcst \u00f6\u011feye odaklayarak bize yard\u0131mc\u0131 olur</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onBlur</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBlurHandler<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">           <span class=\"token attr-name\">onFocus</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onFocusHandler<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickHandler<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">aria-haspopup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">aria-expanded</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Select an option</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Option 3</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu kod, i\u015flevselli\u011fi hem imlece hem de klavye kullan\u0131c\u0131lar\u0131na sunar. Ekran-okuyucu kullan\u0131c\u0131lar\u0131n\u0131 desteklemek i\u00e7in eklenen <code class=\"language-javascript\">aria-*</code> prop\u2019lar\u0131na da dikkat edin. Basitlik ad\u0131na, a\u00e7\u0131l\u0131r pencere (popover) se\u00e7eneklerinin <code class=\"language-javascript\">arrow key</code> etkile\u015fimini etkinle\u015ftirmek i\u00e7in klavye olaylar\u0131 uygulanmam\u0131\u015ft\u0131r.</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//28ce2067489843caf05fe7ce22494542/blur-popover-close.gif\">Image link</a>\n<p>Bu, sadece imle\u00e7 ve fare olaylar\u0131na ba\u011fl\u0131 olan klavye kullan\u0131c\u0131lar\u0131 i\u00e7in, fonksiyonelli\u011fin bozuldu\u011fu bir\u00e7ok duruma bir \u00f6rnektir. Daima klavye ile test etmek, derhal klavyeye duyarl\u0131 olay y\u00f6neticilerini kullanarak d\u00fczeltilmi\u015f olabilen sorunlu b\u00f6lgeleri vurgular.</p>\n<h2 id=\"more-complex-widgets\"><a class=\"anchor\" href=\"/react/accessibility#more-complex-widgets\"></a>Daha Karma\u015f\u0131k Widgetler </h2>\n<p>Daha karma\u015f\u0131k bir kullan\u0131c\u0131 deneyimi, daha az eri\u015filebilir demek de\u011fildir. Eri\u015filebilirlik en kolay \u015fekilde m\u00fcmk\u00fcn olabildi\u011fince HTML\u2019ye yak\u0131n kodlama ile ula\u015f\u0131labilir iken, en karma\u015f\u0131k widget bile eri\u015filebilir \u015fekilde kodlanm\u0131\u015f olabilir.</p>\n<p>Burada <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria/#states_and_properties\">ARIA Durumlar\u0131 ve \u00d6zellikleri</a> gibi <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria/#roles\">ARIA Rolleri</a>\u2018nin bilgisine gereksinim duyar\u0131z.\nBunlar JSX\u2019te tamamen desteklenmi\u015f ve tamamen eri\u015filebilir, y\u00fcksek dereceli fonksiyonel React bile\u015fenleri in\u015fa etmemize imkan veren HTML nitelikleriyle dolu ara\u00e7 kutular\u0131d\u0131r.</p>\n<p>Her \u00e7e\u015fit widget \u00f6\u011fesi t\u00fcr\u00fcn\u00fcn belirli bir tasar\u0131m deseni vard\u0131r ve hem kullan\u0131c\u0131lar hem de kullan\u0131c\u0131 ajanslar\u0131 gibi olanlar taraf\u0131ndan, belirli bir \u015fekilde fonksiyon g\u00f6stermesi beklenir:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria-practices/#aria_ex\">WAI-ARIA Yazarl\u0131k Pratikleri - Tasar\u0131m Desenleri ve Widget\u2019lar</a></li>\n<li><a class=\"external-link\" href=\"https://heydonworks.com/article/practical-aria-examples/\">Heydon Pickering - ARIA \u00d6rnekleri</a></li>\n<li><a class=\"external-link\" href=\"https://inclusive-components.design/\">Kapsay\u0131c\u0131 Bile\u015fenler</a></li>\n</ul>\n<h2 id=\"other-points-for-consideration\"><a class=\"anchor\" href=\"/react/accessibility#other-points-for-consideration\"></a>D\u00fc\u015f\u00fcn\u00fclmesi Gereken Di\u011fer Hususlar </h2>\n<h3 id=\"setting-the-language\"><a class=\"anchor\" href=\"/react/accessibility#setting-the-language\"></a>Dili ayarlamak </h3>\n<p>Ekran okuyucu yaz\u0131l\u0131m\u0131, do\u011fru ses ayarlar\u0131n\u0131 se\u00e7mek i\u00e7in bunu kulland\u0131\u011f\u0131ndan, sayfa metinlerinin insan dilini belirtin:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/techniques/screenreader/#language\">WebAIM - Dok\u00fcmantasyon Dili</a></li>\n</ul>\n<h3 id=\"setting-the-document-title\"><a class=\"anchor\" href=\"/react/accessibility#setting-the-document-title\"></a>Dok\u00fcman ba\u015fl\u0131\u011f\u0131n\u0131 ayarlamak </h3>\n<p>Dok\u00fcman\u0131n <code class=\"language-javascript\">&lt;title&gt;</code>\u2018\u0131n\u0131 mevcut sayfa i\u00e7eri\u011fini do\u011fru \u015fekilde tan\u0131mlayarak ayarlay\u0131n, \u00e7\u00fcnk\u00fc bu, kullan\u0131c\u0131n\u0131n mevcut sayfa i\u00e7eri\u011finden emin olmas\u0131n\u0131 sa\u011flar:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html\">WCAG - Dok\u00fcman Ba\u015fl\u0131\u011f\u0131 Gereksinimini Anlamak</a></li>\n</ul>\n<p>Bunu React\u2019te <a class=\"external-link\" href=\"https://github.com/gaearon/react-document-title\">React Dok\u00fcman Ba\u015fl\u0131\u011f\u0131 Bile\u015feni</a>\u2018ni kullanarak ayarlayabiliriz.</p>\n<h3 id=\"color-contrast\"><a class=\"anchor\" href=\"/react/accessibility#color-contrast\"></a>Renk Kontrast\u0131 </h3>\n<p>G\u00f6rme yetisi k\u0131s\u0131tl\u0131 kullan\u0131c\u0131lar taraf\u0131ndan, maksimum d\u00fczeyde okunabilmesi i\u00e7in web sitenizdeki t\u00fcm okunabilir metinlerin yeterli renk kontrast\u0131na sahip oldu\u011fundan emin olun:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\">WCAG - Renk Kontrast\u0131 Gereksinimini Anlama</a></li>\n<li><a class=\"external-link\" href=\"https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/\">Renk Kontrast\u0131 Hakk\u0131ndaki Her \u015eey ve Onu Neden Yeniden D\u00fc\u015f\u00fcnmelisiniz</a></li>\n<li><a class=\"external-link\" href=\"https://a11yproject.com/posts/what-is-color-contrast/\">A11yProjesi - Renk Kontrast\u0131 Nedir</a></li>\n</ul>\n<p>Web sitenizdeki t\u00fcm durumlar i\u00e7in uygun renk kombinasyonlar\u0131n\u0131 manuel olarak hesaplamak yorucu olabilir. \u00d6yleyse, bunun yerine <a class=\"external-link\" href=\"https://colorable.jxnblk.com/\">Colorable ile t\u00fcm eri\u015filebilir bir renk paletini hesaplay\u0131n</a>.</p>\n<p>A\u015fa\u011f\u0131da belirtilen hem aXe hem de WAVE ara\u00e7lar\u0131 renk kontrast testlerini de i\u00e7erir ve kontrast hatalar\u0131n\u0131 rapor edecektir. </p>\n<p>Kontrast testi becerilerinizi geni\u015fletmek istiyorsan\u0131z, bu ara\u00e7lar\u0131 kullanabilirsiniz:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/resources/contrastchecker/\">WebAIM - Renk Kontrast\u0131 Denetleyicisi</a></li>\n<li><a class=\"external-link\" href=\"https://www.paciellogroup.com/resources/contrastanalyser/\">The Paciello Group - Renk Kontrast\u0131 \u00c7\u00f6z\u00fcmleyicisi</a></li>\n</ul>\n<h2 id=\"development-and-testing-tools\"><a class=\"anchor\" href=\"/react/accessibility#development-and-testing-tools\"></a>Geli\u015ftirme ve Test Etme Ara\u00e7lar\u0131 </h2>\n<p>Eri\u015filebilir web uygulamalar\u0131n\u0131n olu\u015fturulmas\u0131na yard\u0131mc\u0131 olmak i\u00e7in kullanabilece\u011fimiz bir \u00e7ok ara\u00e7 vard\u0131r.</p>\n<h3 id=\"the-keyboard\"><a class=\"anchor\" href=\"/react/accessibility#the-keyboard\"></a>Klavye </h3>\n<p>\u015eimdiye kadar en kolay ve ayn\u0131 zamanda en \u00f6nemli kontroller, t\u00fcm websitesinin sadece klavye ile ula\u015falabilir ve kullan\u0131labilir oldu\u011funu test etmektir. Bunu \u015fu \u015fekilde yap\u0131n:</p>\n<ol>\n<li>Farenizin ba\u011flant\u0131s\u0131n\u0131 kesmek.</li>\n<li>G\u00f6zden ge\u00e7irmek icin <code class=\"language-javascript\">Tab</code> ve <code class=\"language-javascript\">Shift+Tab</code> kullanmak.</li>\n<li>\u00d6\u011feleri etkinle\u015ftirmek i\u00e7in <code class=\"language-javascript\">Enter</code>\u2018i kullanmak</li>\n<li>Gerekti\u011finde, men\u00fcler ve a\u015fa\u011f\u0131 do\u011fru a\u00e7\u0131lan (dropdown) men\u00fcler gibi, baz\u0131 \u00f6\u011felerle etkile\u015fim kurmak i\u00e7in klavye ok tu\u015flar\u0131n\u0131z\u0131 kullanmak.</li>\n</ol>\n<h3 id=\"development-assistance\"><a class=\"anchor\" href=\"/react/accessibility#development-assistance\"></a>Geli\u015ftirme asistan\u0131 </h3>\n<p>Baz\u0131 eri\u015filebilirlik \u00f6zelliklerini do\u011frudan JSX kodumuzda kontrol edebiliriz.\nGenellikle, ARIA rolleri, durumlar\u0131 ve \u00f6zellikleri i\u00e7in Intellisense kontrolleri, JSX uyumlu IDE (Integrated Development Environment)\u2018lerde zaten sa\u011flanm\u0131\u015ft\u0131r. A\u015fa\u011f\u0131daki araca da eri\u015fimimiz vardir: </p>\n<h4 id=\"eslint-plugin-jsx-a11y\"><a class=\"anchor\" href=\"/react/accessibility#eslint-plugin-jsx-a11y\"></a>eslint-plugin-jsx-a11y </h4>\n<p>ESLint i\u00e7in <a class=\"external-link\" href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y\">eslint-plugin-jsx-a11y</a> eklentisi, JSX\u2019inizdeki eri\u015filebilirlik sorunlar\u0131 ile ilgili AST linting geri bildirimini sa\u011flar. Bir \u00e7ok IDE, bu bulgular\u0131 do\u011frudan kod analizi ve kaynak kodu pencereleri ile birlikte kullanman\u0131za izin verir.</p>\n<p><a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a>, bir kural alt k\u00fcmesinin etkinle\u015ftirildi\u011fi bu eklentiye sahiptir. Daha da fazla eri\u015filebilirlik kurallar\u0131n\u0131 etkinle\u015ftirmek istiyorsan\u0131z, bu i\u00e7erikle projenizin root (k\u00f6k) dizininde bir <code class=\"language-javascript\">.eslintrc</code> dosyas\u0131 olu\u015fturabilirsiniz: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsxon\"><code class=\"language-javascript\">{\n  \"extends\": [\"react-app\", \"plugin:jsx-a11y/recommended\"],\n  \"plugins\": [\"jsx-a11y\"]\n}</code></pre></div>\n<h3 id=\"testing-accessibility-in-the-browser\"><a class=\"anchor\" href=\"/react/accessibility#testing-accessibility-in-the-browser\"></a>Taray\u0131c\u0131da eri\u015filebilirli\u011fi test etme </h3>\n<p>Taray\u0131c\u0131n\u0131zda web sayfalar\u0131ndaki eri\u015filebilirlik denetimlerini \u00e7al\u0131\u015ft\u0131rabilen bir dizi ara\u00e7lar vard\u0131r. Onlar yaln\u0131zca HTML\u2019nizin teknik eri\u015filebilirli\u011fini test edebildi\u011fi i\u00e7in, l\u00fctfen onlar\u0131 burada belirtilen di\u011fer eri\u015filebilirlik kontrolleriyle birlikte kullan\u0131n.</p>\n<h4 id=\"axe-axe-core-and-react-axe\"><a class=\"anchor\" href=\"/react/accessibility#axe-axe-core-and-react-axe\"></a>aXe, aXe-core ve react-axe </h4>\n<p>Deque Systemleri uygulamalar\u0131n\u0131z\u0131n otomatik ve u\u00e7tan-u\u00e7a (end-to-end) eri\u015filebilirlik testleri i\u00e7in <a class=\"external-link\" href=\"https://github.com/dequelabs/axe-core\">aXe-core</a> sunar. Bu mod\u00fcl Selenium i\u00e7in entegrasyonlar\u0131 i\u00e7erir.</p>\n<p><a class=\"external-link\" href=\"https://www.deque.com/products/axe/\">Eri\u015filebilirlik Motoru</a> veya aXe, <code class=\"language-javascript\">aXe-core</code> \u00fczerine in\u015fa edilmi\u015f bir eri\u015filebilirlik denet\u00e7isi taray\u0131c\u0131 uzant\u0131s\u0131.</p>\n<p>Geli\u015ftirme ve hata ay\u0131klama s\u0131ras\u0131nda, bu eri\u015filebilirlik bulgular\u0131n\u0131 do\u011frudan konsola bildirmek i\u00e7in <a class=\"external-link\" href=\"https://github.com/dequelabs/axe-core-npm/tree/develop/packages/react\">@axe-core/react</a> mod\u00fcl\u00fcn\u00fc de kullanabilirsiniz.</p>\n<h4 id=\"webaim-wave\"><a class=\"anchor\" href=\"/react/accessibility#webaim-wave\"></a>WebAIM WAVE </h4>\n<p><a class=\"external-link\" href=\"https://wave.webaim.org/extension/\">Web Eri\u015filebilirlik De\u011ferlendirme Arac\u0131</a>\nba\u015fka bir eri\u015filebilirlik taray\u0131c\u0131 uzant\u0131s\u0131d\u0131r.</p>\n<h4 id=\"accessibility-inspectors-and-the-accessibility-tree\"><a class=\"anchor\" href=\"/react/accessibility#accessibility-inspectors-and-the-accessibility-tree\"></a>Eri\u015filebilirlik Denet\u00e7ileri ve Eri\u015filebilirlik A\u011fac\u0131 </h4>\n<p><a class=\"external-link\" href=\"https://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/\">Eri\u015filebilirlik A\u011fac\u0131</a>, ekran okuyucular\u0131 gibi yard\u0131mc\u0131 teknolojilere maruz b\u0131rak\u0131lm\u0131\u015f olmas\u0131 gereken, her DOM \u00f6\u011fesi i\u00e7in eri\u015filebilir nesneleri i\u00e7eren DOM a\u011fac\u0131n\u0131n alt k\u00fcmesidir.</p>\n<p>Baz\u0131 taray\u0131c\u0131larda, eri\u015filebilirlik a\u011fac\u0131ndaki her \u00f6\u011fe i\u00e7in eri\u015filebilirlik bilgilerini kolayca g\u00f6r\u00fcnt\u00fcleyebiliriz:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Tools/Accessibility_inspector\">Firefox\u2019da Eri\u015filebilirlik Denet\u00e7isini Kullanmak</a></li>\n<li><a class=\"external-link\" href=\"https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#pane\">Chrome\u2019da Eri\u015filebilirlik Denet\u00e7isini Kullanmak</a></li>\n<li><a class=\"external-link\" href=\"https://developer.apple.com/library/content/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html\">OS X Safari\u2019de Eri\u015filebilirlik Denet\u00e7isini Kullanmak</a></li>\n</ul>\n<h3 id=\"screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#screen-readers\"></a>Ekran Okuyucular\u0131 </h3>\n<p>Bir ekran okuyucuyla test etmek, eri\u015filebilirlik testlerinizin bir par\u00e7as\u0131n\u0131 olu\u015fturmal\u0131d\u0131r.</p>\n<p>Taray\u0131c\u0131 / ekran okuyucu kombinasyonlar\u0131n\u0131n \u00f6nemli oldu\u011funu l\u00fctfen unutmay\u0131n. Uygulaman\u0131z\u0131, se\u00e7ti\u011finiz ekran okuyucuya en uygun taray\u0131c\u0131da test etmeniz \u00f6nerilir. </p>\n<h3 id=\"commonly-used-screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#commonly-used-screen-readers\"></a>Yayg\u0131n Kullan\u0131lan Ekran Okuyucular\u0131 </h3>\n<h4 id=\"nvda-in-firefox\"><a class=\"anchor\" href=\"/react/accessibility#nvda-in-firefox\"></a>Firefox \u0130\u00e7indeki NVDA </h4>\n<p><a class=\"external-link\" href=\"https://www.nvaccess.org/\">G\u00f6rsel Olmayan Masa\u00fcst\u00fc Eri\u015fimi</a> veya  NVDA(NonVisual Desktop Access) yayg\u0131n olarak kullan\u0131lan a\u00e7\u0131k kaynakl\u0131 bir Windows ekran okuyucudur.</p>\n<p>NVDA\u2019y\u0131 en iyi \u015fekilde nas\u0131l kullanaca\u011f\u0131n\u0131z konusunda a\u015fa\u011f\u0131daki k\u0131lavuzlara basvurun:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/articles/nvda/\">WebAIM - Web Eri\u015filebilirli\u011fini De\u011ferlendirmek i\u00e7in NVDA\u2019y\u0131 Kullanmak</a></li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/nvda-keyboard-shortcuts\">Deque - NVDA Klavye K\u0131sayollar\u0131</a></li>\n</ul>\n<h4 id=\"voiceover-in-safari\"><a class=\"anchor\" href=\"/react/accessibility#voiceover-in-safari\"></a>Safari i\u00e7indeki VoiceOver </h4>\n<p>VoiceOver, Apple cihazlara entegre edilmi\u015f bir ekran okuyucudur.</p>\n<p>VoiceOver\u2019\u0131 nas\u0131l etkinle\u015ftirece\u011finiz ve kullanaca\u011f\u0131n\u0131z ile ilgili a\u015fa\u011f\u0131daki rehberlere bak\u0131n:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/articles/voiceover/\">WebAIM - Web Eri\u015filebilirli\u011fini De\u011ferlendirmek i\u00e7in VoiceOver\u2019\u0131 Kullanmak</a></li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts\">Deque - OS X Klavye K\u0131sayollar\u0131 i\u00e7in VoiceOver</a></li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/voiceover-ios-shortcuts\">Deque - iOS K\u0131sayollar\u0131 i\u00e7in VoiceOver</a></li>\n</ul>\n<h4 id=\"jaws-in-internet-explorer\"><a class=\"anchor\" href=\"/react/accessibility#jaws-in-internet-explorer\"></a>Internet Explorer i\u00e7indeki JAWS</h4>\n<p><a class=\"external-link\" href=\"https://www.freedomscientific.com/Products/software/JAWS/\">Job Access With Speech</a> (Konu\u015fma ile \u0130\u015f Eri\u015fimi) veya JAWS, Windows \u00fczerinde \u00fcretken olarak kullan\u0131lan ekran okuyucudur.</p>\n<p>JAWS\u2019\u0131n en iyi nas\u0131l kullan\u0131laca\u011f\u0131na ili\u015fkin a\u015fa\u011f\u0131daki rehberlere ba\u015fvurun:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://webaim.org/articles/jaws/\">WebAIM - JAWS\u2019\u0131 Kullanarak Web Eri\u015filebilirli\u011fini De\u011ferlendirmek </a></li>\n<li><a class=\"external-link\" href=\"https://dequeuniversity.com/screenreaders/jaws-keyboard-shortcuts\">Deque - JAWS Klavye K\u0131sayollar\u0131</a></li>\n</ul>\n<h3 id=\"other-screen-readers\"><a class=\"anchor\" href=\"/react/accessibility#other-screen-readers\"></a>Di\u011fer Ekran Okuyucular\u0131</h3>\n<h4 id=\"chromevox-in-google-chrome\"><a class=\"anchor\" href=\"/react/accessibility#chromevox-in-google-chrome\"></a>Google Chrome i\u00e7indeki ChromeVox</h4>\n<p><a class=\"external-link\" href=\"https://www.chromevox.com/\">ChromeVox</a>, Chromebooks\u2019daki bir ekran okuyucudur ve Google Chrome i\u00e7in <a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en\">bir uzant\u0131 olarak</a> vard\u0131r.</p>\n<p>ChromeVox\u2019un en iyi nas\u0131l kullan\u0131laca\u011f\u0131na ili\u015fkin a\u015fa\u011f\u0131daki rehberlere ba\u015fvurun:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://support.google.com/chromebook/answer/7031755?hl=en\">Google Chromebook Yard\u0131m - Yerle\u015fik Ekran Okuyucuyu Kullan\u0131n</a></li>\n<li><a class=\"external-link\" href=\"https://www.chromevox.com/keyboard_shortcuts.html\">ChromeVox Klasik Klavye K\u0131sayollar\u0131 Referans\u0131</a></li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/accessibility.md\">Edit this page</a></p></div></article>", "path": "/react/accessibility", "nav": ["/react/thinking-in-react", "/react/code-splitting"]}, {"key": "Kod B\u00f6l\u00fcmleme", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h2 id=\"bundling\"><a class=\"anchor\" href=\"/react/code-splitting#bundling\"></a>Paketleme </h2>\n<p>\u00c7o\u011fu React uygulamas\u0131, dosyalar\u0131n\u0131 <a class=\"external-link\" href=\"https://webpack.js.org/\">Webpack</a>, <a class=\"external-link\" href=\"https://rollupjs.org/\">Rollup</a> veya <a class=\"external-link\" href=\"http://browserify.org/\">Browserify</a> gibi ara\u00e7larla \u201cpaketler.\u201d Paketleme, i\u00e7e aktar\u0131lan dosyalar\u0131 i\u015fleyip tek bir dosyaya, \u201cpaket\u201d haline getirme i\u015flemidir. Daha sonra bu paket, uygulaman\u0131n tamam\u0131n\u0131 tek seferde y\u00fcklemek i\u00e7in kullan\u0131labilir.</p>\n<h4 id=\"example\"><a class=\"anchor\" href=\"/react/code-splitting#example\"></a>\u00d6rnek </h4>\n<p><strong>Uygulama:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// app.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> add <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./math.js'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// math.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Paket:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Paketleriniz bundan \u00e7ok daha farkl\u0131 g\u00f6z\u00fckecektir.</p>\n</div>\n<p>E\u011fer <a class=\"external-link\" href=\"https://create-react-app.dev/\">Create React App</a>, <a class=\"external-link\" href=\"https://nextjs.org/\">Next.js</a>, <a class=\"external-link\" href=\"https://www.gatsbyjs.org/\">Gatsby</a> ya da benzeri bir ara\u00e7 kullan\u0131yorsan\u0131z, uygulaman\u0131z\u0131 paketleyen bir Webpack kurulumuna sahip olursunuz.</p>\n<p>E\u011fer bu ara\u00e7lardan birini kullanm\u0131yorsan\u0131z, paketleyiciyi kendiniz kurman\u0131z gerekir. \u00d6rnek i\u00e7in, Webpack dok\u00fcmantasyonundan <a class=\"external-link\" href=\"https://webpack.js.org/guides/installation/\">Kurulum</a> ve <a class=\"external-link\" href=\"https://webpack.js.org/guides/getting-started/\">Ba\u015flang\u0131\u00e7</a> alanlar\u0131na g\u00f6z at\u0131n\u0131z.</p>\n<h2 id=\"code-splitting\"><a class=\"anchor\" href=\"/react/code-splitting#code-splitting\"></a>Kod B\u00f6l\u00fcmleme </h2>\n<p>Paketleme g\u00fczeldir ama uygulaman\u0131z b\u00fcy\u00fcd\u00fck\u00e7e paketiniz de b\u00fcy\u00fcr. \u00d6zellikle b\u00fcy\u00fck \u00fc\u00e7\u00fcnc\u00fc parti k\u00fct\u00fcphaneleri dahil ediyorsan\u0131z. Paketinizin boyutunun, uygulaman\u0131z\u0131n y\u00fckleni\u015fini geciktirecek kadar b\u00fcy\u00fck olmamas\u0131 i\u00e7in paketinize dahil etti\u011finiz kodlara g\u00f6z kulak olman\u0131z gerekir.</p>\n<p>B\u00fcy\u00fck paket boyutlar\u0131ndan kurtulmak i\u00e7in problemin \u00fczerine gitmek ve paketinizi \u201cb\u00f6l\u00fcmlemeye\u201d ba\u015flamak iyi bir y\u00f6ntemdir.\nKod-B\u00f6l\u00fcmleme, <a class=\"external-link\" href=\"https://webpack.js.org/guides/code-splitting/\">Webpack</a>, <a class=\"external-link\" href=\"https://rollupjs.org/guide/en/#code-splitting\">Rollup</a> ve Browserify (<a class=\"external-link\" href=\"https://github.com/browserify/factor-bundle\">factor-bundle</a> ile) gibi paketleyicilerin destekledi\u011fi, i\u015fleyi\u015f s\u00fcresince dinamik olarak y\u00fcklenen birden \u00e7ok paket yaratmaya yarayan \u00f6zelliktir.</p>\n<p>Uygulaman\u0131za kod b\u00f6l\u00fcmlemesi yapmak, kullan\u0131c\u0131n\u0131n anl\u0131k olarak ihtiya\u00e7 duydu\u011fu \u015feylerin \u201clazy y\u00fcklenmesine\u201d yard\u0131mc\u0131 olarak uygulama performans\u0131n\u0131 \u00f6nemli \u00f6l\u00e7\u00fcde\nartt\u0131rabilir. Uygulaman\u0131zdaki toplam kod miktar\u0131n\u0131 azaltmam\u0131\u015f olsan\u0131z da kullan\u0131c\u0131n\u0131n hi\u00e7bir zaman ihtiya\u00e7 duymayaca\u011f\u0131 kodu y\u00fcklemekten ka\u00e7\u0131nm\u0131\u015f ve ilk y\u00fckleme s\u0131ras\u0131nda ihtiya\u00e7 duyulan kodu azaltm\u0131\u015f olursunuz.</p>\n<h2 id=\"import\"><a class=\"anchor\" href=\"/react/code-splitting#import\"></a><code class=\"language-javascript\">import()</code> </h2>\n<p>Uygulaman\u0131za kod b\u00f6l\u00fcmlemeyi getirmenin en iyi yolu dinamik <code class=\"language-javascript\">import()</code> s\u00f6zdiziminden ge\u00e7er.</p>\n<p><strong>\u00d6nce:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> add <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./math'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Sonra:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./math\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">math</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Webpack bu s\u00f6zdizimine denk geldi\u011finde, uygulaman\u0131zda otomatik olarak kod b\u00f6l\u00fcmlemeye ba\u015flar. E\u011fer Create React App kullan\u0131yorsan\u0131z, bu ayar sizin i\u00e7in halihaz\u0131rda ayarlanm\u0131\u015ft\u0131r ve <a class=\"external-link\" href=\"https://create-react-app.dev/docs/code-splitting/\">kullanmaya</a> hemen\nba\u015flayabilirsiniz. Ayn\u0131 zamanda <a class=\"external-link\" href=\"https://nextjs.org/docs/advanced-features/dynamic-import\">Next.js</a>\u2018de de desteklenmektedir.</p>\n<p>E\u011fer Webpack ayarlar\u0131n\u0131 kendiniz yap\u0131yorsan\u0131z, Webpack\u2019in <a class=\"external-link\" href=\"https://webpack.js.org/guides/code-splitting/\">kod b\u00f6l\u00fcmleme rehberini</a> okumay\u0131 tercih edebilirsiniz. Webpack ayar\u0131n\u0131z hayal meyal <a class=\"external-link\" href=\"https://gist.github.com/gaearon/ca6e803f5c604d37468b0091d9959269\">buna benzeyecektir.</a></p>\n<p><a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> kullan\u0131rken, Babel\u2019\u0131n dinamik import s\u00f6zdizimini \u00e7\u00f6z\u00fcmleyebildi\u011finden fakat d\u00f6n\u00fc\u015ft\u00fcrmedi\u011finden emin olman\u0131z gerekmekte. Bunun i\u00e7in <a class=\"external-link\" href=\"https://classic.yarnpkg.com/en/package/@babel/plugin-syntax-dynamic-import\">@babel/plugin-syntax-dynamic-import</a>\u2018a ihtiyac\u0131n\u0131z var.</p>\n<h2 id=\"reactlazy\"><a class=\"anchor\" href=\"/react/code-splitting#reactlazy\"></a><code class=\"language-javascript\">React.lazy</code> </h2>\n<p><code class=\"language-javascript\">React.lazy</code> fonksiyonu, dinamik import\u2019u normal bir bile\u015fen gibi render etmeye yarar.</p>\n<p><strong>\u00d6nce:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> OtherComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Sonra:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu kod, bile\u015fen ilk render edildi\u011finde <code class=\"language-javascript\">OtherComponent</code>\u2018\u0131 i\u00e7eren paketi otomatik olarak y\u00fckler.</p>\n<p><code class=\"language-javascript\">React.lazy</code>, dinamik <code class=\"language-javascript\">import()</code>\u2018u \u00e7a\u011f\u0131ran bir fonksiyon al\u0131r. <code class=\"language-javascript\">default</code> ile d\u0131\u015far\u0131 aktar\u0131lan bir React bile\u015fenini i\u00e7eren mod\u00fcl\u00fc \u00e7\u00f6z\u00fcmleyen\n<code class=\"language-javascript\">Promise</code> return etmelidir.</p>\n<h3 id=\"suspense\"><a class=\"anchor\" href=\"/react/code-splitting#suspense\"></a>Suspense </h3>\n<p><code class=\"language-javascript\">MyComponent</code> render edildi\u011finde <code class=\"language-javascript\">OtherComponent</code>\u2018\u0131 i\u00e7eren mod\u00fcl y\u00fcklenmediyse, y\u00fcklenmesini beklerken ge\u00e7irdi\u011fimiz s\u00fcre i\u00e7erisinde y\u00fckleme g\u00f6stergesi gibi bir yedek i\u00e7erik g\u00f6stermeliyiz. Bu, <code class=\"language-javascript\">Suspense</code> bile\u015feniyle yap\u0131l\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Y\u00fckleniyor...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">fallback</code> prop\u2019u, bile\u015fenin y\u00fcklenmesini beklerken g\u00f6stermek istedi\u011finiz herhangi bir React eleman\u0131n\u0131 kabul eder. <code class=\"language-javascript\">Suspense</code> bile\u015fenini, lazy bile\u015feninin \u00fcst\u00fcnde herhangi bir yere yerle\u015ftirebilirsiniz. Birden fazla lazy bile\u015fenini tek bir <code class=\"language-javascript\">Suspense</code> bile\u015feni i\u00e7erisine bile alabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> AnotherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./AnotherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Y\u00fckleniyor...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnotherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"avoiding-fallbacks\"><a class=\"anchor\" href=\"/react/code-splitting#avoiding-fallbacks\"></a>Avoiding fallbacks </h3>\n<p>Any component may suspend as a result of rendering, even components that were already shown to the user. In order for screen content to always be consistent, if an already shown component suspends, React has to hide its tree up to the closest <code class=\"language-javascript\">&lt;Suspense&gt;</code> boundary. However, from the user\u2019s perspective, this can be disorienting.</p>\n<p>Consider this tab switcher:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Tabs <span class=\"token keyword\">from</span> <span class=\"token string\">'./Tabs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Glimmer <span class=\"token keyword\">from</span> <span class=\"token string\">'./Glimmer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Comments <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Comments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Photos <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Photos'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>tab<span class=\"token punctuation\">,</span> setTab<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'photos'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleTabSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tab</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTab</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span> <span class=\"token attr-name\">onTabSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleTabSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Glimmer</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>tab <span class=\"token operator\">===</span> <span class=\"token string\">'photos'</span> <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Photos</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comments</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In this example, if tab gets changed from <code class=\"language-javascript\">'photos'</code> to <code class=\"language-javascript\">'comments'</code>, but <code class=\"language-javascript\">Comments</code> suspends, the user will see a glimmer. This makes sense because the user no longer wants to see <code class=\"language-javascript\">Photos</code>, the <code class=\"language-javascript\">Comments</code> component is not ready to render anything, and React needs to keep the user experience consistent, so it has no choice but to show the <code class=\"language-javascript\">Glimmer</code> above.</p>\n<p>However, sometimes this user experience is not desirable. In particular, it is sometimes better to show the \u201cold\u201d UI while the new UI is being prepared. You can use the new <a href=\"/react/react-api#starttransition\"><code class=\"language-javascript\">startTransition</code></a> API to make React do this:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleTabSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tab</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTab</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here, you tell React that setting tab to <code class=\"language-javascript\">'comments'</code> is not an urgent update, but is a <a href=\"/react/react-api#transitions\">transition</a> that may take some time. React will then keep the old UI in place and interactive, and will switch to showing <code class=\"language-javascript\">&lt;Comments /&gt;</code> when it is ready. See <a href=\"/react/react-api#transitions\">Transitions</a> for more info.</p>\n<h3 id=\"error-boundaries\"><a class=\"anchor\" href=\"/react/code-splitting#error-boundaries\"></a>Hata S\u0131n\u0131rlar\u0131 </h3>\n<p>E\u011fer di\u011fer mod\u00fcl bir nedenden dolay\u0131 y\u00fcklenmezse (\u00f6rne\u011fin, a\u011f sorunu) hata f\u0131rlatacakt\u0131r. G\u00fczel bir kullan\u0131c\u0131 deneyimi sunmak ve kurtarmay\u0131 y\u00f6netmek i\u00e7in bu hatalar\u0131 <a href=\"/react/error-boundaries\">Hata S\u0131n\u0131rlar\u0131</a> ile i\u015fleyebilirsiniz. Hata S\u0131n\u0131r\u0131 olu\u015fturduktan sonra, a\u011f sorunu oldu\u011funda hata g\u00f6stermek i\u00e7in Hata S\u0131n\u0131r\u0131n\u0131 lazy bile\u015fenlerinizin \u00fcst\u00fcnde herhangi bir yerde kullanabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MyErrorBoundary <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyErrorBoundary'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> AnotherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./AnotherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Y\u00fckleniyor...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnotherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"route-based-code-splitting\"><a class=\"anchor\" href=\"/react/code-splitting#route-based-code-splitting\"></a>Rota bazl\u0131 kod b\u00f6l\u00fcmleme </h2>\n<p>Uygulaman\u0131zda nereye kod b\u00f6l\u00fcmleme yapaca\u011f\u0131n\u0131za karar vermek biraz zor olabilir. Paketlerinizi e\u015fit par\u00e7alara ay\u0131racak ama kullan\u0131c\u0131 deneyimini de engellemeyecek yerler se\u00e7ti\u011finize emin olmal\u0131s\u0131n\u0131z.</p>\n<p>Rotalar, ba\u015flamak i\u00e7in g\u00fczel yerlerdir. Webteki \u00e7o\u011fu insan, y\u00fcklenmesi biraz zaman alan sayfa ge\u00e7i\u015flerine al\u0131\u015f\u0131kt\u0131r. Ayn\u0131 zamanda t\u00fcm sayfay\u0131 tek seferde yeniden render etme e\u011filiminiz vard\u0131r ki kullan\u0131c\u0131n\u0131z, ayn\u0131 anda sayfan\u0131n ba\u015fka bir eleman\u0131yla etkile\u015fime girmesin.</p>\n<p>\u0130\u015fte <a class=\"external-link\" href=\"https://reactrouter.com/\">React Router</a> gibi k\u00fct\u00fcphaneler kullanan uygulamalarda rota bazl\u0131 kod b\u00f6l\u00fcmlemenin <code class=\"language-javascript\">React.lazy</code> ile nas\u0131l kurulabilece\u011fine dair bir \u00f6rnek.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense<span class=\"token punctuation\">,</span> lazy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Routes<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Home <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/Home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> About <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/About'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Y\u00fckleniyor...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">About</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"named-exports\"><a class=\"anchor\" href=\"/react/code-splitting#named-exports\"></a>\u0130simlendirilmi\u015f D\u0131\u015fa Aktar\u0131mlar </h2>\n<p><code class=\"language-javascript\">React.lazy</code> \u015fu an i\u00e7in sadece default d\u0131\u015fa aktar\u0131mlar\u0131 desteklemektedir. \u0130\u00e7e aktarmak istedi\u011finiz mod\u00fcl, isimlendirilmi\u015f d\u0131\u015fa aktar\u0131m kullan\u0131yorsa; onu varsay\u0131lan olarak tekrar d\u0131\u015fa aktaran arac\u0131 bir mod\u00fcl yaratabilirsiniz. Bu, a\u011fa\u00e7lanman\u0131n \u00e7al\u0131\u015fmaya devam etmesini ve kullan\u0131lmayan bile\u015fenleri \u00e7ekmemenizi sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ManyComponents.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> <span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> MyUnusedComponent <span class=\"token operator\">=</span> <span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// MyComponent.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> MyComponent <span class=\"token keyword\">as</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ManyComponents.js\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// MyApp.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> lazy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./MyComponent.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/code-splitting.md\">Edit this page</a></p></div></article>", "path": "/react/code-splitting", "nav": ["/react/accessibility", "/react/context"]}, {"key": "Context", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Context, prop\u2019lar\u0131 her seviyede manuel olarak ge\u00e7mek zorunda kalmadan bile\u015fen a\u011fac\u0131 \u00fczerinden veri iletmenin bir yolunu sa\u011flar.</p>\n<p>Tipik bir React uygulamas\u0131nda veri prop\u2019lar arac\u0131l\u0131\u011f\u0131yla yukar\u0131dan a\u015fa\u011f\u0131ya aktar\u0131l\u0131r (\u00fcst bile\u015fenlerden alt bile\u015fenlere). Fakat bu t\u00fcr bir kullan\u0131m, uygulamadaki bir\u00e7ok bile\u015fen taraf\u0131ndan ihtiya\u00e7 duyulan belirli tipteki prop\u2019lar (\u00f6rne\u011fin; lokalizasyon, aray\u00fcz temas\u0131) i\u00e7in kullan\u0131\u015fs\u0131z olabilir. Context, bile\u015fen a\u011fac\u0131n her bir seviyesi \u00fczerinden a\u00e7\u0131k\u00e7a bir prop ge\u00e7irmeden, bile\u015fenler aras\u0131nda bu gibi de\u011ferleri payla\u015fman\u0131n bir yolunu sa\u011flar.</p>\n<ul>\n<li><a href=\"/react/context#when-to-use-context\">Context Ne Zaman Kullan\u0131l\u0131r</a></li>\n<li><a href=\"/react/context#before-you-use-context\">Context Kullanmadan \u00d6nce</a></li>\n<li>\n<p><a href=\"/react/context#api\">API</a></p>\n<ul>\n<li><a href=\"/react/context#reactcreatecontext\">React.createContext</a></li>\n<li><a href=\"/react/context#contextprovider\">Context.Provider</a></li>\n<li><a href=\"/react/context#classcontexttype\">Class.contextType</a></li>\n<li><a href=\"/react/context#contextconsumer\">Context.Consumer</a></li>\n<li><a href=\"/react/context#contextdisplayname\">Context.displayName</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/context#examples\">\u00d6rnekler</a></p>\n<ul>\n<li><a href=\"/react/context#dynamic-context\">Dinamik Context</a></li>\n<li><a href=\"/react/context#updating-context-from-a-nested-component\">\u0130\u00e7 \u0130\u00e7e Ge\u00e7mi\u015f Bile\u015fenden Context G\u00fcncelleme</a></li>\n<li><a href=\"/react/context#consuming-multiple-contexts\">\u00c7oklu Context\u2019leri Kullanma</a></li>\n</ul>\n</li>\n<li><a href=\"/react/context#caveats\">Uyar\u0131lar</a></li>\n<li><a href=\"/react/context#legacy-api\">Eski S\u00fcr\u00fcm API</a></li>\n</ul>\n<h2 id=\"when-to-use-context\"><a class=\"anchor\" href=\"/react/context#when-to-use-context\"></a>Context Ne Zaman Kullan\u0131l\u0131r </h2>\n<p>Context; mevcut kullan\u0131c\u0131y\u0131 do\u011frulama, tema veya dil se\u00e7imi gibi React bile\u015fen a\u011fac\u0131nda global olarak d\u00fc\u015f\u00fcn\u00fclebilecek verileri payla\u015fmak i\u00e7in tasarlanm\u0131\u015ft\u0131r. \u00d6rne\u011fin a\u015fa\u011f\u0131daki kodda Button bile\u015fenine stil vermek i\u00e7in manuel olarak bir \u201ctheme\u201d prop\u2019unu ge\u00e7iyoruz.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token attr-name\">theme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Toolbar bile\u015feninin ek bir \"theme\" prop'u almas\u0131 gerekir</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ve onu ThemeButton'a ge\u00e7irmelidir. Uygulamadaki her bir</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// button'un theme'yi bilmesi gerekiyorsa zor olabilir,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u00e7\u00fcnk\u00fc her bile\u015fenden ge\u00e7mesi gerekecek.</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Context kullanarak, prop\u2019lar\u0131 ara \u00f6\u011felerden ge\u00e7irmekten ka\u00e7\u0131nabiliriz.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Context her bir bile\u015fenin i\u00e7inden a\u00e7\u0131k\u00e7a ge\u00e7meden,</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// bile\u015fen a\u011fac\u0131n\u0131n derinliklerine bir value ge\u00e7memizi sa\u011flar.</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Mevcut theme i\u00e7in bir context olu\u015ftur (varsay\u0131lan olarak \"light\" ile).</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Ge\u00e7erli temay\u0131 a\u015fa\u011f\u0131daki a\u011faca ta\u015f\u0131mak i\u00e7in bir Provider kullan\u0131n.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Herhangi bir bile\u015fen ne kadar derinde olursa olsun okuyabilir.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Bu \u00f6rnekte, mevcut de\u011fer olarak \"dark\" ge\u00e7iyoruz.</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Aradaki bir bile\u015fen art\u0131k temay\u0131 a\u00e7\u0131k\u00e7a a\u015fa\u011f\u0131 aktarmak zorunda de\u011fil.</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Mevcut tema context'ini okumak i\u00e7in bir contextType atay\u0131n.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// React, en yak\u0131n tema Provider'\u0131 bulacak ve de\u011ferini kullanacak.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bu \u00f6rnekte mevcut tema \"dark\"t\u0131r.</span></span>  <span class=\"token keyword\">static</span> contextType <span class=\"token operator\">=</span> ThemeContext<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"before-you-use-context\"><a class=\"anchor\" href=\"/react/context#before-you-use-context\"></a>Context Kullanmadan \u00d6nce </h2>\n<p>Context esas olarak, baz\u0131 verilerin farkl\u0131 d\u00fczeylerdeki i\u00e7 i\u00e7e ge\u00e7mi\u015f <em>bir\u00e7ok</em> bile\u015fen taraf\u0131ndan eri\u015filebilir olmas\u0131 gerekti\u011finde kullan\u0131l\u0131r. Bile\u015fenin yeniden kullan\u0131m\u0131n\u0131 zorla\u015ft\u0131rd\u0131\u011f\u0131ndan onu \u00f6l\u00e7\u00fcl\u00fc bir \u015fekilde uygulay\u0131n.</p>\n<p><strong>Yaln\u0131zca baz\u0131 prop\u2019lar\u0131 bir\u00e7ok a\u015fama \u00fczerinden ge\u00e7mek istemezseniz, <a href=\"/react/composition-vs-inheritance\">bile\u015fen kompozisyonu</a> genellikle Context\u2019ten daha basit bir \u00e7\u00f6z\u00fcmd\u00fcr.</strong></p>\n<p>\u00d6rne\u011fin, derinlemesine i\u00e7 i\u00e7e ge\u00e7mi\u015f <code class=\"language-javascript\">Link</code> ve <code class=\"language-javascript\">Avatar</code> bile\u015fenlerinin okuyabilmesi i\u00e7in <code class=\"language-javascript\">avatarSize</code> ve <code class=\"language-javascript\">user</code> prop\u2019lar\u0131n\u0131 birka\u00e7 seviye a\u015fa\u011f\u0131ya aktaran bir <code class=\"language-javascript\">Page</code> bile\u015feni d\u00fc\u015f\u00fcn\u00fcn:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Sonunda sadece <code class=\"language-javascript\">Avatar</code> bile\u015feni ihtiya\u00e7 duyuyorsa, <code class=\"language-javascript\">user</code> ve <code class=\"language-javascript\">avatarSize</code> \u2018\u0131n bir\u00e7ok seviyeden ge\u00e7mesi gereksiz olabilir. Ayr\u0131ca <code class=\"language-javascript\">Avatar</code> bile\u015feni yukar\u0131dan daha fazla prop\u2019a ihtiya\u00e7 duydu\u011funda, bu prop\u2019lar\u0131 t\u00fcm ara seviyelerde de eklemeniz gerekir.</p>\n<p>Bu sorunu <strong>Context\u2019siz</strong> \u00e7\u00f6zmenin bir yolu <a href=\"/react/composition-vs-inheritance#containment\">Avatar bile\u015feninin kendisinin prop olarak ge\u00e7ilmesidir</a>, b\u00f6ylece ara bile\u015fenlerin <code class=\"language-javascript\">user</code> ve <code class=\"language-javascript\">avatarSize</code> prop\u2019lar\u0131 hakk\u0131nda bilgi sahibi olmas\u0131 gerekmez:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> userLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>userLink<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// \u015eimdi, bizde olan:</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">avatarSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span> <span class=\"token attr-name\">userLink</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">// ... Bu, bunu render ediyor ...</span>\n<span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>userLink<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu de\u011fi\u015fiklikle birlikte sadece en \u00fcstteki Page bile\u015feni <code class=\"language-javascript\">Link</code> ve <code class=\"language-javascript\">Avatar</code> bile\u015fenlerinin <code class=\"language-javascript\">user</code> ve <code class=\"language-javascript\">avatarSize</code> kullan\u0131m\u0131n\u0131 bilmesi gerekir.</p>\n<p>Bu <em>kontrol\u00fcn tersine \u00e7evrilmesi</em>, bir\u00e7ok durumda uygulaman\u0131zdan ge\u00e7irmeniz gereken prop\u2019lar\u0131n say\u0131s\u0131n\u0131 azaltarak ve k\u00f6k bile\u015fenlere daha fazla kontrol sa\u011flayarak kodunuzu daha temiz hale getirebilir. Fakat bu her durumda do\u011fru bir se\u00e7im de\u011fildir: bile\u015fen a\u011fac\u0131nda daha fazla karma\u015f\u0131kl\u0131k ta\u015f\u0131mak, daha \u00fcst seviyeli bile\u015fenleri daha karma\u015f\u0131k hale getirir ve daha d\u00fc\u015f\u00fck seviyeli bile\u015fenleri istedi\u011finizden daha esnek olmaya zorlar.</p>\n<p>Bir bile\u015fen i\u00e7in tek bir alt elemanla s\u0131n\u0131rl\u0131 de\u011filsiniz. <a href=\"/react/composition-vs-inheritance#containment\">Burada belirtildi\u011fi gibi</a>, alt elemanlar i\u00e7in birden \u00e7ok alt eleman ge\u00e7irebilirsiniz, hatta alt bile\u015fenler i\u00e7in birden fazla ayr\u0131 \u201cslots\u201da sahip olabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feed</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> topBar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationBar</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>permalink<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>avatarSize<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NavigationBar</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageLayout</span></span>\n      <span class=\"token attr-name\">topBar</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>topBar<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">content</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu model, bir alt eleman\u0131 \u00fcst elemanlar\u0131ndan ay\u0131rman\u0131z gerekti\u011finde \u00e7o\u011fu durum i\u00e7in yeterlidir. Alt eleman\u0131n render olmadan \u00f6nce \u00fcst eleman ile ileti\u015fim kurmas\u0131 gerekiyorsa, bunu <a href=\"/react/render-props\">render prop\u2019larla</a> daha ileriye g\u00f6t\u00fcrebilirsin.</p>\n<p>Fakat, bazen ayn\u0131 verinin a\u011fa\u00e7taki bir\u00e7ok bile\u015fen taraf\u0131ndan ve farkl\u0131 i\u00e7 i\u00e7e ge\u00e7mi\u015f seviyelerinde eri\u015filebilir olmas\u0131 gerekir. Context, bu t\u00fcr verileri ve g\u00fcncellemeleri a\u011fa\u00e7taki t\u00fcm bile\u015fenlere \u201cyayman\u0131z\u0131\u201d sa\u011flar. Context kullan\u0131m\u0131n\u0131n di\u011fer alternatiflerden daha basit olabilece\u011fi ortak \u00f6rnekler aras\u0131nda konum ayarlar\u0131n\u0131n y\u00f6netimi, tema veya veri \u00f6nbelle\u011fi bulunur.</p>\n<h2 id=\"api\"><a class=\"anchor\" href=\"/react/context#api\"></a>API </h2>\n<h3 id=\"reactcreatecontext\"><a class=\"anchor\" href=\"/react/context#reactcreatecontext\"></a><code class=\"language-javascript\">React.createContext</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span>defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir Context nesnesi olu\u015fturur. React, bu Context nesnesine abone bir bile\u015fen olu\u015fturdu\u011funda, context\u2019in mevcut de\u011ferini a\u011fa\u00e7taki en yak\u0131n <code class=\"language-javascript\">Provider'dan</code> okuyacakt\u0131r.</p>\n<p><code class=\"language-javascript\">defaultValue</code> arg\u00fcman\u0131 <strong>yaln\u0131zca</strong>, bir bile\u015fenin \u00fcst\u00fcnde a\u011fa\u00e7ta e\u015fle\u015fen bir Provider bulunmad\u0131\u011f\u0131nda kullan\u0131l\u0131r. Bu varsay\u0131lan de\u011fer, bile\u015fenleri ba\u015fka bile\u015fenlerin alt\u0131na koymadan izole bir \u015fekilde test etmek i\u00e7in yard\u0131mc\u0131 olabilir. Not: Provider value de\u011ferini <code class=\"language-javascript\">undefined</code> ge\u00e7mek t\u00fcketici bile\u015fenlerinin <code class=\"language-javascript\">defaultValue</code> kullanmas\u0131na neden olmaz.</p>\n<h3 id=\"contextprovider\"><a class=\"anchor\" href=\"/react/context#contextprovider\"></a><code class=\"language-javascript\">Context.Provider</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* bir de\u011fer */</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Her Context nesnesi, t\u00fcketici bile\u015fenlerin context g\u00fcncellemelerine abone olmas\u0131n\u0131 sa\u011flayan bir React Provider bile\u015feni ile birlikte gelir.</p>\n<p>Provider bile\u015feni, bu Provider\u2019\u0131n soyundan gelen t\u00fcketici bile\u015fenlerine ge\u00e7irilecek olan bir <code class=\"language-javascript\">value</code> prop\u2019unu kabul eder. Bir\u00e7ok t\u00fcketici bir Provider\u2019a ba\u011flanabilir. Provider\u2019lar a\u011fa\u00e7taki daha derin de\u011ferleri de\u011fi\u015ftirmek i\u00e7in i\u00e7 i\u00e7e ge\u00e7irilebilirler.</p>\n<p>Bir Provider\u2019\u0131n soyundan gelen t\u00fcm t\u00fcketiciler, Provider\u2019\u0131n value prop\u2019u her de\u011fi\u015fti\u011finde yeniden olu\u015fturulur. Provider\u2019\u0131n soyundan gelen t\u00fcketicilere (<a href=\"/react/context#classcontexttype\"><code class=\"language-javascript\">.contextType</code></a> ve <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a> de dahil olmak \u00fczere) yay\u0131lmas\u0131, <code class=\"language-javascript\">shouldComponentUpdate</code> metoduna tabi de\u011fildir, dolay\u0131s\u0131yla herhangi bir bile\u015fen g\u00fcncellemeyi \u00f6nledi\u011finde bile t\u00fcketici g\u00fcncellenir.</p>\n<p><a href=\"//developer.mozilla.org/en-US/react/Web/JavaScript/Reference/Global_Objects/Object/is#Description\"><code class=\"language-javascript\">Object.is</code></a> gibi ayn\u0131 algoritma kullan\u0131larak yeni ve eski de\u011ferler kar\u015f\u0131la\u015ft\u0131r\u0131p de\u011fi\u015fiklikler belirlenir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>De\u011fi\u015fiklikleri belirlerken nesneleri <code class=\"language-javascript\">value</code> olarak ge\u00e7mek baz\u0131 sorunlara neden olabilir: bak\u0131n\u0131z <a href=\"/react/context#caveats\">Uyar\u0131lar</a>.</p>\n</div>\n<h3 id=\"classcontexttype\"><a class=\"anchor\" href=\"/react/context#classcontexttype\"></a><code class=\"language-javascript\">Class.contextType</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* Mycontext de\u011ferini kullanarak mount'da yan etki yapma */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* Mycontext de\u011ferini esas alarak bir \u015fey render etme */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nMyClass<span class=\"token punctuation\">.</span>contextType <span class=\"token operator\">=</span> MyContext<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir s\u0131n\u0131ftaki <code class=\"language-javascript\">contextType</code> \u00f6zelli\u011fine <a href=\"/react/context#reactcreatecontext\"><code class=\"language-javascript\">React.createContext()</code></a> taraf\u0131ndan olu\u015fturulan bir Context nesnesi atanabilir. Bu \u00f6zelli\u011fi kullanmak, bu Context t\u00fcr\u00fcn\u00fcn en yak\u0131n mevcut de\u011ferine <code class=\"language-javascript\">this.context</code> \u2018i kullanarak eri\u015fmenizi sa\u011flar. Bunu render metodu da dahil olmak \u00fczere ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131ndan herhangi birinde belirtebilirsiniz. </p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu API\u2019yi kullanarak yaln\u0131zca tek bir context\u2019e abone olabilirsiniz. Daha fazla okuman\u0131z gerekiyorsa, <a href=\"/react/context#consuming-multiple-contexts\">\u00c7oklu Context T\u00fcketimi</a> k\u0131sm\u0131na bakabilirsiniz.</p>\n<p>Deneysel <a class=\"external-link\" href=\"https://babeljs.io/docs/plugins/transform-class-properties/\">public s\u0131n\u0131f alanlar\u0131 s\u00f6zdizimini (public class fields)</a> kullan\u0131yorsan\u0131z, <code class=\"language-javascript\">contextType'\u0131n\u0131z\u0131</code> ba\u015flatmak i\u00e7in <strong>statik</strong> bir s\u0131n\u0131f alan\u0131 kullanablirsiniz.</p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> contextType <span class=\"token operator\">=</span> MyContext<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* value de\u011ferine dayal\u0131 bir \u015fey render etmek */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"contextconsumer\"><a class=\"anchor\" href=\"/react/context#contextconsumer\"></a><code class=\"language-javascript\">Context.Consumer</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=&gt;</span> <span class=\"token comment\">/* context de\u011ferine dayal\u0131 bir \u015fey render etme */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Context de\u011fi\u015fikliklerine abone olan bir React bile\u015feni. Bu bile\u015feni kullanmak, bir <a href=\"/react/components-and-props#function-and-class-components\">fonksiyon bile\u015fen</a> i\u00e7indeki bir context\u2019e abone olman\u0131za izin verir.</p>\n<p><a href=\"/react/render-props#using-props-other-than-render\">Alt eleman olarak fonksiyon</a> verilmesine ihtiya\u00e7 duyar. Fonksiyon ge\u00e7erli context de\u011ferini al\u0131r ve bir React d\u00fc\u011f\u00fcm\u00fc d\u00f6nd\u00fcr\u00fcr. Fonksiyona iletilen <code class=\"language-javascript\">value</code> arg\u00fcman\u0131, yukar\u0131da bu context i\u00e7in a\u011fa\u00e7ta en yak\u0131n Provider\u2019\u0131n <code class=\"language-javascript\">value</code> prop\u2019una e\u015fit olacakt\u0131r. Yukar\u0131daki bu context i\u00e7in Provider yoksa, <code class=\"language-javascript\">value</code> arg\u00fcman\u0131 <code class=\"language-javascript\">createContext()</code> \u00f6\u011fesine iletilmi\u015f <code class=\"language-javascript\">defaultValue</code> de\u011ferine e\u015fit olur.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Alt eleman olarak fonksiyon modeline dair daha fazla bilgi i\u00e7in, bak\u0131n\u0131z: <a href=\"/react/render-props\">render prop\u2019lar\u0131</a>.</p>\n</div>\n<h3 id=\"contextdisplayname\"><a class=\"anchor\" href=\"/react/context#contextdisplayname\"></a><code class=\"language-javascript\">Context.displayName</code> </h3>\n<p>Context objeleri <code class=\"language-javascript\">displayName</code> ad\u0131nda bir string property kabul eder. React DevTools context i\u00e7in ne g\u00f6sterece\u011fine karar vermek i\u00e7in bu stringi kullan\u0131r.</p>\n<p>\u00d6rne\u011fin, a\u015fa\u011f\u0131daki bile\u015fen DevTools\u2019da MyDisplayName olarak g\u00f6z\u00fckecektir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* some value */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">MyContext<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">'MyDisplayName'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> // \"MyDisplayName.Provider\" in DevTools</span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> // \"MyDisplayName.Consumer\" in DevTools</span></code></pre></div>\n<h2 id=\"examples\"><a class=\"anchor\" href=\"/react/context#examples\"></a>\u00d6rnekler </h2>\n<h3 id=\"dynamic-context\"><a class=\"anchor\" href=\"/react/context#dynamic-context\"></a>Dinamik Context </h3>\n<p>Tema i\u00e7in dinamik de\u011ferli \u00e7ok karma\u015f\u0131k bir \u00f6rnek:</p>\n<p><strong>theme-context.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foreground</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000000'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">'#eeeeee'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foreground</span><span class=\"token operator\">:</span> <span class=\"token string\">'#ffffff'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">'#222222'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  themes<span class=\"token punctuation\">.</span>dark <span class=\"token comment\">// varsay\u0131lan de\u011fer</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n</div></p>\n<p><strong>themed-button.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ThemedButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> props <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> theme <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">ThemedButton<span class=\"token punctuation\">.</span>contextType <span class=\"token operator\">=</span> ThemeContext<span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ThemedButton<span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>app.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">,</span> themes<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ThemedButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./themed-button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ThemedButton'u kullanan bir ara bile\u015fen</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>changeTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Change Theme</span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemedButton</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span>\n          state<span class=\"token punctuation\">.</span>theme <span class=\"token operator\">===</span> themes<span class=\"token punctuation\">.</span>dark\n            <span class=\"token operator\">?</span> themes<span class=\"token punctuation\">.</span>light\n            <span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// ThemeProvider i\u00e7inde bulunan ThemedButton</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// tema bilgisini state'ten al\u0131r. D\u0131\u015far\u0131da bulunan ise</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// varsay\u0131lan temay\u0131 kullan\u0131r.</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token attr-name\">changeTheme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleTheme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Section</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Section</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Page</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<h3 id=\"updating-context-from-a-nested-component\"><a class=\"anchor\" href=\"/react/context#updating-context-from-a-nested-component\"></a>\u0130\u00e7 \u0130\u00e7e Ge\u00e7mi\u015f Bile\u015fenden Context G\u00fcncelleme </h3>\n<p>Context\u2019i bile\u015fen a\u011fac\u0131nda derinlere yerle\u015ftirilmi\u015f bir bile\u015fenden genellikle g\u00fcncellemek gerekir. Bu durumda, t\u00fcketicilerin context\u2019i g\u00fcncellemesine izin vermek i\u00e7in context\u2019den bir method\u2019u a\u015fa\u011f\u0131ya iletebilirsiniz:</p>\n<p><strong>theme-context.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// CreateContext \u00f6\u011fesine iletilen varsay\u0131lan de\u011ferin formunun,</span>\n<span class=\"token comment\">// t\u00fcketicilerin bekledi\u011fi formla e\u015fle\u015fti\u011finden emin olun!</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function-variable function\">toggleTheme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>theme-toggler-button.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemeTogglerButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Tema De\u011fi\u015ftirme D\u00fc\u011fmesi yaln\u0131zca temay\u0131 de\u011fil,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ayn\u0131 zamanda context'ten bir toggleTheme methodu al\u0131r</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">,</span> toggleTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleTheme<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Toggle Theme</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ThemeTogglerButton<span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong>app.js</strong>\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeContext<span class=\"token punctuation\">,</span> themes<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-context'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ThemeTogglerButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme-toggler-button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span>\n          state<span class=\"token punctuation\">.</span>theme <span class=\"token operator\">===</span> themes<span class=\"token punctuation\">.</span>dark\n            <span class=\"token operator\">?</span> themes<span class=\"token punctuation\">.</span>light\n            <span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// State ayr\u0131ca g\u00fcncelleme i\u015flevini i\u00e7erir,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// b\u00f6ylece context provider'a aktar\u0131l\u0131r.</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">toggleTheme</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>toggleTheme<span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// T\u00fcm state provider'a iletilir.</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeTogglerButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<h3 id=\"consuming-multiple-contexts\"><a class=\"anchor\" href=\"/react/context#consuming-multiple-contexts\"></a>\u00c7oklu Context\u2019leri Kullanma </h3>\n<p>Context\u2019in yeniden render edilmesini h\u0131zl\u0131 tutmak i\u00e7in React her context t\u00fcketiciyi a\u011fa\u00e7ta ayr\u0131 bir d\u00fc\u011f\u00fcm haline getirmelidir.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Tema context'i, varsay\u0131lan olarak light tema</span>\n<span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Oturum a\u00e7m\u0131\u015f kullan\u0131c\u0131 context'i</span>\n<span class=\"token keyword\">const</span> UserContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Guest'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>signedInUser<span class=\"token punctuation\">,</span> theme<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// \u0130lk context value'lar\u0131n\u0131 sa\u011flayan App bile\u015feni</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>signedInUser<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Sidebar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Bir bile\u015fen birden fazla context'i t\u00fcketebilir</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">theme</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfilePage</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Consumer</span></span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>\u0130ki veya daha fazla context de\u011ferleri s\u0131kl\u0131kla birlikte kullan\u0131l\u0131yorsa her ikisini de sa\u011flayan kendi render prop bile\u015feninizi olu\u015fturmay\u0131 d\u00fc\u015f\u00fcnmek isteyebilirsiniz.</p>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/context#caveats\"></a>Uyar\u0131lar </h2>\n<p>Context, yeniden render edilme zaman\u0131n\u0131 belirlemek i\u00e7in referans kimli\u011fi kulland\u0131\u011f\u0131ndan, bir Provider\u2019\u0131n \u00fcst eleman\u0131 yeniden render\u2019land\u0131\u011f\u0131nda t\u00fcketicilerdeki istenmeyen render\u2019lar\u0131 tetikleyebilecek baz\u0131 kazan\u0131mlar vard\u0131r. \u00d6rne\u011fin a\u015fa\u011f\u0131daki kodda provider her yeniden render\u2019land\u0131\u011f\u0131nda t\u00fcm t\u00fcketiciler yeniden render\u2019lan\u0131r. \u00c7\u00fcnk\u00fc <code class=\"language-javascript\">value</code> i\u00e7in her zaman yeni bir obje olu\u015fturulur:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">something</span><span class=\"token operator\">:</span> <span class=\"token string\">'something'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Bunu a\u015fmak i\u00e7in, value de\u011ferini \u00fcst eleman\u0131n state\u2019ine ta\u015f\u0131y\u0131n:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">something</span><span class=\"token operator\">:</span> <span class=\"token string\">'something'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"legacy-api\"><a class=\"anchor\" href=\"/react/context#legacy-api\"></a>Eski S\u00fcr\u00fcm API </h2>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React daha \u00f6nce deneysel bir context API ile yay\u0131nlanm\u0131\u015ft\u0131. Eski API t\u00fcm 16.x s\u00fcr\u00fcmlerinde desteklenecek ancak onu kullanan uygulamalar yeni s\u00fcr\u00fcme ge\u00e7melidir. Eski s\u00fcr\u00fcm API\u2019ler \u00f6n\u00fcm\u00fczdeki ana React versiyonunda kald\u0131r\u0131lacakt\u0131r. <a href=\"/react/legacy-context\">Eski s\u00fcr\u00fcm Context d\u00f6k\u00fcmanlar\u0131n\u0131 buradan</a> okuyunuz.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/context.md\">Edit this page</a></p></div></article>", "path": "/react/context", "nav": ["/react/code-splitting", "/react/error-boundaries"]}, {"key": "Hata S\u0131n\u0131rlar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Ge\u00e7mi\u015fte, bile\u015fenler i\u00e7indeki JavaScript hatalar\u0131 React\u2019in dahili state\u2019ini bozar ve sonraki renderlarda <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6895\">\u015fifreli</a> <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/8579\">hatalar</a> <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/4026\">g\u00f6sterirdi</a>. Bu hatalar\u0131n hepsi uygulama kodunda daha \u00f6nce ortaya \u00e7\u0131km\u0131\u015f hatalardan kaynaklan\u0131yordu ve React bu hatalar\u0131 bile\u015fenlerde ele alacak \u015f\u0131k bir yol sunmuyor ve bu hatalar\u0131 da atlatam\u0131yordu.</p>\n<h2 id=\"introducing-error-boundaries\"><a class=\"anchor\" href=\"/react/error-boundaries#introducing-error-boundaries\"></a>Hata S\u0131n\u0131rlar\u0131na Giri\u015f </h2>\n<p>Kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcn bir par\u00e7as\u0131nda ortaya \u00e7\u0131kan bir hata, t\u00fcm uygulamay\u0131 bozmamal\u0131d\u0131r. React kullan\u0131c\u0131lar\u0131 i\u00e7in bu sorunu \u00e7\u00f6zmek ad\u0131na React 16, \u201chata s\u0131n\u0131r\u0131\u201d ad\u0131nda yeni bir konsepti tan\u0131t\u0131yor.</p>\n<p>Hata s\u0131n\u0131rlar\u0131, bozuk bile\u015fen a\u011fac\u0131 yerine <strong>herhangi bir alt bile\u015fen a\u011fac\u0131nda olu\u015fmu\u015f Javascript hatalar\u0131n\u0131 yakalayan, bunlar\u0131 kayda ge\u00e7iren ve bir son \u00e7are aray\u00fcz\u00fc g\u00f6steren</strong> React bile\u015fenleridir. Hata s\u0131n\u0131rlar\u0131 t\u00fcm alt bile\u015fen a\u011fac\u0131nda render esnas\u0131nda, ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131nda ve constructor\u2019da olu\u015fan hatalar\u0131 yakalar.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Hata s\u0131n\u0131rlar\u0131, a\u015fa\u011f\u0131daki hatalar\u0131 <strong>yakalamaz</strong>:</p>\n<ul>\n<li>Olay y\u00f6neticileri (<a href=\"/react/error-boundaries#how-about-event-handlers\">daha fazla bilgi</a>)</li>\n<li>Asenkron kod (\u00f6rne\u011fin <code class=\"language-javascript\">setTimeout</code> veya <code class=\"language-javascript\">requestAnimationFrame</code> callbackleri)</li>\n<li>Sunucu taraf\u0131ndaki render</li>\n<li>Hata s\u0131n\u0131r\u0131n\u0131n (alt elemanlar\u0131 yerine) kendisinde ortaya \u00e7\u0131kan hatalar</li>\n</ul>\n</div>\n<p>Bir s\u0131n\u0131f bile\u015feni, <a href=\"/react/react-component#static-getderivedstatefromerror\"><code class=\"language-javascript\">static getDerivedStateFromError()</code></a> ve <a href=\"/react/react-component#componentdidcatch\"><code class=\"language-javascript\">componentDidCatch()</code></a> metodlar\u0131ndan birini (veya ikisini birden) tan\u0131mlarsa, bir hata s\u0131n\u0131r\u0131na d\u00f6n\u00fc\u015f\u00fcr. Bir hatan\u0131n ortaya \u00e7\u0131k\u0131\u015f\u0131n\u0131n ard\u0131ndan, son \u00e7are bile\u015feni render etmek i\u00e7in, <code class=\"language-javascript\">static getDerivedStateFromError()</code> metodunu, hata bilgisinin g\u00fcnl\u00fc\u011f\u00fcn\u00fc tutmak i\u00e7inse <code class=\"language-javascript\">componentDidCatch()</code> metodunu kullan\u0131n\u0131z.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Bir sonraki render'da son \u00e7are aray\u00fcz\u00fcn\u00fc g\u00f6stermek i\u00e7in</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// state'i g\u00fcncelleyin.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> errorInfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Hatan\u0131z\u0131 bir hata bildirimi servisine de yollayabilirsiniz.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">logErrorToMyService</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> errorInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// \u0130stedi\u011finiz herhangi bir son \u00e7are aray\u00fcz\u00fcn\u00fc render edebilirsiniz.</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Something went wrong.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ard\u0131ndan, normal bir bile\u015fen gibi kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyWidget</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Hata s\u0131n\u0131rlar\u0131, bile\u015fenler i\u00e7in JavaScript\u2019in <code class=\"language-javascript\">catch {}</code> blo\u011fu gibidir. Yaln\u0131z s\u0131n\u0131f bile\u015fenleri hata s\u0131n\u0131r\u0131 olabilirler. Pratikte, genellikle bir hata s\u0131n\u0131r\u0131n\u0131 bir kez tan\u0131mlay\u0131p, t\u00fcm uygulaman\u0131zda kullanmak isteyeceksiniz.</p>\n<p><strong>Hata s\u0131n\u0131rlar\u0131n\u0131n yaln\u0131zca altlar\u0131ndaki bile\u015fenlerde meydana gelen hatalar\u0131 yakalad\u0131klar\u0131n\u0131</strong> dikkate al\u0131n\u0131z.  Bir hata s\u0131n\u0131r\u0131, kendi i\u00e7inde meydana gelen hatalar\u0131 yakalayamaz. E\u011fer bir hata s\u0131n\u0131r\u0131, hata mesaj\u0131n\u0131 render etmekte ba\u015far\u0131l\u0131 olamazsa, bu hata onun \u00fczerindeki en yak\u0131n hata s\u0131n\u0131r\u0131na delege edilir. Bu, JavaScript\u2019teki <code class=\"language-javascript\">catch {}</code> blo\u011funun \u00e7al\u0131\u015fma prensibine yak\u0131nd\u0131r.</p>\n<h2 id=\"live-demo\"><a class=\"anchor\" href=\"/react/error-boundaries#live-demo\"></a>Canl\u0131 Demo </h2>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/wqvxGa?editors=0010\">Bir hata s\u0131n\u0131r\u0131n\u0131n nas\u0131l tan\u0131mland\u0131\u011f\u0131 ve kullan\u0131ld\u0131\u011f\u0131na dair bu \u00f6rne\u011fe</a> g\u00f6z at\u0131n.</p>\n<h2 id=\"where-to-place-error-boundaries\"><a class=\"anchor\" href=\"/react/error-boundaries#where-to-place-error-boundaries\"></a>Hata S\u0131n\u0131rlar\u0131n\u0131n Konumland\u0131r\u0131lmas\u0131 </h2>\n<p>Hata s\u0131n\u0131rlar\u0131n\u0131n detay seviyesi size b\u0131rak\u0131lm\u0131\u015ft\u0131r. T\u0131pk\u0131 sunucu tarafl\u0131 frameworklerin yapt\u0131\u011f\u0131na benzer \u015fekilde, en \u00fcst seviyedeki rota bile\u015fenini sararak kullan\u0131c\u0131lara \u201cBir \u015feyler ters gitti\u201d mesaj\u0131n\u0131 g\u00f6sterebildi\u011finiz gibi, her bile\u015fen par\u00e7as\u0131n\u0131 sararak onlar\u0131 uygulaman\u0131n geri kalan\u0131n\u0131 bozmaktan koruyabilirsiniz.</p>\n<h2 id=\"new-behavior-for-uncaught-errors\"><a class=\"anchor\" href=\"/react/error-boundaries#new-behavior-for-uncaught-errors\"></a>Yakalanmam\u0131\u015f Hatalar \u0130\u00e7in Yeni Bir Davran\u0131\u015f </h2>\n<p>Bu de\u011fi\u015fiklik \u00e7ok \u00f6nemli bir i\u00e7eri\u011fe sahip. <strong>React 16\u2019dan itibaren, bir hata s\u0131n\u0131r\u0131 taraf\u0131ndan yakalanmam\u0131\u015f hatalar, t\u00fcm React bile\u015fen a\u011fac\u0131n\u0131n devreden \u00e7\u0131kmas\u0131na neden olacakt\u0131r.</strong></p>\n<p>Bu karar\u0131 al\u0131rkan \u00e7ok tart\u0131\u015ft\u0131k, ancak tecr\u00fcbelerimize dayanarak hatal\u0131 bir aray\u00fcz\u00fcn yerinde b\u0131rak\u0131lmas\u0131, onun tamamen kald\u0131r\u0131lmas\u0131ndan daha k\u00f6t\u00fcd\u00fcr. \u00d6rne\u011fin, Messenger gibi bir \u00fcr\u00fcnde hatal\u0131 bir aray\u00fcz\u00fcn g\u00f6r\u00fcn\u00fcr kalmas\u0131, birinin yanl\u0131\u015f ki\u015fiye mesaj g\u00f6ndermesine neden olabilir. Benzer olarak, bir \u00f6deme uygulamas\u0131nda yanl\u0131\u015f miktar\u0131n g\u00f6r\u00fcnt\u00fclenmesi, hi\u00e7bir \u015fey g\u00f6r\u00fcnmemesinden daha k\u00f6t\u00fcd\u00fcr.</p>\n<p>Bu de\u011fi\u015fiklik, React 16\u2019ya ta\u015f\u0131nman\u0131z\u0131n ard\u0131ndan daha \u00f6nce fark etmedi\u011finiz hatalar\u0131n g\u00fcn y\u00fcz\u00fcne \u00e7\u0131kmas\u0131 anlam\u0131na geliyor. Hata s\u0131n\u0131rlar\u0131 eklemek, bir \u015feyler yanl\u0131\u015f gitti\u011finde daha iyi bir kullan\u0131c\u0131 deneyimi sunman\u0131z\u0131 sa\u011flar.</p>\n<p>\u00d6rne\u011fin Facebook Messenger, kenar \u00e7ubu\u011funun, bilgi panelinin, sohbet g\u00fcnl\u00fc\u011f\u00fc ve mesaj kutusu i\u00e7eri\u011fini farkl\u0131 hata s\u0131n\u0131rlamalar\u0131yla sarar. E\u011fer bu kullan\u0131c\u0131 aray\u00fczlerinden birindeki bile\u015fenlerden biri bozulursa, di\u011ferleriyle etkile\u015fim m\u00fcmk\u00fcn kal\u0131r.</p>\n<p>Ayr\u0131ca, canl\u0131 sistemdeki yakalanmam\u0131\u015f exceptionlar\u0131 \u00f6\u011frenmeniz ve d\u00fczeltmeniz i\u00e7in size JS hata bildirim servislerini kullanman\u0131z\u0131 (veya bir tane yazman\u0131z\u0131) \u015fiddetle tavsiye ederiz.</p>\n<h2 id=\"component-stack-traces\"><a class=\"anchor\" href=\"/react/error-boundaries#component-stack-traces\"></a>Bile\u015fen Y\u0131\u011f\u0131n\u0131 \u0130zi (Stack Trace) </h2>\n<p>React 16, uygulama kazara yutsa bile, render esnas\u0131nda olu\u015fan t\u00fcm hatalar\u0131 geli\u015ftirme a\u015famas\u0131nda konsola yazar. Hata mesaj\u0131 ve JavaScript y\u0131\u011f\u0131n\u0131n\u0131n (stack) yan\u0131 s\u0131ra, bile\u015fen y\u0131\u011f\u0131n\u0131 izini (stack trace) de size sunar. Bu sayede, hatan\u0131n bile\u015fen a\u011fac\u0131n\u0131n tam olarak neresinde oldu\u011funu g\u00f6rebilirsiniz:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/f1276837b03821b43358d44c14072945/c3a47/error-boundaries-stack-trace.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/f1276837b03821b43358d44c14072945/1e088/error-boundaries-stack-trace.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>Ayn\u0131 zamanda dosyan\u0131n ad\u0131 ve sat\u0131r numaras\u0131n\u0131 da bile\u015fen y\u0131\u011f\u0131n\u0131 izinde (stack trace) g\u00f6rebilirsiniz. Bu, <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a> projelerinde \u00f6ntan\u0131ml\u0131 olarak \u00e7al\u0131\u015fmaktad\u0131r:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/45611d4fdbd152829b28ae2348d6dcba/6dd26/error-boundaries-stack-trace-line-numbers.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/45611d4fdbd152829b28ae2348d6dcba/1e088/error-boundaries-stack-trace-line-numbers.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>E\u011fer Create React App kullanm\u0131yorsan\u0131z, <a class=\"external-link\" href=\"https://www.npmjs.com/package/@babel/plugin-transform-react-jsx-source\">bu eklentiyi</a> Babel yap\u0131land\u0131rman\u0131za elle ekleyebilirsiniz. Unutmay\u0131n ki bu sadece geli\u015ftirme i\u00e7indir ve <strong>canl\u0131da devre d\u0131\u015f\u0131 b\u0131rak\u0131lmal\u0131d\u0131r</strong>.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Y\u0131\u011f\u0131n izlerinde (stack trace) g\u00f6sterilen bile\u015fen isimleri, <a class=\"external-link\" href=\"https://developer.mozilla.org/tr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code class=\"language-javascript\">Function.name</code></a> \u00f6zelli\u011fine ba\u011fl\u0131d\u0131r. E\u011fer bunu hen\u00fcz desteklemeyen eski taray\u0131c\u0131lar\u0131 (\u00f6rne\u011fin IE 11) da destekliyorsan\u0131z, uygulaman\u0131zda <code class=\"language-javascript\">Function.name</code> deste\u011fi sunan <a class=\"external-link\" href=\"https://github.com/JamesMGreene/Function.name\"><code class=\"language-javascript\">function.name-polyfill</code></a> gibi bir polyfill kullanmay\u0131 d\u00fc\u015f\u00fcn\u00fcn. Alternatif olarak t\u00fcm bile\u015fenlerinizde <a href=\"/react/react-component#displayname\"><code class=\"language-javascript\">displayName</code></a> \u00f6zelli\u011fini ayarlayabilirsiniz.</p>\n</div>\n<h2 id=\"how-about-trycatch\"><a class=\"anchor\" href=\"/react/error-boundaries#how-about-trycatch\"></a>Peki Ya try/catch? </h2>\n<p><code class=\"language-javascript\">try</code> / <code class=\"language-javascript\">catch</code> harikad\u0131r ama sadece eylemsel (imperative) kodlarda \u00e7al\u0131\u015f\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">showButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ancak, React bile\u015fenleri bildirimseldir (declarative) ve <strong>neyin</strong> render edilece\u011fini belirlerler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Hata s\u0131n\u0131rlar\u0131 React\u2019in bildirimsel (declarative) do\u011fas\u0131n\u0131 korur ve beklendi\u011fi gibi davran\u0131r. \u00d6rne\u011fin, e\u011fer bile\u015fen a\u011fac\u0131n\u0131n derinlerinde bir yerde <code class=\"language-javascript\">componentDidUpdate</code> i\u00e7inde <code class=\"language-javascript\">setState</code>\u2018in yol a\u00e7t\u0131\u011f\u0131 bir hata olu\u015fsa bile en yak\u0131n hata s\u0131n\u0131r\u0131na do\u011fru bir \u015fekilde y\u00f6nlendirilir.</p>\n<h2 id=\"how-about-event-handlers\"><a class=\"anchor\" href=\"/react/error-boundaries#how-about-event-handlers\"></a>Peki Ya Olay Y\u00f6neticileri? </h2>\n<p>Hata s\u0131n\u0131rlar\u0131, olay y\u00f6neticileri i\u00e7inde olu\u015fan hatalar\u0131 <strong>yakalamazlar</strong>.</p>\n<p>React\u2019in olay y\u00f6neticileri i\u00e7inde olu\u015fan hatalar\u0131 atlatmaya ihtiyac\u0131 yoktur. Render ve ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131n\u0131n aksine, olay y\u00f6neticileri render a\u015famas\u0131nda olu\u015fmazlar. Yani onlar bir hata f\u0131rlatt\u0131\u011f\u0131nda, React hala ekranda ne g\u00f6sterece\u011fini bilir.</p>\n<p>E\u011fer bir olay y\u00f6neticisi i\u00e7inde bir hatay\u0131 yakalaman\u0131z gerekiyorsa, JavaScript\u2019in sundu\u011fu normal <code class=\"language-javascript\">try</code> / <code class=\"language-javascript\">catch</code> ifadesini kullan\u0131n:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Hata olu\u015fturacak bir \u015fey yap\u0131n</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hata yakaland\u0131.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Beni t\u0131kla</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Yukar\u0131daki \u00f6rnekte normal JavaScript davran\u0131\u015flar\u0131n\u0131n g\u00f6sterildi\u011fini ve hata s\u0131n\u0131rlar\u0131n\u0131n kullan\u0131lmad\u0131\u011f\u0131n\u0131 dikkate al\u0131n\u0131z.</p>\n<h2 id=\"naming-changes-from-react-15\"><a class=\"anchor\" href=\"/react/error-boundaries#naming-changes-from-react-15\"></a>React 15\u2019ten Sonraki \u0130sim De\u011fi\u015fiklikleri </h2>\n<p>React 15, hata s\u0131n\u0131rlar\u0131n\u0131 \u00e7ok limitli bir \u015fekilde destekleyen, <code class=\"language-javascript\">unstable_handleError</code> isimli ba\u015fka bir metod i\u00e7ermekteydi. Bu metod art\u0131k \u00e7al\u0131\u015fm\u0131yor ve onu ilk 16 beta versiyonundan itibaren kodunuzda <code class=\"language-javascript\">componentDidCatch</code> ile de\u011fi\u015ftirmeniz gerekmektedir.</p>\n<p>Bu de\u011fi\u015fiklik i\u00e7in, kodunuzun ta\u015f\u0131nmas\u0131n\u0131 otomatikle\u015ftirmek ad\u0131na bir <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#error-boundaries\">codemod</a> sunuyoruz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/error-boundaries.md\">Edit this page</a></p></div></article>", "path": "/react/error-boundaries", "nav": ["/react/context", "/react/forwarding-refs"]}, {"key": "Ref'leri Y\u00f6nlendirme", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Ref y\u00f6nlendirme bir <a href=\"/react/refs-and-the-dom\">ref</a>\u2018i \u00fcst bile\u015fenlerden alt bile\u015fenlerin birine otomatik olarak aktarma tekni\u011fidir. Bu genellikle uygulamadaki \u00e7o\u011fu bile\u015fen i\u00e7in gerekli de\u011fildir. Ama baz\u0131 bile\u015fen t\u00fcrleri i\u00e7in faydal\u0131 olabilir, \u00f6zellikle yeniden kullan\u0131labilir bile\u015fen k\u00fct\u00fcphaneleri i\u00e7in. En yayg\u0131n senaryolar a\u015fa\u011f\u0131da a\u00e7\u0131klanmaktad\u0131r.</p>\n<h2 id=\"forwarding-refs-to-dom-components\"><a class=\"anchor\" href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\"></a>Ref\u2019leri DOM bile\u015fenlerine aktarmak </h2>\n<p>Yerel (native) <code class=\"language-javascript\">button</code> \u00f6\u011fesini olu\u015fturan <code class=\"language-javascript\">FancyButton</code> bile\u015fenini d\u00fc\u015f\u00fcn\u00fcn:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>React bile\u015fenleri, render edilen \u00e7\u0131kt\u0131lar\u0131 da dahil olacak bir \u015fekilde uygulama ayr\u0131nt\u0131lar\u0131n\u0131 gizler. <code class=\"language-javascript\">FancyButton</code> bile\u015fenini kullanan di\u011fer bile\u015fenler, alt <code class=\"language-javascript\">button</code> DOM eleman\u0131 i\u00e7in genellikle <strong>gerekmeyen</strong> <a href=\"/react/refs-and-the-dom\">ref elde ederler.</a>. Bu iyi bir \u015feydir, \u00e7\u00fcnk\u00fc bile\u015fenlerin birbirilerinin DOM yap\u0131s\u0131na fazla ba\u011f\u0131ml\u0131 olmas\u0131n\u0131 \u00f6nler.</p>\n<p>Her ne kadar bu kaps\u00fclleme (encapsulation) <code class=\"language-javascript\">FeedStory</code> veya <code class=\"language-javascript\">Comment</code> gibi uygulama seviyesi bile\u015fenler i\u00e7in arzu edilse de, <code class=\"language-javascript\">FancyButton</code> veya <code class=\"language-javascript\">MyTextInput</code> gibi y\u00fcksek oranda yeniden kullan\u0131labilir \u201cyaprak\u201d bile\u015fenler i\u00e7in sak\u0131ncal\u0131 olabilir. Bu bile\u015fenler uygulama boyunca normal bir DOM <code class=\"language-javascript\">button</code> ve <code class=\"language-javascript\">input</code> \u00f6\u011feleri gibi benzer \u015fekilde kullan\u0131lma e\u011filimindedir, odaklama, se\u00e7im veya animasyonlar\u0131 y\u00f6netmek i\u00e7in DOM d\u00fc\u011f\u00fcmlerine eri\u015fmek ka\u00e7\u0131n\u0131lmaz olabilir.</p>\n<p><strong>Ref y\u00f6nlendirme, baz\u0131 bile\u015fenlerin ald\u0131klar\u0131 bir ref\u2019i almas\u0131n\u0131 ve daha alt elemente aktarmas\u0131n\u0131 sa\u011flayan bir etkinle\u015ftirme \u00f6zelli\u011fidir</strong></p>\n<p>Alttaki \u00f6rnekte, <code class=\"language-javascript\">FancyButton</code> kendisine aktar\u0131lan ref\u2019i elde etmek i\u00e7in <code class=\"language-javascript\">React.forwardRef</code> kullan\u0131l\u0131r ve ard\u0131ndan olu\u015fturdu\u011fu DOM <code class=\"language-javascript\">button</code>\u2018a iletir:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> FancyButton <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// You can now get a ref directly to the DOM button:</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click me!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyButton</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Bu \u015fekilde, <code class=\"language-javascript\">FancyButton</code> kullanan bile\u015fenler, temelde bulunan <code class=\"language-javascript\">button</code> DOM d\u00fc\u011f\u00fcm\u00fcne bir ref olu\u015fturabilir ve gerekirse do\u011frudan bir DOM <code class=\"language-javascript\">button</code> kullanm\u0131\u015f gibi eri\u015febilir.</p>\n<p>Yukar\u0131daki \u00f6rnekte neler oldu\u011funa dair ad\u0131m ad\u0131m a\u00e7\u0131klama:</p>\n<ol>\n<li><code class=\"language-javascript\">React.createRef</code>\u2018i \u00e7a\u011f\u0131rarak bir <a href=\"/react/refs-and-the-dom\">React ref</a> olu\u015fturuyoruz ve <code class=\"language-javascript\">ref</code> de\u011fi\u015fkenine atama yap\u0131yoruz.</li>\n<li>JSX \u00f6zelli\u011fi olarak belirterek <code class=\"language-javascript\">ref</code>\u2018i <code class=\"language-javascript\">&lt;FancyButton ref={ref}&gt;</code> bile\u015fenine aktar\u0131yoruz.</li>\n<li>React, ikinci bir arg\u00fcman olarak <code class=\"language-javascript\">ref</code>\u2018yi <code class=\"language-javascript\">forwardRef</code> i\u00e7indeki <code class=\"language-javascript\">(props, ref) =&gt; ...</code> fonksiyonuna iletir.</li>\n<li>JSX \u00f6zelli\u011fi olarak belirterek, <code class=\"language-javascript\">ref</code> arg\u00fcman\u0131n\u0131 <code class=\"language-javascript\">&lt;button ref={ref}&gt;</code>\u2018a aktar\u0131yoruz.</li>\n<li>Ref eklendi\u011finde. <code class=\"language-javascript\">ref.current</code>, <code class=\"language-javascript\">&lt;button&gt;</code> DOM d\u00fc\u011fm\u00fcne i\u015faret edecektir.</li>\n</ol>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>\u0130kinci <code class=\"language-javascript\">ref</code> arg\u00fcman\u0131 yaln\u0131zca <code class=\"language-javascript\">React.forwardRef</code> \u00e7a\u011fr\u0131s\u0131yla olu\u015fur. Normal fonksiyon veya s\u0131n\u0131f bile\u015fenleri <code class=\"language-javascript\">ref</code> arg\u00fcman\u0131 almaz, ayr\u0131ca ref prop\u2019larda da mevcut de\u011fildir.</p>\n<p>Ref y\u00f6nlendirme yaln\u0131zca DOM bile\u015fenleri ile s\u0131n\u0131rl\u0131 de\u011fildir. ref\u2019leri s\u0131n\u0131f bile\u015fenlerinden t\u00fcretilen nesnelere de aktarabilirsiniz.</p>\n</div>\n<h2 id=\"note-for-component-library-maintainers\"><a class=\"anchor\" href=\"/react/forwarding-refs#note-for-component-library-maintainers\"></a>Bile\u015fen k\u00fct\u00fcphanesine bak\u0131m yapanlara not </h2>\n<p><strong><code class=\"language-javascript\">forwardRef</code>\u2018i bir bile\u015fen i\u00e7inde kullanmaya ba\u015flad\u0131\u011f\u0131n\u0131zda, Bunu tehlikeli bir de\u011fi\u015fim olarak de\u011ferlendirmelisiniz ve yeni bir s\u00fcr\u00fcm yay\u0131nlamal\u0131s\u0131n\u0131z.</strong> Bunun nedeni, k\u00fct\u00fcphanenizin b\u00fcy\u00fck olas\u0131l\u0131kla g\u00f6zle g\u00f6r\u00fcl\u00fcr \u015fekilde farkl\u0131 bir yakla\u015f\u0131ma sahip olmas\u0131d\u0131r (ref\u2019lerin atamas\u0131 ve hangi t\u00fcrlerin d\u0131\u015fa aktar\u0131ld\u0131\u011f\u0131 gibi), ve eski yakla\u015f\u0131ma ba\u011fl\u0131 uygulamalar\u0131 ve di\u011fer k\u00fct\u00fcphaneleri etkiliyebilir.</p>\n<p>Mevcut oldu\u011funda <code class=\"language-javascript\">React.forwardRef</code>\u2018i ko\u015fullu olarak uygulamak da ayn\u0131 nedenlerle \u00f6nerilmez:\nK\u00fct\u00fcphanenizin bi\u00e7imini de\u011fi\u015ftirir ve React\u2019i y\u00fckselttiklerinde kullan\u0131c\u0131lar\u0131n\u0131z\u0131n uygulamalar\u0131n\u0131 bozabilir.</p>\n<h2 id=\"forwarding-refs-in-higher-order-components\"><a class=\"anchor\" href=\"/react/forwarding-refs#forwarding-refs-in-higher-order-components\"></a>\u00dcst-Seviye Bile\u015fenlerde ref\u2019leri y\u00f6nlendirme </h2>\n<p>Bu teknik, \u00fcst-seviye bile\u015fenlerde \u00f6zellikle yararl\u0131 olabilir <a href=\"/react/higher-order-components\">higher-order components</a> (HOC olarak da bilinir). Konsola bile\u015fen prop\u2019lar\u0131n\u0131 yazd\u0131ran \u00f6rnek bir HOC ile ba\u015flayal\u0131m:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'old props:'</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new props:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> LogProps<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>\u201clogProps\u201d HOC, t\u00fcm prop\u2019lar\u0131 kaplad\u0131\u011f\u0131 bile\u015fene aktar\u0131r, b\u00f6ylece sonu\u00e7 ayn\u0131 olacakt\u0131r.\n\u00d6rne\u011fin, \u201cfancy button\u201d bile\u015fenimize iletilen t\u00fcm prop\u2019lar\u0131 yazd\u0131rmak i\u00e7in bu HOC\u2019u kullanabiliriz.\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FancyButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Rather than exporting FancyButton, we export LogProps.</span>\n<span class=\"token comment\">// It will render a FancyButton though.</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span>FancyButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n</div></p>\n<p>Yukar\u0131daki \u00f6rnekle ilgili bir uyar\u0131: ref\u2019ler iletilmeyecek. Bunun nedeni <code class=\"language-javascript\">ref</code> prop de\u011fildir. <code class=\"language-javascript\">key</code> gibi, React taraf\u0131ndan farkl\u0131 \u015fekilde ele al\u0131n\u0131r. Bir HOC\u2019a ref eklerseniz ref, kaplanm\u0131\u015f bile\u015fene de\u011fil, en d\u0131\u015ftaki kapsayc\u0131 bile\u015fene at\u0131fta bulunacakt\u0131r.</p>\n<p>Bu, <code class=\"language-javascript\">FancyButton</code> bile\u015feni i\u00e7in istenilen ref\u2019lerin asl\u0131nda <code class=\"language-javascript\">LogProps</code> bile\u015fenine eklenece\u011fi anlam\u0131na gelir.\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> FancyButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./FancyButton'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token comment\">// The FancyButton component we imported is the LogProps HOC.</span>\n<span class=\"token comment\">// Even though the rendered output will be the same,</span>\n<span class=\"token comment\">// Our ref will point to LogProps instead of the inner FancyButton component!</span>\n<span class=\"token comment\">// This means we can't call e.g. ref.current.focus()</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span>\n  <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Click Me<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">handleClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Neyse ki, ref\u2019leri <code class=\"language-javascript\">React.forwardRef</code> API\u2019\u0131n\u0131 kullanarak i\u00e7 <code class=\"language-javascript\">FancyButton</code> bile\u015fenine iletebiliriz. <code class=\"language-javascript\">React.forwardRef</code>, <code class=\"language-javascript\">props</code> ve <code class=\"language-javascript\">ref</code> parametrelerini alan ve bir React d\u00fc\u011f\u00fcm\u2019u d\u00f6nd\u00fcren render fonksiyonu kabul eder. \u00d6rne\u011fin:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'old props:'</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new props:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>forwardedRef<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span></span>\n      <span class=\"token comment\">// Assign the custom prop \"forwardedRef\" as a ref</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>forwardedRef<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Note the second param \"ref\" provided by React.forwardRef.</span>\n  <span class=\"token comment\">// We can pass it along to LogProps as a regular prop, e.g. \"forwardedRef\"</span>\n  <span class=\"token comment\">// And it can then be attached to the Component.</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h2 id=\"displaying-a-custom-name-in-devtools\"><a class=\"anchor\" href=\"/react/forwarding-refs#displaying-a-custom-name-in-devtools\"></a>DevTools\u2019ta \u00f6zel bir ad g\u00f6r\u00fcnt\u00fcleme </h2>\n<p><code class=\"language-javascript\">React.forwardRef</code> render fonksiyonu kabul eder. React DevTools, ref y\u00f6nlendirme bile\u015feni i\u00e7in neyin g\u00f6r\u00fcnt\u00fclenece\u011fini belirlemek i\u00e7in bu fonksiyonu kullan\u0131r.</p>\n<p>\u00d6rne\u011fin, a\u015fa\u011f\u0131daki bile\u015fen DevTools\u2019ta \u201d<em>ForwardRef</em>\u201d olarak g\u00f6r\u00fcn\u00fcr</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Olu\u015fturma fonksiyonunu adland\u0131r\u0131rsan\u0131z, DevTools ayr\u0131ca ad\u0131n\u0131 da ekler (\u00f6rn. \u201d<em>ForwardRef(myFunction)</em>\u201d):</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Hatta fonksiyonun <code class=\"language-javascript\">displayName</code> \u00f6zelli\u011fini kaplad\u0131\u011f\u0131n\u0131z bile\u015feni i\u00e7erecek \u015fekilde ayarlayabilirsiniz:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogProps</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">forwardedRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Give this component a more helpful display name in DevTools.</span>\n  <span class=\"token comment\">// e.g. \"ForwardRef(logProps(MyComponent))\"</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> Component<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">||</span> Component<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  forwardRef<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">logProps(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>forwardRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/forwarding-refs.md\">Edit this page</a></p></div></article>", "path": "/react/forwarding-refs", "nav": ["/react/error-boundaries", "/react/fragments"]}, {"key": "Fragment'ler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React\u2019teki ortak model, bir bile\u015fenin birden fazla \u00f6\u011fe d\u00f6nd\u00fcrmesidir. Fragmentler, Dom\u2019a ekstra d\u00fc\u011f\u00fcm eklemeden bir alt elemanlar listesini grupland\u0131rman\u0131za izin verir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildA</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildB</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildC</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Onlar\u0131 tan\u0131mlamak i\u00e7in yeni bir <a href=\"/react/fragments#short-syntax\">k\u0131sa s\u00f6zdizimi</a> de vard\u0131r.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/fragments#motivation\"></a>Motivasyon </h2>\n<p>Bir bile\u015fenin alt eleman listesini d\u00f6nd\u00fcrmesi i\u00e7in yayg\u0131n bir modeldir. \u00d6rnek i\u00e7in bu React kod par\u00e7as\u0131na bak\u0131n.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Table</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Columns</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Olu\u015fturulan HTML\u2019in ge\u00e7erli olmas\u0131 i\u00e7in <code class=\"language-javascript\">&lt;Columns /&gt;</code> birden fazla <code class=\"language-javascript\">&lt;td&gt;</code> \u00f6\u011fesini d\u00f6nd\u00fcrmesi gerekir. Bir \u00fcst div <code class=\"language-javascript\">&lt;Columns /&gt;</code> bile\u015feninin <code class=\"language-javascript\">render()</code> metodu i\u00e7inde kullan\u0131lm\u0131\u015fsa, sonu\u00e7ta ortaya \u00e7\u0131kan HTML ge\u00e7ersiz olacakt\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00fcnya</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">&lt;Table /&gt;</code> \u00e7\u0131kt\u0131s\u0131n\u0131n sonucu:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Fragmentler bu sorunu \u00e7\u00f6zer.</p>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/fragments#usage\"></a>Kullan\u0131m </h2>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00fcnya</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">&lt;Table /&gt;</code> \u00e7\u0131kt\u0131s\u0131n\u0131n do\u011fru sonucu:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00fcnya</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h3 id=\"short-syntax\"><a class=\"anchor\" href=\"/react/fragments#short-syntax\"></a>K\u0131sa S\u00f6zdizimi </h3>\n<p>Fragmentleri tan\u0131mlamak i\u00e7in kullanabilece\u011finiz yeni, daha k\u0131sa bir s\u00f6zdizimi var. Bo\u015f etiketlere benziyor:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Columns</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">D\u00fcnya</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Anahtarlar\u0131 veya nitelikleri desteklememesi d\u0131\u015f\u0131nda, di\u011fer elementleri kulland\u0131\u011f\u0131n\u0131z gibi <code class=\"language-javascript\">&lt;&gt;&lt;/&gt;</code> kullanabilirsiniz.</p>\n<p>Not, <strong><a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/11/28/react-v16.2.0-fragment-support.html#support-for-fragment-syntax\">bir\u00e7ok ara\u00e7 hen\u00fcz desteklemiyor</a></strong>. Bu nedenle, destekleninceye kadar <code class=\"language-javascript\">&lt;React.Fragment&gt;</code> yazmak isteyebilirsiniz.</p>\n<h3 id=\"keyed-fragments\"><a class=\"anchor\" href=\"/react/fragments#keyed-fragments\"></a>Anahtarl\u0131 Fragment\u2019ler </h3>\n<p>A\u00e7\u0131k\u00e7a belirtilen <code class=\"language-javascript\">&lt;React.Fragment&gt;</code> s\u00f6zdiziminin anahtarlar\u0131 olabilir. Bunun i\u00e7in bir kullan\u0131m durumu, bir koleksiyonun bir fragmentler dizisine e\u015flenmesidir. \u2014 \u00f6rne\u011fin, bir a\u00e7\u0131klama listesi olu\u015fturmak i\u00e7in:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Glossary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token comment\">// `key` olmadan, React \u00f6nemli bir uyar\u0131y\u0131 tetikler</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>term<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">key</code>, <code class=\"language-javascript\">Fragment</code>\u2018e iletilebilecek tek \u00f6zelliktir. Gelecekte, olay y\u00f6neticileri gibi ek \u00f6zellikler i\u00e7in destek ekleyebiliriz.</p>\n<h3 id=\"live-demo\"><a class=\"anchor\" href=\"/react/fragments#live-demo\"></a>Canl\u0131 Demo </h3>\n<p>Bununla yeni JSX fragment s\u00f6zdizimini deneyebilirsiniz: <a class=\"external-link\" href=\"https://codepen.io/reactjs/pen/VrEbjE?editors=1000\">CodePen</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/fragments.md\">Edit this page</a></p></div></article>", "path": "/react/fragments", "nav": ["/react/forwarding-refs", "/react/higher-order-components"]}, {"key": "\u00dcst-Seviye Bile\u015fenler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bir \u00fcst-seviye bile\u015fen (\u0130ngilizcesi Higher-Order Component - HOC) React\u2019te bile\u015fen mant\u0131\u011f\u0131n\u0131n tekrar kullan\u0131lmas\u0131na yarayan ileri d\u00fczey bir tekniktir. HOC\u2019lar React API\u2019n\u0131n bir par\u00e7as\u0131 de\u011fildir asl\u0131nda. React\u2019\u0131n bile\u015fen t\u00fcmleyici do\u011fas\u0131ndan do\u011fan bir modeldir.</p>\n<p>Daha a\u00e7\u0131klay\u0131c\u0131 olmak gerekirse, <strong>bir \u00fcst-seviye bile\u015fen; parametre olarak bir bile\u015fen al\u0131p output olarak yeni bir bile\u015fen d\u00f6nd\u00fcren bir fonksiyondur.</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">higherOrderComponent</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir bile\u015fen; proplar\u0131n\u0131 kullan\u0131c\u0131 aray\u00fcz\u00fcne \u00e7evirirken, \u00fcst-seviye bir bile\u015fen ba\u015fka bir bile\u015feni al\u0131p farkl\u0131 bir bile\u015fene \u00e7evirir.</p>\n<p>HOC\u2019lar Redux\u2019un <a class=\"external-link\" href=\"https://github.com/reduxjs/react-redux/blob/master/docs/api/connect.md#connect\"><code class=\"language-javascript\">connect</code></a> ve Relay\u2019in <a class=\"external-link\" href=\"https://relay.dev/docs/v10.1.3/fragment-container/#createfragmentcontainer\"><code class=\"language-javascript\">createFragmentContainer</code></a> gibi \u00fc\u00e7\u00fcnc\u00fc taraf React k\u00fct\u00fcphanelerinde yayg\u0131nd\u0131r.</p>\n<p>Bu dok\u00fcmanda neden \u00fcst-seviye bile\u015fenlerin kullan\u0131\u015fl\u0131 oldu\u011funu tart\u0131\u015f\u0131p, bunlar\u0131 nas\u0131l yazabilece\u011finiz hakk\u0131nda konu\u015faca\u011f\u0131z.</p>\n<h2 id=\"use-hocs-for-cross-cutting-concerns\"><a class=\"anchor\" href=\"/react/higher-order-components#use-hocs-for-cross-cutting-concerns\"></a>HOC\u2019lar\u0131 Uygulama Genelindeki Sorunlar i\u00e7in Kullan\u0131n </h2>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Daha \u00f6nce uygulama genelindeki sorunlar i\u00e7in mixin\u2019lerin kullan\u0131lmas\u0131n\u0131 \u00f6nermi\u015ftik. Fakat o zamandan beri fark ettik ki, mixin\u2019ler yarardan \u00e7ok zarara yol a\u00e7\u0131yor. Mixin\u2019lerden neden uzakla\u015ft\u0131\u011f\u0131m\u0131z konusunda ve nas\u0131l varolan bile\u015fenlerinizi mixin\u2019lerden ge\u00e7irebilece\u011finiz hakk\u0131nda daha fazla bilgiye <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">buradan</a> ula\u015fabilirsiniz.</p>\n</div>\n<p>Bile\u015fenler React\u2019te yeniden kod kullan\u0131m\u0131n\u0131n temel birimidir. Fakat, baz\u0131 davran\u0131\u015flar\u0131n al\u0131\u015f\u0131lageldik bile\u015fenlerle kullan\u0131lmaya uygun olmad\u0131\u011f\u0131n\u0131 g\u00f6receksiniz.</p>\n<p>\u00d6rne\u011fin, <code class=\"language-javascript\">CommentList</code> diye bir d\u0131\u015f data kayna\u011f\u0131na ba\u011flanan bir bile\u015feniniz oldu\u011funu varsayal\u0131m.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CommentList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \"DataSource\" is some global data source</span>\n      <span class=\"token literal-property property\">comments</span><span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Subscribe to changes</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Clean up listener</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update component state whenever the data source changes</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">comments</span><span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comment</span></span> <span class=\"token attr-name\">comment</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sonra, benzer bir davran\u0131\u015f sergileyen, tek bir blog g\u00f6nderisine ba\u011flanan bir bile\u015fen yaz\u0131yorsunuz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPost</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">blogPost</span><span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">blogPost</span><span class=\"token operator\">:</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextBlock</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>blogPost<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">CommentList</code> ve <code class=\"language-javascript\">BlogPost</code> birebir ayn\u0131 de\u011fil - <code class=\"language-javascript\">DataSource</code>\u2018da farkl\u0131 methodlar \u00e7a\u011f\u0131r\u0131yorlar ve farkl\u0131 \u00e7\u0131kt\u0131lar renderl\u0131yorlar. Fakat, kodlamas\u0131n\u0131n \u00e7o\u011fu ayn\u0131:</p>\n<ul>\n<li>Y\u00fckleme (mount) s\u0131ras\u0131nda <code class=\"language-javascript\">DataSource</code>\u2018a bir de\u011fi\u015fken dinleyici eklemek.</li>\n<li>Dinleyicinin i\u00e7inde, data kayna\u011f\u0131 de\u011fi\u015fti\u011finde <code class=\"language-javascript\">setState</code>\u2018i \u00e7a\u011f\u0131rmak</li>\n<li>Unmount\u2019da, de\u011fi\u015fken dinleyiciyi kald\u0131rmak.</li>\n</ul>\n<p>B\u00fcy\u00fck bir uygulamada, bu <code class=\"language-javascript\">DataSource</code>\u2018a ba\u011flanan ve <code class=\"language-javascript\">setState</code>\u2018i \u00e7a\u011f\u0131ran davran\u0131\u015f\u0131n s\u00fcrekli tekrarlanaca\u011f\u0131n\u0131 hayal edebilirsiniz. Fakat bizim istedi\u011fimiz \u015fey bu davran\u0131\u015f\u0131 somutla\u015ft\u0131rmak ve bu davran\u0131\u015f\u0131 tek bir yerde birden fazla bile\u015fen aras\u0131nda payla\u015fmak. \u0130\u015fte bu gibi durumlarda \u00dcst-seviye bile\u015fenler i\u015fimize yar\u0131yor.</p>\n<p><code class=\"language-javascript\">CommentList</code> ve <code class=\"language-javascript\">BlogPost</code> gibi <code class=\"language-javascript\">DataSource</code>\u2018a ba\u011flanacak bile\u015fenleri \u00fcretecek bir fonksiyon yazabiliriz. Foknsiyon arguman olarak, elde edilen datay\u0131 prop olarak alan bir alt eleman alacak. Fonksiyonun ad\u0131n\u0131 <code class=\"language-javascript\">withSubscription</code> koyal\u0131m.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> CommentListWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  CommentList<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> BlogPostWithSubscription <span class=\"token operator\">=</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span>\n  BlogPost<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">DataSource<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getBlogPost</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u0130lk parametre kaplanan bile\u015fen. \u0130kinci parametre is <code class=\"language-javascript\">DataSource</code> ve anl\u0131k proplar\u0131 ald\u0131\u011f\u0131 zaman ilgilendi\u011fimiz datay\u0131 \u00e7ekiyor.</p>\n<p><code class=\"language-javascript\">CommentListWithSubscription</code> ve <code class=\"language-javascript\">BlogPostWithSubscription</code> render edildi\u011finde <code class=\"language-javascript\">CommentList</code> ve <code class=\"language-javascript\">BlogPost</code>\u2018a bir <code class=\"language-javascript\">data</code> propu gelecek ve bu data\u2019da <code class=\"language-javascript\">DataSource</code>\u2018tan \u00e7ekilen en g\u00fccel data bulunacak.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// This function takes a component...</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent<span class=\"token punctuation\">,</span> selectData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...and returns another component...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... that takes care of the subscription...</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">addChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      DataSource<span class=\"token punctuation\">.</span><span class=\"token function\">removeChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token function\">selectData</span><span class=\"token punctuation\">(</span>DataSource<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ... and renders the wrapped component with the fresh data!</span>\n      <span class=\"token comment\">// Notice that we pass through any additional props</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bir HOC\u2019un input bile\u015fenini de\u011fi\u015ftirmedi\u011fini ve davran\u0131\u015f\u0131 kopyalamak i\u00e7in inheritance kullanmad\u0131\u011f\u0131na dikkat ediniz. Bunun yerine; HOC, orjinal bile\u015feni bir container i\u00e7ine alarak bu bile\u015feni yarat\u0131r. Bir HOC yan etkisi olmayan saf bir fonksiyondur.</p>\n<p>\u0130\u015fte bu kadar! Kapsanan bile\u015fen, kapsayan bile\u015fenin b\u00fct\u00fcn proplar\u0131n\u0131 al\u0131r ayr\u0131ca output\u2019unu render etmek i\u00e7in yeni bir prop olan <code class=\"language-javascript\">data</code>\u2018y\u0131 al\u0131r. Data\u2019n\u0131n neden veya nas\u0131l kullan\u0131ld\u0131\u011f\u0131 HOC\u2019u ilgilendirmez ve kapsanan bile\u015fen de data\u2019n\u0131n nereden geldi\u011fiyle ilgilenmez.</p>\n<p><code class=\"language-javascript\">withSubscription</code> normal bir fonksiyon oldu\u011fundan, istedi\u011finiz kadar arguman ekleyebilirsiniz. \u00d6rne\u011fin, <code class=\"language-javascript\">data</code> prop ismini de\u011fi\u015ftirilebilir yapmak isteyebilirsiniz, bu sayede HOC ve kapsanan bile\u015fen birbirinden daha ayr\u0131k bir hale gelecektir. Ya da <code class=\"language-javascript\">shouldComponentUpdate</code>\u2018i veya data kayna\u011f\u0131n\u0131 ayarlayan bir arguman alabilirsiniz. Bunlar\u0131n m\u00fcmk\u00fcn olmas\u0131n\u0131n sebebi ise HOC\u2019un bile\u015fenin nas\u0131l tan\u0131mland\u0131\u011f\u0131 \u00fczerinde tam kontrole sahip olmas\u0131d\u0131r.</p>\n<p>Bile\u015fenlerde oldu\u011fu gibi, <code class=\"language-javascript\">withSubscription</code> ile kapsanan bile\u015fen aras\u0131ndaki ba\u011flant\u0131 tamamen proplar \u00fczerindendir. Bu da kapsanan bile\u015fene ayn\u0131 proplar\u0131 sa\u011flad\u0131klar\u0131 s\u00fcrece bir HOC\u2019u ba\u015fka bir HOC\u2019la de\u011fi\u015ftirmeyi kolayla\u015ft\u0131r\u0131r. E\u011fer data alman\u0131za yarayan k\u00fct\u00fcphaneleri kullan\u0131rsan\u0131z bu de\u011fi\u015fkenlik i\u015finize yarayabilir.</p>\n<h2 id=\"dont-mutate-the-original-component-use-composition\"><a class=\"anchor\" href=\"/react/higher-order-components#dont-mutate-the-original-component-use-composition\"></a>Orijinal Bile\u015feni De\u011fi\u015ftirmeyin. Composition Kullan\u0131n. </h2>\n<p>HOC i\u00e7erisinde bile\u015fenin prototipini de\u011fi\u015ftirmemeye \u00e7al\u0131\u015f\u0131n.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">InputComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">InputComponent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">componentDidUpdate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Current props: '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Previous props: '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The fact that we're returning the original input is a hint that it has</span>\n  <span class=\"token comment\">// been mutated.</span>\n  <span class=\"token keyword\">return</span> InputComponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// EnhancedComponent will log whenever props are received</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span>InputComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bununla alakal\u0131 bir ka\u00e7 problem var. Birincisi, girdi olarak kullan\u0131lan bile\u015fen geli\u015ftirilmi\u015f bile\u015fenden ayr\u0131 olarak yeniden kullan\u0131lamaz. Daha \u00f6nemlisi, <code class=\"language-javascript\">EnchancedComponent</code>\u2018e ba\u015fka bir HOC uygularsan\u0131z, o da <code class=\"language-javascript\">componentDidUpdate</code>\u2018i de\u011fi\u015ftirecektir; ilk HOC\u2019un fonksiyonalitesi kaybolacakt\u0131r. Ayr\u0131ca bu HOC, ya\u015fam d\u00f6ng\u00fcs\u00fc methodlar\u0131 i\u00e7ermedikleri i\u00e7in, fonksiyonel bile\u015fenlerle \u00e7al\u0131\u015fmayacakt\u0131r.</p>\n<p>HOC\u2019lar\u0131 de\u011fi\u015ftirmek s\u0131k\u0131nt\u0131l\u0131 bir soyutlama y\u00f6ntemidir\u2014 kodu kullanacak ki\u015finin bunlar\u0131n nas\u0131l kodland\u0131\u011f\u0131n\u0131 bilmesi gerekiyor, yoksa di\u011fer HOC\u2019larla s\u0131k\u0131nt\u0131 ya\u015fayabilir.</p>\n<p>HOC\u2019lar, datayi degistirmek yerine girdi bile\u015fenini bir kapsay\u0131c\u0131 bile\u015fene sararak bile\u015fim (composition) yontemini kullanmal\u0131d\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">logProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Current props: '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Previous props: '</span><span class=\"token punctuation\">,</span> prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Wraps the input component in a container, without mutating it. Good!</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu HOC degistiren versiyonla ayn\u0131 islevsellige sahiptir ve bunu yaparken de potansiyel s\u0131k\u0131nt\u0131lardan da kacinmaktadir. Ayn\u0131 zamanda hem class bile\u015fenlerle hem fonksiyonel bile\u015fenlerle ayn\u0131 \u015fekilde iyi \u00e7al\u0131\u015f\u0131yor. Ayr\u0131ca saf bir fonksiyon oldu\u011fu i\u00e7in kendisi de dahil di\u011fer HOC\u2019larla \u00e7al\u0131\u015fabilir durumda.</p>\n<p>HOC\u2019lar\u0131n ve <strong>kapsay\u0131c\u0131 bile\u015fenler (container components)</strong> adl\u0131 bir teknik aras\u0131nda bir ka\u00e7 benzerlik fark etmi\u015f olabilirsiniz. Kapsay\u0131c\u0131 bile\u015fenler \u00fcst ve alt seviyeyle alakal\u0131 sorumlulu\u011fu birbirinden ayr\u0131maya yarayan bir stratejidir. Container\u2019lar olaylar\u0131 dinlemek, state ve proplar\u0131n bile\u015fenler aras\u0131nda yollanmas\u0131 gibi UI\u2019yla alakal\u0131 olaylarla ilgilenirler. HOC\u2019lar ise container\u2019lar\u0131 kendilerini hayata ge\u00e7irmekte kullan\u0131rlar. HOC\u2019lar\u0131, parametrize edilmi\u015f bile\u015fen tan\u0131mlar\u0131 gibi d\u00fc\u015f\u00fcnebilirsiniz.</p>\n<h2 id=\"convention-pass-unrelated-props-through-to-the-wrapped-component\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-pass-unrelated-props-through-to-the-wrapped-component\"></a>Kural: Alakas\u0131z Proplar\u0131 Kapsanan Bile\u015fen \u00dczerinden Ge\u00e7irin </h2>\n<p>HOC\u2019lar bile\u015fenlere yeni \u00f6zellikler eklerler. Ama genel olarak yapt\u0131\u011f\u0131 i\u015fleri \u00e7ok fazla de\u011fi\u015ftirmemeleri gerekir. HOC\u2019tan d\u00f6nen bir bile\u015fenin, kapsanan bile\u015fenle benzer bir interface\u2019e sahip olmas\u0131 beklenir.</p>\n<p>HOC\u2019lar kendileriyle alakas\u0131 olmayan proplar\u0131 da ge\u00e7irmelidirler. \u00c7o\u011fu HOC \u015fu tarz bir render metoduna sahiptir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Filter out extra props that are specific to this HOC and shouldn't be</span>\n  <span class=\"token comment\">// passed through</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> extraProp<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>passThroughProps <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Inject props into the wrapped component. These are usually state values or</span>\n  <span class=\"token comment\">// instance methods.</span>\n  <span class=\"token keyword\">const</span> injectedProp <span class=\"token operator\">=</span> someStateOrInstanceMethod<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Pass props to wrapped component</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span>\n      <span class=\"token attr-name\">injectedProp</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>injectedProp<span class=\"token punctuation\">}</span></span>\n      <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>passThroughProps<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu kural HOC\u2019lar\u0131n yeterince de\u011fi\u015fken ve yeniden kullan\u0131labilir olmas\u0131n\u0131 sa\u011flar.</p>\n<h2 id=\"convention-maximizing-composability\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-maximizing-composability\"></a>Kural: Composability\u2019yi En \u00dcst Seviyeye \u00c7\u0131kartmak </h2>\n<p>T\u00fcm HOC\u2019lar ayn\u0131 g\u00f6z\u00fckmez. Bazen sadece bir arg\u00fcman ald\u0131klar\u0131 da olur, bu da kapsanan bile\u015fendir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> NavbarWithRouter <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Navbar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Genellike HOC\u2019lar ba\u015fka arg\u00fcman da al\u0131rlar. Relay\u2019den al\u0131nan bu \u00f6rnekte, bir config objesi bile\u015fenin data ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 tan\u0131mlamak i\u00e7in kullan\u0131l\u0131yor.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> CommentWithRelay <span class=\"token operator\">=</span> Relay<span class=\"token punctuation\">.</span><span class=\"token function\">createContainer</span><span class=\"token punctuation\">(</span>Comment<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>HOC\u2019lar\u0131n en yayg\u0131n kullan\u0131m \u015fekli \u015funa benzer:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// React Redux's `connect`</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">,</span> commentActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Nas\u0131l?!</em> E\u011fer ayr\u0131\u015ft\u0131r\u0131rsan\u0131z g\u00f6rmesi daha kolay olur.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// connect is a function that returns another function</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentListSelector<span class=\"token punctuation\">,</span> commentListActions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// The returned function is a HOC, which returns a component that is connected</span>\n<span class=\"token comment\">// to the Redux store</span>\n<span class=\"token keyword\">const</span> ConnectedComment <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>CommentList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Di\u011fer bir deyi\u015fle, <code class=\"language-javascript\">connect</code> \u00fcst-seviye bile\u015fen d\u00f6nd\u00fcren bir \u00fcst-seviye fonksiyondur!</p>\n<p>Bu \u015fekil karma\u015f\u0131k ve gereksiz g\u00f6z\u00fckebilir, ama i\u015fe yarayan bir \u00f6zelli\u011fi var. <code class=\"language-javascript\">connect</code> taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen HOC\u2019lar \u015f\u00f6yle bir kullan\u0131ma sahiptir <code class=\"language-javascript\">Component =&gt; Component</code>. Girdisi ve \u00e7\u0131kt\u0131s\u0131 ayn\u0131 olan fonksiyonlar\u0131n birbirleriyle kullan\u0131m\u0131 \u00e7ok kolayd\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Instead of doing this...</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ... you can use a function composition utility</span>\n<span class=\"token comment\">// compose(f, g, h) is the same as (...args) =&gt; f(g(h(...args)))</span>\n<span class=\"token keyword\">const</span> enhance <span class=\"token operator\">=</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// These are both single-argument HOCs</span>\n  withRouter<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>commentSelector<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span></code></pre></div>\n<p>(Ayr\u0131ca bu \u00f6zellik <code class=\"language-javascript\">connect</code> ve di\u011fer geli\u015ftirme \u00f6zellikli HOC\u2019lar\u0131n decorator olarak kullan\u0131lmas\u0131n\u0131 da sa\u011flar, decorator deneysel bir JavaScript \u00f6nerisidir)</p>\n<p><code class=\"language-javascript\">compose</code> fonksiyonu ana bir \u00f6zelli\u011fi olmasa da kullan\u0131\u015fl\u0131 olmas\u0131 a\u00e7\u0131s\u0131ndan bir \u00e7ok 3. Parti k\u00fct\u00fcphaneleri taraf\u0131ndan kullan\u0131l\u0131r, bunlar\u0131n i\u00e7inde lodash(<a class=\"external-link\" href=\"https://lodash.com/docs/#flowRight\"><code class=\"language-javascript\">lodash.flowRight</code></a> olarak), <a class=\"external-link\" href=\"https://redux.js.org/api/compose\">Redux</a> ve <a class=\"external-link\" href=\"https://ramdajs.com/docs/#compose\">Ramda</a> da bulunur.</p>\n<h2 id=\"convention-wrap-the-display-name-for-easy-debugging\"><a class=\"anchor\" href=\"/react/higher-order-components#convention-wrap-the-display-name-for-easy-debugging\"></a>Kural: Kolay Debug Etmek i\u00e7in G\u00f6sterilen Ad\u0131 Kapsay\u0131n </h2>\n<p>HOC\u2019lar taraf\u0131ndan yarat\u0131lan kapsayan bile\u015fenler, di\u011fer bile\u015fenler gibi <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-devtools\">React Developer Tools</a> taraf\u0131ndan g\u00f6sterilir. Debug i\u015flemini kolayla\u015ft\u0131rmak i\u00e7in, g\u00f6sterilecek ad\u0131 bu bile\u015fenin bir HOC sonucu oldu\u011funu belirtmesine \u00f6zen g\u00f6sterin.</p>\n<p>En yayg\u0131n teknik, kapsanan bile\u015fenin g\u00f6sterilen ad\u0131n\u0131 kapsamakt\u0131r. Yani e\u011fer \u00fcst-seviye bile\u015feninizin ad\u0131 <code class=\"language-javascript\">withSubscription</code> ise ve kapsanan bile\u015fenin g\u00f6sterilen ad\u0131 <code class=\"language-javascript\">CommentList</code> ise, g\u00f6sterilen ad olarak <code class=\"language-javascript\">withSubscription(CommentList)</code>\u2019i kullan\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">withSubscription</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">WithSubscription</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">}</span>\n  WithSubscription<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">WithSubscription(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> WithSubscription<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> WrappedComponent<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">||</span> WrappedComponent<span class=\"token punctuation\">.</span>name <span class=\"token operator\">||</span> <span class=\"token string\">'Component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/higher-order-components#caveats\"></a>Uyar\u0131lar </h2>\n<p>\u00dcst-seviye bile\u015fenler, dikkat etmeniz gereken ve e\u011fer React\u2019a yeniyseniz hemen g\u00f6remeyece\u011finiz baz\u0131 s\u0131k\u0131nt\u0131lara sahiptir.</p>\n<h3 id=\"dont-use-hocs-inside-the-render-method\"><a class=\"anchor\" href=\"/react/higher-order-components#dont-use-hocs-inside-the-render-method\"></a>Render Metodu \u0130\u00e7erisinde HOC\u2019lar\u0131 Kullanmay\u0131n </h3>\n<p>React\u2019\u0131n fark alg\u0131lama algoritmas\u0131 (<a href=\"/react/reconciliation\">Reconciliation</a>n olarak adland\u0131r\u0131l\u0131r) var olan bile\u015fen a\u011fac\u0131n\u0131 g\u00fcncellemesi veya tamamen ba\u015ftan yaratmas\u0131 gerekti\u011fini anlamak i\u00e7in bile\u015fen kimli\u011fini kullan\u0131r. E\u011fer <code class=\"language-javascript\">render</code>\u2018dan d\u00f6nen bile\u015fen bir \u00f6nceki renderla ayn\u0131ysa(<code class=\"language-javascript\">===</code>), React recursive bir \u015fekilde bile\u015fen a\u011fac\u0131n\u0131 yeni olanla fark\u0131n\u0131 \u00f6l\u00e7elerek g\u00fcnceller. E\u011fer ayn\u0131 de\u011fillerse, \u00f6nceki bile\u015fen a\u011fac\u0131 tamamen kald\u0131rl\u0131r.</p>\n<p>Normalde, bunun hakk\u0131nda d\u00fc\u015f\u00fcnmeniz gerekmez. Fakat HOC kullan\u0131rken bu render metodu i\u00e7erisinde HOC kullanayamaca\u011f\u0131n\u0131z anlam\u0131na gelir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// A new version of EnhancedComponent is created on every render</span>\n  <span class=\"token comment\">// EnhancedComponent1 !== EnhancedComponent2</span>\n  <span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// That causes the entire subtree to unmount/remount each time!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EnhancedComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Buradaki tek s\u0131k\u0131nt\u0131 performans de\u011fil \u2014 bir bile\u015feni tekrar mount etmek bile\u015fenin state\u2019inin kaybolmas\u0131na ve t\u00fcm alt-elemanlar\u0131n\u0131n kaybolmas\u0131na yol a\u00e7ar.</p>\n<p>Bunun yerine HOC\u2019u bile\u015fen tan\u0131m\u0131n\u0131n d\u0131\u015f\u0131nda yap\u0131n, bu sayede sonu\u00e7 bile\u015fen sadece bir kez yarat\u0131lm\u0131\u015f olsun. Bu sayede bu bile\u015fenin kimli\u011fi renderlar aras\u0131nda tutarl\u0131 olacakt\u0131r. Zaten genelde istenilen davran\u0131\u015f bu \u015fekildedir.</p>\n<p>HOC\u2019u dinamik olarak uygulaman\u0131z gereken durumlarda ise bunu bile\u015fenin ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131nda veya bile\u015fenin constructor\u2019\u0131nda yapabilirsiniz.</p>\n<h3 id=\"static-methods-must-be-copied-over\"><a class=\"anchor\" href=\"/react/higher-order-components#static-methods-must-be-copied-over\"></a>Statik Metodlar Kopyalanmal\u0131d\u0131r </h3>\n<p>Bazen bir react bile\u015feninde statik bir metod tan\u0131mlamak kullan\u0131\u015fl\u0131 olabilir. \u00d6rne\u011fin, Relay container\u2019lar\u0131 GrahpQL ile birlikte kullan\u0131lmas\u0131 i\u00e7in <code class=\"language-javascript\">getFragment</code> diye statik bir metod a\u00e7\u0131\u011fa \u00e7\u0131kar\u0131r.</p>\n<p>Bir bile\u015fene HOC uygulad\u0131\u011f\u0131n\u0131z zaman, orijinali bir container bile\u015fen taraf\u0131ndan kapsanm\u0131\u015f olabilir. Bu da yeni bile\u015fenin orijinal bile\u015fenin statik fonksiyonlar\u0131ndan hi\u00e7birine sahip olmad\u0131\u011f\u0131 anlam\u0131na gelir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Define a static method</span>\nWrappedComponent<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">staticMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Now apply a HOC</span>\n<span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The enhanced component has no static method</span>\n<span class=\"token keyword\">typeof</span> EnhancedComponent<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Bunu \u00e7\u00f6zmek i\u00e7in, bile\u015feni d\u00f6nd\u00fcrmeden \u00f6nce b\u00fct\u00fcn metodlar\u0131 container\u2019a kopyalayabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Must know exactly which method(s) to copy :(</span>\n  Enhance<span class=\"token punctuation\">.</span>staticMethod <span class=\"token operator\">=</span> WrappedComponent<span class=\"token punctuation\">.</span>staticMethod<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fakat bunun i\u00e7in hangi metodlar\u0131 kopyalaman\u0131z gerekti\u011fini bilmelisiniz. T\u00fcm React-d\u0131\u015f\u0131 statik metodlar\u0131n\u0131<a class=\"external-link\" href=\"https://github.com/mridgway/hoist-non-react-statics\">hoist-non-react-statics</a>\u2019i kullanarak kopyalayabilirisiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> hoistNonReactStatic <span class=\"token keyword\">from</span> <span class=\"token string\">'hoist-non-react-statics'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">enhance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Enhance</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*...*/</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">hoistNonReactStatic</span><span class=\"token punctuation\">(</span>Enhance<span class=\"token punctuation\">,</span> WrappedComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Enhance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ba\u015fka bir olas\u0131 \u00e7\u00f6z\u00fcm de statik metodlar\u0131 bile\u015fenden ayr\u0131 olarak d\u0131\u015fa aktarmakt\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Instead of...</span>\nMyComponent<span class=\"token punctuation\">.</span>someFunction <span class=\"token operator\">=</span> someFunction<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...export the method separately...</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...and in the consuming module, import both</span>\n<span class=\"token keyword\">import</span> MyComponent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> someFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent.js'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"refs-arent-passed-through\"><a class=\"anchor\" href=\"/react/higher-order-components#refs-arent-passed-through\"></a>Ref\u2019ler Ge\u00e7irilmemektedir </h3>\n<p>\u00dcst-seviye bile\u015fenlerin rahatl\u0131\u011f\u0131 t\u00fcm proplar\u0131n kapsanan bile\u015fene ge\u00e7irilmesi olmas\u0131na ra\u011fmen, bu <code class=\"language-javascript\">ref</code>\u2019lerde i\u015fe yaramaz. \u00c7\u00fcnk\u00fc ref\u2019ler asl\u0131nda bir prop de\u011fildir \u2014 <code class=\"language-javascript\">key</code> gibi, React taraf\u0131ndan \u00f6zel olarak y\u00f6netilir. E\u011fer sahip oldu\u011fu bir bile\u015feni, bir HOC sonucu olaran bir elemana ref eklerseniz; bu ref en d\u0131\u015ftaki container bile\u015fenine denk gelir, kapsanan bile\u015fene de\u011fil.</p>\n<p>Bu sorunun \u00e7\u00f6z\u00fcm\u00fc ise <code class=\"language-javascript\">React.forwardRef</code> API\u2019n\u0131n (React 16.3\u2019le tan\u0131t\u0131ld\u0131) kullan\u0131lmas\u0131d\u0131r. <a href=\"/react/forwarding-refs\">Ref\u2019leri ta\u015f\u0131mak k\u0131sm\u0131nda bu konu hakk\u0131nda daha \u00e7ok \u015fey \u00f6\u011frenin.</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/higher-order-components.md\">Edit this page</a></p></div></article>", "path": "/react/higher-order-components", "nav": ["/react/fragments", "/react/integrating-with-other-libraries"]}, {"key": "Ba\u015fka K\u00fct\u00fcphaneleri Entegre Etmek", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React, herhangi bir web uygulamas\u0131nda kullan\u0131labilir. Di\u011fer uygulamalara yerle\u015ftirilebilir ve biraz \u00f6zenle React\u2019e ba\u015fka uygulamalar da yerle\u015ftirilebilir. Bu rehber, <a class=\"external-link\" href=\"https://jquery.com/\">jQuery</a> ve <a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a> ile b\u00fct\u00fcnle\u015fmeye odaklanarak \u00e7ok yayg\u0131n kullan\u0131m \u00f6rneklerinin baz\u0131lar\u0131n\u0131 inceleyecek, ancak ayn\u0131 fikirler, bile\u015fenleri varolan herhangi bir kodla b\u00fct\u00fcnle\u015ftirmek i\u00e7in de uygulanabilir.</p>\n<h2 id=\"integrating-with-dom-manipulation-plugins\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-dom-manipulation-plugins\"></a>DOM Manip\u00fclasyon Eklentileri ile B\u00fct\u00fcnle\u015fmek </h2>\n<p>React, React d\u0131\u015f\u0131nda DOM\u2019a yap\u0131lan de\u011fi\u015fikliklerin fark\u0131nda de\u011fildir. G\u00fcncellemeleri kendi i\u00e7 temsiline g\u00f6re belirler, ve e\u011fer ayn\u0131 DOM d\u00fc\u011f\u00fcmleri ba\u015fka bir k\u00fct\u00fcphane taraf\u0131ndan de\u011fi\u015ftirilmi\u015fse, React\u2019in kafas\u0131 kar\u0131\u015f\u0131r ve bunu kurtarman\u0131n yolu yoktur.</p>\n<p>Bu, React\u2019i DOM\u2019u de\u011fistirmenin di\u011fer yollar\u0131yla birlikte kullanman\u0131n imkans\u0131z veya zor oldu\u011fu anlam\u0131na gelmez. Sadece hangisinin ne yapt\u0131\u011f\u0131na dikkat etmeniz gerekir.</p>\n<p>\u00c7ak\u0131\u015fmalar\u0131 \u00f6nlemenin en kolay yolu, React bile\u015feninin g\u00fcncellenmesini \u00f6nlemektir. Bunu, bo\u015f bir <code class=\"language-javascript\">&lt;div /&gt;</code> gibi React\u2019in g\u00fcncellemek i\u00e7in bir nedeni olmayan \u00f6\u011felerini olu\u015fturarak yapabilirsiniz.</p>\n<h3 id=\"how-to-approach-the-problem\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#how-to-approach-the-problem\"></a>Soruna Nas\u0131l Yakla\u015f\u0131lmal\u0131 </h3>\n<p>Bunu g\u00f6stermek i\u00e7in, genel bir jQuery eklentisi i\u00e7in bir sarmalay\u0131c\u0131 tasarlayal\u0131m.</p>\n<p>K\u00f6k DOM \u00f6\u011fesine bir <a href=\"/react/refs-and-the-dom\">ref</a> ekleyece\u011fiz. <code class=\"language-javascript\">componentDidMount</code> i\u00e7inde, jQuery eklentisine iletebilmemiz i\u00e7in ona bir referans alaca\u011f\u0131z.</p>\n<p>Monte edildikten sonra, React\u2019in DOM\u2019a dokunmas\u0131n\u0131 \u00f6nlemek icin, <code class=\"language-javascript\">render()</code> metodundan bo\u015f bir <code class=\"language-javascript\">&lt;div /&gt;</code> d\u00f6nd\u00fcrece\u011fiz. <code class=\"language-javascript\">&lt;div /&gt;</code> \u00f6\u011fesinin herhangi bir \u00f6zelli\u011fi veya alt \u00f6\u011fesi yoktur, bu y\u00fczden React\u2019in onu g\u00fcncellemek i\u00e7in bir nedeni yoktur, DOM\u2019un bu b\u00f6l\u00fcm\u00fcn\u00fc y\u00f6netmek i\u00e7in jQuery eklentisi serbest b\u0131rak\u0131l\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SomePlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">somePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">somePlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hem <code class=\"language-javascript\">componentDidMount</code> hem de <code class=\"language-javascript\">componentWillUnmount</code> <a href=\"/react/react-component#the-component-lifecycle\">ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131</a>\u2018n\u0131 tan\u0131mlad\u0131\u011f\u0131m\u0131za dikkat edin. Bir\u00e7ok jQuery eklentisi, olay dinleyicilerini DOM\u2019a ekler, bu nedenle onlar\u0131 <code class=\"language-javascript\">componentWillUnmount</code>\u2018tan ay\u0131rmak \u00f6nemlidir. E\u011fer eklenti temizlik i\u00e7in bir metot sa\u011flam\u0131yorsa, muhtemelen bellek s\u0131z\u0131nt\u0131lar\u0131n\u0131 \u00f6nlemek i\u00e7in eklentinin kaydetti\u011fi herhangi bir olay dinleyicisini kald\u0131rmay\u0131 hat\u0131rlayarak, kendi \u00f6nleminizi almak zorunda olacaks\u0131n\u0131z. </p>\n<h3 id=\"integrating-with-jquery-chosen-plugin\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-jquery-chosen-plugin\"></a>jQuery Chosen Eklentisi ile B\u00fct\u00fcnle\u015fmek </h3>\n<p>Bu kavramlar\u0131n daha kesin bir \u00f6rne\u011fi i\u00e7in, <code class=\"language-javascript\">&lt;select&gt;</code> girdilerini geni\u015fleten <a class=\"external-link\" href=\"https://harvesthq.github.io/chosen/\">Chosen</a> eklentisi i\u00e7in k\u00fc\u00e7\u00fck bir sarmalay\u0131c\u0131 yazal\u0131m.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bunun m\u00fcmk\u00fcn olmas\u0131 demek, React uygulamalar\u0131 i\u00e7in en iyi yakla\u015f\u0131m oldu\u011fu anlam\u0131na gelmez. M\u00fcmk\u00fcn oldu\u011funda React bile\u015fenlerini kullanman\u0131z\u0131 \u00f6neririz. React uygulamalar\u0131nda, React bile\u015fenlerini yeniden kullanmak daha kolayd\u0131r, ve genellikle davran\u0131\u015flar\u0131 ve g\u00f6r\u00fcn\u00fcmleri \u00fczerinde daha fazla kontrol sa\u011flar.</p>\n</div>\n<p>\u00d6ncelikle, <code class=\"language-javascript\">Chosen</code>\u2018\u0131n DOM\u2019a ne yapt\u0131\u011f\u0131na bakal\u0131m.</p>\n<p>E\u011fer bunu bir <code class=\"language-javascript\">&lt;select&gt;</code> DOM \u200b\u200bd\u00fc\u011f\u00fcm\u00fcnde \u00e7a\u011f\u0131r\u0131rsan\u0131z, orijinal DOM d\u00fc\u011f\u00fcm\u00fcn\u00fcn niteliklerini okur, bir sat\u0131r i\u00e7i stil ile onu saklar, ve hemen <code class=\"language-javascript\">&lt;select&gt;</code>\u2018ten sonra, kendi g\u00f6rsel temsili ile ayr\u0131 bir DOM d\u00fc\u011f\u00fcm\u00fc ekler. Ard\u0131ndan, de\u011fi\u015fiklikleri bize bildirmek i\u00e7in jQuery olaylar\u0131n\u0131 tetikler.</p>\n<p>Diyelim ki, bu <code class=\"language-javascript\">&lt;Chosen&gt;</code> sarmalay\u0131c\u0131s\u0131, React bile\u015fenimizle u\u011fra\u015ft\u0131\u011f\u0131m\u0131z API\u2019d\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chosen</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">vanilla</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">chocolate</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">strawberry</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Chosen</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Basit olmas\u0131 i\u00e7in onu <a href=\"/react/uncontrolled-components\">kontrols\u00fcz bile\u015fen</a> olarak uygulayaca\u011f\u0131z.</p>\n<p>\u0130lk \u00f6nce, bir <code class=\"language-javascript\">&lt;div&gt;</code> i\u00e7ine sar\u0131lm\u0131\u015f <code class=\"language-javascript\">&lt;select&gt;</code>\u2018i d\u00f6nd\u00fcrd\u00fc\u011f\u00fcm\u00fcz yerde, <code class=\"language-javascript\">render()</code> metoduyla bo\u015f bir bile\u015fen olu\u015fturaca\u011f\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Chosen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fazladan bir <code class=\"language-javascript\">&lt;div&gt;</code> i\u00e7inde <code class=\"language-javascript\">&lt;select&gt;</code>\u2018i nas\u0131l sard\u0131\u011f\u0131m\u0131za dikkat edin. Bu gereklidir, \u00e7\u00fcnk\u00fc Chosen, ona ge\u00e7ti\u011fimiz <code class=\"language-javascript\">&lt;select&gt;</code> d\u00fc\u011f\u00fcm\u00fcn\u00fcn hemen arkas\u0131na ba\u015fka bir DOM \u00f6\u011fesi ekleyecektir. Ancak, React s\u00f6z konusu oldu\u011funda, <code class=\"language-javascript\">&lt;div&gt;</code>\u2018in her zaman yaln\u0131zca tek bir alt \u00f6\u011fesi vard\u0131r. Bu, React g\u00fcncellemelerinin, Chosen taraf\u0131ndan eklenmi\u015f fazladan DOM d\u00fc\u011f\u00fcm\u00fcyle \u00e7ak\u0131\u015fmamas\u0131n\u0131 sa\u011flama \u015feklimizdir. \u00d6nemlidir ki, e\u011fer DOM\u2019u React ak\u0131\u015f\u0131n\u0131n d\u0131\u015f\u0131nda de\u011fi\u015ftirirseniz, React\u2019in bu DOM d\u00fc\u011f\u00fcmlerine dokunmak i\u00e7in bir nedeni olmad\u0131\u011f\u0131ndan emin olmal\u0131s\u0131n\u0131z.</p>\n<p>Ard\u0131ndan, ya\u015fam d\u00f6ng\u00fcs\u00fc metodunu uygulayaca\u011f\u0131z. <code class=\"language-javascript\">componentDidMount</code>\u2018de <code class=\"language-javascript\">&lt;select&gt;</code> d\u00fc\u011f\u00fcm\u00fcne ref ile Chosen\u2019i ba\u015flatmam\u0131z ve <code class=\"language-javascript\">componentWillUnmount</code>\u2018da par\u00e7alamam\u0131z gerek:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/qmqeQx?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Dikkat edin ki, React <code class=\"language-javascript\">this.el</code> alan\u0131na \u00f6zel bir anlam atamaz. O sadece, \u00f6ncesinde bu alana <code class=\"language-javascript\">render()</code> metodundaki bir <code class=\"language-javascript\">ref</code>\u2018den atama yap\u0131lm\u0131\u015f oldu\u011funda \u00e7al\u0131\u015f\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu, bile\u015fenimizin olu\u015fturulmas\u0131 i\u00e7in yeterlidir, ama de\u011fer de\u011fi\u015fiklikleri hakk\u0131nda da bilgilendirilmek istiyoruz. Bunu yapmak i\u00e7in, Chosen taraf\u0131ndan y\u00f6netilen <code class=\"language-javascript\">&lt;select&gt;</code> \u00fczerindeki jQuery <code class=\"language-javascript\">change</code> olay\u0131na abone olaca\u011f\u0131z.</p>\n<p><code class=\"language-javascript\">this.props.onChange</code>\u2018i do\u011frudan Chosen\u2019a ge\u00e7meyecegiz, \u00e7\u00fcnk\u00fc bile\u015fenin prop\u2019u zamanla de\u011fi\u015febilir, ve bu olay y\u00f6neticisini i\u00e7erir. Bunun yerine, <code class=\"language-javascript\">this.props.onChange</code>\u2018i \u00e7a\u011f\u0131ran bir <code class=\"language-javascript\">handleChange()</code> metodu tan\u0131mlayaca\u011f\u0131z, ve onu jQuery <code class=\"language-javascript\">change</code> olay\u0131na abone olaca\u011f\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/bWgbeE?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Son olarak, yap\u0131lmas\u0131 gereken bir \u015fey daha var. React\u2019te, props zaman i\u00e7inde de\u011fi\u015fir. \u00d6rne\u011fin, ana bile\u015fenin durumu de\u011fi\u015firse, <code class=\"language-javascript\">&lt;Chosen&gt;</code> bile\u015feni, farkl\u0131 alt \u00f6\u011feler alabilir. Bu, React\u2019in DOM\u2019u bizim i\u00e7in y\u00f6netmesine izin vermedi\u011fimizden, b\u00fct\u00fcnle\u015fme noktalar\u0131nda, prop g\u00fcncellemelerine yan\u0131t olarak DOM\u2019u manuel olarak g\u00fcncellememizin \u00f6nemli oldu\u011fu anlam\u0131na gelir. </p>\n<p>Chosen\u2019in dok\u00fcmantasyonu, orijinal DOM \u00f6\u011fesine yap\u0131lan de\u011fi\u015fiklikler hakk\u0131nda, jQuery <code class=\"language-javascript\">trigger ()</code> API\u2019\u0131n\u0131 kullanabilece\u011fimizi \u00f6nerir. React\u2019in <code class=\"language-javascript\">&lt;select&gt;</code> i\u00e7indeki <code class=\"language-javascript\">this.props.children</code>\u2018i g\u00fcncellemesine izin verece\u011fiz, ancak Chosen\u2019\u0131 alt \u00f6\u011feler listesindeki de\u011fi\u015fiklikler hakk\u0131nda bilgilendiren bir <code class=\"language-javascript\">componentDidUpdate()</code>\u2018e ya\u015fam d\u00f6ng\u00fcs\u00fc y\u00f6ntemini de ekleyece\u011fiz: </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chosen:updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu \u015fekilde Chosen, React taraf\u0131ndan y\u00f6netilen <code class=\"language-javascript\">&lt;select&gt;</code> alt \u00f6\u011feleri de\u011fi\u015fti\u011finde DOM \u00f6\u011fesini g\u00fcncelleyece\u011fini bilecektir.</p>\n<p> <code class=\"language-javascript\">Chosen</code> bile\u015feninin tam uygulanmas\u0131 \u015fu \u015fekildedir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Chosen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chosen:updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$el<span class=\"token punctuation\">.</span><span class=\"token function\">chosen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'destroy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Chosen-select<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/xdgKOz?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h2 id=\"integrating-with-other-view-libraries\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-other-view-libraries\"></a>Di\u011fer G\u00f6r\u00fcn\u00fcm K\u00fct\u00fcphaneleri ile B\u00fct\u00fcnle\u015fmek </h2>\n<p>React, di\u011fer uygulamalara <a href=\"/react/react-dom-client#createRoot\"><code class=\"language-javascript\">createRoot()</code></a>\u2018un esnekli\u011fi sayesinde g\u00f6m\u00fclebilir.</p>\n<p>React, ba\u015flang\u0131\u00e7ta genellikle DOM\u2019a tek bir k\u00f6k React bile\u015feni y\u00fcklemek i\u00e7in kullan\u0131lsa da, <code class=\"language-javascript\">createRoot()</code> bir buton kadar k\u00fc\u00e7\u00fck veya bir uygulama kadar b\u00fcy\u00fck olabilen UI\u2019\u0131n (Kullan\u0131c\u0131 Aray\u00fcz\u00fc\u2019n\u00fcn) ba\u011f\u0131ms\u0131z b\u00f6l\u00fcmleri i\u00e7in bir \u00e7ok kez \u00e7a\u011fr\u0131labilir.</p>\n<p>Asl\u0131nda, Facebook\u2019ta React tam olarak b\u00f6yle kullan\u0131l\u0131r. Bu, uygulamalar\u0131 React\u2019te par\u00e7a par\u00e7a yazmam\u0131z\u0131 sa\u011flar, ve bunlar\u0131 mevcut sunucu taraf\u0131ndan olu\u015fturulan \u015fablonlar\u0131m\u0131z ve di\u011fer istemci-taraf (client-side) kod ile birle\u015ftirir.</p>\n<h3 id=\"replacing-string-based-rendering-with-react\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#replacing-string-based-rendering-with-react\"></a>String-Tabanl\u0131 Render\u2019i React ile De\u011fi\u015ftirme </h3>\n<p>Eski web uygulamalar\u0131ndaki yayg\u0131n bir \u00f6rnek, DOM par\u00e7alar\u0131n\u0131 bir string olarak tan\u0131mlamak ve DOM\u2019a \u015fu \u015fekilde eklemektir: <code class=\"language-javascript\">$el.html(htmlString)</code>. Bir kod taban\u0131ndaki bu noktalar, React\u2019i tan\u0131tmak i\u00e7in m\u00fckemmeldir. Sadece string tabanl\u0131 olu\u015fturmay\u0131, bir React bile\u015feni olarak yeniden yaz\u0131n.</p>\n<p>A\u015fa\u011f\u0131daki JQuery uygulanmas\u0131\u2026</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;button id=\"btn\"&gt;Say Hello&lt;/button&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u2026bir React bile\u015feni kullan\u0131larak yeniden yaz\u0131labilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Say Hello</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Buradan bile\u015fene daha fazla mant\u0131k ta\u015f\u0131maya ve daha yayg\u0131n React uygulamalar\u0131n\u0131 benimsemeye ba\u015flayabilirsiniz. \u00d6rne\u011fin, bile\u015fenlerde ID\u2019lere g\u00fcvenmemek en iyisidir. \u00c7\u00fcnk\u00fc ayn\u0131 bile\u015fen birden \u00e7ok kez i\u015flenebilir. Bunun yerine, <a href=\"/react/handling-events\">React olay sistemi</a>\u2018ni kullanaca\u011f\u0131z ve t\u0131klama olay\u0131n\u0131 do\u011frudan React <code class=\"language-javascript\">&lt;button&gt;</code> \u00f6\u011fesine kaydedece\u011fiz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Say Hello</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/RVKbvW?editors=1010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>\u0130stedi\u011finiz kadar \u00e7ok say\u0131da izole edilmi\u015f bile\u015feniniz olabilir ve bunlar\u0131 farkl\u0131 DOM konteynerlerine i\u015flemek i\u00e7in <code class=\"language-javascript\">ReactDOM.createRoot()</code>\u2018u kullanabilirsiniz. Yava\u015f yava\u015f, uygulaman\u0131z\u0131 daha fazla React\u2019e d\u00f6n\u00fc\u015ft\u00fcrd\u00fck\u00e7e, onlar\u0131 daha b\u00fcy\u00fck bile\u015fenlerde birle\u015ftirebilecek ve hiyerar\u015fiyi \u00e7a\u011f\u0131ran <code class=\"language-javascript\">ReactDOM.createRoot()</code>\u2018un bir k\u0131sm\u0131n\u0131 ta\u015f\u0131yabileceksiniz.</p>\n<h3 id=\"embedding-react-in-a-backbone-view\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#embedding-react-in-a-backbone-view\"></a>Bir Backbone G\u00f6r\u00fcn\u00fcm\u00fcne React\u2019\u0131 G\u00f6mmek</h3>\n<p><a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a> g\u00f6r\u00fcn\u00fcmleri, DOM \u00f6\u011felerinin i\u00e7eri\u011fini olu\u015fturmak i\u00e7in tipik olarak HTML stringlerini ya da string \u00fcreten \u015fablon fonksiyonlar\u0131n\u0131 kullan\u0131r. Bu i\u015flem de bir React bile\u015feni olu\u015fturma ile de\u011fi\u015ftirilebilir.</p>\n<p>A\u015fa\u011f\u0131da, <code class=\"language-javascript\">ParagraphView</code> olarak bilinen bir Backbone g\u00f6r\u00fcn\u00fcm\u00fc olu\u015fturaca\u011f\u0131z. Bu bir React <code class=\"language-javascript\">&lt;Paragraph&gt;</code> bile\u015fenini, Backbone (<code class=\"language-javascript\">this.el</code>) taraf\u0131ndan sunulan DOM \u00f6\u011fesi olu\u015fturmak i\u00e7in Backbone\u2019n\u0131n <code class=\"language-javascript\">render()</code> fonksiyonun ge\u00e7ersiz k\u0131lar. Burada da <a href=\"/react/react-dom-client#createroot\"><code class=\"language-javascript\">ReactDOM.createRoot()</code></a> kullan\u0131yoruz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ParagraphView <span class=\"token operator\">=</span> Backbone<span class=\"token punctuation\">.</span>View<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reactRoot <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reactRoot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Paragraph</span></span> <span class=\"token attr-name\">text</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>reactRoot<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    Backbone<span class=\"token punctuation\">.</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/gWgOYL?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p><code class=\"language-javascript\">remove</code> metodundaki <code class=\"language-javascript\">root.unmount()</code>\u2018\u0131 da \u00e7a\u011f\u0131rmam\u0131z \u00f6nemlidir. B\u00f6ylece React, ayr\u0131ld\u0131\u011f\u0131nda bile\u015fen a\u011fac\u0131yla ili\u015fkili olay y\u00f6neticilerini  ve di\u011fer kaynaklar\u0131n kayd\u0131n\u0131 siler.</p>\n<p>Bir bile\u015fen bir React a\u011fac\u0131n\u0131n <em>i\u00e7inden</em> kald\u0131r\u0131ld\u0131\u011f\u0131nda, temizleme otomatik olarak ger\u00e7ekle\u015ftirilir, ancak t\u00fcm a\u011fac\u0131 elle kald\u0131rd\u0131\u011f\u0131m\u0131z i\u00e7in bu metodu \u00e7a\u011f\u0131rmal\u0131y\u0131z.</p>\n<h2 id=\"integrating-with-model-layers\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#integrating-with-model-layers\"></a>Model Katmanlar\u0131 ile B\u00fct\u00fcnle\u015fmek</h2>\n<p>Genel olarak, <a href=\"/react/lifting-state-up\">React state</a>, <a class=\"external-link\" href=\"https://facebook.github.io/flux/\">Flux</a>, veya <a class=\"external-link\" href=\"https://redux.js.org/\">Redux</a> gibi tek y\u00f6nl\u00fc veri ak\u0131\u015f\u0131n\u0131n kullan\u0131lmas\u0131 tavsiye edilirken, React bile\u015fenleri, di\u011fer \u00e7at\u0131 ve k\u00fct\u00fcphanelerden bir model katman\u0131 kullanabilir.</p>\n<h3 id=\"using-backbone-models-in-react-components\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#using-backbone-models-in-react-components\"></a>React Bile\u015fenlerinde Backbone Modellerini Kullanmak</h3>\n<p>Bir React bile\u015feninden <a class=\"external-link\" href=\"https://backbonejs.org/\">Backbone</a> modellerini ve koleksiyonlar\u0131n\u0131 kullanman\u0131n en basit yolu, \u00e7e\u015fitli de\u011fi\u015fim olaylar\u0131n\u0131 dinlemek ve manuel olarak bir g\u00fcncellemeyi zorlamakt\u0131r.</p>\n<p>Koleksiyonlar\u0131n olu\u015fturulmas\u0131ndan sorumlu bile\u015fenler <code class=\"language-javascript\">'add'</code> ve <code class=\"language-javascript\">'remove'</code> olaylar\u0131n\u0131 dinlerken, modellerin olu\u015fturulmas\u0131ndan sorumlu bile\u015fenler, <code class=\"language-javascript\">'change'</code> olaylar\u0131n\u0131 dinleyecektir. Her iki durumda da bile\u015feni, yeni verilerle yeniden i\u015flemek i\u00e7in <a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">this.forceUpdate()</code></a> metodunu \u00e7a\u011f\u0131r\u0131n. </p>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekte, <code class=\"language-javascript\">List</code> bile\u015feni, tekil \u00f6\u011feleri i\u015flemek i\u00e7in, <code class=\"language-javascript\">Item</code> bile\u015fenini kullanarak bir Backbone koleksiyonu olu\u015fturur.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">List</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'remove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'remove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">model</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">.</span>cid<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/GmrREm?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h3 id=\"extracting-data-from-backbone-models\"><a class=\"anchor\" href=\"/react/integrating-with-other-libraries#extracting-data-from-backbone-models\"></a>Backbone Modellerinden Veriyi \u00c7\u0131karmak</h3>\n<p>Yukar\u0131daki yakla\u015f\u0131m, React bile\u015fenlerinizin Backbone modelleri ve koleksiyonlar\u0131n\u0131n fark\u0131nda olmas\u0131n\u0131 gerektirir. E\u011fer daha sonra, ba\u015fka bir veri y\u00f6netimi \u00e7\u00f6z\u00fcm\u00fcne ge\u00e7meyi planl\u0131yorsan\u0131z, Backbone hakk\u0131ndaki bilgileri kodun olabildi\u011fince az b\u00f6l\u00fcm\u00fcne yo\u011funla\u015ft\u0131rmak isteyebilirsiniz.</p>\n<p> Buna \u00e7\u00f6z\u00fcm, her de\u011fi\u015fti\u011finde modelin niteliklerini d\u00fcz veri olarak \u00e7\u0131karmak ve bu mant\u0131\u011f\u0131 tek bir yerde tutmakt\u0131r. A\u015fa\u011f\u0131dakiler bir Backbone modelinin t\u00fcm niteliklerini state\u2019e \u00e7\u0131karan, verileri sar\u0131lm\u0131\u015f bile\u015fene ileten <a href=\"/react/higher-order-components\">\u00fcst d\u00fczey bir bile\u015fen</a>\u2018dir.</p>\n<p>Bu \u015fekilde, sadece \u00fcst d\u00fczey bile\u015fen Backbone model i\u00e7eri\u011fi hakk\u0131nda bilgiye gereksinim duyar ve uygulamadaki bir \u00e7ok bile\u015fen Backbone\u2019dan ba\u011f\u0131ms\u0131z kalabilir.</p>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekte, ilk state\u2019i olu\u015fturmak i\u00e7in modelin niteliklerinin bir kopyas\u0131n\u0131 yapaca\u011f\u0131z. <code class=\"language-javascript\">change</code> olay\u0131na ba\u011flan\u0131yoruz (ve unmounting aboneli\u011finden \u00e7\u0131k\u0131yoruz), ve bu oldu\u011funda, state\u2019i modelin mevcut nitelikleriyle g\u00fcncelleriz. Son olarak, e\u011fer <code class=\"language-javascript\">model</code> prop\u2019unun kendisi de\u011fi\u015firse, eski model aboneli\u011finden \u00e7\u0131kmay\u0131 ve yenisine abone olmay\u0131 unutmad\u0131\u011f\u0131m\u0131zdan emin olal\u0131m.</p>\n<p>Dikkat edin ki, bu \u00f6rnek, Backbone ile \u00e7al\u0131\u015fmaya ili\u015fkin olarak geni\u015f kapsaml\u0131 de\u011fildir. Ama bu size genel bir \u015fekilde buna nas\u0131l yakla\u015f\u0131laca\u011f\u0131na dair bir fikir vermelidir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">connectToBackboneModel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">WrappedComponent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BackboneComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillReceiveProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>model <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        nextProps<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">model</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">changedAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> propsExceptModel <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">delete</span> propsExceptModel<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>propsExceptModel<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bunun nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6stermek i\u00e7in, Backbone modeline bir <code class=\"language-javascript\">NameInput</code> React bile\u015feni ba\u011flayaca\u011f\u0131z, ve giri\u015f de\u011fi\u015fti\u011finde \u201cfirstName\u201d \u00f6zelli\u011fini g\u00fcncelleyece\u011fiz: </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NameInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      My name is </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> BackboneNameInput <span class=\"token operator\">=</span> <span class=\"token function\">connectToBackboneModel</span><span class=\"token punctuation\">(</span>NameInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'firstName'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BackboneNameInput</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">}</span></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token attr-name\">handleChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span></span>    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Backbone<span class=\"token punctuation\">.</span>Model</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Frodo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Example</span></span> <span class=\"token attr-name\">model</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>model<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/PmWwwa?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bu teknik, Backbone ile limitli de\u011fildir. React\u2019i her hangi bir model k\u00fct\u00fcphanesi ile ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131ndaki de\u011fi\u015fikliklere abone olarak, tercihen, veriyi yerel React state\u2019e kopyalayarak kullanabilirsiniz. </p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/integrating-with-other-libraries.md\">Edit this page</a></p></div></article>", "path": "/react/integrating-with-other-libraries", "nav": ["/react/higher-order-components", "/react/jsx-in-depth"]}, {"key": "Derinlemesine JSX", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Temel olarak, JSX <code class=\"language-javascript\">React.createElement(component, props, ...children)</code> fonksiyonu i\u00e7in s\u00f6zdizimsel bir k\u0131sayol sa\u011flar. JSX, a\u015fa\u011f\u0131daki kodu:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">shadowSize</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Click Me\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyButton</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u015funa derler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  MyButton<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">shadowSize</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Click Me'</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer alt eleman yoksa, etiketin (tag) kendili\u011finden kapanan formunu da kullanabilirsiniz. Yani:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sidebar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>\u015funa derlenir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span> <span class=\"token string\">'sidebar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Belirli bir JSX\u2019in JavaScript\u2019e nas\u0131l d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc\u011f\u00fcn\u00fc test etmek istiyorsan\u0131z, <a class=\"external-link\" href=\"https://babeljs.io/repl/#?presets=react&amp;code_lz=GYVwdgxgLglg9mABACwKYBt1wBQEpEDeAUIogE6pQhlIA8AJjAG4B8AEhlogO5xnr0AhLQD0jVgG4iAXyJA\">\u00e7evrimi\u00e7i Babil derleyicisi</a>\u2018ni deneyebilirsiniz.</p>\n<h2 id=\"specifying-the-react-element-type\"><a class=\"anchor\" href=\"/react/jsx-in-depth#specifying-the-react-element-type\"></a>React Eleman\u0131 Tipini Belirtme </h2>\n<p>JSX etiketinin ilk k\u0131sm\u0131, React eleman\u0131n\u0131n tipini belirtir.</p>\n<p>B\u00fcy\u00fck harfle ba\u015flayan tipler, JSX etiketinin bir React bile\u015fenine ba\u015fvurdu\u011funu belirtir. Bu etiketler, isimlendirilmi\u015f de\u011fi\u015fkene do\u011frudan bir referans olarak derlenir, yani JSX <code class=\"language-javascript\">&lt;Foo /&gt;</code> ifadesini kullan\u0131rsan\u0131z, <code class=\"language-javascript\">Foo</code> kapsam dahilinde olmal\u0131d\u0131r.</p>\n<h3 id=\"react-must-be-in-scope\"><a class=\"anchor\" href=\"/react/jsx-in-depth#react-must-be-in-scope\"></a>React Kapsam Dahilinde Olmal\u0131 </h3>\n<p>JSX, <code class=\"language-javascript\">React.createElement</code> \u00e7a\u011fr\u0131s\u0131na derledi\u011finden, <code class=\"language-javascript\">React</code> k\u00fct\u00fcphanesi her zaman JSX kodunuzun kapsam\u0131nda olmal\u0131d\u0131r.</p>\n<p>\u00d6rne\u011fin, <code class=\"language-javascript\">React</code> ve <code class=\"language-javascript\">CustomButton</code> \u00f6\u011feleri do\u011frudan JavaScript\u2019te kullan\u0131lmasa da, her ikisi i\u00e7in de i\u00e7e aktarma bu kodda gereklidir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> CustomButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./CustomButton'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">WarningButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// return React.createElement(CustomButton, {color: 'red'}, null);</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bir JavaScript paketleyici kullanm\u0131yor ve React\u2019\u0131 bir <code class=\"language-javascript\">&lt;script&gt;</code> etiketinden y\u00fckl\u00fcyorsan\u0131z, <code class=\"language-javascript\">React</code> global olarak zaten kapsam dahilindedir.</p>\n<h3 id=\"using-dot-notation-for-jsx-type\"><a class=\"anchor\" href=\"/react/jsx-in-depth#using-dot-notation-for-jsx-type\"></a>JSX Tipi i\u00e7in Nokta G\u00f6sterimini Kullanma </h3>\n<p>JSX i\u00e7inden nokta g\u00f6sterimini kullanarak da bir React bile\u015fenine ba\u015fvurabilirsiniz. Bu, bir\u00e7ok React bile\u015fenini d\u0131\u015fa aktaran tek bir mod\u00fcl\u00fcn\u00fcz varsa kullan\u0131\u015fl\u0131d\u0131r. \u00d6rne\u011fin, <code class=\"language-javascript\">MyComponents.DatePicker</code> bir bile\u015fense, bunu do\u011frudan JSX\u2019te a\u015fa\u011f\u0131daki \u015fekilde kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MyComponents <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">DatePicker</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DatePicker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Imagine a </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> datepicker here.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlueDatePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponents.DatePicker</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"user-defined-components-must-be-capitalized\"><a class=\"anchor\" href=\"/react/jsx-in-depth#user-defined-components-must-be-capitalized\"></a>Kullan\u0131c\u0131 Tan\u0131ml\u0131 Bile\u015fenler B\u00fcy\u00fck Harfle Ba\u015flamal\u0131d\u0131r </h3>\n<p>Bir eleman\u0131n tipi k\u00fc\u00e7\u00fck harfle ba\u015flad\u0131\u011f\u0131nda, <code class=\"language-javascript\">&lt;div&gt;</code> veya <code class=\"language-javascript\">&lt;span&gt;</code> gibi dahili bir bile\u015fene at\u0131fta bulunur ve bunun sonucu <code class=\"language-javascript\">React.createElement</code> fonksiyonuna <code class=\"language-javascript\">'div'</code> veya <code class=\"language-javascript\">'span'</code> stringlerinin aktar\u0131lmas\u0131d\u0131r. <code class=\"language-javascript\">&lt;Foo /&gt;</code> gibi b\u00fcy\u00fck harfle ba\u015flayan tipler <code class=\"language-javascript\">React.createElement(Foo)</code> \u015feklinde derlenir ve JavaScript dosyan\u0131zda tan\u0131mlanan veya i\u00e7e aktar\u0131lan bir bile\u015fene kar\u015f\u0131l\u0131k gelir.</p>\n<p>Bile\u015fenleri, b\u00fcy\u00fck harfle ba\u015flayan bir \u015fekilde adland\u0131rman\u0131z\u0131 \u00f6neririz. K\u00fc\u00e7\u00fck harfle ba\u015flayan bir bile\u015feniniz varsa, bunu JSX\u2019te kullanmadan \u00f6nce b\u00fcy\u00fck harfle ba\u015flayan bir de\u011fi\u015fkene atay\u0131n.</p>\n<p>\u00d6rne\u011fin, bu kod beklendi\u011fi gibi \u00e7al\u0131\u015fmaz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Yanl\u0131\u015f! Bu bir bile\u015fendir ve ismi b\u00fcy\u00fck bir harfle ba\u015flamal\u0131d\u0131r:</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Do\u011fru! div ge\u00e7erli bir HTML etiketi oldu\u011fundan &lt;div&gt; 'in bu kullan\u0131m\u0131 uygundur:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Yanl\u0131\u015f! React, b\u00fcy\u00fck bir harfle ba\u015flamad\u0131\u011f\u0131ndan &lt;hello /&gt; 'nun bir HTML etiketi oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyor:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hello</span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bunu d\u00fczeltmek i\u00e7in, <code class=\"language-javascript\">hello</code> fonksiyonunu <code class=\"language-javascript\">Hello</code> olarak yeniden adland\u0131r\u0131p <code class=\"language-javascript\">&lt;Hello /&gt;</code> olarak kullanaca\u011f\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Do\u011fru! Bu bir bile\u015fendir ve ad\u0131 b\u00fcy\u00fck harfle ba\u015flamal\u0131d\u0131r:</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// Do\u011fru! div ge\u00e7erli bir HTML etiketi oldu\u011fundan &lt;div&gt; 'in bu kullan\u0131m\u0131 uygundur:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Do\u011fru! React, &lt;Hello /&gt; b\u00fcy\u00fck bir harfle ba\u015flad\u0131\u011f\u0131 i\u00e7in bir bile\u015fen oldu\u011funu biliyor.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"choosing-the-type-at-runtime\"><a class=\"anchor\" href=\"/react/jsx-in-depth#choosing-the-type-at-runtime\"></a>Tipi \u00c7al\u0131\u015fma Zaman\u0131nda Se\u00e7me </h3>\n<p>Genel bir ifadeyi (expression) React eleman\u0131 tipi olarak kullanamazs\u0131n\u0131z. Eleman\u0131n tipini belirtmek i\u00e7in genel bir ifade kullanmak istiyorsan\u0131z, sadece \u00f6ncesinde b\u00fcy\u00fck harfle ba\u015flayan bir de\u011fi\u015fkene atay\u0131n. Bu genellikle, bir prop\u2019a g\u00f6re farkl\u0131 bir bile\u015fen render etmek istedi\u011finizde ortaya \u00e7\u0131kar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">photo</span><span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Yanl\u0131\u015f! JSX tipi bir ifade olamaz.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span> story<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bunu d\u00fczeltmek i\u00e7in, \u00f6nce tipi b\u00fcy\u00fck harfle ba\u015flayan bir de\u011fi\u015fkene atayaca\u011f\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhotoStory<span class=\"token punctuation\">,</span> VideoStory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./stories'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">photo</span><span class=\"token operator\">:</span> PhotoStory<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> VideoStory\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Story</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Do\u011fru! JSX tipi b\u00fcy\u00fck harfli bir de\u011fi\u015fken olabilir.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> SpecificStory <span class=\"token operator\">=</span> components<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>storyType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SpecificStory</span></span> <span class=\"token attr-name\">story</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"props-in-jsx\"><a class=\"anchor\" href=\"/react/jsx-in-depth#props-in-jsx\"></a>JSX\u2019de Prop\u2019lar </h2>\n<p>JSX\u2019te prop\u2019lar\u0131 belirtmenin birka\u00e7 farkl\u0131 yolu vard\u0131r.</p>\n<h3 id=\"javascript-expressions-as-props\"><a class=\"anchor\" href=\"/react/jsx-in-depth#javascript-expressions-as-props\"></a>Prop Olarak JavaScript \u0130fadeleri </h3>\n<p>Herhangi bir JavaScript ifadesini <code class=\"language-javascript\">{}</code> ile \u00e7evreleyerek bir prop olarak iletebilirsiniz. \u00d6rne\u011fin, bu JSX\u2019te:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">foo</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">MyComponent</code> i\u00e7in, <code class=\"language-javascript\">props.foo</code> de\u011feri <code class=\"language-javascript\">10</code> olacakt\u0131r \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">1 + 2 + 3 + 4</code> ifadesi \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r.</p>\n<p><code class=\"language-javascript\">if</code> deyimleri ve<code class=\"language-javascript\">for</code> d\u00f6ng\u00fcleri JavaScript\u2019te ifade de\u011fildir, bu nedenle do\u011frudan JSX\u2019te kullan\u0131lamazlar. Onun yerine, bunlar\u0131 \u00e7evreleyen bir koda koyabilirsiniz. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NumberDescriber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> description<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">even</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    description <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">odd</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> is an </span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> number</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u0130lgili b\u00f6l\u00fcmlerde <a href=\"/react/conditional-rendering\">ko\u015fullu render etme</a> ve <a href=\"/react/lists-and-keys\">d\u00f6ng\u00fcler</a> hakk\u0131nda daha fazla bilgi edinebilirsiniz.</p>\n<h3 id=\"string-literals\"><a class=\"anchor\" href=\"/react/jsx-in-depth#string-literals\"></a>String De\u011fi\u015fmezleri </h3>\n<p>Bir string de\u011fi\u015fmezini prop olarak ge\u00e7irebilirsiniz. Bu iki JSX ifadesi e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello world<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Bir string de\u011fi\u015fmezini iletti\u011finizde, de\u011feri HTML\u2019den ka\u00e7maz. Yani bu iki JSX ifadesi e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token entity named-entity\">&amp;lt;</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'&lt;3'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Bu davran\u0131\u015f genellikle alakas\u0131zd\u0131r. Burada sadece b\u00fct\u00fcnl\u00fck i\u00e7in bahsedilmi\u015ftir.</p>\n<h3 id=\"props-default-to-true\"><a class=\"anchor\" href=\"/react/jsx-in-depth#props-default-to-true\"></a>Prop\u2019lar\u0131n Varsay\u0131lan De\u011feri \u201cTrue\u201d </h3>\n<p>E\u011fer bir prop i\u00e7in herhangi bir de\u011fer iletmezseniz, de\u011feri varsay\u0131lan olarak <code class=\"language-javascript\">true</code> olur. Bu iki JSX ifadesi e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyTextBox</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Genel olarak, bir prop i\u00e7in de\u011fer <em>iletmemenizi</em> \u00f6nermiyoruz, \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">{foo: true}</code> yerine <code class=\"language-javascript\">{foo: foo}</code> i\u00e7in <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#New_notations_in_ECMAScript_2015\">ES6 obje k\u0131sayolu</a> olan <code class=\"language-javascript\">{foo}</code> ile kar\u0131\u015ft\u0131r\u0131labilir. Bu davran\u0131\u015f sadece, HTML davran\u0131\u015f\u0131yla e\u015fle\u015fmesi i\u00e7in oradad\u0131r.</p>\n<h3 id=\"spread-attributes\"><a class=\"anchor\" href=\"/react/jsx-in-depth#spread-attributes\"></a>\u00d6zelliklerin Yay\u0131lmas\u0131 </h3>\n<p>Zaten nesne olarak bir <code class=\"language-javascript\">prop'lar</code> objeniz varsa ve bunu JSX\u2019e aktarmak istiyorsan\u0131z, t\u00fcm prop\u2019lar\u0131 ge\u00e7irmek i\u00e7in \u201cyayma\u201d (spread) operat\u00f6r\u00fc olan <code class=\"language-javascript\">...</code> \u2018y\u0131 kullanabilirsiniz. Bu iki bile\u015fen e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">firstName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Yunus Emre<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lastName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Dilber<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Yunus Emre'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Dilber'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ayr\u0131ca, yay\u0131lma operat\u00f6r\u00fcn\u00fc kullanarak di\u011fer t\u00fcm prop\u2019lar\u0131 ge\u00e7erken, bile\u015feninizin kullanaca\u011f\u0131 \u00f6zel prop\u2019lar\u0131 de se\u00e7ebilirsiniz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> kind<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>other <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> className <span class=\"token operator\">=</span> kind <span class=\"token operator\">===</span> <span class=\"token string\">\"primary\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"PrimaryButton\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"SecondaryButton\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>other<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">kind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Hello World!</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yukar\u0131daki \u00f6rnekte, <code class=\"language-javascript\">kind</code> prop\u2019u g\u00fcvenli bir \u015fekilde kullan\u0131l\u0131r ve DOM\u2019daki <code class=\"language-javascript\">&lt;button&gt;</code> eleman\u0131na <em>ge\u00e7irilmez</em>.\nDi\u011fer t\u00fcm prop\u2019lar bu bile\u015feni esnek yapan <code class=\"language-javascript\">...other</code> nesnesi \u00fczerinden ge\u00e7irilir. <code class=\"language-javascript\">onClick</code> ve <code class=\"language-javascript\">children</code> prop\u2019lar\u0131n\u0131n ge\u00e7irildi\u011fini g\u00f6rebilirsiniz.</p>\n<p>\u00d6zelliklerin yay\u0131lmas\u0131 yararl\u0131 olabilir ancak bunlar, onlar\u0131 umursamayan bile\u015fenlere gereksiz prop\u2019lar\u0131n aktar\u0131lmas\u0131n\u0131 veya ge\u00e7ersiz HTML \u00f6zelliklerinin DOM\u2019a aktar\u0131lmas\u0131n\u0131 kolayla\u015ft\u0131r\u0131r. Bu s\u00f6zdizimini tedbirli kullanman\u0131z\u0131 \u00f6neririz.</p>\n<h2 id=\"children-in-jsx\"><a class=\"anchor\" href=\"/react/jsx-in-depth#children-in-jsx\"></a>JSX\u2019de Alt Elemanlar </h2>\n<p>Hem a\u00e7\u0131l\u0131\u015f hem de kapan\u0131\u015f etiketi i\u00e7eren JSX ifadelerinde, bu etiketler aras\u0131ndaki i\u00e7erik \u00f6zel bir prop olarak ge\u00e7irilir: <code class=\"language-javascript\">props.children</code>. Alt elemanlar\u0131 ge\u00e7menin birka\u00e7 farkl\u0131 yolu vard\u0131r:</p>\n<h3 id=\"string-literals-1\"><a class=\"anchor\" href=\"/react/jsx-in-depth#string-literals-1\"></a>String De\u011fi\u015fmezleri </h3>\n<p>A\u00e7\u0131l\u0131\u015f ve kapan\u0131\u015f etiketleri aras\u0131na bir string koyabilirsiniz ve <code class=\"language-javascript\">props.children</code> sadece bu string olacakt\u0131r. Bu, \u00e7o\u011fu dahili HTML eleman\u0131 i\u00e7in kullan\u0131\u015fl\u0131d\u0131r. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu ge\u00e7erli bir JSX ve <code class=\"language-javascript\">MyComponent</code> i\u00e7indeki <code class=\"language-javascript\">props.children</code> sadece <code class=\"language-javascript\">\"Hello world!\"</code> stringi olacakt\u0131r. HTML\u2019den ka\u00e7\u0131lmad\u0131\u011f\u0131 i\u00e7in, genellikle t\u0131pk\u0131 HTML yazd\u0131\u011f\u0131n\u0131z gibi JSX\u2019i bu \u015fekilde yazabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>Bu ge\u00e7erli bir HTML <span class=\"token entity named-entity\">&amp;amp;</span> Ayn\u0131 zamanda JSX.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>JSX, bir sat\u0131r\u0131n ba\u015f\u0131ndaki ve sonundaki bo\u015fluklar\u0131 kald\u0131r\u0131r. Ayr\u0131ca bo\u015f sat\u0131rlar\u0131 da kald\u0131r\u0131r. Etiketlere biti\u015fik yeni sat\u0131rlar kald\u0131r\u0131l\u0131r; string de\u011fi\u015fmezlerinin ortas\u0131nda olu\u015fan yeni sat\u0131rlar tek bir bo\u015flu\u011fa d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr. Yani bunlar\u0131n hepsi ayn\u0131 \u015feye render ediliyor:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Hello World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Hello\n  World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n  Hello World\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h3 id=\"jsx-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#jsx-children\"></a>JSX Alt Elemanlar\u0131 </h3>\n<p>Alt eleman olarak daha fazla JSX eleman\u0131 sa\u011flayabilirsiniz. Bu, i\u00e7 i\u00e7e ge\u00e7mi\u015f bile\u015fenleri g\u00f6r\u00fcnt\u00fclemek i\u00e7in kullan\u0131\u015fl\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyFirstComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MySecondComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyContainer</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Farkl\u0131 tiplerdeki alt elemanlar\u0131 birlikte kullanabilirsiniz, b\u00f6ylece string de\u011fi\u015fmezlerini JSX alt elemanlar\u0131yla birlikte kullanabilirsiniz. Bu, JSX\u2019in HTML\u2019e benzemesinin ba\u015fka bir yoludur; b\u00f6ylece bu, hem ge\u00e7erli bir JSX hem de ge\u00e7erli bir HTML\u2019dir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  Here is a list:\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React bile\u015feni ayr\u0131ca bir dizi eleman d\u00f6nd\u00fcrebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Liste \u00f6\u011felerini ekstra bir elemanla sarman\u0131za gerek yok!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Key'leri unutmay\u0131n :)</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">First item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>B<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Second item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>C<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Third item</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"javascript-expressions-as-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#javascript-expressions-as-children\"></a>Alt Eleman Olarak JavaScript \u0130fadeleri </h3>\n<p>Herhangi bir JavaScript ifadesini <code class=\"language-javascript\">{}</code> i\u00e7ine koyarak alt eleman olarak iletebilirsiniz. \u00d6rne\u011fin, bu ifadeler e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyComponent</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu genellikle, keyf\u00ee uzunluktaki JSX ifadelerinin bir listesini render etmek i\u00e7in kullan\u0131\u015fl\u0131d\u0131r. \u00d6rne\u011fin, bu bir HTML listesi render eder:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Item</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'finish doc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'submit pr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nag dan to review'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">message</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JavaScript ifadeleri di\u011fer alt eleman tipleri ile birlikte kullan\u0131labilir. Bu genellikle string \u015fablonlar\u0131 yerine kullan\u0131\u015fl\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>addressee<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"functions-as-children\"><a class=\"anchor\" href=\"/react/jsx-in-depth#functions-as-children\"></a>Alt Eleman Olarak Fonksiyonlar </h3>\n<p>Normalde, JSX\u2019e eklenen JavaScript ifadeleri bir string, bir React eleman\u0131 veya bu \u015feylerin bir listesi olarak de\u011ferlendirilir. Bununla birlikte, <code class=\"language-javascript\">props.children</code>, sadece React\u2019\u0131n nas\u0131l render edece\u011fini bildi\u011fi t\u00fcrleri de\u011fil, her t\u00fcrde veriyi aktarabilmesi i\u00e7in herhangi bir prop gibi \u00e7al\u0131\u015f\u0131r. \u00d6rne\u011fin, \u00f6zel bir bile\u015feniniz varsa, bunun <code class=\"language-javascript\">props.children</code> olarak bir callback almas\u0131n\u0131 sa\u011flayabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Tekrarlanan bir bile\u015fen \u00fcretmek i\u00e7in alt eleman callback'ini numTimes kez \u00e7a\u011f\u0131r\u0131r</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> props<span class=\"token punctuation\">.</span>numTimes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>    items<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListOfTenThings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Repeat</span></span> <span class=\"token attr-name\">numTimes</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">This is item </span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> in the list</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Repeat</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u00d6zel bir bile\u015fene ge\u00e7irilen alt elemanlar, bu bile\u015fen onlar\u0131 React\u2019\u0131n render etmeden \u00f6nce anlayabilece\u011fi bir \u015feye d\u00f6n\u00fc\u015ft\u00fcrd\u00fc\u011f\u00fc s\u00fcrece herhangi bir \u015fey olabilir. Bu kullan\u0131m yayg\u0131n de\u011fildir, ancak JSX\u2019in neler yapabilece\u011fini a\u00e7mak istiyorsan\u0131z \u00e7al\u0131\u015facakt\u0131r.</p>\n<h3 id=\"booleans-null-and-undefined-are-ignored\"><a class=\"anchor\" href=\"/react/jsx-in-depth#booleans-null-and-undefined-are-ignored\"></a>Boolean\u2019lar, Null ve Undefined G\u00f6rmezden Gelinir </h3>\n<p><code class=\"language-javascript\">false</code>, <code class=\"language-javascript\">null</code>, <code class=\"language-javascript\">undefined</code> ve <code class=\"language-javascript\">true</code> ge\u00e7erli alt elemanlard\u0131r. Sadece, render edilmezler. Bu JSX ifadelerinin t\u00fcm\u00fc ayn\u0131 \u015feye render edilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu, React elemanlar\u0131n\u0131n ko\u015fullu olarak render etmek i\u00e7in yararl\u0131 olabilir. Bu JSX, <code class=\"language-javascript\">&lt;Header /&gt;</code> bile\u015fenini yaln\u0131zca <code class=\"language-javascript\">showHeader</code> <code class=\"language-javascript\">true</code> oldu\u011funda render eder:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>showHeader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bir uyar\u0131, <code class=\"language-javascript\">0</code> say\u0131s\u0131 gibi baz\u0131 <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\">\u201cfalsy\u201d de\u011ferlerin</a> hala React taraf\u0131ndan g\u00f6r\u00fcnt\u00fclenmesidir. \u00d6rne\u011fin, bu kod bekledi\u011finiz gibi davranmayacakt\u0131r \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">props.messages</code> bo\u015f bir dizi oldu\u011funda <code class=\"language-javascript\">0</code> yazd\u0131r\u0131lacakt\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bunu d\u00fczeltmek i\u00e7in, <code class=\"language-javascript\">&amp;&amp;</code> \u00f6ncesindeki ifadenin her zaman boolean oldu\u011fundan emin olun:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span></span>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageList</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Aksine, \u00e7\u0131kt\u0131da <code class=\"language-javascript\">false</code>, <code class=\"language-javascript\">true</code>, <code class=\"language-javascript\">null</code> veya <code class=\"language-javascript\">undefined</code> gibi bir de\u011ferin g\u00f6r\u00fcnmesini istiyorsan\u0131z, \u00f6nce <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#String_conversion\">bir stringe d\u00f6n\u00fc\u015ft\u00fcrmeniz</a> gerekir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  My JavaScript variable is </span><span class=\"token punctuation\">{</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>myVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/jsx-in-depth.md\">Edit this page</a></p></div></article>", "path": "/react/jsx-in-depth", "nav": ["/react/integrating-with-other-libraries", "/react/optimizing-performance"]}, {"key": "Performans\u0131 En \u0130yi Duruma Getirmek", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Internally, React uses several clever techniques to minimize the number of costly DOM operations required to update the UI. For many applications, using React will lead to a fast user interface without doing much work to specifically optimize for performance. Nevertheless, there are several ways you can speed up your React application.</p>\n<h2 id=\"use-the-production-build\"><a class=\"anchor\" href=\"/react/optimizing-performance#use-the-production-build\"></a>Use the Production Build </h2>\n<p>If you\u2019re benchmarking or experiencing performance problems in your React apps, make sure you\u2019re testing with the minified production build.</p>\n<p>By default, React includes many helpful warnings. These warnings are very useful in development. However, they make React larger and slower so you should make sure to use the production version when you deploy the app.</p>\n<p>If you aren\u2019t sure whether your build process is set up correctly, you can check it by installing <a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\">React Developer Tools for Chrome</a>. If you visit a site with React in production mode, the icon will have a dark background:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/d0f767f80866431ccdec18f200ca58f1/0a47e/devtools-prod.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/d0f767f80866431ccdec18f200ca58f1/0a47e/devtools-prod.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>If you visit a site with React in development mode, the icon will have a red background:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/e434ce2f7e64f63e597edf03f4465694/0a47e/devtools-dev.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/e434ce2f7e64f63e597edf03f4465694/0a47e/devtools-dev.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>It is expected that you use the development mode when working on your app, and the production mode when deploying your app to the users.</p>\n<p>You can find instructions for building your app for production below.</p>\n<h3 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/optimizing-performance#create-react-app\"></a>Create React App </h3>\n<p>If your project is built with <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a>, run:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">npm run build</code></pre></div>\n<p>This will create a production build of your app in the <code class=\"language-javascript\">build/</code> folder of your project.</p>\n<p>Remember that this is only necessary before deploying to production. For normal development, use <code class=\"language-javascript\">npm start</code>.</p>\n<h3 id=\"single-file-builds\"><a class=\"anchor\" href=\"/react/optimizing-performance#single-file-builds\"></a>Single-File Builds </h3>\n<p>We offer production-ready versions of React and React DOM as single files:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@18/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@18/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Remember that only React files ending with <code class=\"language-javascript\">.production.min.js</code> are suitable for production.</p>\n<h3 id=\"brunch\"><a class=\"anchor\" href=\"/react/optimizing-performance#brunch\"></a>Brunch </h3>\n<p>For the most efficient Brunch production build, install the <a class=\"external-link\" href=\"https://github.com/brunch/terser-brunch\"><code class=\"language-javascript\">terser-brunch</code></a> plugin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\"># If you use npm\nnpm install --save-dev terser-brunch\n\n# If you use Yarn\nyarn add --dev terser-brunch</code></pre></div>\n<p>Then, to create a production build, add the <code class=\"language-javascript\">-p</code> flag to the <code class=\"language-javascript\">build</code> command:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">brunch build -p</code></pre></div>\n<p>Remember that you only need to do this for production builds. You shouldn\u2019t pass the <code class=\"language-javascript\">-p</code> flag or apply this plugin in development, because it will hide useful React warnings and make the builds much slower.</p>\n<h3 id=\"browserify\"><a class=\"anchor\" href=\"/react/optimizing-performance#browserify\"></a>Browserify </h3>\n<p>For the most efficient Browserify production build, install a few plugins:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\"># If you use npm\nnpm install --save-dev envify terser uglifyify\n\n# If you use Yarn\nyarn add --dev envify terser uglifyify</code></pre></div>\n<p>To create a production build, make sure that you add these transforms <strong>(the order matters)</strong>:</p>\n<ul>\n<li>The <a class=\"external-link\" href=\"https://github.com/hughsk/envify\"><code class=\"language-javascript\">envify</code></a> transform ensures the right build environment is set. Make it global (<code class=\"language-javascript\">-g</code>).</li>\n<li>The <a class=\"external-link\" href=\"https://github.com/hughsk/uglifyify\"><code class=\"language-javascript\">uglifyify</code></a> transform removes development imports. Make it global too (<code class=\"language-javascript\">-g</code>).</li>\n<li>Finally, the resulting bundle is piped to <a class=\"external-link\" href=\"https://github.com/terser-js/terser\"><code class=\"language-javascript\">terser</code></a> for mangling (<a class=\"external-link\" href=\"https://github.com/hughsk/uglifyify#motivationusage\">read why</a>).</li>\n</ul>\n<p>For example:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">browserify ./index.js \\\n  -g [ envify --NODE_ENV production ] \\\n  -g uglifyify \\\n  | terser --compress --mangle &gt; ./bundle.js</code></pre></div>\n<p>Remember that you only need to do this for production builds. You shouldn\u2019t apply these plugins in development because they will hide useful React warnings, and make the builds much slower.</p>\n<h3 id=\"rollup\"><a class=\"anchor\" href=\"/react/optimizing-performance#rollup\"></a>Rollup </h3>\n<p>For the most efficient Rollup production build, install a few plugins:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token comment\"># If you use npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-terser\n\n<span class=\"token comment\"># If you use Yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-terser</code></pre></div>\n<p>To create a production build, make sure that you add these plugins <strong>(the order matters)</strong>:</p>\n<ul>\n<li>The <a class=\"external-link\" href=\"https://github.com/rollup/rollup-plugin-replace\"><code class=\"language-javascript\">replace</code></a> plugin ensures the right build environment is set.</li>\n<li>The <a class=\"external-link\" href=\"https://github.com/rollup/rollup-plugin-commonjs\"><code class=\"language-javascript\">commonjs</code></a> plugin provides support for CommonJS in Rollup.</li>\n<li>The <a class=\"external-link\" href=\"https://github.com/TrySound/rollup-plugin-terser\"><code class=\"language-javascript\">terser</code></a> plugin compresses and mangles the final bundle.</li>\n</ul>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-replace'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'process.env.NODE_ENV'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-commonjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-terser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>For a complete setup example <a class=\"external-link\" href=\"https://gist.github.com/Rich-Harris/cb14f4bc0670c47d00d191565be36bf0\">see this gist</a>.</p>\n<p>Remember that you only need to do this for production builds. You shouldn\u2019t apply the <code class=\"language-javascript\">terser</code> plugin or the <code class=\"language-javascript\">replace</code> plugin with <code class=\"language-javascript\">'production'</code> value in development because they will hide useful React warnings, and make the builds much slower.</p>\n<h3 id=\"webpack\"><a class=\"anchor\" href=\"/react/optimizing-performance#webpack\"></a>webpack </h3>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>If you\u2019re using Create React App, please follow <a href=\"/react/optimizing-performance#create-react-app\">the instructions above</a>.<br/>\nThis section is only relevant if you configure webpack directly.</p>\n</div>\n<p>Webpack v4+ will minify your code by default in production mode.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> TerserPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'terser-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optimization</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">minimizer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/* additional options here */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can learn more about this in <a class=\"external-link\" href=\"https://webpack.js.org/guides/production/\">webpack documentation</a>.</p>\n<p>Remember that you only need to do this for production builds. You shouldn\u2019t apply <code class=\"language-javascript\">TerserPlugin</code> in development because it will hide useful React warnings, and make the builds much slower.</p>\n<h2 id=\"profiling-components-with-the-devtools-profiler\"><a class=\"anchor\" href=\"/react/optimizing-performance#profiling-components-with-the-devtools-profiler\"></a>Profiling Components with the DevTools Profiler </h2>\n<p><code class=\"language-javascript\">react-dom</code> 16.5+ and <code class=\"language-javascript\">react-native</code> 0.57+ provide enhanced profiling capabilities in DEV mode with the React DevTools Profiler.\nAn overview of the Profiler can be found in the blog post <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/09/10/introducing-the-react-profiler.html\">\u201cIntroducing the React Profiler\u201d</a>.\nA video walkthrough of the profiler is also <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=nySib7ipZdk\">available on YouTube</a>.</p>\n<p>If you haven\u2019t yet installed the React DevTools, you can find them here:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en\">Chrome Browser Extension</a></li>\n<li><a class=\"external-link\" href=\"https://addons.mozilla.org/en-GB/firefox/addon/react-devtools/\">Firefox Browser Extension</a></li>\n<li><a class=\"external-link\" href=\"https://www.npmjs.com/package/react-devtools\">Standalone Node Package</a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>A production profiling bundle of <code class=\"language-javascript\">react-dom</code> is also available as <code class=\"language-javascript\">react-dom/profiling</code>.\nRead more about how to use this bundle at <a class=\"external-link\" href=\"https://fb.me/react-profiling\">fb.me/react-profiling</a></p>\n</div>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>Before React 17, we use the standard <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\">User Timing API</a> to profile components with the chrome performance tab.\nFor a more detailed walkthrough, check out <a class=\"external-link\" href=\"https://calibreapp.com/blog/react-performance-profiling-optimization\">this article by Ben Schwarz</a>.</p>\n</div>\n<h2 id=\"virtualize-long-lists\"><a class=\"anchor\" href=\"/react/optimizing-performance#virtualize-long-lists\"></a>Virtualize Long Lists </h2>\n<p>If your application renders long lists of data (hundreds or thousands of rows), we recommend using a technique known as \u201cwindowing\u201d. This technique only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created.</p>\n<p><a class=\"external-link\" href=\"https://react-window.now.sh/\">react-window</a> and <a class=\"external-link\" href=\"https://bvaughn.github.io/react-virtualized/\">react-virtualized</a> are popular windowing libraries. They provide several reusable components for displaying lists, grids, and tabular data. You can also create your own windowing component, like <a class=\"external-link\" href=\"https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3\">Twitter did</a>, if you want something more tailored to your application\u2019s specific use case.</p>\n<h2 id=\"avoid-reconciliation\"><a class=\"anchor\" href=\"/react/optimizing-performance#avoid-reconciliation\"></a>Avoid Reconciliation </h2>\n<p>React builds and maintains an internal representation of the rendered UI. It includes the React elements you return from your components. This representation lets React avoid creating DOM nodes and accessing existing ones beyond necessity, as that can be slower than operations on JavaScript objects. Sometimes it is referred to as a \u201cvirtual DOM\u201d, but it works the same way on React Native.</p>\n<p>When a component\u2019s props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM.</p>\n<p>Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases it\u2019s not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function <code class=\"language-javascript\">shouldComponentUpdate</code>, which is triggered before the re-rendering process starts. The default implementation of this function returns <code class=\"language-javascript\">true</code>, leaving React to perform the update:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you know that in some situations your component doesn\u2019t need to update, you can return <code class=\"language-javascript\">false</code> from <code class=\"language-javascript\">shouldComponentUpdate</code> instead, to skip the whole rendering process, including calling <code class=\"language-javascript\">render()</code> on this component and below.</p>\n<p>In most cases, instead of writing <code class=\"language-javascript\">shouldComponentUpdate()</code> by hand, you can inherit from <a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a>. It is equivalent to implementing <code class=\"language-javascript\">shouldComponentUpdate()</code> with a shallow comparison of current and previous props and state.</p>\n<h2 id=\"shouldcomponentupdate-in-action\"><a class=\"anchor\" href=\"/react/optimizing-performance#shouldcomponentupdate-in-action\"></a>shouldComponentUpdate In Action </h2>\n<p>Here\u2019s a subtree of components. For each one, <code class=\"language-javascript\">SCU</code> indicates what <code class=\"language-javascript\">shouldComponentUpdate</code> returned, and <code class=\"language-javascript\">vDOMEq</code> indicates whether the rendered React elements were equivalent. Finally, the circle\u2019s color indicates whether the component had to be reconciled or not.</p>\n<figure>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/5ee1bdf4779af06072a17b7a0654f6db/cd039/should-component-update.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/5ee1bdf4779af06072a17b7a0654f6db/cd039/should-component-update.png\">Image link</a>\n</span>\n</span>\n</a>\n</figure>\n<p>Since <code class=\"language-javascript\">shouldComponentUpdate</code> returned <code class=\"language-javascript\">false</code> for the subtree rooted at C2, React did not attempt to render C2, and thus didn\u2019t even have to invoke <code class=\"language-javascript\">shouldComponentUpdate</code> on C4 and C5.</p>\n<p>For C1 and C3, <code class=\"language-javascript\">shouldComponentUpdate</code> returned <code class=\"language-javascript\">true</code>, so React had to go down to the leaves and check them. For C6 <code class=\"language-javascript\">shouldComponentUpdate</code> returned <code class=\"language-javascript\">true</code>, and since the rendered elements weren\u2019t equivalent React had to update the DOM.</p>\n<p>The last interesting case is C8. React had to render this component, but since the React elements it returned were equal to the previously rendered ones, it didn\u2019t have to update the DOM.</p>\n<p>Note that React only had to do DOM mutations for C6, which was inevitable. For C8, it bailed out by comparing the rendered React elements, and for C2\u2019s subtree and C7, it didn\u2019t even have to compare the elements as we bailed out on <code class=\"language-javascript\">shouldComponentUpdate</code>, and <code class=\"language-javascript\">render</code> was not called.</p>\n<h2 id=\"examples\"><a class=\"anchor\" href=\"/react/optimizing-performance#examples\"></a>Examples </h2>\n<p>If the only way your component ever changes is when the <code class=\"language-javascript\">props.color</code> or the <code class=\"language-javascript\">state.count</code> variable changes, you could have <code class=\"language-javascript\">shouldComponentUpdate</code> check that:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps<span class=\"token punctuation\">,</span> nextState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color <span class=\"token operator\">!==</span> nextProps<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">!==</span> nextState<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Count: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In this code, <code class=\"language-javascript\">shouldComponentUpdate</code> is just checking if there is any change in <code class=\"language-javascript\">props.color</code> or <code class=\"language-javascript\">state.count</code>. If those values don\u2019t change, the component doesn\u2019t update. If your component got more complex, you could use a similar pattern of doing a \u201cshallow comparison\u201d between all the fields of <code class=\"language-javascript\">props</code> and <code class=\"language-javascript\">state</code> to determine if the component should update. This pattern is common enough that React provides a helper to use this logic - just inherit from <code class=\"language-javascript\">React.PureComponent</code>. So this code is a simpler way to achieve the same thing:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Count: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Most of the time, you can use <code class=\"language-javascript\">React.PureComponent</code> instead of writing your own <code class=\"language-javascript\">shouldComponentUpdate</code>. It only does a shallow comparison, so you can\u2019t use it if the props or state may have been mutated in a way that a shallow comparison would miss.</p>\n<p>This can be a problem with more complex data structures. For example, let\u2019s say you want a <code class=\"language-javascript\">ListOfWords</code> component to render a comma-separated list of words, with a parent <code class=\"language-javascript\">WordAdder</code> component that lets you click a button to add a word to the list. This code does <em>not</em> work correctly:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListOfWords</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordAdder</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">words</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// This section is bad style and causes a bug</span>\n    <span class=\"token keyword\">const</span> words <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">;</span>\n    words<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">words</span><span class=\"token operator\">:</span> words<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListOfWords</span></span> <span class=\"token attr-name\">words</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The problem is that <code class=\"language-javascript\">PureComponent</code> will do a simple comparison between the old and new values of <code class=\"language-javascript\">this.props.words</code>. Since this code mutates the <code class=\"language-javascript\">words</code> array in the <code class=\"language-javascript\">handleClick</code> method of <code class=\"language-javascript\">WordAdder</code>, the old and new values of <code class=\"language-javascript\">this.props.words</code> will compare as equal, even though the actual words in the array have changed. The <code class=\"language-javascript\">ListOfWords</code> will thus not update even though it has new words that should be rendered.</p>\n<h2 id=\"the-power-of-not-mutating-data\"><a class=\"anchor\" href=\"/react/optimizing-performance#the-power-of-not-mutating-data\"></a>The Power Of Not Mutating Data </h2>\n<p>The simplest way to avoid this problem is to avoid mutating values that you are using as props or state. For example, the <code class=\"language-javascript\">handleClick</code> method above could be rewritten using <code class=\"language-javascript\">concat</code> as:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">words</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ES6 supports a <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\">spread syntax</a> for arrays which can make this easier. If you\u2019re using Create React App, this syntax is available by default.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">words</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>words<span class=\"token punctuation\">,</span> <span class=\"token string\">'marklar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also rewrite code that mutates objects to avoid mutation, in a similar way. For example, let\u2019s say we have an object named <code class=\"language-javascript\">colormap</code> and we want to write a function that changes <code class=\"language-javascript\">colormap.right</code> to be <code class=\"language-javascript\">'blue'</code>. We could write:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  colormap<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To write this without mutating the original object, we can use <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\">Object.assign</a> method:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> colormap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">updateColorMap</code> now returns a new object, rather than mutating the old one. <code class=\"language-javascript\">Object.assign</code> is in ES6 and requires a polyfill.</p>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Object spread syntax</a> makes it easier to update objects without mutation as well:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateColorMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">colormap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>colormap<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This feature was added to JavaScript in ES2018.</p>\n<p>If you\u2019re using Create React App, both <code class=\"language-javascript\">Object.assign</code> and the object spread syntax are available by default.</p>\n<p>When you deal with deeply nested objects, updating them in an immutable way can feel convoluted. If you run into this problem, check out <a class=\"external-link\" href=\"https://github.com/mweststrate/immer\">Immer</a> or <a class=\"external-link\" href=\"https://github.com/kolodny/immutability-helper\">immutability-helper</a>. These libraries let you write highly readable code without losing the benefits of immutability.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/optimizing-performance.md\">Edit this page</a></p></div></article>", "path": "/react/optimizing-performance", "nav": ["/react/jsx-in-depth", "/react/portals"]}, {"key": "Portal'lar", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Portal\u2019lar, \u00fcst bile\u015fenin DOM hiyerar\u015fisinin d\u0131\u015f\u0131nda bulunan bir DOM d\u00fc\u011f\u00fcm\u00fcne alt eleman render etmek i\u00e7in \u00fcst\u00fcn bir yol sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span></code></pre></div>\n<p>\u0130lk arg\u00fcman (<code class=\"language-javascript\">child</code>) bir eleman, dize veya fragment gibi <a href=\"/react/react-component#render\">render edilebilir herhangi bir React alt eleman\u0131d\u0131r.</a> \u0130kinci arg\u00fcman (<code class=\"language-javascript\">container</code>) bir DOM eleman\u0131d\u0131r.</p>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/portals#usage\"></a>Kullan\u0131m </h2>\n<p>Normal olarak, bir eleman\u0131 bir bile\u015fenin render metodundan d\u00f6nd\u00fcrd\u00fc\u011f\u00fcn\u00fczde, En yak\u0131n \u00fcst d\u00fc\u011f\u00fcm\u00fcn alt eleman\u0131 olarak DOM\u2019a yerle\u015ftirilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React yeni bir div olu\u015fturur ve i\u00e7ine alt elemanlar\u0131 render eder</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bununla birlikte, bazen bir alt eleman\u0131 DOM \u00fczerinde farkl\u0131 bir yere yerle\u015ftirmek i\u00e7in kullan\u0131\u015fl\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React yeni bir div *olu\u015fturmaz*. Alt eleman\u0131 `domNode` i\u00e7ine render eder.</span>\n  <span class=\"token comment\">// `domNode` DOM \u00fczerindeki konumuna bak\u0131lmaks\u0131z\u0131n, herhangi bir ge\u00e7erli DOM d\u00fc\u011f\u00fcm\u00fcd\u00fcr.</span>\n  <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    domNode</span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Portal\u2019lar i\u00e7in tipik bir kullan\u0131m durumu, bir ana bile\u015fenin <code class=\"language-javascript\">overflow: hidden</code> veya <code class=\"language-javascript\">z-index</code> stiline sahip olmas\u0131, fakat alt eleman\u0131 kapsay\u0131c\u0131s\u0131ndan g\u00f6rsel olarak \u201c\u00e7\u0131karman\u0131z\u201d gerekti\u011findedir. \u00d6rne\u011fin; dialog\u2019lar, hovercard\u2019lar ve tooltip\u2019ler.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Portal\u2019lar ile \u00e7al\u0131\u015f\u0131rken, <a href=\"/react/accessibility#programmatically-managing-focus\">klavye oda\u011f\u0131n\u0131 y\u00f6netmenin</a> \u00e7ok \u00f6nemli oldu\u011funu unutmay\u0131n.</p>\n<p>Modal dialog\u2019lar\u0131 i\u00e7in, <a class=\"external-link\" href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal\">WAI-ARIA Modal Olu\u015fturma Pratiklerine</a> uygun \u015fekilde herkesin onlarla etkile\u015fim kurabildi\u011finden emin olun.</p>\n</div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/yzMaBd\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<h2 id=\"event-bubbling-through-portals\"><a class=\"anchor\" href=\"/react/portals#event-bubbling-through-portals\"></a>Portal\u2019lar \u00dczerinden Olay Kabarc\u0131kland\u0131rma </h2>\n<p>Bir portal DOM a\u011fac\u0131nda herhangi bir yerde olsa bile, her \u015fekilde normal bir React alt eleman\u0131 gibi davran\u0131r. Context gibi \u00f6zellikler, alt eleman\u0131n bir portal olup olmad\u0131\u011f\u0131na bak\u0131lmaks\u0131z\u0131n tam olarak ayn\u0131 \u015fekilde \u00e7al\u0131\u015f\u0131r, \u00e7\u00fcnk\u00fc portal <em>DOM a\u011fac\u0131ndaki</em> konumundan ba\u011f\u0131ms\u0131z olarak hala <em>React a\u011fac\u0131nda</em> bulunur.</p>\n<p>Bu \u00f6rnek olay kabarc\u0131kland\u0131rma i\u00e7erir. Bir portal\u2019\u0131n i\u00e7inden tetiklenen bir olay, bu elemanlar <em>DOM a\u011fac\u0131nda</em> \u00fcst eleman\u0131 olmasa bile, i\u00e7inde bulundu\u011fu <em>React a\u011fac\u0131ndaki</em> \u00fcst elemanlara yay\u0131l\u0131r. A\u015fa\u011f\u0131daki HTML yap\u0131s\u0131n\u0131 varsayarak:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app-root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal-root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">#app-root</code> i\u00e7inde bulunan bir <code class=\"language-javascript\">Parent</code> bile\u015feni, karde\u015f eleman olan <code class=\"language-javascript\">#modal-root</code> \u00fczerinden kabarc\u0131klanan yakalanmam\u0131\u015f bir olay\u0131 yakalayabilecek.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Bu iki kapsay\u0131c\u0131 DOM \u00fczerinde karde\u015ftir (yani yan yana bulunur)</span>\n<span class=\"token keyword\">const</span> appRoot <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app-root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> modalRoot <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'modal-root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Modal</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Portal eleman\u0131, Modal'\u0131n alt elemanlar\u0131</span>\n    <span class=\"token comment\">// olu\u015fturulduktan sonra DOM a\u011fac\u0131na eklenir,</span>\n    <span class=\"token comment\">// bu alt elemanlar\u0131n ayr\u0131 bir DOM d\u00fc\u011f\u00fcm\u00fcnde olu\u015fturuldu\u011fu anlam\u0131na gelir.</span>\n    <span class=\"token comment\">// Bir alt bile\u015fen olu\u015fturuldu\u011funda \u00e7abucak DOM a\u011fac\u0131na</span>\n    <span class=\"token comment\">// ba\u011flanmay\u0131 gerektirirse, \u00f6rne\u011fin DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc \u00f6l\u00e7mek i\u00e7in,</span>\n    <span class=\"token comment\">// veya \u00fcstten gelen bir 'autoFocus' kullan\u0131yorsa,</span>\n    <span class=\"token comment\">// Modal'a state ekleyin ve alt elemanlar\u0131 yaln\u0131zca</span>\n    <span class=\"token comment\">// DOM a\u011fac\u0131na Modal eklendi\u011finde render edin.</span>\n    modalRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    modalRoot<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">clicks</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Bu, Child i\u00e7inde bulunan butona t\u0131kland\u0131\u011f\u0131nda tetiklenir,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// buton DOM \u00fczerinde do\u011frudan \u00fcste ba\u011fl\u0131 olmamas\u0131na ra\u011fmen</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Parent'in state'ini g\u00fcnceller.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">clicks</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>clicks <span class=\"token operator\">+</span> <span class=\"token number\">1</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">T\u0131klama say\u0131s\u0131: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>clicks<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Butonun onClick y\u00f6neticisi ile</span>\n<span class=\"token plain-text\">          birlikte div alt eleman\u0131 olmad\u0131\u011f\u0131n\u0131</span>\n<span class=\"token plain-text\">          g\u00f6zlemlemek i\u00e7in taray\u0131c\u0131n\u0131z\u0131n</span>\n<span class=\"token plain-text\">          geli\u015ftrici konsolunu a\u00e7\u0131n.</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Modal</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Modal</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Bu butondaki click olay\u0131 en \u00fcst elemana kabarc\u0131klan\u0131r (\u00e7\u0131kar),</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u00e7\u00fcnk\u00fc tan\u0131mlanm\u0131\u015f bir 'onClick' \u00f6zelli\u011fi yok</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">T\u0131kla</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>appRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Parent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/jGBWpE\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Bir \u00fcst bile\u015fende bir portal\u2019dan kabarc\u0131klanan bir olay\u0131 yakalamak, do\u011fal olarak portal\u2019lara ba\u011f\u0131ml\u0131 olmayan daha esnek soyutlamalar\u0131n geli\u015ftirilmesine izin verir. \u00d6rne\u011fin, bir <code class=\"language-javascript\">&lt;Modal /&gt;</code> bile\u015feni render ederseniz, \u00fcst eleman portal\u2019lar kullan\u0131larak uygulan\u0131p uygulanmad\u0131\u011f\u0131na bak\u0131lmaks\u0131z\u0131n olaylar\u0131n\u0131 yakalayabilir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/portals.md\">Edit this page</a></p></div></article>", "path": "/react/portals", "nav": ["/react/optimizing-performance", "/react/profiler"]}, {"key": "Profiler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>The <code class=\"language-javascript\">Profiler</code> measures how often a React application renders and what the \u201ccost\u201d of rendering is.\nIts purpose is to help identify parts of an application that are slow and may benefit from <a href=\"/react/hooks-faq#how-to-memoize-calculations\">optimizations such as memoization</a>.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>Profiling adds some additional overhead, so <strong>it is disabled in <a href=\"/react/optimizing-performance#use-the-production-build\">the production build</a></strong>.</p>\n<p>To opt into production profiling, React provides a special production build with profiling enabled.\nRead more about how to use this build at <a class=\"external-link\" href=\"https://fb.me/react-profiling\">fb.me/react-profiling</a></p>\n</div>\n<h2 id=\"usage\"><a class=\"anchor\" href=\"/react/profiler#usage\"></a>Usage </h2>\n<p>A <code class=\"language-javascript\">Profiler</code> can be added anywhere in a React tree to measure the cost of rendering that part of the tree.\nIt requires two props: an <code class=\"language-javascript\">id</code> (string) and an <code class=\"language-javascript\">onRender</code> callback (function) which React calls any time a component within the tree \u201ccommits\u201d an update.</p>\n<p>For example, to profile a <code class=\"language-javascript\">Navigation</code> component and its descendants:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Navigation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Navigation</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Multiple <code class=\"language-javascript\">Profiler</code> components can be used to measure different parts of an application:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Navigation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Navigation</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Main<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">Profiler</code> components can also be nested to measure different components within the same subtree:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Panel<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Panel</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profiler</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>PreviewPane<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onRender</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>callback<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PreviewPane</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Panel</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Profiler</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">App</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>Although <code class=\"language-javascript\">Profiler</code> is a light-weight component, it should be used only when necessary; each use adds some CPU and memory overhead to an application.</p>\n</div>\n<h2 id=\"onrender-callback\"><a class=\"anchor\" href=\"/react/profiler#onrender-callback\"></a><code class=\"language-javascript\">onRender</code> Callback </h2>\n<p>The <code class=\"language-javascript\">Profiler</code> requires an <code class=\"language-javascript\">onRender</code> function as a prop.\nReact calls this function any time a component within the profiled tree \u201ccommits\u201d an update.\nIt receives parameters describing what was rendered and how long it took.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onRenderCallback</span><span class=\"token punctuation\">(</span>\n  id<span class=\"token punctuation\">,</span> <span class=\"token comment\">// the \"id\" prop of the Profiler tree that has just committed</span>\n  phase<span class=\"token punctuation\">,</span> <span class=\"token comment\">// either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)</span>\n  actualDuration<span class=\"token punctuation\">,</span> <span class=\"token comment\">// time spent rendering the committed update</span>\n  baseDuration<span class=\"token punctuation\">,</span> <span class=\"token comment\">// estimated time to render the entire subtree without memoization</span>\n  startTime<span class=\"token punctuation\">,</span> <span class=\"token comment\">// when React began rendering this update</span>\n  commitTime<span class=\"token punctuation\">,</span> <span class=\"token comment\">// when React committed this update</span>\n  interactions <span class=\"token comment\">// the Set of interactions belonging to this update</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Aggregate or log render timings...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let\u2019s take a closer look at each of the props:</p>\n<ul>\n<li><strong><code class=\"language-javascript\">id: string</code></strong> -\nThe <code class=\"language-javascript\">id</code> prop of the <code class=\"language-javascript\">Profiler</code> tree that has just committed.\nThis can be used to identify which part of the tree was committed if you are using multiple profilers.</li>\n<li><strong><code class=\"language-javascript\">phase: \"mount\" | \"update\"</code></strong> -\nIdentifies whether the tree has just been mounted for the first time or re-rendered due to a change in props, state, or hooks.</li>\n<li><strong><code class=\"language-javascript\">actualDuration: number</code></strong> -\nTime spent rendering the <code class=\"language-javascript\">Profiler</code> and its descendants for the current update.\nThis indicates how well the subtree makes use of memoization (e.g. <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a>, <a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a>, <a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate</code></a>).\nIdeally this value should decrease significantly after the initial mount as many of the descendants will only need to re-render if their specific props change.</li>\n<li><strong><code class=\"language-javascript\">baseDuration: number</code></strong> -\nDuration of the most recent <code class=\"language-javascript\">render</code> time for each individual component within the <code class=\"language-javascript\">Profiler</code> tree.\nThis value estimates a worst-case cost of rendering (e.g. the initial mount or a tree with no memoization).</li>\n<li><strong><code class=\"language-javascript\">startTime: number</code></strong> -\nTimestamp when React began rendering the current update.</li>\n<li><strong><code class=\"language-javascript\">commitTime: number</code></strong> -\nTimestamp when React committed the current update.\nThis value is shared between all profilers in a commit, enabling them to be grouped if desirable.</li>\n<li><strong><code class=\"language-javascript\">interactions: Set</code></strong> -\nSet of <a class=\"external-link\" href=\"https://fb.me/react-interaction-tracing\">\u201cinteractions\u201d</a> that were being traced when the update was scheduled (e.g. when <code class=\"language-javascript\">render</code> or <code class=\"language-javascript\">setState</code> were called).</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>Interactions can be used to identify the cause of an update, although the API for tracing them is still experimental.</p>\n<p>Learn more about it at <a class=\"external-link\" href=\"https://fb.me/react-interaction-tracing\">fb.me/react-interaction-tracing</a></p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-profiler.md\">Edit this page</a></p></div></article>", "path": "/react/profiler", "nav": ["/react/portals", "/react/react-without-es6"]}, {"key": "ES6 Olmadan React Kullan\u0131m\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Normalde bir React bile\u015fenini d\u00fcz JavaScript s\u0131n\u0131f\u0131 olarak tan\u0131mlars\u0131n\u0131z:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hen\u00fcz ES6 kullanm\u0131yorsan\u0131z, s\u0131n\u0131f yerine <code class=\"language-javascript\">create-react-class</code> mod\u00fcl\u00fcn\u00fc kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Greeting <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ES6 s\u0131n\u0131flar\u0131n\u0131n \u00e7al\u0131\u015fma \u015fekli bir ka\u00e7 istisna d\u0131\u015f\u0131nda <code class=\"language-javascript\">createReactClass()</code>\u2018a benzer.</p>\n<h2 id=\"declaring-default-props\"><a class=\"anchor\" href=\"/react/react-without-es6#declaring-default-props\"></a>Varsay\u0131lan Prop\u2019lar\u0131 Tan\u0131mlama </h2>\n<p>Fonksiyonlarda ve ES6 s\u0131n\u0131flar\u0131nda <code class=\"language-javascript\">defaultProps</code>, bile\u015fenin kendisinde \u00f6zellik olarak tan\u0131mlan\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\nGreeting<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mary'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">createReactClass()</code> ile birlikte obje iletilen bir <code class=\"language-javascript\">getDefaultProps()</code> fonksiyonu tan\u0131mlaman\u0131z gerekir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> Greeting <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getDefaultProps</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mary'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"setting-the-initial-state\"><a class=\"anchor\" href=\"/react/react-without-es6#setting-the-initial-state\"></a>Ba\u015flang\u0131\u00e7 State\u2019ini Ayarlamak </h2>\n<p>ES6 s\u0131n\u0131flar\u0131nda, ba\u015flang\u0131\u00e7 state\u2019inizi constructor i\u00e7indeki <code class=\"language-javascript\">this.state</code>\u2018e atayarak tan\u0131mlayabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">createReactClass()</code> ile birlikte, ba\u015flang\u0131\u00e7 state\u2019inizi d\u00f6nd\u00fcren ayr\u0131 bir <code class=\"language-javascript\">getInitialState</code> metodu sa\u011flaman\u0131z gerekir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> Counter <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"autobinding\"><a class=\"anchor\" href=\"/react/react-without-es6#autobinding\"></a>Autobinding </h2>\n<p>ES6 s\u0131n\u0131f\u0131 olarak kullan\u0131lan React bile\u015fenlerinde metodlar, normal ES6 s\u0131n\u0131flar\u0131ndaki mant\u0131\u011f\u0131n ayn\u0131s\u0131n\u0131 kullan\u0131rlar. Yani nesne ile <code class=\"language-javascript\">this</code>\u2018i otomatik olarak ili\u015fkilendirmezler. Constructor\u2019da a\u00e7\u0131k bir \u015fekilde <code class=\"language-javascript\">.bind(this)</code> kullanman\u0131z gerekir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SayHello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merhaba!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Bu sat\u0131r \u00f6nemli!</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// `this.handleClick` ba\u011fl\u0131 oldu\u011fu i\u00e7in olay y\u00f6neticisi olarak kullanabiliriz.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Merhaba de\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>T\u00fcm metodlar\u0131 ili\u015fkilendirdi\u011fi i\u00e7in <code class=\"language-javascript\">createReactClass()</code> ile birlikte bunu kullanmak gereksizdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> SayHello <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merhaba!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">handleClick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Merhaba de\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yani ES6 s\u0131n\u0131flar\u0131 ile yazmak, olay y\u00f6neticileri i\u00e7in biraz daha taslak kod yazmay\u0131 gerektirir ama iyi taraf\u0131ysa \u015fudur: B\u00fcy\u00fck uygulamalarda biraz daha iyi performans g\u00f6sterir.</p>\n<p>E\u011fer taslak kod yazmak size itici geliyorsa, <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields#public_instance_fields\">ES2022 S\u0131n\u0131f \u00d6zellikleri</a> s\u00f6zdizimini kullanabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SayHello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Merhaba!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Burada arrow kullanmak, metodu ili\u015fkilendirir.</span>\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Merhaba de\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ayr\u0131ca ba\u015fka birka\u00e7 tane daha se\u00e7eni\u011finiz bulunmaktad\u0131r:</p>\n<h2 id=\"mixins\"><a class=\"anchor\" href=\"/react/react-without-es6#mixins\"></a>Mixinler </h2>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>ES6, hi\u00e7 mixin deste\u011fi olmadan ba\u015flat\u0131ld\u0131. Bu nedenle, ES6 s\u0131n\u0131flar\u0131 ile React kulland\u0131\u011f\u0131n\u0131zda mixin deste\u011fi yoktur.</p>\n<p><strong>Ayn\u0131 zamanda, mixin kullanan kod tabanlar\u0131nda say\u0131s\u0131z sorun bulduk <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">ve yeni kodlarda kullanman\u0131z\u0131 tavsiye etmiyoruz</a>.</strong></p>\n<p>Bu alan sadece referans i\u00e7in bulunmaktad\u0131r.</p>\n</div>\n<p>Bazen \u00e7ok farkl\u0131 bile\u015fenler ayn\u0131 fonksiyonaliteyi payla\u015fabilirler. Bazen buna <a class=\"external-link\" href=\"https://eksisozluk.com/aspect-oriented-programming--574712?nr=true&amp;rf=cross%20cutting%20concern\">kesi\u015fen endi\u015fe</a> denir. <code class=\"language-javascript\">createReactClass</code> bunun i\u00e7in eski <code class=\"language-javascript\">mixins</code> sistemini kullanman\u0131za izin verir.</p>\n<p>S\u0131k kullan\u0131lan durumlardan biri, bile\u015fenin bir zaman aral\u0131\u011f\u0131nda kendisini g\u00fcncellemek istemesidir. <code class=\"language-javascript\">setInterval()</code> kullanmak kolayd\u0131r ama haf\u0131zadan yer kazanmak i\u00e7in ona ihtiyac\u0131n\u0131z olmad\u0131\u011f\u0131nda zaman aral\u0131\u011f\u0131n\u0131 iptal etmek \u00f6nemlidir. React size bile\u015fenin yarat\u0131lmak ya da yok edilmek \u00fczere oldu\u011funu anlaman\u0131z i\u00e7in <a href=\"/react/react-component#the-component-lifecycle\">hayat d\u00f6ng\u00fcs\u00fc</a> metodlar\u0131n\u0131 sa\u011flar. Gelin bile\u015feniniz yok edildi\u011finde otomatik olarak temizlenen basit bir <code class=\"language-javascript\">setInterval()</code> fonksiyonunu yaratmak i\u00e7in bu metodlar\u0131 kullanan basit bir mixin yazal\u0131m.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> SetIntervalMixin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">componentWillMount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">setInterval</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">componentWillUnmount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>clearInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> createReactClass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create-react-class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> TickTock <span class=\"token operator\">=</span> <span class=\"token function\">createReactClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">mixins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>SetIntervalMixin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Mixin kullan</span>\n  <span class=\"token function-variable function\">getInitialState</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">seconds</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">componentDidMount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Mixinde metod \u00e7a\u011f\u0131r</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">tick</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">seconds</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seconds <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        React </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>seconds<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> saniyedir \u00e7al\u0131\u015f\u0131yor.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TickTock</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>E\u011fer bir bile\u015fen birden \u00e7ok mixin kullan\u0131yor ve birka\u00e7 mixini ayn\u0131 hayat d\u00f6ng\u00fcs\u00fc metodunda tan\u0131ml\u0131yorsa (yani bile\u015fen yok edildi\u011finde birka\u00e7 mixin temizlenmek isteniyorsa), t\u00fcm ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131n\u0131n \u00e7a\u011fr\u0131lmas\u0131 garanti edilir. Mixin\u2019lerde tan\u0131mlanan metodlar, bile\u015fendeki metod \u00e7a\u011fr\u0131lar\u0131ndan sonra listelenen s\u0131rayla \u00e7al\u0131\u015ft\u0131r\u0131l\u0131rlar.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/react-without-es6.md\">Edit this page</a></p></div></article>", "path": "/react/react-without-es6", "nav": ["/react/profiler", "/react/react-without-jsx"]}, {"key": "JSX Olmadan React Kullan\u0131m\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>JSX, React\u2019i kullanmak i\u00e7in bir gereksinim de\u011fildir. JSX olmadan React\u2019i kullanmak \u00f6zellikle, geli\u015ftirme ortam\u0131n\u0131zda derleme ayarlar\u0131yla u\u011fra\u015fmak istemedi\u011finiz durumlarda daha uygundur.</p>\n<p>Her JSX elementi sadece <code class=\"language-javascript\">React.createElement(component, props, ...children)</code>\u2018i \u00e7a\u011f\u0131rmak i\u00e7in s\u00f6zdizimsel \u015fekerdir. Yani, JSX ile yapabilece\u011finiz her \u015feyi sadece d\u00fcz JavaScript ile yapabilirsiniz.</p>\n<p>\u00d6rne\u011fin, bu kod JSX ile yaz\u0131lm\u0131\u015f:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">toWhat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>World<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>JSX kullanmayan bu koda derlenebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>toWhat<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">toWhat</span><span class=\"token operator\">:</span> <span class=\"token string\">'World'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>JSX\u2019in JavaScript\u2019e nas\u0131l d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc\u011f\u00fcne dair daha fazla \u00f6rnek g\u00f6rmek isterseniz, <a class=\"external-link\" href=\"https://babeljs.io/repl/#?presets=react&amp;code_lz=GYVwdgxgLglg9mABACwKYBt1wBQEpEDeAUIogE6pQhlIA8AJjAG4B8AEhlogO5xnr0AhLQD0jVgG4iAXyJA\">\u00e7evrimi\u00e7i Babel derleyicisi</a>ni deneyebilirsiniz.</p>\n<p>Bile\u015fen bir string, <code class=\"language-javascript\">React.Component</code>\u2018in alt s\u0131n\u0131f\u0131, ya da d\u00fcz bir fonksiyon olarak sa\u011flanabilir.</p>\n<p>E\u011fer \u00e7ok fazla <code class=\"language-javascript\">React.createElement</code> yazmaktan b\u0131kt\u0131ysan\u0131z, genel \u00e7\u00f6z\u00fcm bir k\u0131saltmaya atamakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>createElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Merhaba D\u00fcnya'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>E\u011fer bu k\u0131saltma halini <code class=\"language-javascript\">React.createElement</code> i\u00e7in kullan\u0131rsan\u0131z, JSX olmadan React\u2019i kullanmak daha pratik olabilir.</p>\n<p>Alternatif olarak, <a class=\"external-link\" href=\"https://github.com/mlmorg/react-hyperscript\"><code class=\"language-javascript\">react-hyperscript</code></a> ve <a class=\"external-link\" href=\"https://github.com/ohanhi/hyperscript-helpers\"><code class=\"language-javascript\">hyperscript-helpers</code></a> gibi <code class=\"language-javascript\">terser</code> s\u00f6zdizimi sunan topluluk projelerine g\u00f6z atabilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/react-without-jsx.md\">Edit this page</a></p></div></article>", "path": "/react/react-without-jsx", "nav": ["/react/react-without-es6", "/react/reconciliation"]}, {"key": "Uyumla\u015ft\u0131rma", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React, her g\u00fcncellemede tam olarak ne de\u011fi\u015fti\u011fi konusunda endi\u015felenmenize gerek kalmamas\u0131 i\u00e7in bildirimsel bir API sa\u011flar. Bu, uygulamalar\u0131 yazmay\u0131 daha kolay hale getirir, ancak bunun React i\u00e7inde nas\u0131l uyguland\u0131\u011f\u0131 (implementation) a\u00e7\u0131k olmayabilir. Bu makale, React\u2019\u0131n \u201cfark bulma\u201d algoritmas\u0131ndaki yapt\u0131\u011f\u0131m\u0131z se\u00e7imleri a\u00e7\u0131klar, b\u00f6ylece y\u00fcksek performansl\u0131 uygulamalar i\u00e7in yeterince h\u0131zl\u0131 olurken bile\u015fen g\u00fcncellemeleri tahmin edilebilir.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/reconciliation#motivation\"></a>Motivasyon </h2>\n<p>React\u2019\u0131 kulland\u0131\u011f\u0131n\u0131zda, zaman i\u00e7inde bir noktada <code class=\"language-javascript\">render()</code> fonksiyonunun React elemanlar\u0131ndan bir a\u011fa\u00e7 olu\u015fturdu\u011funu d\u00fc\u015f\u00fcnebilirsiniz. Bir sonraki state veya prop\u2019lar\u0131n g\u00fcncellenmesiyle, <code class=\"language-javascript\">render()</code> fonksiyonu farkl\u0131 bir React elemanlar\u0131 a\u011fac\u0131 d\u00f6nd\u00fcrecektir. React daha sonra, en son a\u011faca uyacak \u015fekilde kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc nas\u0131l verimli bir \u015fekilde g\u00fcncelleyece\u011fini bulmal\u0131d\u0131r.</p>\n<p>Bir a\u011fac\u0131 di\u011ferine d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in minimum say\u0131da i\u015flem \u00fcretme sorununa baz\u0131 genel \u00e7\u00f6z\u00fcmler vard\u0131r. Bununla birlikte, <a class=\"external-link\" href=\"https://grfia.dlsi.ua.es/ml/algorithms/references/editsurvey_bille.pdf\">en geli\u015fmi\u015f algoritmalar\u0131n</a> O(n<sup>3</sup>) d\u00fczeyinde karma\u015f\u0131kl\u0131\u011f\u0131 vard\u0131r; burada n, a\u011fa\u00e7taki elemanlar\u0131n say\u0131s\u0131d\u0131r.</p>\n<p>E\u011fer bunu React\u2019ta kullansayd\u0131k, 1000 \u00f6\u011fenin g\u00f6r\u00fcnt\u00fclenmesi s\u0131ras\u0131na g\u00f6re bir milyar kar\u015f\u0131la\u015ft\u0131rmaya ihtiya\u00e7 duyard\u0131. Bu \u00e7ok maliyetli. Bunun yerine, React iki varsay\u0131m \u00fczerine sezgisel bir O(n) algoritma uygular:</p>\n<ol>\n<li>Farkl\u0131 tip iki eleman farkl\u0131 a\u011fa\u00e7lar \u00fcretecektir.</li>\n<li>Geli\u015ftirici, hangi alt elemanlar\u0131n farkl\u0131 render edilmelerde sabit olabilece\u011fini <code class=\"language-javascript\">key</code> prop\u2019u kullanarak belirtebilir.</li>\n</ol>\n<p>Pratikte, bu varsay\u0131mlar neredeyse t\u00fcm kullan\u0131m durumlar\u0131 i\u00e7in ge\u00e7erlidir.</p>\n<h2 id=\"the-diffing-algorithm\"><a class=\"anchor\" href=\"/react/reconciliation#the-diffing-algorithm\"></a>Fark Bulma (Diffing) Algoritmas\u0131 </h2>\n<p>\u0130ki a\u011fac\u0131n fark\u0131n\u0131 bulurken, React \u00f6nce iki k\u00f6k eleman\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131r. Davran\u0131\u015f, k\u00f6k elemanlar\u0131n tipine ba\u011fl\u0131 olarak farkl\u0131l\u0131k g\u00f6sterir.</p>\n<h3 id=\"elements-of-different-types\"><a class=\"anchor\" href=\"/react/reconciliation#elements-of-different-types\"></a>Farkl\u0131 Tip Elemanlar </h3>\n<p>K\u00f6k elemanlar\u0131n tipleri farkl\u0131 oldu\u011funda, React eski a\u011fac\u0131 y\u0131kacak ve yeni a\u011fac\u0131 s\u0131f\u0131rdan in\u015fa edecektir. <code class=\"language-javascript\">&lt;a&gt;</code>\u2018dan <code class=\"language-javascript\">&lt;img&gt;</code>\u2018e, <code class=\"language-javascript\">&lt;Article&gt;</code>\u2018dan <code class=\"language-javascript\">&lt;Comment&gt;</code>\u2018e veya <code class=\"language-javascript\">&lt;Button&gt;</code>\u2018dan <code class=\"language-javascript\">&lt;div&gt;</code>\u2018e gitmek - bunlardan herhangi biri tam bir yeniden in\u015faya yol a\u00e7acakt\u0131r.</p>\n<p>Bir a\u011fac\u0131 y\u0131karken, eski DOM d\u00fc\u011f\u00fcmleri yok edilir. Bile\u015fen nesnelerinde <code class=\"language-javascript\">componentWillUnmount()</code> \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Yeni bir a\u011fa\u00e7 olu\u015ftururken, DOM\u2019a yeni DOM d\u00fc\u011f\u00fcmleri eklenir. Bile\u015fen nesnelerinde <code class=\"language-javascript\">UNSAFE_componentWillMount()</code> ve sonra <code class=\"language-javascript\">componentDidMount()</code> \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Eski a\u011fa\u00e7la ili\u015fkili herhangi bir state kaybolur.</p>\n<p>K\u00f6k\u00fcn alt\u0131ndaki t\u00fcm bile\u015fenlerin de ba\u011flant\u0131s\u0131 kesilir ve stateleri yok edilir. \u00d6rne\u011fin, fark bulurken:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Counter</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Counter</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu, eski <code class=\"language-javascript\">Counter</code>\u2018\u0131 yok eder ve yenisini olu\u015fturur.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu y\u00f6ntemler eski y\u00f6ntem olarak kabul edilir ve yeni kodda <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">bunlardan ka\u00e7\u0131nmal\u0131s\u0131n\u0131z</a>:</p>\n<ul>\n<li><code class=\"language-javascript\">UNSAFE_componentWillMount()</code></li>\n</ul>\n</div>\n<h3 id=\"dom-elements-of-the-same-type\"><a class=\"anchor\" href=\"/react/reconciliation#dom-elements-of-the-same-type\"></a>Ayn\u0131 Tip DOM Elemanlar\u0131 </h3>\n<p>Ayn\u0131 tip iki React DOM eleman\u0131n\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131rken, React her ikisinin de \u00f6zelliklerine bakar, ayn\u0131 DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc tutar ve yaln\u0131zca de\u011fi\u015ftirilen \u00f6zellikleri g\u00fcnceller. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>before<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>after<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stuff<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>React bu iki eleman\u0131 kar\u015f\u0131la\u015ft\u0131rarak, yaln\u0131zca DOM d\u00fc\u011f\u00fcm\u00fcndeki <code class=\"language-javascript\">className</code> \u00f6zelli\u011fini de\u011fi\u015ftirmesi gerekti\u011fini bilir.</p>\n<p><code class=\"language-javascript\">style</code>\u2018\u0131 g\u00fcncellerken, React yaln\u0131zca de\u011fi\u015fen \u00f6zellikleri g\u00fcncellemesi gerekti\u011fini de bilir. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{color:</span> <span class=\"token attr-name\">'red',</span> <span class=\"token attr-name\"><span class=\"token namespace\">fontWeight:</span></span> <span class=\"token attr-name\">'bold'}}</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{color:</span> <span class=\"token attr-name\">'green',</span> <span class=\"token attr-name\"><span class=\"token namespace\">fontWeight:</span></span> <span class=\"token attr-name\">'bold'}}</span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>React, bu iki eleman aras\u0131nda d\u00f6n\u00fc\u015ft\u00fcrme yaparken <code class=\"language-javascript\">fontWeight</code>\u2018i de\u011fil, yaln\u0131zca <code class=\"language-javascript\">color</code> stilini de\u011fi\u015ftirmesi gerekti\u011fini bilir.</p>\n<p>DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc y\u00f6netildikten sonra, React alt elemanlar \u00fczerinde \u00f6zyinelemeli olarak devam eder.</p>\n<h3 id=\"component-elements-of-the-same-type\"><a class=\"anchor\" href=\"/react/reconciliation#component-elements-of-the-same-type\"></a>Ayn\u0131 Tip Bile\u015fen Elemanlar\u0131 </h3>\n<p>Bir bile\u015fen g\u00fcncellendi\u011finde, nesne ayn\u0131 kal\u0131r, b\u00f6ylece state render edilmeler aras\u0131nda korunur. React, bile\u015fen nesnesinin prop\u2019lar\u0131n\u0131 yeni elemanla e\u015fle\u015fecek \u015fekilde g\u00fcnceller ve nesnede <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> ve <code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code>\u2018i cal\u0131\u015ft\u0131r\u0131r.</p>\n<p>Ard\u0131ndan, <code class=\"language-javascript\">render()</code> metodu \u00e7a\u011fr\u0131l\u0131r ve fark bulma algoritmas\u0131 \u00f6nceki sonu\u00e7 ile yeni sonu\u00e7 \u00fczerinden \u00f6zyinelemeli olarak devam eder.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>Bu y\u00f6ntemler eski y\u00f6ntem olarak kabul edilir ve yeni kodda <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">bunlardan ka\u00e7\u0131nmal\u0131s\u0131n\u0131z</a>:</p>\n<ul>\n<li><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></li>\n<li><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code></li>\n</ul>\n</div>\n<h3 id=\"recursing-on-children\"><a class=\"anchor\" href=\"/react/reconciliation#recursing-on-children\"></a>Alt Elemanlarda \u00d6zyineleme </h3>\n<p>Varsay\u0131lan olarak, bir DOM d\u00fc\u011f\u00fcm\u00fcn\u00fcn alt elemanlar\u0131nda \u00f6zyineleme yaparken, React ayn\u0131 anda her iki alt eleman listesinde de gezer ve fark oldu\u011funda mutasyon olu\u015fturur.</p>\n<p>\u00d6rne\u011fin, alt elemanlar\u0131n sonuna bir eleman eklerken, bu iki a\u011fa\u00e7 aras\u0131nda d\u00f6n\u00fc\u015ft\u00fcrme iyi sonu\u00e7 verir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>first<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>second<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>first<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>second<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>third<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React iki <code class=\"language-javascript\">&lt;li&gt;first&lt;/li&gt;</code> a\u011fac\u0131n\u0131 e\u015fle\u015ftirir, iki <code class=\"language-javascript\">&lt;li&gt;second&lt;/li&gt;</code> a\u011fac\u0131n\u0131 e\u015fle\u015ftirir ve sonra <code class=\"language-javascript\">&lt;li&gt;third&lt;/li&gt;</code> a\u011fac\u0131n\u0131 ekler.</p>\n<p>Bunu bilmeden uygularsan\u0131z, a\u011fac\u0131n sonuna de\u011fil de ba\u015f\u0131na eleman eklemek daha k\u00f6t\u00fc bir performansa sahiptir. \u00d6rne\u011fin, bu iki a\u011fa\u00e7 aras\u0131nda d\u00f6n\u00fc\u015ft\u00fcrme i\u015flemi verimsiz \u00e7al\u0131\u015f\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Connecticut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>React, <code class=\"language-javascript\">&lt;li&gt;Duke&lt;/li&gt;</code> ve <code class=\"language-javascript\">&lt;li&gt;Villanova&lt;/li&gt;</code>  alt a\u011fa\u00e7lar\u0131n\u0131 dokunmadan tutabilece\u011fini farketmek yerine, her \u00e7ocu\u011fu mutasyona u\u011fratacakt\u0131r. Bu verimsizlik bir sorun olabilir.</p>\n<h3 id=\"keys\"><a class=\"anchor\" href=\"/react/reconciliation#keys\"></a>Anahtarlar (Keys) </h3>\n<p>Bu sorunu \u00e7\u00f6zmek i\u00e7in, React <code class=\"language-javascript\">key</code> \u00f6zelli\u011fini destekler. Elemanlar\u0131n anahtar\u0131 oldu\u011funda, React anahtar\u0131 orijinal a\u011fa\u00e7taki elemanlar\u0131 sonraki a\u011fa\u00e7taki elemanlarla e\u015fle\u015ftirmek i\u00e7in kullan\u0131r. \u00d6rne\u011fin, yukar\u0131daki verimsiz \u00f6rne\u011fimize bir <code class=\"language-javascript\">key</code> eklemek a\u011fa\u00e7 d\u00f6n\u00fc\u015f\u00fcm\u00fcn\u00fc verimli hale getirebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-xml\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2015<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2016<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2014<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Connecticut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2015<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Duke<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2016<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Villanova<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Art\u0131k React, <code class=\"language-javascript\">'2014'</code> anahtarl\u0131 eleman\u0131n yeni oldu\u011funu ve <code class=\"language-javascript\">'2015'</code> ile <code class=\"language-javascript\">'2016'</code> anahtarl\u0131 elemanlar\u0131n sadece yer de\u011fi\u015ftirdi\u011fini bilir.</p>\n<p>Pratikte, bir anahtar bulmak genellikle zor de\u011fildir. G\u00f6sterece\u011finiz \u00f6\u011fenin zaten benzersiz bir kimli\u011fi (ID) olabilir, bu nedenle anahtar verilerinizden gelebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Durum b\u00f6yle olmad\u0131\u011f\u0131nda, anahtar olu\u015fturmak i\u00e7in modelinize yeni bir ID \u00f6zelli\u011fi ekleyebilir veya i\u00e7eri\u011fin baz\u0131 b\u00f6l\u00fcmlerini kar\u0131\u015ft\u0131rarak (hash) yapabilirsiniz. Anahtar sadece karde\u015fleri aras\u0131nda benzersiz olmal\u0131, global (genel) olarak de\u011fil.</p>\n<p>Son \u00e7are olarak, dizideki bir \u00f6\u011fenin dizinini anahtar olarak kullanabilirsiniz. \u00d6\u011feler hi\u00e7bir zaman yeniden s\u0131ralanmazsa bu i\u015fe yarayabilir, ancak yeniden s\u0131ralamalar yava\u015f olacakt\u0131r.</p>\n<p>Yeniden s\u0131ralamalar, dizinler anahtar olarak kullan\u0131ld\u0131\u011f\u0131nda bile\u015fen state\u2019i ile ilgili sorunlara da neden olabilir. Bile\u015fen nesneleri, anahtarlar\u0131na g\u00f6re g\u00fcncellenir ve yeniden kullan\u0131l\u0131r. Anahtar bir dizinse, bir \u00f6\u011feyi ta\u015f\u0131mak onu de\u011fi\u015ftirir. Sonu\u00e7 olarak, bile\u015fen state\u2019i kontrols\u00fcz girdiler gibi \u015feyler i\u00e7in beklenmedik \u015fekillerde kar\u0131\u015fabilir ve g\u00fcncellenebilir.</p>\n<p>\u0130\u015fte CodePen\u2019de <a class=\"external-link\" href=\"https://tr.reactjs.org//redirect-to-codepen/reconciliation/index-used-as-key\">dizinlerin anahtar olarak kullan\u0131lmas\u0131ndan kaynaklanabilecek sorunlara bir \u00f6rnek</a>, ve i\u015fte <a class=\"external-link\" href=\"https://tr.reactjs.org//redirect-to-codepen/reconciliation/no-index-used-as-key\">dizinlerin anahtar olarak kullan\u0131lmamas\u0131n\u0131n s\u0131ralama, yeniden s\u0131ralama ve beklenen sorunlar\u0131 nas\u0131l \u00e7\u00f6zece\u011fini g\u00f6steren, ayn\u0131 \u00f6rne\u011fin g\u00fcncellenmi\u015f bir s\u00fcr\u00fcm\u00fc</a>.</p>\n<h2 id=\"tradeoffs\"><a class=\"anchor\" href=\"/react/reconciliation#tradeoffs\"></a>\u00d6d\u00fcnler </h2>\n<p>Uyumla\u015ft\u0131rma algoritmas\u0131n\u0131n bir uygulama (implementation) detay\u0131 oldu\u011funu hat\u0131rlamak \u00f6nemlidir. React, her eylemde t\u00fcm uygulamay\u0131 yeniden render edebilir; sonu\u00e7 ayn\u0131 olurdu. A\u00e7\u0131k olmak gerekirse, bu ba\u011flamda yeniden render etmek, t\u00fcm bile\u015fenler i\u00e7in \u201crender etmek\u201d anlam\u0131na gelir, React\u2019\u0131n bunlar\u0131 s\u00f6kece\u011fi ve yeniden ekleyece\u011fi anlam\u0131na gelmez. Uyumla\u015ft\u0131rmay\u0131, \u00f6nceki b\u00f6l\u00fcmlerde belirtilen kurallara g\u00f6re uygulayacakt\u0131r.</p>\n<p>Yayg\u0131n kullan\u0131m durumlar\u0131n\u0131 daha h\u0131zl\u0131 hale getirmek i\u00e7in sezgisel y\u00f6ntemleri d\u00fczenli olarak geli\u015ftiriyoruz. Mevcut uygulamada, bir alt a\u011fac\u0131n karde\u015fleri aras\u0131nda ta\u015f\u0131nd\u0131\u011f\u0131 ger\u00e7e\u011fini ifade edebilirsiniz, ancak ba\u015fka bir yere ta\u015f\u0131nd\u0131\u011f\u0131n\u0131 s\u00f6yleyemezsiniz. Algoritma t\u00fcm alt a\u011fac\u0131 yeniden render edecektir.</p>\n<p>React sezgisel y\u00f6ntemlere dayand\u0131\u011f\u0131 i\u00e7in, arkas\u0131ndaki varsay\u0131mlar kar\u015f\u0131lanmazsa performans d\u00fc\u015f\u00fck olacakt\u0131r.</p>\n<ol>\n<li>Algoritma, farkl\u0131 bile\u015fen tiplerinin alt a\u011fa\u00e7lar\u0131n\u0131 e\u015fle\u015ftirmeye \u00e7al\u0131\u015fmaz. Kendinizi \u00e7ok benzer \u00e7\u0131kt\u0131ya sahip iki bile\u015fen t\u00fcr\u00fc aras\u0131nda ge\u00e7i\u015f yaparken g\u00f6r\u00fcrseniz, bunlar\u0131 ayn\u0131 t\u00fcr yapmak isteyebilirsiniz. Pratikte, bunun bir sorun olmad\u0131\u011f\u0131n\u0131 g\u00f6rd\u00fck.</li>\n<li>Anahtarlar kararl\u0131, \u00f6ng\u00f6r\u00fclebilir ve benzersiz olmal\u0131d\u0131r. Karars\u0131z anahtarlar (<code class=\"language-javascript\">Math.random()</code> taraf\u0131ndan \u00fcretilenler gibi) bir\u00e7ok bile\u015fen nesnesinin ve DOM d\u00fc\u011f\u00fcm\u00fcn\u00fcn gereksiz yere yeniden olu\u015fturulmas\u0131na neden olur ve bu da alt bile\u015fenlerde performans d\u00fc\u015f\u00fc\u015f\u00fcne ve state kayb\u0131na neden olabilir.</li>\n</ol></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reconciliation.md\">Edit this page</a></p></div></article>", "path": "/react/reconciliation", "nav": ["/react/react-without-jsx", "/react/refs-and-the-dom"]}, {"key": "Ref'ler ve DOM", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Ref\u2019ler, render metodu i\u00e7erisinde olu\u015fturulan DOM d\u00fc\u011f\u00fcm\u00fcmlerine veya React elemanlar\u0131na eri\u015fmeyi sa\u011flar. </p>\n<p>React\u2019\u0131n tipik veri ak\u0131\u015f\u0131nda, <a href=\"/react/components-and-props\">prop\u2019lar</a> \u00fcst bile\u015fenlerin alt bile\u015fenleri ile etkile\u015fime ge\u00e7melerinin tek yoludur. Bir alt bile\u015feni d\u00fczenlemek i\u00e7in, onu yeni prop\u2019lar ile yeniden render edersiniz. Fakat, birka\u00e7 senaryo vard\u0131r ki bir alt bile\u015feni tipik veri ak\u0131\u015f\u0131n\u0131n d\u0131\u015f\u0131nda mecburi olarak d\u00fczenlemeniz gerekebilir. D\u00fczenlenecek olan bir alt bile\u015fen, bir React bile\u015feni\u2019nin nesnesi veya bir DOM eleman\u0131 olabilir. Her iki durum i\u00e7in de React bir \u00e7\u0131k\u0131\u015f yolu sa\u011flar. </p>\n<h3 id=\"when-to-use-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#when-to-use-refs\"></a>Ref\u2019ler Ne Zaman Kullan\u0131lmal\u0131d\u0131r </h3>\n<p>Ref\u2019leri kullanmak i\u00e7in birka\u00e7 iyi kullan\u0131m senaryosu bulunmaktad\u0131r: </p>\n<ul>\n<li>Focus olay\u0131n\u0131, metin se\u00e7meyi veya yeniden ortam oynatmay\u0131 y\u00f6netmek,</li>\n<li>Animasyonlar\u0131 tetiklemek,</li>\n<li>\u00dc\u00e7\u00fcnc\u00fc-parti DOM k\u00fct\u00fcphanelerini entegre etmek</li>\n</ul>\n<p>Bildirimsel (declarative) olarak halledilebilecek durumlar i\u00e7in ref\u2019leri kullanmaktan ka\u00e7\u0131n\u0131n.</p>\n<p>\u00d6rne\u011fin, bir <code class=\"language-javascript\">Dialog</code> bile\u015feni i\u00e7in <code class=\"language-javascript\">open()</code> ve <code class=\"language-javascript\">close()</code> metodlar\u0131n\u0131 kullanmak yerine, <code class=\"language-javascript\">isOpen</code> prop\u2019unu <code class=\"language-javascript\">Dialog</code>\u2018a atayabilirsiniz.</p>\n<h3 id=\"dont-overuse-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#dont-overuse-refs\"></a>Ref\u2019leri A\u015f\u0131r\u0131 Kullanmay\u0131n </h3>\n<p>Ref\u2019leri kullanmaktaki ilk e\u011filiminiz uygulaman\u0131zdaki baz\u0131 \u015feyleri ger\u00e7ekle\u015ftirmek i\u00e7in olabilir. E\u011fer durum bu ise bekleyin ve state\u2019in bile\u015fen hiyerar\u015fisinde nerede tutulmas\u0131 gerekti\u011fi hakk\u0131nda biraz daha ele\u015ftirel d\u00fc\u015f\u00fcn\u00fcn. Bununla ilgili \u00f6rnekler i\u00e7in <a href=\"/react/lifting-state-up\">State\u2019i Yukar\u0131 Ta\u015f\u0131ma</a> rehberini inceleyebilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekler React 16.3 ile gelen <code class=\"language-javascript\">React.createRef()</code> API\u2019sini kullanabilmek i\u00e7in g\u00fcncellenmi\u015ftir. React\u2019in \u00f6nceki s\u00fcr\u00fcmlerini kullan\u0131yorsan\u0131z, <a href=\"/react/refs-and-the-dom#callback-refs\">callback ref\u2019lerini</a> kullanman\u0131z\u0131 tavsiye ederiz.</p>\n</div>\n<h3 id=\"creating-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#creating-refs\"></a>Ref\u2019ler Olu\u015fturma </h3>\n<p>Ref\u2019ler, <code class=\"language-javascript\">React.createRef()</code> kullan\u0131larak olu\u015fturulur ve React elemanlar\u0131na <code class=\"language-javascript\">ref</code> \u00f6zelli\u011fini kullanarak eklenir. Ref\u2019ler genellikle bir bile\u015fen olu\u015fturuldu\u011funda, bir nesnenin \u00f6zelli\u011fine atan\u0131r. B\u00f6ylelikle refler bile\u015fen boyunca referans al\u0131nabilir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"accessing-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#accessing-refs\"></a>Ref\u2019lere Eri\u015fim </h3>\n<p>Bir ref, <code class=\"language-javascript\">render</code> i\u00e7erisinde bir elemena aktar\u0131ld\u0131\u011f\u0131nda, o d\u00fc\u011f\u00fcme ba\u011fl\u0131 bir referans, ref\u2019in <code class=\"language-javascript\">current</code> \u00f6zelli\u011finde eri\u015filebilir hale gelir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>myRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ref\u2019in de\u011feri, d\u00fc\u011f\u00fcm t\u00fcr\u00fcne ba\u011fl\u0131 olarak de\u011fi\u015fir.</p>\n<ul>\n<li><code class=\"language-javascript\">ref</code> \u00f6zelli\u011fi bir HTML eleman\u0131nda kullan\u0131ld\u0131\u011f\u0131nda, constructorda <code class=\"language-javascript\">React.createRef()</code> ile olu\u015fturulan <code class=\"language-javascript\">ref</code>, esas DOM eleman\u0131n\u0131 kendisinin <code class=\"language-javascript\">current</code> \u00f6zelli\u011fi olarak al\u0131r.</li>\n<li><code class=\"language-javascript\">ref</code> \u00f6zelli\u011fi \u00f6zel bir s\u0131n\u0131f bile\u015fininde kullan\u0131ld\u0131\u011f\u0131nda, ref nesnesi yerle\u015ftirilmi\u015f bile\u015feninin nesnesini <code class=\"language-javascript\">current</code> olarak al\u0131r.</li>\n<li><strong><code class=\"language-javascript\">ref</code> \u00f6zelli\u011fini fonksiyon bile\u015feni i\u00e7erisinde kullanamazs\u0131n\u0131z</strong> \u00e7\u00fcnk\u00fc fonksiyon bile\u015fenlerinin nesneleri olmaz.</li>\n</ul>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekler farkl\u0131l\u0131klar\u0131 g\u00f6stermektedir.</p>\n<h4 id=\"adding-a-ref-to-a-dom-element\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#adding-a-ref-to-a-dom-element\"></a>DOM Eleman\u0131na Ref Ekleme </h4>\n<p>Bu kod, bir DOM d\u00fc\u011f\u00fcm\u00fcne ba\u011fl\u0131 referans tutmak i\u00e7in <code class=\"language-javascript\">ref</code> kullan\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// textInput DOM eleman\u0131n\u0131 kaydetmek i\u00e7in bir ref olu\u015fturun</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// DOM API kullanarak text input'a odaklan\u0131n</span>\n    <span class=\"token comment\">// Not : DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc getirmek i\u00e7in \"current\"\u0131 kullan\u0131r\u0131z.</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// React\u2019a, constructor i\u00e7erisinde olu\u015fturdu\u011fumuz `textInput`u ile</span>\n    <span class=\"token comment\">//&lt;input&gt; ref'i ile ili\u015fkilendirmek istedi\u011fimizi belirtin.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Focus the text input<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bile\u015fen eklendi\u011finde, React, <code class=\"language-javascript\">current</code> \u00f6zelli\u011fini DOM eleman\u0131 ile atar ve bile\u015fen \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda geri <code class=\"language-javascript\">null</code> atan\u0131r. <code class=\"language-javascript\">ref</code> g\u00fcncellemeleri <code class=\"language-javascript\">componentDidMount</code> veya <code class=\"language-javascript\">componentDidUpdate</code> ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131ndan \u00f6nce ger\u00e7ekle\u015fir.</p>\n<h4 id=\"adding-a-ref-to-a-class-component\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#adding-a-ref-to-a-class-component\"></a>S\u0131n\u0131f Bile\u015fenine Ref Ekleme </h4>\n<p>Yukar\u0131daki <code class=\"language-javascript\">CustomTextInput</code>un, eklendikten hemen sonra t\u0131kland\u0131\u011f\u0131 senaryosunu sim\u00fcle etmek istedi\u011fimizde, \u00f6zel input\u2019a eri\u015fmek i\u00e7in ve onun <code class=\"language-javascript\">focusTextInput</code> metodunu \u00e7a\u011f\u0131rmak i\u00e7in ref kullanabiliriz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoFocusTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu sadece <code class=\"language-javascript\">CustomTextInput</code> bir s\u0131n\u0131f olarak tan\u0131mland\u0131\u011f\u0131nda \u00e7al\u0131\u015f\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"refs-and-function-components\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#refs-and-function-components\"></a>Refler ve Fonksiyon Bile\u015fenleri </h4>\n<p>** Varsay\u0131lan olarak, <code class=\"language-javascript\">ref</code> \u00f6zelli\u011fini fonksiyon bile\u015fenleri i\u00e7erisinde kullanmazs\u0131n\u0131z**. \u00c7\u00fcnk\u00fc fonksiyon bile\u015fenlerinin nesneleri olmaz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyFunctionComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Bu \u00e7al\u0131\u015fmayacakt\u0131r!</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyFunctionComponent</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Insanlar\u0131n fonksiyon bile\u015feniniz i\u00e7in <code class=\"language-javascript\">ref</code> kullanmalar\u0131na izin vermek isterseniz, <a href=\"/react/forwarding-refs\"><code class=\"language-javascript\">forwardRef</code></a> (muhtemelen <a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a> ile birlikte) kullanabilir, ya da bile\u015feninizi bir s\u0131n\u0131fa \u00e7evirebilirsiniz.</p>\n<p>Bir DOM eleman\u0131na veya s\u0131n\u0131f bile\u015fenine i\u015faret etti\u011finiz s\u00fcrece <strong>fonksiyon bile\u015feni i\u00e7erisinde <code class=\"language-javascript\">ref</code> kullanabilirsiniz</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// textInput'u burada tan\u0131mlanmal\u0131d\u0131r. B\u00f6ylelikle ref onu i\u015faret edebilir.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> textInput <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    textInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>textInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Focus the text input<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"exposing-dom-refs-to-parent-components\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#exposing-dom-refs-to-parent-components\"></a>DOM Ref\u2019lerini \u00dcst Bile\u015fenlerde A\u00e7\u0131\u011fa \u00c7\u0131karma </h3>\n<p>Nadir durumlarda, bir alt bile\u015fenin DOM d\u00fc\u011f\u00fcm\u00fcne \u00fcst bile\u015fenden eri\u015fmek isteyebilirsiniz. Bu genelde \u00f6nerilmez; \u00e7\u00fcnk\u00fc bile\u015fenin kaps\u00fcllemesini (encapsulation) bozar. Ancak bazen oda\u011f\u0131 tetiklemek veya bir child DOM d\u00fc\u011f\u00fcm\u00fcn\u00fcn boyutunu veya konumunu hesaplamak i\u00e7in faydal\u0131 olabilir.</p>\n<p><a href=\"/react/refs-and-the-dom#adding-a-ref-to-a-class-component\">Alt bile\u015fene ref ekleyebilirsiniz</a>. Ancak bu ideal bir \u00e7\u00f6z\u00fcm de\u011fildir. DOM d\u00fc\u011f\u00fcm\u00fcnden ziyade sadece bir tane bile\u015fen nesnesi al\u0131rs\u0131n\u0131z. Ek olarak bu, fonksiyon bile\u015fenleri ile \u00e7al\u0131\u015fmaz.</p>\n<p>React 16.3 veya daha \u00fcst bir versiyonunu kullan\u0131rsan\u0131z, bu durumlar i\u00e7in <a href=\"/react/forwarding-refs\">Ref Y\u00f6nlendirme</a> kullanman\u0131z\u0131 tavsite ederiz. <strong>Ref y\u00f6nlendirme, bile\u015fenlerin, alt bile\u015fenin ref\u2019ini kendilerinin gibi g\u00f6stermesini sa\u011flar</strong>. Bir alt bile\u015fenin Dom d\u00fc\u011f\u00fcm\u00fcn\u00fc \u00fcst bile\u015fende nas\u0131l kullanaca\u011f\u0131n\u0131z\u0131n daha detayl\u0131 \u00f6rne\u011fini <a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">Ref Y\u00f6nlendirme</a> d\u00f6k\u00fcman\u0131nda bulabilirsiniz.</p>\n<p>React 16.2 veya daha eski bir versiyonu kullan\u0131yorsan\u0131z, veya ref y\u00f6nlendirme ile sa\u011flanan esneklikten daha fazla esnekli\u011fe ihtiyac\u0131n\u0131z varsa, <a class=\"external-link\" href=\"https://gist.github.com/gaearon/1a018a023347fe1c2476073330cc5509\">bu alternatif yakla\u015f\u0131m\u0131</a> kullanabilirsiniz ve bir ref\u2019i farkl\u0131 isimlendirilmi\u015f bir prop olarak aktarabilirsiniz.</p>\n<p>M\u00fcmk\u00fcnse, DOM birimlerini a\u00e7\u0131\u011fa \u00e7\u0131karmaman\u0131z\u0131 tavsiye ederiz. Ancak faydal\u0131 bir ka\u00e7\u0131\u015f yolu olabilir. Bu yakla\u015f\u0131m\u0131n, alt bile\u015fene baz\u0131 kodlar eklemenizi gerektirdi\u011fini unutmay\u0131n. Alt bile\u015fen \u00fczerinde herhangi bir kontrol\u00fcn\u00fcz yoksa, son se\u00e7ene\u011finiz <a href=\"/react/react-dom#finddomnode\"><code class=\"language-javascript\">findDOMNode()</code></a> kullanmak olabilir. Ama bu <a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\"><code class=\"language-javascript\">StrictMode</code></a> i\u00e7erisinde kullan\u0131mdan kald\u0131r\u0131lm\u0131\u015ft\u0131r.</p>\n<h3 id=\"callback-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#callback-refs\"></a>Callback Refs </h3>\n<p>React ayr\u0131ca, \u201ccallback refs\u201d ad\u0131 verilen refleri ayarlaman\u0131n ba\u015fka bir yolunu da destekler. Bu, ref\u2019ler ayarland\u0131klar\u0131nda veya ayarlanmad\u0131klar\u0131 zamanlarda daha fazla kontrol\u2019e sahip olmalar\u0131n\u0131 sa\u011flar.</p>\n<p><code class=\"language-javascript\">createRef()</code> taraf\u0131ndan olu\u015fturulan bir <code class=\"language-javascript\">ref</code>i aktarmaktansa, bir fonksiyon aktarabilirsiniz. Fonksiyon, React bile\u015feninin nesnesini veya HTML DOM eleman\u0131n\u0131 bir arg\u00fcman olarak al\u0131r, b\u00f6ylelikle bile\u015fenin nesnesi ba\u015fka bir yerde saklanabilir ve eri\u015filebilir.</p>\n<p>A\u015fa\u011f\u0131daki \u00f6rnekte yayg\u0131n bir kullan\u0131m uygulanm\u0131\u015ft\u0131r. <code class=\"language-javascript\">ref</code> callback\u2019i kullanarak bir nesnenin \u00f6zelli\u011finde\nDOM d\u00fc\u011f\u00fcm\u00fcne bir referans kaydedilir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomTextInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTextInputRef</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">element</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">focusTextInput</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Focus the text input using the raw DOM API</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// DOM API kullanark text input'a odaklan\u0131n</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Eklendikten sonra otomatik olarak odaklanma</span></span>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">focusTextInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Nesne alan\u0131nda bulunan metin girdisi eleman\u0131na bir referans</span>\n    <span class=\"token comment\">// tutmak i\u00e7in `ref` callback'i kullan\u0131n. (\u00f6rne\u011fin, this.textInput)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span></span>          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setTextInputRef<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Focus the text input<span class=\"token punctuation\">\"</span></span></span>          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>focusTextInput<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React, bile\u015fen eklendi\u011finde DOM eleman\u0131 ile beraber <code class=\"language-javascript\">ref</code> callback\u2019ini \u00e7a\u011f\u0131r\u0131r ve bile\u015fen \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda da <code class=\"language-javascript\">null</code> ile \u00e7a\u011f\u0131r\u0131r. Ref\u2019lerin, <code class=\"language-javascript\">componentDidMount</code> veya <code class=\"language-javascript\">componentDidUpdate</code> tetiklenmeden \u00f6nce g\u00fcncel olduklar\u0131 garanti edilir.</p>\n<p><code class=\"language-javascript\">React.createRef()</code> ile olu\u015fturulan nesne ref\u2019leri gibi, Callback ref\u2019lerini de bile\u015fenler aras\u0131nda aktarabilirsiniz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomTextInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomTextInput</span></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">inputRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputElement <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span></span>      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Yukar\u0131daki \u00f6rnekte, <code class=\"language-javascript\">Parent</code>, ref callback\u2019ini <code class=\"language-javascript\">inputRef</code> prop\u2019u olarak <code class=\"language-javascript\">CustomTextInput</code>una aktar\u0131r ve <code class=\"language-javascript\">CustomTextInput</code>u ayn\u0131 fonksiyonu \u00f6zel bir <code class=\"language-javascript\">ref</code> \u00f6zelli\u011fi olarak <code class=\"language-javascript\">&lt;input&gt;</code>a aktar\u0131r. Sonu\u00e7 olarak, <code class=\"language-javascript\">Parent</code>taki <code class=\"language-javascript\">this.inputElement</code>i, <code class=\"language-javascript\">CustomTextInput</code>taki <code class=\"language-javascript\">&lt;input&gt;</code> eleman\u0131na kar\u015f\u0131l\u0131k gelen DOM d\u00fc\u011f\u00fcm\u00fcne set edilir.</p>\n<h3 id=\"legacy-api-string-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#legacy-api-string-refs\"></a>Eski API: String Refler </h3>\n<p>Daha \u00f6nceden React ile u\u011fra\u015ft\u0131ysan\u0131z, <code class=\"language-javascript\">ref</code> \u00f6zelli\u011finin <code class=\"language-javascript\">\"textInput\"</code> gibi bir string oldu\u011fu ve DOM d\u00fc\u011f\u00fcm\u00fcne de <code class=\"language-javascript\">this.refs.textInput</code> \u015feklinde eri\u015fildi\u011fi eski API\u2019a a\u015fina olabilirsiniz. String ref\u2019lerin <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/8333#issuecomment-271648615\">baz\u0131 sorunlar\u0131n\u0131n</a> olmas\u0131 ve <strong>muhtemelen gelecek s\u00fcr\u00fcmlerden birinde kald\u0131r\u0131laca\u011f\u0131 i\u00e7in,</strong> bu kullan\u0131m\u0131 \u00f6nermiyoruz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>E\u011fer <code class=\"language-javascript\">this.refs.textInput</code>\u2018u reflere eri\u015fmek i\u00e7in kullan\u0131yorsan\u0131z, <a href=\"/react/refs-and-the-dom#creating-refs\"><code class=\"language-javascript\">createRef</code> API</a> veya <a href=\"/react/refs-and-the-dom#callback-refs\">callback refleri</a> se\u00e7eneklerinden birini kullanman\u0131z\u0131 tavsiye ederiz.</p>\n</div>\n<h3 id=\"caveats-with-callback-refs\"><a class=\"anchor\" href=\"/react/refs-and-the-dom#caveats-with-callback-refs\"></a>Callback Ref\u2019lerine Dair Uyar\u0131lar </h3>\n<p>E\u011fer <code class=\"language-javascript\">ref</code> callback bir sat\u0131ri\u00e7i fonksiyon olarak tan\u0131mlanm\u0131\u015fsa, g\u00fcncelleme an\u0131nda iki kez \u00e7a\u011f\u0131r\u0131lacakt\u0131r. \u0130lk olarak <code class=\"language-javascript\">null</code> ile, sonras\u0131nda DOM eleman\u0131 yeniden \u00e7a\u011fr\u0131l\u0131r. Bunun sebebi, fonksiyonun bir nesnesi her render\u2019da olu\u015fturulur. Bu y\u00fczden React eski ref\u2019i kald\u0131r\u0131r ve yenisini ekler. Bunu \u00f6nlemek i\u00e7in  <code class=\"language-javascript\">ref</code> callback\u2019ini s\u0131n\u0131fa ba\u011fl\u0131 bir metod olarak tan\u0131mlayabilirsiniz. Ancak bu, bir\u00e7ok durumda \u00f6nemli de\u011fildir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/refs-and-the-dom.md\">Edit this page</a></p></div></article>", "path": "/react/refs-and-the-dom", "nav": ["/react/reconciliation", "/react/render-props"]}, {"key": "Prop'lar\u0131 Renderlamak", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><a class=\"external-link\" href=\"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\">\u201cRender prop\u201d</a> tabiri; React bile\u015fenleri aras\u0131nda kod payla\u015f\u0131m\u0131n\u0131n, de\u011ferleri birer fonksiyon olan prop\u2019lar kullan\u0131larak yap\u0131lmas\u0131 i\u00e7in kullan\u0131lmaktad\u0131r.</p>\n<p>Render prop\u2019lu bir bile\u015fen, prop olarak bir React eleman\u0131 d\u00f6nd\u00fcren bir fonksiyon al\u0131r ve kendi render mant\u0131\u011f\u0131n\u0131 y\u00fcr\u00fctmek yerine bu fonksiyonu \u00e7a\u011f\u0131r\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DataProvider</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Render prop\u2019lar\u0131 kullanan k\u00fct\u00fcphaneler aras\u0131nda <a class=\"external-link\" href=\"https://reacttraining.com/react-router/web/api/Route/render-func\">React Router</a> ve <a class=\"external-link\" href=\"https://github.com/paypal/downshift\">Downshift</a> de bulunuyor.</p>\n<p>Bu dok\u00fcmanda neden render prop\u2019lar\u0131n kullan\u0131\u015fl\u0131 oldu\u011funu tart\u0131\u015f\u0131p, bunlar\u0131 nas\u0131l uygulayabilece\u011finiz hakk\u0131nda konu\u015faca\u011f\u0131z.</p>\n<h2 id=\"use-render-props-for-cross-cutting-concerns\"><a class=\"anchor\" href=\"/react/render-props#use-render-props-for-cross-cutting-concerns\"></a>Render Proplar\u0131 uygulama genelini etkileyen \u00f6zellikler i\u00e7in Kullan\u0131n </h2>\n<p>Bile\u015fenler, React\u2019te yeniden kod kullan\u0131m\u0131n\u0131n temel birimidir. Ama state\u2019in nas\u0131l payla\u015f\u0131laca\u011f\u0131 veya bir bile\u015fenin ba\u015fka bir bile\u015fene encapsulate etti\u011fi davran\u0131\u015flarda hangi state\u2019e ihtiya\u00e7 duyulaca\u011f\u0131 her zaman malum olmayabilir. </p>\n<p>\u00d6rne\u011fin, farenin bir web uygulamas\u0131ndaki posizyonunu takip eden a\u015fa\u011f\u0131daki bile\u015fen:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The current mouse position is (</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token plain-text\">)</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fare ekranda hareket ettik\u00e7e, bile\u015fen (x,y) koordinatlar\u0131n\u0131 <code class=\"language-javascript\">&lt;p&gt;</code> i\u00e7erisinde g\u00f6sterir.</p>\n<p>\u015eimdi soru \u015fu: Bu davran\u0131\u015f\u0131 ba\u015fka bir bile\u015fen i\u00e7erisinde nas\u0131l tekrar kullanabiliriz? Di\u011fer bir deyi\u015fle, Ba\u015fka bir bile\u015fen farenin pozisyonunu bilmek isterse, bu davran\u0131\u015f\u0131 rahat\u00e7a bu bile\u015fenle payla\u015fmak i\u00e7in sarmalayabilir miyiz?</p>\n<p>Bile\u015fenler React\u2019te yeniden kod kullan\u0131m\u0131n\u0131n temel birimi oldu\u011fundan, istedi\u011fimiz davran\u0131\u015f\u0131 ba\u015fka bir yerde kullanabilmemiz i\u00e7in <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015feninin kodunu biraz de\u011fi\u015ftirmeyi deneyelim.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// The &lt;Mouse&gt; component encapsulates the behavior we need...</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ...but how do we render something other than a &lt;p&gt;? */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The current mouse position is (</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token plain-text\">)</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Art\u0131k <code class=\"language-javascript\">mousemove</code> olay\u0131n\u0131 ve farenin (x, y) pozisyonunu bulunduran t\u00fcm davran\u0131\u015flar <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015feni taraf\u0131ndan encapsulate ediliyor, fakat hala tam anlam\u0131yla yeniden kullan\u0131labilir de\u011fil.</p>\n<p>\u00d6rne\u011fin; bir kedi resminin, faremizi ekranda kovalamas\u0131n\u0131 render eden bir <code class=\"language-javascript\">&lt;Cat&gt;</code> bile\u015fenimiz oldu\u011funu varsayal\u0131m.  Bu bile\u015fene farenin koordinatlar\u0131n\u0131 bilmesi ve resmin ekrandaki pozisyonunu ayarlayabilmesi i\u00e7in <code class=\"language-javascript\">&lt;Cat mouse={{ x, y }}&gt;</code> prop\u2019unu kullanabiliriz.</p>\n<p>\u0130lk bak\u0131\u015fta, <cat> bile\u015fenini <mouse> bile\u015feninin <em>render metodu i\u00e7inde</em> b\u00f6yle render etmeyi deneyebilirsiniz:</mouse></cat></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mouse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mouse<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/cat.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseWithCat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          We could just swap out the &lt;p&gt; for a &lt;Cat&gt; here ... but then\n          we would need to create a separate &lt;MouseWithSomethingElse&gt;\n          component every time we need to use it, so &lt;MouseWithCat&gt;\n          isn't really reusable yet.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MouseWithCat</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu yakla\u015f\u0131m spesifik bir durumda \u00e7al\u0131\u015facakt\u0131r, fakat hala tam anlam\u0131yla hedefimiz olan davran\u0131\u015f\u0131 tekrar kullan\u0131labilir bir bi\u00e7imde sarmalayamad\u0131k. Art\u0131k farenin konumunu ne zaman ba\u015fka bir durum i\u00e7in ele almak istersek, farkl\u0131 bir bile\u015fen(\u00f6rn. <code class=\"language-javascript\">&lt;MouseWithCat&gt;</code>) yarat\u0131p, mevcut duruma \u00f6zel bir render y\u00f6ntemi sa\u011flamal\u0131y\u0131z.</p>\n<p>\u0130\u015fte tam da burada devreye render prop\u2019lar\u0131 giriyor: Do\u011frudan <code class=\"language-javascript\">&lt;Cat&gt;</code> bile\u015fenini<code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015feni i\u00e7ine g\u00f6m\u00fcp, render olmu\u015f \u00e7\u0131kt\u0131s\u0131n\u0131 de\u011fi\u015ftirmektense, <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015fenine bir fonksiyon prop\u2019u vererek dinamik olarak neyin render edilece\u011fine karar vermesini sa\u011flayabiliriz-k\u0131sacas\u0131 bir render prop kullanabilir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mouse <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mouse<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/cat.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> mouse<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'100vh'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onMouseMove</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleMouseMove<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          Instead of providing a static representation of what &lt;Mouse&gt; renders,\n          use the `render` prop to dynamically determine what to render.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Art\u0131k <code class=\"language-javascript\">&lt;Mouse&gt;</code>  bile\u015fenini kopyalay\u0131p, <code class=\"language-javascript\">render</code> metodunda ba\u015fka bir \u015feyleri spesifik durumlar i\u00e7in do\u011frudan kodlamak yerine bir <code class=\"language-javascript\">render</code> prop veriyoruz bu sayede <code class=\"language-javascript\">&lt;Mouse&gt;</code> dinamik olarak ne render edece\u011fini anlayabiliyor.</p>\n<p>Daha anla\u015f\u0131l\u0131r bir \u015fekilde s\u00f6ylemek gerekirse; <strong>bir render prop, bir bile\u015fenin ne render etmesi gerekti\u011fini anlamas\u0131 i\u00e7in kulland\u0131\u011f\u0131 bir fonksiyon prop\u2019udur.</strong> </p>\n<p>Bu teknik payla\u015fmam\u0131z gereken davran\u0131\u015f\u0131n son derece portatif olmas\u0131n\u0131 sa\u011flar.Bu davran\u0131\u015f\u0131 almak i\u00e7in, bir <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015feni render edin ve <code class=\"language-javascript\">render</code> prop olarak, farenin o anki (x,y) de\u011ferleriyle ne render etmesi gerekti\u011fini verin.</p>\n<p>Render prop\u2019lar hakk\u0131nda not edilmesi gereken ba\u015fka bir ilgin\u00e7 \u015fey ise \u00e7o\u011fu \u00fcst-seviye bile\u015fenler normal bir bile\u015feni render prop\u2019la kullanarak hayata ge\u00e7irilebilir. \u00d6rne\u011fin; <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015feni yerine bir \u00fcst seviye bile\u015fen <code class=\"language-javascript\">withMouse</code> kullanmak isterseniz, normal bir <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015fenine render prop vererek bunu kolayca yapabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// If you really want a HOC for some reason, you can easily</span>\n<span class=\"token comment\">// create one using a regular component with a render prop!</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withMouse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Component</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> React<span class=\"token punctuation\">.</span>Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Yani render prop kullanmak iki yap\u0131n\u0131n da kullan\u0131labilmesini m\u00fcmk\u00fcn k\u0131lar.</p>\n<h2 id=\"using-props-other-than-render\"><a class=\"anchor\" href=\"/react/render-props#using-props-other-than-render\"></a><code class=\"language-javascript\">Render</code>\u2019dan ba\u015fka prop\u2019lar\u0131 kullanmak </h2>\n<p>S\u0131rf bu teknik \u201crender proplar\u0131\u201d diye adlandr\u0131ld\u0131\u011f\u0131 i\u00e7in prop isimlerini sadece <em>render ismiyle</em> kullanman\u0131za gerek olmad\u0131\u011f\u0131n\u0131 bilmenizde yarar var.Asl\u0131nda, <a class=\"external-link\" href=\"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\">bir bile\u015fen taraf\u0131ndan ne render edilece\u011fini bilmek i\u00e7in kullanal\u0131n ve fonksyion olan <em>herhangi</em> bir prop teknik olarak bir \u201crender prop\u201d</a>.</p>\n<p>Yukar\u0131daki \u00f6rnekler <code class=\"language-javascript\">render</code>\u2019\u0131 kullan\u0131yor olabilir, ama ayn\u0131 kolayl\u0131kta <code class=\"language-javascript\">children</code> prop\u2019u olarak da kullanbiliriz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">children</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The mouse position is </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Ve hat\u0131rlay\u0131n\u0131z, <code class=\"language-javascript\">children</code> prop\u2019unun JSX eleman\u0131n\u0131z\u0131n \u00f6zellikler listesinde adland\u0131r\u0131lmas\u0131na gerek yok. Onun yerine, direkt olarak eleman\u0131n <em>i\u00e7ine</em> koyabilirsiniz!</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The mouse position is </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, </span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mouse</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Bu tekni\u011fin <a class=\"external-link\" href=\"https://github.com/chenglou/react-motion\">react-motion</a> API\u2019\u0131nda kullan\u0131ld\u0131\u011f\u0131n\u0131 g\u00f6receksiniz.</p>\n<p>Bu teknik biraz s\u0131ra d\u0131\u015f\u0131 oldu\u011fundan, b\u00f6yle bir API dizayn ederken muhtemelen <code class=\"language-javascript\">children</code>\u2019\u0131n bir fonksiyon oldu\u011funu <code class=\"language-javascript\">propTypes</code> b\u00f6l\u00fcm\u00fcnde \u015fu \u015fekilde belirtmek isteyeceksiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">Mouse<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"caveats\"><a class=\"anchor\" href=\"/react/render-props#caveats\"></a>Uyar\u0131lar </h2>\n<h3 id=\"be-careful-when-using-render-props-with-reactpurecomponent\"><a class=\"anchor\" href=\"/react/render-props#be-careful-when-using-render-props-with-reactpurecomponent\"></a>Render prop\u2019lar\u0131 React.PureComponent\u2019le kullan\u0131rken dikkatli olun </h3>\n<p>Fonksiyonu <code class=\"language-javascript\">render</code> metodu i\u00e7inde yarat\u0131rsan\u0131z render prop kullanmak, <a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a> kullanmaktan gelen avantaj\u0131 yok edebilir. Bunun nedeni ise y\u00fczeysel prop kar\u015f\u0131la\u015ft\u0131rmas\u0131n\u0131n yeni proplar i\u00e7in her zaman <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcrecek olmas\u0131d\u0131r ve her <code class=\"language-javascript\">render</code> bu durumda render prop i\u00e7in yeni bir de\u011fer \u00fcretecektir.</p>\n<p>\u00d6rne\u011fin; yukar\u0131daki <code class=\"language-javascript\">&lt;Mouse&gt;</code> \u00f6rne\u011fimizle devam edersek, e\u011fer <code class=\"language-javascript\">Mouse</code> <code class=\"language-javascript\">React.Component</code> yerine <code class=\"language-javascript\">React.PureComponent</code>\u2019ten t\u00fcremi\u015f olsayd\u0131, \u00f6rne\u011fimiz \u015fu \u015fekilde olacakt\u0131:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mouse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Same implementation as above...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*\n          This is bad! The value of the `render` prop will\n          be different on each render.\n        */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">mouse</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu \u00f6rnekte <code class=\"language-javascript\">&lt;MouseTracker&gt;</code> bile\u015feni her render etti\u011finde, bile\u015fen <code class=\"language-javascript\">&lt;Mouse render&gt;</code> prop\u2019u olarak yeni bir de\u011fer \u00fcretecek bu da <code class=\"language-javascript\">&lt;Mouse&gt;</code> bile\u015fenin <code class=\"language-javascript\">React.PureComponent</code>\u2019ten t\u00fcremesinin efektini yok edecektir.</p>\n<p>Bu problemi ortadan kald\u0131rmak i\u00e7in, bazen prop\u2019u bir nesne metoduymu\u015f gibi tan\u0131mlayabilirsiniz, \u015fu \u015fekilde:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MouseTracker</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Defined as an instance method, `this.renderTheCat` always</span>\n  <span class=\"token comment\">// refers to *same* function when we use it in render</span>\n  <span class=\"token function\">renderTheCat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cat</span></span> <span class=\"token attr-name\">mouse</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mouse<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Move the mouse around!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mouse</span></span> <span class=\"token attr-name\">render</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderTheCat<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Prop\u2019u statik olarak tan\u0131mlayamad\u0131\u011f\u0131n\u0131z durumlarda (\u00f6rn. Bile\u015fenin prop\u2019lar\u0131n\u0131 ve/veya state\u2019ini gizlemeniz gerekti\u011fi durumlarda) ise <code class=\"language-javascript\">&lt;Mouse&gt;</code> <code class=\"language-javascript\">React.Component</code>\u2019ten t\u00fcremelidir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/render-props.md\">Edit this page</a></p></div></article>", "path": "/react/render-props", "nav": ["/react/refs-and-the-dom", "/react/static-type-checking"]}, {"key": "Statik Tip Kontrol\u00fc", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><a class=\"external-link\" href=\"https://flow.org/\">Flow</a> ve <a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a> gibi statik tip denetleyicileri belli t\u00fcrdeki sorunlar\u0131 siz hen\u00fcz kodunuzu \u00e7al\u0131\u015ft\u0131rmadan belirlerler. Bunun yan\u0131 s\u0131ra, otomatik tamamlama gibi \u00f6zellikleri ekleyerek geli\u015ftirici i\u015f ak\u0131\u015flar\u0131n\u0131 iyile\u015ftirirler. Bu y\u00fczden b\u00fcy\u00fck kod tabanlar\u0131 i\u00e7in <code class=\"language-javascript\">PropTypes</code> yerine Flow veya TypeScript kullan\u0131lmas\u0131n\u0131 tavsiye ediyoruz.</p>\n<h2 id=\"flow\"><a class=\"anchor\" href=\"/react/static-type-checking#flow\"></a>Flow </h2>\n<p><a class=\"external-link\" href=\"https://flow.org/\">Flow</a>, JavaScript kodunuz i\u00e7in bir statik tip denetleyicisidir. Facebook\u2019ta geli\u015ftirilmi\u015ftir ve s\u0131k\u00e7a React ile birlikte kullan\u0131l\u0131r. \u00d6zel bir tip s\u00f6zdizimiyle de\u011fi\u015fkenlerinizi, fonksiyonlar\u0131n\u0131z\u0131 ve React bile\u015fenlerinizi a\u00e7\u0131klama ve hatalar\u0131 erkenden yakalama \u015fans\u0131 verir. <a class=\"external-link\" href=\"https://flow.org/en/docs/getting-started/\">Flow\u2019a giri\u015f</a>i okuyarak temellerini \u00f6\u011frenebilirsiniz.</p>\n<p>Flow\u2019u kullanmak i\u00e7in:</p>\n<ul>\n<li>Flow\u2019u projenize ba\u011f\u0131ml\u0131l\u0131k olarak ekleyin.</li>\n<li>Flow s\u00f6zdiziminin derlenmi\u015f koddan ayr\u0131ld\u0131\u011f\u0131ndan emin olun.</li>\n<li>Tip a\u00e7\u0131klamalar\u0131n\u0131 ekleyin ve Flow\u2019u \u00e7al\u0131\u015ft\u0131rarak kodunuzu denetleyin.</li>\n</ul>\n<p>Bu maddeleri a\u015fa\u011f\u0131da daha detayl\u0131 olarak a\u00e7\u0131klayaca\u011f\u0131z.</p>\n<h3 id=\"adding-flow-to-a-project\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-flow-to-a-project\"></a>Flow\u2019u Bir Projeye Ekleme </h3>\n<p>\u00d6ncelikle, terminalde proje dizininize gidin. Ard\u0131ndan, a\u015fa\u011f\u0131daki komutu \u00e7al\u0131\u015ft\u0131rman\u0131z gerekecek:</p>\n<p>E\u011fer <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev flow-bin</code></pre></div>\n<p>E\u011fer <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev flow-bin</code></pre></div>\n<p>Bu komut, Flow\u2019un son s\u00fcr\u00fcm\u00fcn\u00fcn projenize y\u00fcklenmesini sa\u011flar.</p>\n<p>\u015eimdi, bunu terminalde kullanabilmek i\u00e7in <code class=\"language-javascript\">flow</code>\u2018u <code class=\"language-javascript\">package.json</code> dosyan\u0131z\u0131n <code class=\"language-javascript\">\"scripts\"</code> k\u0131sm\u0131na ekleyin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">\"flow\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"flow\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Son olarak, a\u015fa\u011f\u0131daki komutlardan birini \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<p>E\u011fer <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> run flow init</code></pre></div>\n<p>E\u011fer <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run flow init</code></pre></div>\n<p>Bu komut, sizin i\u00e7in commit etmeniz gereken bir Flow ayar dosyas\u0131 olu\u015fturacakt\u0131r.</p>\n<h3 id=\"stripping-flow-syntax-from-the-compiled-code\"><a class=\"anchor\" href=\"/react/static-type-checking#stripping-flow-syntax-from-the-compiled-code\"></a>Flow S\u00f6zdiziminin Derlenmi\u015f Koddan Ayr\u0131lmas\u0131 </h3>\n<p>Flow, JavaScript dilini tip a\u00e7\u0131klamalar\u0131 i\u00e7in \u00f6zel bir s\u00f6zdizimi yard\u0131m\u0131yla geni\u015fletir. Ancak, taray\u0131c\u0131lar bu s\u00f6zdiziminden haberdar de\u011fildir. Bu y\u00fczden, onun taray\u0131c\u0131ya yollanan JavaScript demetinde yer almad\u0131\u011f\u0131ndan emin olmal\u0131y\u0131z.</p>\n<p>Bunun tam olarak nas\u0131l sa\u011fland\u0131\u011f\u0131, JavaScript\u2019i derlemek i\u00e7in kulland\u0131\u011f\u0131n\u0131z araca ba\u011fl\u0131d\u0131r.</p>\n<h4 id=\"create-react-app\"><a class=\"anchor\" href=\"/react/static-type-checking#create-react-app\"></a>Create React App </h4>\n<p>E\u011fer projeniz <a class=\"external-link\" href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a> ile olu\u015fturulduysa, tebrikler! Flow a\u00e7\u0131klamalar\u0131 zaten \u00f6ntan\u0131ml\u0131 olarak ayr\u0131lm\u0131\u015ft\u0131r. Bu y\u00fczden sizin bu ad\u0131mda herhangi bir \u015fey yapman\u0131za gerek kalmaz.</p>\n<h4 id=\"babel\"><a class=\"anchor\" href=\"/react/static-type-checking#babel\"></a>Babel </h4>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu talimatlar Create React App kullan\u0131c\u0131lar\u0131 i\u00e7in <em>de\u011fildir</em>. Create React App \u00f6z\u00fcnde Babel kullan\u0131yor olsa da, zaten Flow\u2019u anlayacak \u015fekilde ayarlanm\u0131\u015ft\u0131r. Bu ad\u0131m\u0131 sadece e\u011fer Create React App <em>kullanm\u0131yorsan\u0131z</em> takip ediniz.</p>\n</div>\n<p>E\u011fer projenizi Babel kullanmak \u00fczere elle ayarlad\u0131ysan\u0131z, Flow i\u00e7in \u00f6zel bir \u00f6n ayar y\u00fcklemeniz gerekmektedir.</p>\n<p>E\u011fer yarn kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev @babel/preset-flow</code></pre></div>\n<p>E\u011fer npm kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @babel/preset-flow</code></pre></div>\n<p>Ard\u0131ndan, <code class=\"language-javascript\">flow</code> \u00f6n ayar\u0131n\u0131 <a class=\"external-link\" href=\"https://babeljs.io/docs/usage/babelrc/\">Babel ayarlar\u0131n\u0131za</a> ekleyin. \u00d6rne\u011fin, e\u011fer Babel\u2019i <code class=\"language-javascript\">.babelrc</code> ile ayarl\u0131yorsan\u0131z, \u015f\u00f6yle g\u00f6r\u00fcnebilir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"@babel/preset-flow\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token string\">\"react\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu size Flow s\u00f6zdizimini kodunuzda kullanma f\u0131rsat\u0131 tan\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Flow, <code class=\"language-javascript\">react</code> \u00f6n ayar\u0131na ihtiya\u00e7 duymaz ancak ikisi genellikle birlikte kullan\u0131l\u0131r. Flow, JSX s\u00f6zdizimini kendili\u011finden anlayabilir.</p>\n</div>\n<h4 id=\"other-build-setups\"><a class=\"anchor\" href=\"/react/static-type-checking#other-build-setups\"></a>Di\u011fer \u0130n\u015fa Ayarlar\u0131 </h4>\n<p>E\u011fer Create React App veya Babel\u2019den birini kullanm\u0131yorsan\u0131rz, <a class=\"external-link\" href=\"https://github.com/flowtype/flow-remove-types\">flow-remove-types</a> kullanarak tip a\u00e7\u0131klamalar\u0131n\u0131 kodunuzdan ay\u0131rabilirsiniz.</p>\n<h3 id=\"running-flow\"><a class=\"anchor\" href=\"/react/static-type-checking#running-flow\"></a>Flow\u2019u \u00c7al\u0131\u015ft\u0131rmak </h3>\n<p>E\u011fer yukar\u0131daki y\u00f6nergeleri takip ettiyseniz, Flow\u2019u ilk seferde \u00e7al\u0131\u015ft\u0131rabilmelisiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> flow</code></pre></div>\n<p>E\u011fer npm kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run flow</code></pre></div>\n<p>\u015eu \u015fekilde bir mesaj g\u00f6rmelisiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">No errors!\n\u2728  Done in 0.17s.</code></pre></div>\n<h3 id=\"adding-flow-type-annotations\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-flow-type-annotations\"></a>Flow Tip A\u00e7\u0131klamalar\u0131 Ekleme </h3>\n<p>\u00d6ntan\u0131ml\u0131 olarak, Flow yaln\u0131z \u015fu a\u00e7\u0131klamay\u0131 i\u00e7eren dosyalar\u0131 denetler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// @flow</span></code></pre></div>\n<p>Bu, bir dosyan\u0131n genellike en \u00fcst\u00fcnde yer al\u0131r. Flow\u2019un herhangi bir sorun bulup bulmad\u0131\u011f\u0131n\u0131 g\u00f6rmek i\u00e7in, projenizdeki baz\u0131 dosyalara eklemeyi ve <code class=\"language-javascript\">yarn flow</code> veya <code class=\"language-javascript\">npm run flow</code> komutlar\u0131n\u0131 \u00e7al\u0131\u015ft\u0131rmay\u0131 deneyin.</p>\n<p>Bunun yan\u0131nda, Flow\u2019u a\u00e7\u0131klamadan ba\u011f\u0131ms\u0131z olarak <em>t\u00fcm</em> dosyalar\u0131 denetlemeye zorlaman\u0131n <a class=\"external-link\" href=\"https://flow.org/en/docs/config/options/#toc-all-boolean\">bir yolu daha</a> var. Bu, eski projeleriniz i\u00e7in biraz fazla olabilir; ancak yeni ba\u015flanan bir projede Flow ile tip denetimi yapmak isterseniz bu mant\u0131kl\u0131 olur.</p>\n<p>Art\u0131k haz\u0131rs\u0131n\u0131z! Flow hakk\u0131nda daha fazla bilgi i\u00e7in a\u015fa\u011f\u0131daki kaynaklara da bir g\u00f6z atman\u0131z\u0131 \u00f6neririz:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/types/\">Flow dok\u00fcmantasyonu: Tip a\u00e7\u0131klamalar\u0131</a></li>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/editors/\">Flow dok\u00fcmantasyonu: Edit\u00f6rler</a></li>\n<li><a class=\"external-link\" href=\"https://flow.org/en/docs/react/\">Flow dok\u00fcmantasyonu: React</a></li>\n<li><a class=\"external-link\" href=\"https://medium.com/flow-type/linting-in-flow-7709d7a7e969\">Flow\u2019da linting</a></li>\n</ul>\n<h2 id=\"typescript\"><a class=\"anchor\" href=\"/react/static-type-checking#typescript\"></a>TypeScript </h2>\n<p><a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a>, Microsoft taraf\u0131ndan geli\u015ftirilmi\u015f bir yaz\u0131l\u0131m dilidir. JavaScript\u2019in bir \u00fcst k\u00fcmesidir ve kendi derleyicisi vard\u0131r. TypeScript tipli bir programlama dili oldu\u011fundan, hatalar\u0131 ve sorunlar\u0131 in\u015fa s\u0131ras\u0131nda, uygulaman\u0131z canl\u0131ya ge\u00e7meden \u00e7ok \u00f6nce yakalayabilir. React\u2019i TypeScript ile kullanmak hakk\u0131nda <a class=\"external-link\" href=\"https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter\">buradan</a> daha fazla bilgiye ula\u015fabilirsiniz.</p>\n<p>TypeScript\u2019i kullanmak i\u00e7in:</p>\n<ul>\n<li>TypeScript\u2019i projenize bir ba\u011f\u0131ml\u0131l\u0131k olarak eklemeye</li>\n<li>TypeScript derleyicisi ayarlar\u0131n\u0131 yapmaya</li>\n<li>Do\u011fru dosya uzant\u0131lar\u0131n\u0131 kullanmaya</li>\n<li>Kulland\u0131\u011f\u0131n\u0131z k\u00fct\u00fcphaneler i\u00e7in tan\u0131mlar\u0131 eklemeye</li>\n</ul>\n<p>ihtiyac\u0131n\u0131z vard\u0131r.</p>\n<p>Gelin \u015fimdi bunlar\u0131n detaylar\u0131na inelim.</p>\n<h3 id=\"using-typescript-with-create-react-app\"><a class=\"anchor\" href=\"/react/static-type-checking#using-typescript-with-create-react-app\"></a>TypeScript\u2019i Create React App \u0130le Kullanmak </h3>\n<p>Create React App TypeScript\u2019i kendili\u011finden destekler.</p>\n<p>TypeScript kullanan <strong>yeni bir proje</strong> olu\u015fturmak i\u00e7in, \u015fu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx create-react-app my-app --template typescript</code></pre></div>\n<p>Ayr\u0131ca, <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/docs/adding-typescript\">burada anlat\u0131ld\u0131\u011f\u0131 \u015fekilde</a> <strong>varolan Create React App</strong> projelerinize de ekleyebilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>E\u011fer Create React app kullan\u0131yorsan\u0131z, <strong>bu sayfan\u0131n geri kalan\u0131n\u0131 ge\u00e7ebilirsiniz</strong>. Elle ayarlamay\u0131 anlatt\u0131\u011f\u0131 i\u00e7in, Create React App kullan\u0131c\u0131lar\u0131 i\u00e7in ge\u00e7erli de\u011fildir.</p>\n</div>\n<h3 id=\"adding-typescript-to-a-project\"><a class=\"anchor\" href=\"/react/static-type-checking#adding-typescript-to-a-project\"></a>TypeScript\u2019i Bir Projeye Eklemek </h3>\n<p>Her \u015fey bir komutu terminalde \u00e7al\u0131\u015ft\u0131rmayla ba\u015fl\u0131yor.</p>\n<p>E\u011fer <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev typescript</code></pre></div>\n<p>E\u011fer <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript</code></pre></div>\n<p>Tebrikler! TypeScript\u2019in en g\u00fcncel s\u00fcr\u00fcm\u00fcn\u00fc projenize y\u00fcklediniz. TypeScript\u2019i y\u00fcklemek bize <code class=\"language-javascript\">tsc</code> komutuna eri\u015fim sa\u011fl\u0131yor. Ayarlamadan \u00f6nce, gelin <code class=\"language-javascript\">tsc</code>\u2018yi <code class=\"language-javascript\">package.json</code>\u2018umuzun \u201cscripts\u201d k\u0131sm\u0131na ekleyelim:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"configuring-the-typescript-compiler\"><a class=\"anchor\" href=\"/react/static-type-checking#configuring-the-typescript-compiler\"></a>TypeScript Derleyicisini Yap\u0131land\u0131rma </h3>\n<p>Derleyici, biz ona ne yapaca\u011f\u0131n\u0131 s\u00f6yleyene dek, bize \u00e7ok da yard\u0131mc\u0131 olamaz. TypeScript\u2019te, bu kurallar <code class=\"language-javascript\">tsconfig.json</code> isminde \u00f6zel bir dosyada tan\u0131mlan\u0131r. Bu dosyay\u0131 olu\u015fturmak i\u00e7in:</p>\n<p>E\u011fer <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> run tsc --init</code></pre></div>\n<p>E\u011fer <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\">npx tsc --init</code></pre></div>\n<p>Yeni olu\u015fturdu\u011fumuz <code class=\"language-javascript\">tsconfig.json</code>\u2018a bakt\u0131\u011f\u0131m\u0131zda, derleyiciyi ayarlayabilece\u011fimiz bir\u00e7ok se\u00e7enek oldu\u011funu g\u00f6rebilirsiniz. T\u00fcm se\u00e7eneklerin detayl\u0131 bir a\u00e7\u0131klamas\u0131 i\u00e7in, <a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\">buraya</a> bak\u0131n\u0131z.</p>\n<p>Biz, bu bir\u00e7ok se\u00e7enekten <code class=\"language-javascript\">rootDir</code> ve <code class=\"language-javascript\">outDir</code>\u2018e bakaca\u011f\u0131z. Kendinden beklendi\u011fi gibi derleyici, typescript dosyalar\u0131n\u0131 javascript dosyalar\u0131na d\u00f6n\u00fc\u015ft\u00fcrecek. Ancak biz, kendi kaynak dosyalar\u0131m\u0131zla \u00fcretilmi\u015f dosyalar\u0131n kar\u0131\u015fmas\u0131n\u0131 istemiyoruz.</p>\n<p>Bunu iki ad\u0131mda \u00e7\u00f6zece\u011fiz:</p>\n<ul>\n<li>\u0130lk olarak, gelin proje yap\u0131m\u0131z\u0131 a\u015fa\u011f\u0131daki \u015fekilde d\u00fczenleyelim. T\u00fcm kaynak kodlar\u0131m\u0131z\u0131 <code class=\"language-javascript\">src</code> dizinine koyaca\u011f\u0131z.</li>\n</ul>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 index.ts\n\u2514\u2500\u2500 tsconfig.json</code></pre></div>\n<ul>\n<li>Sonra derleyiciye kaynak kodumuzun nerede oldu\u011funu ve derlenmi\u015f dosyalar\u0131n nereye gidece\u011fini s\u00f6yleyece\u011fiz.</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// tsconfig.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token string-property property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Harika! \u015eimdi in\u015fa beti\u011fimizi \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda, derleyici \u00fcretilen javascript\u2019i <code class=\"language-javascript\">build</code> dizinine koyacak. Ayr\u0131ca <a class=\"external-link\" href=\"https://github.com/Microsoft/TypeScript-React-Starter/blob/master/tsconfig.json\">TypeScript React Starter</a>, ba\u015flang\u0131\u00e7 i\u00e7in uygun bir kurallar b\u00fct\u00fcn\u00fcn\u00fc size sunuyor.</p>\n<p>Genellikle \u00fcretilen javascript\u2019i kaynak kontrol\u00fcn\u00fczde tutmak istemezsiniz. Bu y\u00fczden, <code class=\"language-javascript\">build</code> dizininizi <code class=\"language-javascript\">.gitignore</code> dosyan\u0131za ekledi\u011finizden emin olun.</p>\n<h3 id=\"file-extensions\"><a class=\"anchor\" href=\"/react/static-type-checking#file-extensions\"></a>Dosya uzant\u0131lar\u0131 </h3>\n<p>React\u2019te bile\u015fenlerinizi muhtemelen bir <code class=\"language-javascript\">.js</code> dosyas\u0131na yaz\u0131yorsunuzdur. TypeScript\u2019te ise iki dosya uzant\u0131m\u0131z var:</p>\n<p><code class=\"language-javascript\">.ts</code> \u00f6ntan\u0131ml\u0131 dosya uzant\u0131s\u0131yken, <code class=\"language-javascript\">.tsx</code> ise <code class=\"language-javascript\">JSX</code> i\u00e7eren dosyalar i\u00e7in kullan\u0131lan \u00f6zel bir dosya uzant\u0131s\u0131d\u0131r.</p>\n<h3 id=\"running-typescript\"><a class=\"anchor\" href=\"/react/static-type-checking#running-typescript\"></a>TypeScript\u2019i \u00c7al\u0131\u015ft\u0131rma </h3>\n<p>E\u011fer yukar\u0131daki y\u00f6nergeleri takip ettiyseniz, TypeScript\u2019i ilk kez \u00e7al\u0131\u015ft\u0131rabiliyor olmal\u0131s\u0131n\u0131z.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">yarn</span> build</code></pre></div>\n<p>E\u011fer npm kullan\u0131yorsan\u0131z, bu komutu \u00e7al\u0131\u015ft\u0131r\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> run build</code></pre></div>\n<p>E\u011fer bir \u00e7\u0131kt\u0131 g\u00f6rm\u00fcyorsan\u0131z kodunuz ba\u015far\u0131l\u0131 olarak derlenmi\u015f demektir.</p>\n<h3 id=\"type-definitions\"><a class=\"anchor\" href=\"/react/static-type-checking#type-definitions\"></a>Tip Tan\u0131mlamalar\u0131 </h3>\n<p>Derleyici, di\u011fer paketlerdeki hatalar\u0131 ve ipu\u00e7lar\u0131n\u0131 g\u00f6stermek i\u00e7in beyan dosyalar\u0131na ihtiya\u00e7 duyar. Beyan dosyas\u0131, bir k\u00fct\u00fcphane hakk\u0131ndaki t\u00fcm tip bilgilerini sa\u011flar. Bu bize javascript k\u00fct\u00fcphanelerini t\u0131pk\u0131 npm gibi kullanma imkan\u0131n\u0131 verir.</p>\n<p>Bir k\u00fct\u00fcphane i\u00e7in beyana ula\u015fman\u0131n iki yolu vard\u0131r:</p>\n<p><strong>Demet</strong> - K\u00fct\u00fcphaneler kendi beyan dosyas\u0131n\u0131 tan\u0131mlar. Bu, t\u00fcm yapmam\u0131z gerekenin yaln\u0131zca k\u00fct\u00fcphaneyi y\u00fcklemek olmas\u0131 ve onu an\u0131nda kullanmam\u0131z\u0131 sa\u011flad\u0131\u011f\u0131 i\u00e7in bizim i\u00e7in harikad\u0131r. Bir k\u00fct\u00fcphanenin tiplerinin demetli olup olmad\u0131\u011f\u0131n\u0131 denetlemek i\u00e7in projenizde bir <code class=\"language-javascript\">index.d.ts</code> dosyas\u0131n\u0131n olup olmad\u0131\u011f\u0131na bak\u0131n. Kimi k\u00fct\u00fcphaneler bunu kendi <code class=\"language-javascript\">package.json</code> dosyalar\u0131nda, <code class=\"language-javascript\">typings</code> veya <code class=\"language-javascript\">types</code> alan\u0131nda belirtirler.</p>\n<p><strong><a class=\"external-link\" href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped</a></strong> - DefinitelyTyped, beyan dosyalar\u0131n\u0131 paketli olarak ula\u015ft\u0131rmayan k\u00fct\u00fcphaneler i\u00e7in kocaman bir beyan deposudur. Beyanlar, kitle kaynakl\u0131d\u0131r ve Microsoft ve a\u00e7\u0131k kaynak katk\u0131c\u0131lar taraf\u0131ndan y\u00f6netilir. \u00d6rne\u011fin React kendi beyan dosyas\u0131n\u0131 paketlemez. Bunun yerine onu DefinitelyTyped\u2019dan alabiliriz. Bunun i\u00e7in a\u015fa\u011f\u0131daki komutu terminale girin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token comment\"># yarn</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev @types/react\n\n<span class=\"token comment\"># npm</span>\n<span class=\"token function\">npm</span> i --save-dev @types/react</code></pre></div>\n<p><strong>Yerel Tan\u0131mlamalar</strong>\nBazen kullanmak istedi\u011finiz k\u00fct\u00fcphanenin beyanlar\u0131 ne demetli halde sunulur, ne de DefinitelyTyped\u2019ta mevcuttur. Bu durumda yerel bir beyan dosyam\u0131z olabilir. Bunun i\u00e7in kaynak dizininizin k\u00f6k\u00fcnde <code class=\"language-javascript\">declarations.d.ts</code> dosyas\u0131n\u0131 olu\u015fturun. Basit bir beyan dosyas\u0131 \u015f\u00f6yle g\u00f6r\u00fcnebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-typescript\"><code class=\"language-javascript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'querystring'</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> object\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi kodlamaya haz\u0131rs\u0131n\u0131z! Size tavsiyemiz, TypeScript hakk\u0131nda daha fazla bilgiye ula\u015fmak i\u00e7in a\u015fa\u011f\u0131daki kaynaklara bir g\u00f6z atman\u0131z:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/2/basic-types.html\">TypeScript Dok\u00fcmantasyonu: Temel Tipler</a></li>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html\">TypeScript Dok\u00fcmantasyonu: JavaScript\u2019ten G\u00f6\u00e7</a></li>\n<li><a class=\"external-link\" href=\"https://www.typescriptlang.org/docs/handbook/react-&amp;-webpack.html\">TypeScript Dok\u00fcmantasyonu: React ve Webpack</a></li>\n</ul>\n<h2 id=\"rescript\"><a class=\"anchor\" href=\"/react/static-type-checking#rescript\"></a>ReScript </h2>\n<p><a class=\"external-link\" href=\"https://rescript-lang.org/\">ReScript</a> is a typed language that compiles to JavaScript. Some of its core features are  guaranteed 100% type coverage, first-class JSX support and <a class=\"external-link\" href=\"https://rescript-lang.org/docs/react/latest/introduction\">dedicated React bindings</a> to allow integration in existing JS / TS React codebases.</p>\n<p>You can find more infos on integrating ReScript in your existing JS / React codebase <a class=\"external-link\" href=\"https://rescript-lang.org/docs/manual/latest/installation#integrate-into-an-existing-js-project\">here</a>.</p>\n<h2 id=\"kotlin\"><a class=\"anchor\" href=\"/react/static-type-checking#kotlin\"></a>Kotlin </h2>\n<p><a class=\"external-link\" href=\"https://kotlinlang.org/\">Kotlin</a>, JetBrains taraf\u0131ndan geli\u015ftirilmi\u015f statik tipli bir dildir. Hedef platformlar\u0131 aras\u0131nda JVM, Android, LLVM ve <a class=\"external-link\" href=\"https://kotlinlang.org/docs/reference/js-overview.html\">JavaScript</a> bulunur.</p>\n<p>JetBrains React toplulu\u011fu i\u00e7in \u00f6zel olarak kimi ara\u00e7lar geli\u015ftirmekte ve bak\u0131mlar\u0131n\u0131 yapmaktad\u0131r: <a class=\"external-link\" href=\"https://github.com/JetBrains/kotlin-wrappers\">React ba\u011flamalar\u0131</a> ve <a class=\"external-link\" href=\"https://github.com/JetBrains/create-react-kotlin-app\">Create React Kotlin App</a>. Bunlardan ikincisi, Kotlin uygulamalar\u0131n\u0131 hi\u00e7bir in\u015fa ayar\u0131na ihtiya\u00e7 duymadan React ile yazman\u0131za yard\u0131mc\u0131 olur.</p>\n<h2 id=\"other-languages\"><a class=\"anchor\" href=\"/react/static-type-checking#other-languages\"></a>Di\u011fer Diller </h2>\n<p>JavaScript\u2019e derlenebilen ve dolay\u0131s\u0131yla React\u2019e uyumlu ba\u015fka statik tipli diller diller de mevcuttur; \u00f6rne\u011fin <a class=\"external-link\" href=\"https://elmish.github.io/react\">elmish-react</a>\u2018li <a class=\"external-link\" href=\"https://fable.io/\">F#/Fable</a>. Daha fazla bilgi i\u00e7in sitelerini ziyaret edin ve React ile \u00e7al\u0131\u015fan di\u011fer statik tipli dilleri de bu sayfaya eklemekten \u00e7ekinmeyin.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/static-type-checking.md\">Edit this page</a></p></div></article>", "path": "/react/static-type-checking", "nav": ["/react/render-props", "/react/strict-mode"]}, {"key": "Strict Modu", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><code class=\"language-javascript\">Strict Modu</code> (StrictMode) uygulamadaki potansiyel sorunlar\u0131 vurgulayan bir ara\u00e7t\u0131r. <code class=\"language-javascript\">Fragment</code> gibi <code class=\"language-javascript\">Strict Modu</code> de herhangi bir g\u00f6r\u00fcn\u00fcr UI render etmez. <code class=\"language-javascript\">Strict Modu</code> ayn\u0131 zamanda alt \u00f6\u011feler i\u00e7in ek kontrol ve uyar\u0131lar\u0131 etkinle\u015ftirir.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Strict Modu kontrolleri sadece geli\u015ftirme modunda yap\u0131l\u0131r.; <em>canl\u0131da herhangi bir etkisi yoktur</em>.</p>\n</div>\n<p>Strict Modunu uygulaman\u0131z\u0131n herhangi bir par\u00e7as\u0131 i\u00e7in aktif hale getirebilirsiniz. \u00d6rne\u011fin:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ExampleApplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.StrictMode</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentOne</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentTwo</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.StrictMode</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Footer</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Yukar\u0131daki \u00f6rnekte strict mod kontrolleri <code class=\"language-javascript\">Header</code> ve <code class=\"language-javascript\">Footer</code> bile\u015fenleri i\u00e7in <em>yap\u0131lmayacakt\u0131r</em>. Ancak <code class=\"language-javascript\">ComponentOne</code> ve <code class=\"language-javascript\">ComponentTwo</code> ve onlar\u0131n t\u00fcm alt \u00f6\u011feleri i\u00e7in kontroller yap\u0131lacakt\u0131r.</p>\n<p><code class=\"language-javascript\">Strict Modu</code> \u015fu konularda yard\u0131mc\u0131 olur:</p>\n<ul>\n<li><a href=\"/react/strict-mode#identifying-unsafe-lifecycles\">G\u00fcvenli olmayan ya\u015fam d\u00f6ng\u00fclerine sahip bile\u015fenleri tespit etme</a></li>\n<li><a href=\"/react/strict-mode#warning-about-legacy-string-ref-api-usage\">Eski string ref API kullan\u0131m\u0131 hakk\u0131nda uyarma</a></li>\n<li><a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\">Kullan\u0131mdan kald\u0131r\u0131lm\u0131\u015f findDOMNode kullan\u0131m\u0131 hakk\u0131nda uyarma</a></li>\n<li><a href=\"/react/strict-mode#detecting-unexpected-side-effects\">Beklenmeyen yan etkileri tespit etme</a></li>\n<li><a href=\"/react/strict-mode#detecting-legacy-context-api\">Eski context API tespit etme</a></li>\n<li><a href=\"/react/strict-mode#ensuring-reusable-state\">State\u2019in yeniden kullan\u0131labilirli\u011fini korumak</a></li>\n</ul>\n<p>React\u2019in gelecek s\u00fcr\u00fcmlerinde yeni \u00f6zellikler eklenecektir.</p>\n<h3 id=\"identifying-unsafe-lifecycles\"><a class=\"anchor\" href=\"/react/strict-mode#identifying-unsafe-lifecycles\"></a>G\u00fcvenli olmayan ya\u015fam d\u00f6ng\u00fclerine sahip bile\u015fenleri tespit etme </h3>\n<p><a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">Bu blog yaz\u0131s\u0131nda</a> a\u00e7\u0131kland\u0131\u011f\u0131 gibi, baz\u0131 eski ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131n\u0131 asenkron React uygulamalar\u0131nda kullanmak g\u00fcvenli de\u011fildir. Ancak uygulaman\u0131z \u00fc\u00e7\u00fcnc\u00fc parti k\u00fct\u00fcphaneler kullan\u0131yorsa bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131n\u0131n kullan\u0131lmad\u0131\u011f\u0131ndan emin olmak olduk\u00e7a zordur. Neyse ki, Strict Modu bize bu konuda yard\u0131mc\u0131 olabilir!</p>\n<p>Strict modu etkinle\u015ftirildi\u011finde, React g\u00fcvenli olmayan ya\u015fam d\u00f6ng\u00fcs\u00fc kullanan s\u0131n\u0131f bile\u015fenlerinin bir listesini toplar ve bu bile\u015fenler hakk\u0131nda a\u015fa\u011f\u0131daki gibi bir uyar\u0131 verir.</p>\n<p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/e4fdbff774b356881123e69ad88eda88/1628f/strict-mode-unsafe-lifecycles-warning.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/e4fdbff774b356881123e69ad88eda88/1e088/strict-mode-unsafe-lifecycles-warning.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Strict modu sorunlar\u0131na \u00e7\u00f6z\u00fcm bulmak, gelecekte React s\u00fcr\u00fcmlerinde e\u015fzamanl\u0131 render etme i\u015fleminden yararlanman\u0131z\u0131 kolayla\u015ft\u0131racakt\u0131r.</p>\n<h3 id=\"warning-about-legacy-string-ref-api-usage\"><a class=\"anchor\" href=\"/react/strict-mode#warning-about-legacy-string-ref-api-usage\"></a>Eski string ref API kullan\u0131m\u0131 hakk\u0131nda uyarma </h3>\n<p>React, daha \u00f6nce ref\u2019leri y\u00f6netmek i\u00e7in iki yol sunuyordu: Eski string ref API ve callback API. String Ref API daha uygun olmas\u0131na ra\u011fmen <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/1373\">birka\u00e7 dezavantaj\u0131</a> vard\u0131 ve resmi \u00f6nerimiz <a href=\"/react/refs-and-the-dom#legacy-api-string-refs\">bunun yerine callback kullanmakt\u0131</a>.</p>\n<p>React 16.3, herhangi bir dezavantaj\u0131 olmadan string ref\u2019in rahatl\u0131\u011f\u0131n\u0131 sunan \u00fc\u00e7\u00fcnc\u00fc bir se\u00e7enek getirdi:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>Nesne ref\u2019leri b\u00fcy\u00fck \u00f6l\u00e7\u00fcde string ref\u2019lerinin yerine geldi\u011finden beri strict modu art\u0131k string ref kullan\u0131mlar\u0131 konusunda uyar\u0131yor.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Yeni <code class=\"language-javascript\">createRef</code> API\u2019sine ek olarak Callback ref\u2019leri de desteklenmeye devam edecektir.</p>\n<p>Bile\u015fenlerinizdeki callback ref\u2019leri de\u011fi\u015ftirmeniz gerekmez. Biraz daha esnek bir yap\u0131da olduklar\u0131 i\u00e7in geli\u015fmi\u015f bir \u00f6zellik olarak kalacaklar.</p>\n</div>\n<p><a href=\"/react/refs-and-the-dom\">Yeni <code class=\"language-javascript\">createRef</code> API hakk\u0131nda daha fazla bilgiyi buradan \u00f6\u011frenebilirsiniz.</a></p>\n<h3 id=\"warning-about-deprecated-finddomnode-usage\"><a class=\"anchor\" href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\"></a>Kullan\u0131mdan kald\u0131r\u0131lm\u0131\u015f findDOMNode kullan\u0131m\u0131 hakk\u0131nda uyarma </h3>\n<p>React, s\u0131n\u0131f nesne \u00f6rne\u011fi verilen bir DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc a\u011fa\u00e7ta aramak i\u00e7in <code class=\"language-javascript\">findDOMNode</code>\u2018u destekliyordu. Normalde buna ihtiya\u00e7 yoktur \u00e7\u00fcnk\u00fc <a href=\"/react/refs-and-the-dom#creating-refs\">do\u011frudan bir DOM d\u00fc\u011f\u00fcm\u00fcne ref ekleyebilirsiniz</a>.</p>\n<p><code class=\"language-javascript\">findDOMNode</code> ayr\u0131ca s\u0131n\u0131f bile\u015fenlerinde de kullan\u0131labilir ancak bu, bir \u00fcst \u00f6\u011fenin belirli alt \u00f6\u011felerin render edilmesine izin vererek soyutlama d\u00fczeylerini bozuyordu. Bir \u00fcst \u00f6\u011fe DOM d\u00fc\u011f\u00fcm\u00fcne eri\u015febilece\u011fi i\u00e7in bir bile\u015fenin uygulama ayr\u0131nt\u0131lar\u0131n\u0131 de\u011fi\u015ftiremeyece\u011finiz bir kodun yeniden d\u00fczenlenmesi (refactoring) tehlikesi olu\u015fturur. <code class=\"language-javascript\">findDOMNode</code> sadece ilk alt \u00f6\u011feyi d\u00f6nd\u00fcr\u00fcr fakat Fragment\u2019ler kullan\u0131larak bir bile\u015fenin birden fazla alt \u00f6\u011fe render etmesi m\u00fcmk\u00fcnd\u00fcr. <code class=\"language-javascript\">findDOMNode</code> tek seferlik okuma API\u2019sidir. Sadece istendi\u011finde cevap verir. Bir alt bile\u015fen farkl\u0131 bir farkl\u0131 bir d\u00fc\u011f\u00fcm render ediyorsa, bu de\u011fi\u015fikli\u011fi ele alman\u0131n bir yolu yoktur. Bu nedenle <code class=\"language-javascript\">findDOMNode</code> sadece bile\u015fenler asla de\u011fi\u015fmeyen tek bir DOM d\u00fc\u011f\u00fcm\u00fc d\u00f6nd\u00fcr\u00fcrse i\u015fe yarar.</p>\n<p>Bunun yerine, bunu \u00f6zel bile\u015feninize bir ref ge\u00e7erek ve <a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">ref y\u00f6nlendirme</a> ile DOM boyunca ileterek yapabilirsiniz.</p>\n<p>Ayr\u0131ca bile\u015feninize bir sar\u0131c\u0131 (wrapper) DOM d\u00fc\u011f\u00fcm\u00fc ekleyebilir ve do\u011frudan ona bir ref ekleyebilirsiniz.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wrapper <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wrapper<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>CSS\u2019te, d\u00fc\u011f\u00fcm\u00fcn tasar\u0131m\u0131n bir par\u00e7as\u0131 olmas\u0131n\u0131 istemiyorsan\u0131z <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display#display_contents\"><code class=\"language-javascript\">display: contents</code></a> \u00f6zelli\u011fini kullanabilirsiniz.</p>\n</div>\n<h3 id=\"detecting-unexpected-side-effects\"><a class=\"anchor\" href=\"/react/strict-mode#detecting-unexpected-side-effects\"></a>Beklenmeyen yan etkileri tespit etme </h3>\n<p>Kavramsal olarak, React iki a\u015famada \u00e7al\u0131\u015f\u0131r:</p>\n<ul>\n<li><strong>Render</strong> a\u015famas\u0131, \u00f6rne\u011fin DOM\u2019da hangi de\u011fi\u015fikliklerin yap\u0131lmas\u0131 gerekti\u011fini belirler. Bu a\u015famada React, render\u2019\u0131 \u00e7a\u011f\u0131r\u0131r ve sonucu bir \u00f6nceki render \u00e7a\u011fr\u0131s\u0131n\u0131n sonucuyla kar\u015f\u0131la\u015ft\u0131r\u0131r. </li>\n<li><strong>Commit</strong> a\u015famas\u0131, React\u2019\u0131n de\u011fi\u015fiklikleri uygulad\u0131\u011f\u0131 a\u015famad\u0131r. React DOM durumunda, React bu DOM d\u00fc\u011f\u00fcmlerini ekler, g\u00fcnceller ve kald\u0131r\u0131r. React ayr\u0131ca bu a\u015famada <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code> gibi ya\u015fam d\u00f6ng\u00fclerini \u00e7a\u011f\u0131r\u0131r.</li>\n</ul>\n<p>Commit a\u015famas\u0131 genellikle h\u0131zl\u0131d\u0131r fakat render a\u015famas\u0131 yava\u015f olabilir. Bu nedenle, yak\u0131nda gelecek e\u015fzamanl\u0131 (concurrent) mod (hen\u00fcz varsay\u0131lan olarak etkin de\u011fil) render etme i\u015fini par\u00e7alara ay\u0131r\u0131r, taray\u0131c\u0131y\u0131 engellememek i\u00e7in i\u015fi duraklat\u0131r ve devam ettirir. Bu, React\u2019\u0131n render a\u015famas\u0131 ya\u015fam d\u00f6ng\u00fclerini commit a\u015famas\u0131na hi\u00e7 ge\u00e7meden (bir hata veya daha y\u00fcksek \u00f6ncelikli kesinti nedeniyle) \u00e7a\u011f\u0131rabilece\u011fi ya da commit a\u015famas\u0131ndan \u00f6nce bir kereden fazla \u00e7a\u011f\u0131rabilece\u011fi anlam\u0131na gelir. </p>\n<p>Render a\u015famas\u0131 ya\u015fam d\u00f6ng\u00fcleri a\u015fa\u011f\u0131daki s\u0131n\u0131f bile\u015feni metodlar\u0131n\u0131 i\u00e7erir:</p>\n<ul>\n<li><code class=\"language-javascript\">constructor</code></li>\n<li><code class=\"language-javascript\">componentWillMount</code> (veya <code class=\"language-javascript\">UNSAFE_componentWillMount</code>)</li>\n<li><code class=\"language-javascript\">componentWillReceiveProps</code> (veya <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps</code>)</li>\n<li><code class=\"language-javascript\">componentWillUpdate</code> (veya <code class=\"language-javascript\">UNSAFE_componentWillUpdate</code>)</li>\n<li><code class=\"language-javascript\">getDerivedStateFromProps</code></li>\n<li><code class=\"language-javascript\">shouldComponentUpdate</code></li>\n<li><code class=\"language-javascript\">render</code></li>\n<li><code class=\"language-javascript\">setState</code> g\u00fcncelleyen fonksiyonlar (ilk arg\u00fcman)</li>\n</ul>\n<p>Yukar\u0131daki metodlar bir kereden fazla \u00e7a\u011fr\u0131labilece\u011finden, yan etkiler i\u00e7ermemesi \u00f6nemlidir. Bu kural\u0131 g\u00f6z ard\u0131 etmek, bellek s\u0131z\u0131nt\u0131lar\u0131 (memory leak) ve ge\u00e7ersiz uygulama durumu (invalid application state) gibi \u00e7e\u015fitli sorunlara yol a\u00e7abilir. Ne yaz\u0131k ki bu sorunlar\u0131 tespit etmek zor olabilir \u00e7\u00fcnk\u00fc genellikle <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Deterministic_algorithm\">belirlenebilir olmayabilirler</a>.</p>\n<p>Strict modu, yan etkileri otomatik olarak tespit edemez ancak onlar\u0131 daha belirgin hale getirerek tespit etmenize yard\u0131mc\u0131 olabilir. Bu, a\u015fa\u011f\u0131daki fonksiyonlar\u0131 bilin\u00e7li bir \u015fekilde iki kere \u00e7a\u011f\u0131rarak (double-invoking) yap\u0131l\u0131r:</p>\n<ul>\n<li>S\u0131n\u0131f bile\u015feni <code class=\"language-javascript\">constructor</code>, <code class=\"language-javascript\">render</code>, ve <code class=\"language-javascript\">shouldComponentUpdate</code> metodlar\u0131</li>\n<li>S\u0131n\u0131f bile\u015feni statik <code class=\"language-javascript\">getDerivedStateFromProps</code> metodu</li>\n<li>Fonksiyon bile\u015fen g\u00f6vdeleri</li>\n<li>State g\u00fcncelleyen fonksiyonlar (<code class=\"language-javascript\">setState</code>in ilk arg\u00fcman\u0131)</li>\n<li><code class=\"language-javascript\">useState</code>, <code class=\"language-javascript\">useMemo</code>, veya <code class=\"language-javascript\">useReducer</code>\u2018a aktar\u0131lan fonksiyonlar</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu sadece geli\u015ftirme modu i\u00e7in ge\u00e7erlidir. <em>Ya\u015fam d\u00f6ng\u00fcleri canl\u0131da iki defa \u00e7a\u011f\u0131r\u0131lmayacakt\u0131r.</em></p>\n</div>\n<p>\u00d6rne\u011fin, a\u015fa\u011f\u0131daki kodu ele alal\u0131m:\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TopLevelRoute</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    SharedApplicationState<span class=\"token punctuation\">.</span><span class=\"token function\">recordEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ExampleComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>\u0130lk bak\u0131\u015fta bu kod sorunlu g\u00f6r\u00fcnmeyebilir. Ancak <code class=\"language-javascript\">SharedApplicationState.recordEvent</code> <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Idempotence#Computer_science_meaning\">etkisiz</a> de\u011filse, bu bile\u015feni birden \u00e7ok kez ba\u015flatmak ge\u00e7ersiz uygulama durumuna yol a\u00e7abilir. Bu t\u00fcr ince bir hata geli\u015ftirme s\u0131ras\u0131nda ortaya \u00e7\u0131kmayabilir veya bunu tutars\u0131z bir \u015fekilde yaparak g\u00f6zden ka\u00e7abilir.</p>\n<p>Strict modu, <code class=\"language-javascript\">constructor</code> gibi metodlar\u0131 kas\u0131tl\u0131 olarak iki kere \u00e7a\u011f\u0131rarak, bu gibi desenlerin fark edilmesini sa\u011flar.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React, 17. versiyonu ile birlikte, ya\u015fam-d\u00f6ng\u00fcs\u00fc fonksiyonlar\u0131na yap\u0131lan ikinci \u00e7a\u011fr\u0131lardaki mesajlar\u0131 susturmak i\u00e7in <code class=\"language-javascript\">console.log()</code> gibi konsol metotlar\u0131n\u0131 otomatik olarak de\u011fi\u015ftirmektedir. Ancak bu, baz\u0131 durumlarda istenmeyen davran\u0131\u015flara sebep olabilir. Bu durumda <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/20090#issuecomment-715927125\">ge\u00e7ici bir \u00e7\u00f6z\u00fcm kullan\u0131labilir</a>.</p>\n<p>React 18 versiyonundan itibaren, hi\u00e7bir log\u2019u durdurmaz. Ancak, React DevTools kuruluysa ikinci bas\u0131lan loglar biraz soluk g\u00f6r\u00fcnecektir. React DevTools ayr\u0131ca bunlar\u0131 tamamen durdurmak i\u00e7in bir ayar sunar (varsay\u0131lan olarak kapal\u0131 gelir).</p>\n</div>\n<h3 id=\"detecting-legacy-context-api\"><a class=\"anchor\" href=\"/react/strict-mode#detecting-legacy-context-api\"></a>Eski context API tespit etme </h3>\n<p>Eski context API hataya a\u00e7\u0131kt\u0131r ve gelecekteki bir ana s\u00fcr\u00fcmde kald\u0131r\u0131lacakt\u0131r. Hala t\u00fcm 16.x s\u00fcr\u00fcmleri i\u00e7in \u00e7al\u0131\u015f\u0131r, ancak strict modunda \u015fu uyar\u0131 mesaj\u0131n\u0131 g\u00f6sterecektir:</p>\n<p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/fca5c5e1fb2ef2e2d59afb100b432c12/51800/warn-legacy-context-in-strict-mode.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/fca5c5e1fb2ef2e2d59afb100b432c12/1e088/warn-legacy-context-in-strict-mode.png\">Image link</a>\n</span>\n</span>\n</a>\n</p>\n<p>Yeni s\u00fcr\u00fcme ge\u00e7meye yard\u0131mc\u0131 olmas\u0131 i\u00e7in <a href=\"/react/context\">yeni context API</a> d\u00f6k\u00fcman\u0131n\u0131 okuyun.</p>\n<h3 id=\"ensuring-reusable-state\"><a class=\"anchor\" href=\"/react/strict-mode#ensuring-reusable-state\"></a>State\u2019in yeniden kullan\u0131labilirli\u011fini korumak </h3>\n<p>In the future, we\u2019d like to add a feature that allows React to add and remove sections of the UI while preserving state. For example, when a user tabs away from a screen and back, React should be able to immediately show the previous screen. To do this, React will support remounting trees using the same component state used before unmounting.</p>\n<p>This feature will give React better performance out-of-the-box, but requires components to be resilient to effects being mounted and destroyed multiple times. Most effects will work without any changes, but some effects do not properly clean up subscriptions in the destroy callback, or implicitly assume they are only mounted or destroyed once.</p>\n<p>To help surface these issues, React 18 introduces a new development-only check to Strict Mode. This new check will automatically unmount and remount every component, whenever a component mounts for the first time, restoring the previous state on the second mount.</p>\n<p>To demonstrate the development behavior you\u2019ll see in Strict Mode with this feature, consider what happens when React mounts a new component. Without this change, when a component mounts, React creates the effects:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">* React mounts the component.\n  * Layout effects are created.\n  * Effects are created.</code></pre></div>\n<p>With Strict Mode starting in React 18, whenever a component mounts in development, React will simulate immediately unmounting and remounting the component:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">* React mounts the component.\n    * Layout effects are created.\n    * Effect effects are created.\n* React simulates effects being destroyed on a mounted component.\n    * Layout effects are destroyed.\n    * Effects are destroyed.\n* React simulates effects being re-created on a mounted component.\n    * Layout effects are created\n    * Effect setup code runs</code></pre></div>\n<p>On the second mount, React will restore the state from the first mount. This feature simulates user behavior such as a user tabbing away from a screen and back, ensuring that code will properly handle state restoration.</p>\n<p>When the component unmounts, effects are destroyed as normal:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">* React unmounts the component.\n  * Layout effects are destroyed.\n  * Effect effects are destroyed.</code></pre></div>\n<p>Unmounting and remounting includes:</p>\n<ul>\n<li><code class=\"language-javascript\">componentDidMount</code></li>\n<li><code class=\"language-javascript\">componentWillUnmount</code></li>\n<li><code class=\"language-javascript\">useEffect</code></li>\n<li><code class=\"language-javascript\">useLayoutEffect</code></li>\n<li><code class=\"language-javascript\">useInsertionEffect</code></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This only applies to development mode, <em>production behavior is unchanged</em>.</p>\n</div>\n<p>For help supporting common issues, see:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/reactwg/react-18/discussions/18\">How to support Reusable State in Effects</a></li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/strict-mode.md\">Edit this page</a></p></div></article>", "path": "/react/strict-mode", "nav": ["/react/static-type-checking", "/react/typechecking-with-proptypes"]}, {"key": "PropTypes ile Tip Kontrol\u00fc", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">React.PropTypes</code> React v15.5\u2019ten bu yana farkl\u0131 bir pakete ta\u015f\u0131nd\u0131. L\u00fctfen bunun yerine <a class=\"external-link\" href=\"https://www.npmjs.com/package/prop-types\"><code class=\"language-javascript\">prop-types</code> k\u00fct\u00fcphanesini kullan\u0131n</a>.</p>\n<p>D\u00f6n\u00fc\u015ft\u00fcrme i\u015flemini otomatikle\u015ftirmek i\u00e7in <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/04/07/react-v15.5.0.html#migrating-from-reactproptypes\">bir codemod script</a>\u2018i sunuyoruz.</p>\n</div>\n<p>Uygulaman\u0131z b\u00fcy\u00fcd\u00fck\u00e7e, tip kontrol\u00fc ile bir\u00e7ok hata yakalayabilirsiniz. Baz\u0131 uygulamalarda, t\u00fcm uygulaman\u0131z \u00fczerinde tip kontrol\u00fc yapmak i\u00e7in <a class=\"external-link\" href=\"https://flow.org/\">Flow</a> veya <a class=\"external-link\" href=\"https://www.typescriptlang.org/\">TypeScript</a> gibi JavaScript uzant\u0131lar\u0131n\u0131 kullanabilirsiniz. Ama bunlar\u0131 kullanmasan\u0131z bile, React baz\u0131 yerle\u015fik tip kontrol\u00fc yeteneklerine sahiptir. Bir bile\u015fenin prop\u2019lar\u0131 \u00fczerinde tip kontrol\u00fc yapmak i\u00e7in, \u00f6zel <code class=\"language-javascript\">propTypes</code> niteli\u011fini atayabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nGreeting<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu \u00f6rnekte, bir s\u0131n\u0131f bile\u015feni kullan\u0131yoruz, ancak ayn\u0131 i\u015flevsellik fonksiyon bile\u015fenlerine, veya <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a> veya <a href=\"/react/react-api#reactforwardref\"><code class=\"language-javascript\">React.forwardRef</code></a> taraf\u0131ndan olu\u015fturulan bile\u015fenlere de uygulanabilir.</p>\n<p><code class=\"language-javascript\">PropTypes</code> al\u0131nan verilerin ge\u00e7erli oldu\u011fundan emin olmak i\u00e7in kullan\u0131labilecek bir dizi do\u011frulay\u0131c\u0131 verir. Bu \u00f6rnekte, <code class=\"language-javascript\">PropTypes.string</code>\u2018i kullan\u0131yoruz. Bir prop i\u00e7in ge\u00e7ersiz bir de\u011fer sa\u011fland\u0131\u011f\u0131nda, JavaScript konsolunda bir uyar\u0131 g\u00f6sterilecektir. Performans nedeniyle, <code class=\"language-javascript\">propTypes</code> sadece geli\u015ftirme modunda kontrol edilir.</p>\n<h3 id=\"proptypes\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#proptypes\"></a>PropTypes </h3>\n<p>\u0130\u015fte sa\u011flanan \u00e7e\u015fitli do\u011frulay\u0131c\u0131lar\u0131 g\u00f6steren bir \u00f6rnek:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Bir prop'un belirli bir JS t\u00fcr\u00fc oldu\u011funu belirtebilirsiniz.</span>\n  <span class=\"token comment\">// Varsay\u0131lan olarak, bunlar\u0131n hepsi iste\u011fe ba\u011fl\u0131d\u0131r.</span>\n  <span class=\"token literal-property property\">optionalArray</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalBool</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalFunc</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalNumber</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalObject</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalString</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">optionalSymbol</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>symbol<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Render edilebilecek her \u015fey: say\u0131lar, dizeler, elemanlar veya bir dizi</span>\n  <span class=\"token comment\">// (veya fragment) bu t\u00fcrleri i\u00e7eren.</span>\n  <span class=\"token literal-property property\">optionalNode</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// React eleman\u0131.</span>\n  <span class=\"token literal-property property\">optionalElement</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">// Bir React Eleman Tipi (\u00d6rnek: MyComponent).</span>\n  <span class=\"token literal-property property\">optionalElementType</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>elementType<span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">// Bir prop'un s\u0131n\u0131f nesnesi oldu\u011funu da belirtebilirsiniz.</span>\n  <span class=\"token comment\">// Bu JS'in instanceof operat\u00f6r\u00fcn\u00fc kullan\u0131r.</span>\n  <span class=\"token literal-property property\">optionalMessage</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Bir prop'un enum olarak de\u011ferlendirilerek</span>\n  <span class=\"token comment\">// belirli de\u011ferlerle s\u0131n\u0131rl\u0131 olmas\u0131n\u0131 sa\u011flayabilirsiniz.</span>\n  <span class=\"token literal-property property\">optionalEnum</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Haberler'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Foto\u011fraflar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Bir\u00e7ok t\u00fcrden birinin olabilece\u011fi bir nesne</span>\n  <span class=\"token literal-property property\">optionalUnion</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOfType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n    PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">instanceOf</span><span class=\"token punctuation\">(</span>Message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Belirli bir t\u00fcrde bir dizi</span>\n  <span class=\"token literal-property property\">optionalArrayOf</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Belirli bir t\u00fcrde \u00f6zellik de\u011ferlerine sahip bir nesne</span>\n  <span class=\"token literal-property property\">optionalObjectOf</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">objectOf</span><span class=\"token punctuation\">(</span>PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Belirli bir \u015fekildeki nesne</span>\n  <span class=\"token literal-property property\">optionalObjectWithShape</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">shape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// An object with warnings on extra properties</span>\n  <span class=\"token literal-property property\">optionalObjectWithStrictShape</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">exact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>   \n\n  <span class=\"token comment\">// Prop'un sa\u011flanmad\u0131\u011f\u0131 durumlarda bir uyar\u0131n\u0131n g\u00f6sterildi\u011finden emin olmak i\u00e7in,</span>\n  <span class=\"token comment\">// yukar\u0131dakilerden herhangi birini `isRequired` ile zincirleyebilirsiniz.</span>\n  <span class=\"token literal-property property\">requiredFunc</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Herhangi bir gerekli (required) veri t\u00fcr\u00fcn\u00fcn de\u011feri</span>\n  <span class=\"token literal-property property\">requiredAny</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// \u00d6zel bir do\u011frulay\u0131c\u0131 da belirtebilirsiniz.</span>\n  <span class=\"token comment\">// Do\u011frulama ba\u015far\u0131s\u0131z olursa bir Error nesnesi d\u00f6nd\u00fcrmelidir.</span>\n  <span class=\"token comment\">// `console.warn` veya `throw` kullanmay\u0131n, \u00e7\u00fcnk\u00fc bu `oneOfType` i\u00e7inde \u00e7al\u0131\u015fmayacakt\u0131r.</span>\n  <span class=\"token function-variable function\">customProp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">matchme</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Ayr\u0131ca `arrayOf` ve `objectOf`'lara \u00f6zel bir do\u011frulay\u0131c\u0131 da belirtebilirsiniz.</span>\n  <span class=\"token comment\">// Do\u011frulama ba\u015far\u0131s\u0131z olursa bir Error nesnesi d\u00f6nd\u00fcrmelidir.</span>\n  <span class=\"token comment\">// Do\u011frulay\u0131c\u0131, dizideki veya nesnedeki her anahtar i\u00e7in \u00e7a\u011fr\u0131lacakt\u0131r.</span>\n  <span class=\"token comment\">// Do\u011frulay\u0131c\u0131n\u0131n ilk iki arg\u00fcman\u0131 dizi veya nesnenin kendisi</span>\n  <span class=\"token comment\">// ve ge\u00e7erli \u00f6\u011fenin anahtar\u0131d\u0131r.</span>\n  <span class=\"token literal-property property\">customArrayProp</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propValue<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> propFullName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">matchme</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>propValue<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Invalid prop `'</span> <span class=\"token operator\">+</span> propFullName <span class=\"token operator\">+</span> <span class=\"token string\">'` supplied to'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' `'</span> <span class=\"token operator\">+</span> componentName <span class=\"token operator\">+</span> <span class=\"token string\">'`. Validation failed.'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"requiring-single-child\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#requiring-single-child\"></a>Tek Alt Eleman Gerektirmek </h3>\n<p><code class=\"language-javascript\">PropTypes.element</code> ile, yaln\u0131zca tek bir eleman\u0131n bir bile\u015fene alt eleman olarak ge\u00e7ece\u011fini belirtebilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Bu kesinlikle tek bir eleman olmal\u0131; aksi takdirde uyar\u0131 verecektir.</span>\n    <span class=\"token keyword\">const</span> children <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nMyComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"default-prop-values\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#default-prop-values\"></a>Varsay\u0131lan Prop De\u011ferleri </h3>\n<p>\u00d6zel <code class=\"language-javascript\">defaultProps</code> niteli\u011fine atama yaparak, <code class=\"language-javascript\">prop</code>\u2018lar\u0131n\u0131z i\u00e7in varsay\u0131lan de\u011ferleri tan\u0131mlayabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Prop'lar i\u00e7in varsay\u0131lan de\u011ferleri belirtir:</span>\nGreeting<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Stranger'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// \"Hello, Stranger\" yaz\u0131s\u0131n\u0131 render eder:</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ES2022 ile birlikte, <code class=\"language-javascript\">defaultProps</code>\u2018u bir React bile\u015fen s\u0131n\u0131f\u0131nda statik \u00f6zellik olarak da tan\u0131mlayabilirsiniz. Daha fazla bilgi i\u00e7in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields#public_static_fields\">class public static fields</a> sayfas\u0131na g\u00f6z at\u0131n. Bu modern s\u00f6zdiziminin eski taray\u0131c\u0131larda \u00e7al\u0131\u015fmas\u0131 i\u00e7in fazladan bir derleme ad\u0131m\u0131 gerekmektedir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'stranger'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">this.props.name</code>\u2018in \u00fcst bile\u015fen taraf\u0131ndan belirtilen bir de\u011ferinin olmad\u0131\u011f\u0131 durumlarda, varsay\u0131lan bir de\u011fere sahip olmas\u0131n\u0131 sa\u011flamak i\u00e7in <code class=\"language-javascript\">defaultProps</code> kullan\u0131l\u0131r. <code class=\"language-javascript\">propTypes</code> tip kontrol\u00fc <code class=\"language-javascript\">defaultProps</code> \u00e7\u00f6z\u00fcmlendikten sonra ger\u00e7ekle\u015fir, bu nedenle tip kontrol\u00fc <code class=\"language-javascript\">defaultProps</code> i\u00e7in de ge\u00e7erli olacakt\u0131r.</p>\n<h3 id=\"function-components\"><a class=\"anchor\" href=\"/react/typechecking-with-proptypes#function-components\"></a>Fonksiyon Bile\u015fenleri </h3>\n<p>Geli\u015ftirme s\u0131ras\u0131nda d\u00fczenli olarak fonksiyon bile\u015fenlerini kullan\u0131yorsan\u0131z, PropTypes \u0131n d\u00fczg\u00fcn bir \u015fekilde uygulanmas\u0131 i\u00e7in baz\u0131 k\u00fc\u00e7\u00fck de\u011fi\u015fiklikler yapmak isteyebilirsiniz.</p>\n<p>Diyelim ki b\u00f6yle bir bile\u015feniniz var:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorldComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>PropTypes lar\u0131 eklemek i\u00e7in, bile\u015feninizi d\u0131\u015far\u0131 \u00e7\u0131karmadan \u00f6nce (export\u0131ng) ayr\u0131 bir fonksiyon i\u00e7inde tan\u0131mlamak isteyebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorldComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HelloWorldComponent</code></pre></div>\n<p>Art\u0131k PropTypes\u2019lar\u0131 direkt olarak <code class=\"language-javascript\">HelloWorldComponent</code> bile\u015fenine ekleyebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorldComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nHelloWorldComponent<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HelloWorldComponent</code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/typechecking-with-proptypes.md\">Edit this page</a></p></div></article>", "path": "/react/typechecking-with-proptypes", "nav": ["/react/strict-mode", "/react/uncontrolled-components"]}, {"key": "Kontrols\u00fcz Bile\u015fenler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>\u00c7o\u011fu durumda, formlar\u0131 uygulamak i\u00e7in <a href=\"/react/forms#controlled-components\">kontroll\u00fc bile\u015fenler</a> kullanman\u0131z\u0131 \u00f6neririz. Kontroll\u00fc bir bile\u015fende, form verileri bir React bile\u015feni taraf\u0131ndan ele al\u0131n\u0131r. Alternatifi ise, form verilerinin DOM\u2019\u0131n kendisi taraf\u0131ndan i\u015flendi\u011fi kontrols\u00fcz bile\u015fenlerdir.</p>\n<p>Bir kontrols\u00fcz bile\u015fen yazmak i\u00e7in, her state g\u00fcncellemesine bir olay y\u00f6neticisi yazmak yerine, form verilerini DOM \u00fczerinden getirmek i\u00e7in <a href=\"/react/refs-and-the-dom\">ref kullanabilirsiniz</a>.</p>\n<p>\u00d6rne\u011fin, bu kod kontrols\u00fcz bir bile\u015fende tek bir isim kabul eder:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A name was submitted: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Name:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://codepen.io/gaearon/pen/WooRWa?editors=0010\"><strong>CodePen\u2019de Deneyin</strong></a></p>\n<p>Kontrols\u00fcz bir bile\u015fen DOM \u00fczerinde ger\u00e7e\u011fin kayna\u011f\u0131n\u0131 korudu\u011fundan, kontrols\u00fcz bile\u015fenleri kullan\u0131rken React ve React olmayan kodu entegre etmek bazen daha kolayd\u0131r. Ayr\u0131ca h\u0131zl\u0131 ve \u00f6zensiz olmak istiyorsan\u0131z bu biraz daha az kod olabilir. Aksi takdirde, genellikle kontroll\u00fc bile\u015fenler kullanmal\u0131s\u0131n\u0131z.</p>\n<p>E\u011fer hen\u00fcz belirli bir durum i\u00e7in hangi bile\u015fen tipini kullanman\u0131z gerekti\u011fini bilmiyorsan\u0131z, <a class=\"external-link\" href=\"https://goshakkk.name/controlled-vs-uncontrolled-inputs-react/\">kontroll\u00fc ve kontrols\u00fcz input\u2019lara ili\u015fkin bu makaleyi</a> faydal\u0131 bulabilirsiniz.</p>\n<h3 id=\"default-values\"><a class=\"anchor\" href=\"/react/uncontrolled-components#default-values\"></a>Varsay\u0131lan De\u011ferler </h3>\n<p>React render etme ya\u015fam d\u00f6ng\u00fcs\u00fcnde, form elemanlar\u0131nda bulunan <code class=\"language-javascript\">value</code> niteli\u011fi, DOM i\u00e7indeki de\u011feri ge\u00e7ersiz k\u0131lar. Kontrols\u00fcz bir bile\u015fen ile, React\u2019in ba\u015flang\u0131\u00e7 \u200b\u200bde\u011ferini belirlemesini isteyebilir, ancak sonraki g\u00fcncellemeleri kontrols\u00fcz b\u0131rakmak isteyebilirsiniz. Bu durumda, <code class=\"language-javascript\">value</code> yerine <code class=\"language-javascript\">defaultValue</code> niteli\u011fini belirtebilirsiniz. <code class=\"language-javascript\">defaultValue</code> de\u011ferini bile\u015fen y\u00fcklendikten sonra de\u011fi\u015ftirmek, DOM i\u00e7inde herhangi bir de\u011fer de\u011fi\u015fikli\u011fine sebep olmayacakt\u0131r.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Name:</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token attr-name\">defaultValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Bob<span class=\"token punctuation\">\"</span></span></span>          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ayn\u0131 \u015fekilde, <code class=\"language-javascript\">&lt;input type=\"checkbox\"&gt;</code> ve <code class=\"language-javascript\">&lt;input type=\"radio\"&gt;</code> <code class=\"language-javascript\">defaultChecked</code> niteli\u011fini destekler, <code class=\"language-javascript\">&lt;select&gt;</code> ve <code class=\"language-javascript\">&lt;textarea&gt;</code> ise <code class=\"language-javascript\">defaultValue</code> niteli\u011fini destekler.</p>\n<h2 id=\"the-file-input-tag\"><a class=\"anchor\" href=\"/react/uncontrolled-components#the-file-input-tag\"></a>Dosya Girdisi Etiketi </h2>\n<p>HTML\u2019de, <code class=\"language-javascript\">&lt;input type=\"file\"&gt;</code> kullan\u0131c\u0131n\u0131n cihaz belle\u011fi \u00fczerinden bir sunucuya y\u00fcklenece\u011fi veya JavaScript taraf\u0131ndan <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications\">File API</a> ile de\u011fi\u015ftirebilece\u011fi bir veya daha fazla dosya se\u00e7mesini sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-html\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>React\u2019te, <code class=\"language-javascript\">&lt;input type=\"file\" /&gt;</code> her zaman kontrols\u00fcz bir bile\u015fendir, \u00e7\u00fcnk\u00fc de\u011feri yaln\u0131zca bir kullan\u0131c\u0131 taraf\u0131ndan ayarlanabilir, programlanabilir bir bi\u00e7imde olamaz.</p>\n<p>Dosyalarla etkile\u015fimde bulunmak i\u00e7in File API\u2019\u0131n\u0131 kullanmal\u0131s\u0131n\u0131z. A\u015fa\u011f\u0131daki \u00f6rnek, bir g\u00f6nderme y\u00f6neticisi \u00fczerinde bulunan dosyalara eri\u015fmek i\u00e7in <a href=\"/react/refs-and-the-dom\">DOM node\u2019una bir ref\u2019in nas\u0131l olu\u015fturulaca\u011f\u0131</a>n\u0131 g\u00f6sterir:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Selected file - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Upload file:</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Submit</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FileInput</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p><strong><a class=\"external-link\" href=\"https://tr.reactjs.org//redirect-to-codepen/uncontrolled-components/input-type-file\">CodePen'de Deneyin</a></strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/uncontrolled-components.md\">Edit this page</a></p></div></article>", "path": "/react/uncontrolled-components", "nav": ["/react/typechecking-with-proptypes", "/react/web-components"]}, {"key": "Web Bile\u015fenleri", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React ve <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">Web Bile\u015fenleri</a> farkl\u0131 sorunlar\u0131 \u00e7\u00f6zmek i\u00e7in olu\u015fturulmu\u015ftur. React, DOM ile verilerinizi senkronize eden bir bildirimsel kitapl\u0131k sunarken, Web Bile\u015fenleri yeniden kullan\u0131labilir bile\u015fenler i\u00e7in g\u00fc\u00e7l\u00fc bir kaps\u00fclleme sa\u011flar. \u0130kisinin de ama\u00e7lar\u0131 birbirini tamamlar. Bir geli\u015ftirici olarak, Web Bile\u015fenleri\u2019nde React\u2019i, React\u2019te Web Bile\u015fenleri\u2019ni veya her ikisini de kullanmakta serbestsiniz.</p>\n<p>React kullanan \u00e7o\u011fu ki\u015fi Web Bile\u015fenleri\u2019ni kullanmaz, ancak \u00f6zellikle Web Bile\u015fenleri kullan\u0131larak yaz\u0131lm\u0131\u015f \u00fc\u00e7\u00fcnc\u00fc-taraf UI bile\u015fenleri kullan\u0131yorsan\u0131z kullanmak isteyebilirsiniz.</p>\n<h2 id=\"using-web-components-in-react\"><a class=\"anchor\" href=\"/react/web-components#using-web-components-in-react\"></a>Web Bile\u015fenleri\u2019ni React\u2019te Kullanmak </h2>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloMessage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x-search</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x-search</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Web Bile\u015fenleri \u00e7o\u011fu zaman zorunlu bir API ortaya \u00e7\u0131kar\u0131r. \u00d6rne\u011fin, bir <code class=\"language-javascript\">video</code> Web Bile\u015feni <code class=\"language-javascript\">play()</code> ve <code class=\"language-javascript\">pause()</code> fonksiyonlar\u0131n\u0131 ortaya \u00e7\u0131karabilir. Bir Web Bile\u015feni\u2019nin zorunlu API\u2019lerine eri\u015fmek i\u00e7in DOM d\u00fc\u011f\u00fcm\u00fcyle do\u011frudan etkile\u015fimde bulunmak i\u00e7in bir ref kullanman\u0131z gerekir. \u00dc\u00e7\u00fcnc\u00fc-taraf Web Bile\u015fenleri kullan\u0131yorsan\u0131z, en iyi \u00e7\u00f6z\u00fcm Web Bile\u015feni\u2019niz i\u00e7in sar\u0131c\u0131 olarak \u00e7al\u0131\u015facak bir React bile\u015feni yazmakt\u0131r.</p>\n<p>Bir Web Bile\u015feni taraf\u0131ndan yay\u0131nlanan olaylar, React render a\u011fac\u0131 boyunca uygun bir \u015fekilde yay\u0131lmayabilir.\nBu olaylar\u0131 React bile\u015fenleriniz i\u00e7erisinde y\u00f6netmek i\u00e7in olay y\u00f6neticilerini el ile eklemeniz gerekir.</p>\n</div>\n<p>Yayg\u0131n kar\u0131\u015f\u0131kl\u0131klardan biri, Web Bile\u015fenleri\u2019nin \u201cclassName\u201d yerine \u201cclass\u201d kullanmas\u0131d\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">BrickFlipbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>brick-flipbox</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">front</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">back</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>brick-flipbox</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"using-react-in-your-web-components\"><a class=\"anchor\" href=\"/react/web-components#using-react-in-your-web-components\"></a>React\u2019i Web Bile\u015fenleri\u2019nizde Kullanmak </h2>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">XSearch</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">connectedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mountPoint <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>mountPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.google.com/search?q='</span> <span class=\"token operator\">+</span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>mountPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x-search'</span><span class=\"token punctuation\">,</span> XSearch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>S\u0131n\u0131flar\u0131 Babel ile d\u00f6n\u00fc\u015ft\u00fcr\u00fcrseniz, bu kod <strong>\u00e7al\u0131\u015fmayacakt\u0131r</strong>. Sorun i\u00e7in <a class=\"external-link\" href=\"https://github.com/w3c/webcomponents/issues/587\">bu konuya</a> bak\u0131n\u0131z.\nBu sorunu d\u00fczeltmek i\u00e7in web bile\u015fenlerinizi y\u00fcklemeden \u00f6nce <a class=\"external-link\" href=\"https://github.com/webcomponents/polyfills/tree/master/packages/webcomponentsjs#custom-elements-es5-adapterjs\">custom-elements-es5-adapter</a> ekleyin.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/web-components.md\">Edit this page</a></p></div></article>", "path": "/react/web-components", "nav": ["/react/uncontrolled-components", "/react/react-api"]}]}, {"key": "API Kayna\u011f\u0131", "values": [{"key": "React", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><code class=\"language-javascript\">React</code>, React k\u00fct\u00fcphanesine giri\u015f noktas\u0131d\u0131r. React\u2019i bir <code class=\"language-javascript\">&lt;script&gt;</code> etiketinden y\u00fcklerseniz, bu \u00fcst d\u00fczey API\u2019ler <code class=\"language-javascript\">React</code> globali \u00fczerinde mevcut olacakt\u0131r. ES6\u2019y\u0131 npm ile kullan\u0131yorsan\u0131z, <code class=\"language-javascript\">import React from 'react'</code> yazabilirsiniz. ES5\u2019i npm ile kullan\u0131yorsan\u0131z, <code class=\"language-javascript\">var React = require('react')</code> yazabilirsiniz.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-api#overview\"></a>Genel Bak\u0131\u015f </h2>\n<h3 id=\"components\"><a class=\"anchor\" href=\"/react/react-api#components\"></a>Bile\u015fenler </h3>\n<p>React bile\u015fenleri, kullan\u0131c\u0131 arabirimini ba\u011f\u0131ms\u0131z, yeniden kullan\u0131labilir par\u00e7alara ay\u0131rman\u0131za ve ayr\u0131lm\u0131\u015f her bir par\u00e7a hakk\u0131nda d\u00fc\u015f\u00fcnmenize olanak sa\u011flar. React bile\u015fenleri, <code class=\"language-javascript\">React.Component</code> ya da <code class=\"language-javascript\">React.PureComponent</code> \u00fczerinden alt s\u0131n\u0131fland\u0131rma yoluyla tan\u0131mlanabilir.</p>\n<ul>\n<li><a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a></li>\n<li><a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">React.PureComponent</code></a></li>\n</ul>\n<p>ES6 s\u0131n\u0131flar\u0131n\u0131 kullanm\u0131yorsan\u0131z, bunun yerine <code class=\"language-javascript\">create-react-class</code> mod\u00fcl\u00fcn\u00fc kullanabilirsiniz. Daha fazla bilgi i\u00e7in <a href=\"/react/react-without-es6\">ES6 olmadan React kullanma</a> b\u00f6l\u00fcm\u00fcne bak\u0131n\u0131z.</p>\n<p>React bile\u015fenleri ayr\u0131ca sar\u0131labilecek fonksiyonlar olarak tan\u0131mlanabilir:</p>\n<ul>\n<li><a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a></li>\n</ul>\n<h3 id=\"creating-react-elements\"><a class=\"anchor\" href=\"/react/react-api#creating-react-elements\"></a>React \u00d6\u011feleri Olu\u015fturma </h3>\n<p>Kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fcz\u00fcn nas\u0131l g\u00f6r\u00fcnmesi gerekti\u011fini tan\u0131mlamak i\u00e7in <a href=\"/react/introducing-jsx\">JSX kullanman\u0131z\u0131</a> \u00f6neririz. Her JSX elementi sadece <a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">React.createElement()</code></a> metodunu \u00e7a\u011f\u0131rmak i\u00e7in s\u00f6zdizimsel \u015fekerdir. JSX kullan\u0131yorsan\u0131z, genellikle a\u015fa\u011f\u0131daki metodlar\u0131 do\u011frudan \u00e7a\u011f\u0131rmazs\u0131n\u0131z.</p>\n<ul>\n<li><a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">createElement()</code></a></li>\n<li><a href=\"/react/react-api#createfactory\"><code class=\"language-javascript\">createFactory()</code></a></li>\n</ul>\n<p>Daha fazla bilgi i\u00e7in <a href=\"/react/react-without-jsx\">JSX olmadan React kullanma</a> b\u00f6l\u00fcm\u00fcne bak\u0131n\u0131z.</p>\n<h3 id=\"transforming-elements\"><a class=\"anchor\" href=\"/react/react-api#transforming-elements\"></a>\u00d6\u011feleri D\u00f6n\u00fc\u015ft\u00fcrme </h3>\n<p><code class=\"language-javascript\">React</code> \u00f6\u011feleri i\u015flemek i\u00e7in birka\u00e7 API sa\u011flar:</p>\n<ul>\n<li><a href=\"/react/react-api#cloneelement\"><code class=\"language-javascript\">cloneElement()</code></a></li>\n<li><a href=\"/react/react-api#isvalidelement\"><code class=\"language-javascript\">isValidElement()</code></a></li>\n<li><a href=\"/react/react-api#reactchildren\"><code class=\"language-javascript\">React.Children</code></a></li>\n</ul>\n<h3 id=\"fragments\"><a class=\"anchor\" href=\"/react/react-api#fragments\"></a>Fragment\u2019ler </h3>\n<p><code class=\"language-javascript\">React</code> ayr\u0131ca sar\u0131c\u0131 olmadan birden fazla eleman render etmek i\u00e7in bir bile\u015fen sa\u011flar.</p>\n<ul>\n<li><a href=\"/react/react-api#reactfragment\"><code class=\"language-javascript\">React.Fragment</code></a></li>\n</ul>\n<h3 id=\"refs\"><a class=\"anchor\" href=\"/react/react-api#refs\"></a>Ref\u2019ler </h3>\n<ul>\n<li><a href=\"/react/react-api#reactcreateref\"><code class=\"language-javascript\">React.createRef</code></a></li>\n<li><a href=\"/react/react-api#reactforwardref\"><code class=\"language-javascript\">React.forwardRef</code></a></li>\n</ul>\n<h3 id=\"suspense\"><a class=\"anchor\" href=\"/react/react-api#suspense\"></a>Suspense </h3>\n<p>Suspense, bile\u015fenlerin render edilmeden \u00f6nce bir \u015fey i\u00e7in \u201cbeklemesini\u201d sa\u011flar. \u015eu an i\u00e7in, Suspense yaln\u0131zca bir kullan\u0131m durumunu destekler: <a href=\"/react/code-splitting#reactlazy\">bile\u015fenleri <code class=\"language-javascript\">React.lazy</code> ile dinamik olarak y\u00fckleme</a>. Gelecekte, veri getirme gibi di\u011fer kullan\u0131m durumlar\u0131n\u0131 destekleyecektir.</p>\n<ul>\n<li><a href=\"/react/react-api#reactlazy\"><code class=\"language-javascript\">React.lazy</code></a></li>\n<li><a href=\"/react/react-api#reactsuspense\"><code class=\"language-javascript\">React.Suspense</code></a></li>\n</ul>\n<h3 id=\"transitions\"><a class=\"anchor\" href=\"/react/react-api#transitions\"></a>Transitions </h3>\n<p><em>Transitions</em> are a new concurrent feature introduced in React 18. They allow you to mark updates as transitions, which tells React that they can be interrupted and avoid going back to Suspense fallbacks for already visible content.</p>\n<ul>\n<li><a href=\"/react/react-api#starttransition\"><code class=\"language-javascript\">React.startTransition</code></a></li>\n<li><a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">React.useTransition</code></a></li>\n</ul>\n<h3 id=\"hooks\"><a class=\"anchor\" href=\"/react/react-api#hooks\"></a>Hook\u2019lar </h3>\n<p><em>Hook\u2019lar</em>, React 16.8 ile gelen yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flarlar. Hook\u2019lar <a href=\"/react/hooks-intro\">\u00f6zel bir d\u00f6k\u00fcman b\u00f6l\u00fcm\u00fcne</a> ve ayr\u0131 bir API referans\u0131na sahiptir:</p>\n<ul>\n<li>\n<p><a href=\"/react/hooks-reference#basic-hooks\">Temel Hook\u2019lar</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a></li>\n<li><a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#additional-hooks\">\u0130lave Hook\u2019lar</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a></li>\n<li><a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a></li>\n<li><a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a></li>\n<li><a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef</code></a></li>\n<li><a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a></li>\n<li><a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usedebugvalue\"><code class=\"language-javascript\">useDebugValue</code></a></li>\n<li><a href=\"/react/hooks-reference#usedeferredvalue\"><code class=\"language-javascript\">useDeferredValue</code></a></li>\n<li><a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">useTransition</code></a></li>\n<li><a href=\"/react/hooks-reference#useid\"><code class=\"language-javascript\">useId</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#library-hooks\">Library Hooks</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usesyncexternalstore\"><code class=\"language-javascript\">useSyncExternalStore</code></a></li>\n<li><a href=\"/react/hooks-reference#useinsertioneffect\"><code class=\"language-javascript\">useInsertionEffect</code></a></li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-api#reference\"></a>Referans </h2>\n<h3 id=\"reactcomponent\"><a class=\"anchor\" href=\"/react/react-api#reactcomponent\"></a><code class=\"language-javascript\">React.Component</code> </h3>\n<p><code class=\"language-javascript\">React.Component</code>, <a class=\"external-link\" href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes\">ES6 s\u0131n\u0131flar\u0131</a> kullan\u0131larak tan\u0131mland\u0131klar\u0131nda React bile\u015fenleri i\u00e7in temel s\u0131n\u0131ft\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Temel <code class=\"language-javascript\">React.Component</code> s\u0131n\u0131f\u0131na ili\u015fkin metod ve \u00f6zelliklerin listesi i\u00e7in <a href=\"/react/react-component\">React.Component API Referans\u0131na</a> bak\u0131n.</p>\n\n<h3 id=\"reactpurecomponent\"><a class=\"anchor\" href=\"/react/react-api#reactpurecomponent\"></a><code class=\"language-javascript\">React.PureComponent</code> </h3>\n<p><code class=\"language-javascript\">React.PureComponent</code> <a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a>\u2018e benzer. Aralar\u0131ndaki fark, <a href=\"/react/react-api#reactcomponent\"><code class=\"language-javascript\">React.Component</code></a>\u2018in <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> metodunu uygulamamas\u0131d\u0131r, ancak <code class=\"language-javascript\">React.PureComponent</code> bunu y\u00fczeysel bir prop ve state kar\u015f\u0131la\u015ft\u0131rmas\u0131 ile birlikte uygular.</p>\n<p>E\u011fer React bile\u015feninizin <code class=\"language-javascript\">render()</code> fonksiyonu ayn\u0131 prop\u2019lar ve state ile ayn\u0131 sonucu render ediyor ise, baz\u0131 durumlarda performans art\u0131\u015f\u0131 i\u00e7in <code class=\"language-javascript\">React.PureComponent</code> kullanabilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">React.PureComponent</code>\u2018in <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu nesneleri sadece y\u00fczeysel olarak kar\u015f\u0131la\u015ft\u0131r\u0131r. E\u011fer bunlar karma\u015f\u0131k veri yap\u0131lar\u0131 i\u00e7eriyorsa, daha derin farkl\u0131l\u0131klar i\u00e7in yanl\u0131\u015f sonu\u00e7lar \u00fcretebilir. <code class=\"language-javascript\">PureComponent</code>\u2018i yaln\u0131zca prop\u2019lar ve state\u2019in basit olmas\u0131n\u0131 bekledi\u011finiz durumlarda uzat\u0131n, veya derin veri yap\u0131lar\u0131n\u0131n de\u011fi\u015fti\u011fini biliyorsan\u0131z <a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">forceUpdate()</code></a> i\u015flevini kullan\u0131n. Ya da, i\u00e7 i\u00e7e ge\u00e7mi\u015f verilerin h\u0131zl\u0131 bir \u015fekilde kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131n\u0131 kolayla\u015ft\u0131rmak i\u00e7in <a class=\"external-link\" href=\"https://immutable-js.com/\">de\u011fi\u015fmez nesneler</a> kullanmay\u0131 d\u00fc\u015f\u00fcnebilirsiniz.</p>\n<p>Ayr\u0131ca, <code class=\"language-javascript\">React.PureComponent</code>\u2018in <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu t\u00fcm bile\u015fen alt a\u011fac\u0131 i\u00e7in prop g\u00fcncellemelerini atlar. T\u00fcm alt bile\u015fenlerinin de \u201cpure\u201d oldu\u011fundan emin olun.</p>\n</div>\n\n<h3 id=\"reactmemo\"><a class=\"anchor\" href=\"/react/react-api#reactmemo\"></a><code class=\"language-javascript\">React.memo</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* prop'lar\u0131 kullanarak render et */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">React.memo</code> bir <a href=\"/react/higher-order-components\">\u00fcst katman bile\u015fenidir</a>.</p>\n<p>E\u011fer fonksiyon bile\u015feniniz ayn\u0131 prop\u2019lar ile ayn\u0131 sonucu render ediyor ise, baz\u0131 durumlarda sonucu ezberleyerek performans art\u0131\u015f\u0131 sa\u011flamas\u0131 i\u00e7in onu bir <code class=\"language-javascript\">React.memo</code> \u00e7a\u011fr\u0131s\u0131na sarabilirsiniz. Bu, React\u2019in bile\u015feni render etmeyi atlayaca\u011f\u0131 ve son render edilen sonucu yeniden kullanaca\u011f\u0131 anlam\u0131na gelir.</p>\n<p><code class=\"language-javascript\">React.memo</code> sadece prop de\u011fi\u015fikliklerini kontrol eder. E\u011fer <code class=\"language-javascript\">React.memo</code> i\u00e7ine sarmalanm\u0131\u015f bile\u015feninizde <a href=\"/react/hooks-state\"><code class=\"language-javascript\">useState</code></a>, <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> ya da <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a> hooklar\u0131 varsa, state ya da context her de\u011fi\u015fti\u011finde bil\u015feniniz tekrar render edilecektir.</p>\n<p>Varsay\u0131lan olarak, <code class=\"language-javascript\">props</code> nesnesindeki karma\u015f\u0131k yap\u0131lar\u0131 sadece y\u00fczeysel bir \u015fekilde kar\u015f\u0131la\u015ft\u0131racakt\u0131r. Kar\u015f\u0131la\u015ft\u0131rma \u00fczerinde kontrol\u00fc ele almak istiyorsan\u0131z, ikinci arg\u00fcman olarak \u00f6zel bir kar\u015f\u0131la\u015ft\u0131rma fonksiyonu sa\u011flayabilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* prop'lar\u0131 kullanarak render et */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">areEqual</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/*\n  nextProps'u render'a iletmek,\n  prevProps'u render'a iletmek ile ayn\u0131 sonucu verirse true\n  aksi takdirde false d\u00f6nd\u00fcr\u00fcr\n  */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>MyComponent<span class=\"token punctuation\">,</span> areEqual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu metod yaln\u0131zca bir <strong><a href=\"/react/optimizing-performance\">performans optimizasyonu</a></strong> olarak vard\u0131r. Bir render i\u015flemini \u201c\u00f6nlemek\u201d i\u00e7in ona g\u00fcvenmeyin. Bu, hatalara neden olabilir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>S\u0131n\u0131f bile\u015fenlerinde bulunan <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> metodunun aksine, <code class=\"language-javascript\">areEqual</code> fonksiyonu prop\u2019lar birbirine e\u015fitse <code class=\"language-javascript\">true</code>, prop\u2019lar birbirine e\u015fit de\u011filse <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcr\u00fcr. Bu <code class=\"language-javascript\">shouldComponentUpdate</code> i\u015flevinin tersidir.</p>\n</div>\n\n<h3 id=\"createelement\"><a class=\"anchor\" href=\"/react/react-api#createelement\"></a><code class=\"language-javascript\">createElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  type<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>children<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verilen tipte yeni bir <a href=\"/react/rendering-elements\">React eleman\u0131</a> olu\u015fturun ve d\u00f6nd\u00fcr\u00fcn. Type arg\u00fcman\u0131 bir etiket ismi string\u2019i (<code class=\"language-javascript\">'div'</code> veya <code class=\"language-javascript\">'span'</code> gibi), bir <a href=\"/react/components-and-props\">React bile\u015fen</a> tipi (bir s\u0131n\u0131f ya da fonksiyon), veya bir <a href=\"/react/react-api#reactfragment\">React fragment</a> tipi olabilir.</p>\n<p><a href=\"/react/introducing-jsx\">JSX</a> ile yaz\u0131lm\u0131\u015f kod <code class=\"language-javascript\">React.createElement()</code> i\u015flevini kullanmak \u00fczere d\u00f6n\u00fc\u015ft\u00fcr\u00fclecektir. JSX kullan\u0131yorsan\u0131z genellikle <code class=\"language-javascript\">React.createElement()</code> i\u015flevini do\u011frudan \u00e7a\u011f\u0131rmazs\u0131n\u0131z. Daha fazla bilgi i\u00e7in bkz. <a href=\"/react/react-without-jsx\">JSX Olmadan React</a>.</p>\n\n<h3 id=\"cloneelement\"><a class=\"anchor\" href=\"/react/react-api#cloneelement\"></a><code class=\"language-javascript\">cloneElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">React.cloneElement(\n  element,\n  [config],\n  [...children]\n)</code></pre></div>\n<p>Bir <code class=\"language-javascript\">element</code>\u2018i kullanarak yeni bir React eleman\u0131 klonlay\u0131n ve d\u00f6nd\u00fcr\u00fcn. <code class=\"language-javascript\">config</code> t\u00fcm yeni \u00f6zellikleri, <code class=\"language-javascript\">key</code> \u2018i veya <code class=\"language-javascript\">ref</code> \u2018i i\u00e7ermelidir. Elde edilen eleman, orjinal eleman\u0131n prop\u2019lar\u0131na yeni prop\u2019lar\u0131 ile y\u00fczeysel olarak birle\u015ftirilmi\u015f bir bi\u00e7imde sahip olacakt\u0131r. Yeni alt eleman varolan alt eleman\u0131n yerine ge\u00e7ecektir. E\u011fer <code class=\"language-javascript\">config</code> i\u00e7inde <code class=\"language-javascript\">key</code> ve <code class=\"language-javascript\">ref</code> yoksa, orjinal elemandan gelen <code class=\"language-javascript\">key</code> ve <code class=\"language-javascript\">ref</code> korunacakt\u0131r.</p>\n<p><code class=\"language-javascript\">React.cloneElement()</code> neredeyse \u015funa e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element.type</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>element.type</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Ancak, ayn\u0131 zamanda <code class=\"language-javascript\">ref</code>\u2018leri de korur. Bu, \u00fczerinde <code class=\"language-javascript\">ref</code> bulunan bir alt eleman al\u0131rsan\u0131z, ona \u00fcst eleman \u00fczerinden ula\u015famayaca\u011f\u0131n\u0131z anlam\u0131na gelir. Yeni eleman\u0131n\u0131z \u00fczerinde ayn\u0131 <code class=\"language-javascript\">ref</code> ba\u011fl\u0131 olarak gelecektir. Yeni <code class=\"language-javascript\">ref</code> veya <code class=\"language-javascript\">key</code>, e\u011fer varsa eskilerin yerini alacakt\u0131r.</p>\n<p>Bu API, kullan\u0131mdan kald\u0131r\u0131lan <code class=\"language-javascript\">React.addons.cloneWithProps()</code> i\u015flevinin yerine ge\u00e7mi\u015ftir.</p>\n\n<h3 id=\"createfactory\"><a class=\"anchor\" href=\"/react/react-api#createfactory\"></a><code class=\"language-javascript\">createFactory()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">createFactory</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Belirli bir t\u00fcrden React elemanlar\u0131n\u0131 \u00fcreten bir fonksiyon d\u00f6nd\u00fcr\u00fcr. <a href=\"/react/react-api#createelement\"><code class=\"language-javascript\">React.createElement()</code></a> gibi, type arg\u00fcman\u0131 bir etiket ismi string\u2019i (<code class=\"language-javascript\">'div'</code> veya <code class=\"language-javascript\">'span'</code> gibi), bir <a href=\"/react/components-and-props\">React bile\u015fen</a> tipi (bir s\u0131n\u0131f yada fonksiyon), veya bir <a href=\"/react/react-api#reactfragment\">React fragment</a> tipi olabilir.</p>\n<p>Bu yard\u0131mc\u0131 i\u015flev eski kabul edilir, ve bunun yerine ya do\u011frudan JSX kullanman\u0131z ya da <code class=\"language-javascript\">React.createElement()</code> kullanman\u0131z \u00f6nerilir.</p>\n<p>JSX kullan\u0131yorsan\u0131z genellikle <code class=\"language-javascript\">React.createFactory()</code> i\u015flevini do\u011frudan \u00e7a\u011f\u0131rmazs\u0131n\u0131z. Daha fazla bilgi i\u00e7in bkz. <a href=\"/react/react-without-jsx\">JSX Olmadan React</a>.</p>\n\n<h3 id=\"isvalidelement\"><a class=\"anchor\" href=\"/react/react-api#isvalidelement\"></a><code class=\"language-javascript\">isValidElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">isValidElement</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Nesnenin bir React \u00f6\u011fesi oldu\u011funu do\u011frular. <code class=\"language-javascript\">true</code> veya <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcr\u00fcr.</p>\n\n<h3 id=\"reactchildren\"><a class=\"anchor\" href=\"/react/react-api#reactchildren\"></a><code class=\"language-javascript\">React.Children</code> </h3>\n<p><code class=\"language-javascript\">React.Children</code> belirsiz veri yap\u0131s\u0131na sahip <code class=\"language-javascript\">this.props.children</code> ile ilgilenmek i\u00e7in yard\u0131mc\u0131 i\u015flevler sa\u011flar.</p>\n<h4 id=\"reactchildrenmap\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenmap\"></a><code class=\"language-javascript\">React.Children.map</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">children</code> i\u00e7inde yer alan her birincil alt eleman i\u00e7in bir fonksiyon \u00e7a\u011f\u0131r\u0131r, <code class=\"language-javascript\">this</code>\u2018i (kendisini) <code class=\"language-javascript\">thisArg</code> ile belirleyin. E\u011fer <code class=\"language-javascript\">children</code> bir dizi ise taranacak ve dizi i\u00e7indeki her alt eleman i\u00e7in fonksiyon \u00e7a\u011fr\u0131lacakt\u0131r. E\u011fer alt elemanlar <code class=\"language-javascript\">null</code> veya <code class=\"language-javascript\">undefined</code> ise, bu metod bir dizi yerine <code class=\"language-javascript\">null</code> veya <code class=\"language-javascript\">undefined</code> d\u00f6nd\u00fcr\u00fcr.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>E\u011fer <code class=\"language-javascript\">children</code> bir <code class=\"language-javascript\">Fragment</code> ise tek bir alt olarak kabul edilir ve tarama yap\u0131lmaz.</p>\n</div>\n<h4 id=\"reactchildrenforeach\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenforeach\"></a><code class=\"language-javascript\">React.Children.forEach</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/react-api#reactchildrenmap\"><code class=\"language-javascript\">React.Children.map()</code></a> gibidir ancak bir dizi d\u00f6nd\u00fcrmez.</p>\n<h4 id=\"reactchildrencount\"><a class=\"anchor\" href=\"/react/react-api#reactchildrencount\"></a><code class=\"language-javascript\">React.Children.count</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">children</code> i\u00e7inde bulunan toplam bile\u015fen say\u0131s\u0131n\u0131 d\u00f6nd\u00fcr\u00fcr, bir callback\u2019in <code class=\"language-javascript\">map</code> veya <code class=\"language-javascript\">forEach</code>\u2018e ge\u00e7ti\u011fi say\u0131ya e\u015fit olarak \u00e7a\u011fr\u0131l\u0131r.</p>\n<h4 id=\"reactchildrenonly\"><a class=\"anchor\" href=\"/react/react-api#reactchildrenonly\"></a><code class=\"language-javascript\">React.Children.only</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">children</code>\u2018\u0131n yaln\u0131zca bir alt eleman\u0131 (bir React eleman\u0131) oldu\u011funu do\u011frular ve d\u00f6nd\u00fcr\u00fcr. Aksi halde bu metod bir hata f\u0131rlat\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">React.Children.only()</code>, <a href=\"/react/react-api#reactchildrenmap\"><code class=\"language-javascript\">React.Children.map()</code></a> i\u015flevinin d\u00f6n\u00fc\u015f de\u011ferini kabul etmez, \u00e7\u00fcnk\u00fc bu bir React eleman\u0131ndan ziyade bir dizidir.</p>\n</div>\n<h4 id=\"reactchildrentoarray\"><a class=\"anchor\" href=\"/react/react-api#reactchildrentoarray\"></a><code class=\"language-javascript\">React.Children.toArray</code> </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">children</code>\u2018\u0131n belirsiz veri yap\u0131s\u0131n\u0131 her bir alt elemana atanm\u0131\u015f anahtarlar\u0131 olan d\u00fcz bir dizi olarak d\u00f6nd\u00fcr\u00fcr. Render metodlar\u0131n\u0131zda bulunan alt eleman koleksiyonlar\u0131n\u0131 i\u015flemek istiyorsan\u0131z, \u00f6zellikle de <code class=\"language-javascript\">this.props.children</code>\u2018\u0131 alta ge\u00e7meden \u00f6nce yeniden d\u00fczenlemek veya dilimlemek istiyorsan\u0131z kullan\u0131\u015fl\u0131d\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">React.Children.toArray()</code> alt eleman listelerini d\u00fczle\u015ftirirken i\u00e7 i\u00e7e dizilerin anlam\u0131n\u0131 korumak i\u00e7in anahtarlar\u0131 de\u011fi\u015ftirir. Yani, <code class=\"language-javascript\">toArray</code> d\u00f6nd\u00fcr\u00fclen dizideki her bir anahtar\u0131 \u00f6neklendirir, b\u00f6ylece her bir eleman\u0131n anahtar\u0131 onu i\u00e7eren veri dizisini kapsar.</p>\n</div>\n\n<h3 id=\"reactfragment\"><a class=\"anchor\" href=\"/react/react-api#reactfragment\"></a><code class=\"language-javascript\">React.Fragment</code> </h3>\n<p><code class=\"language-javascript\">React.Fragment</code> bile\u015feni, ek bir DOM \u00f6\u011fesi olu\u015fturmadan <code class=\"language-javascript\">render()</code> metodu i\u00e7inde bir \u00e7ok eleman d\u00f6nd\u00fcrmenizi sa\u011flar:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Some text.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">A heading</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ayr\u0131ca <code class=\"language-javascript\">&lt;&gt;&lt;/&gt;</code> s\u00f6zdizimi k\u0131sayoluyla da kullanabilirsiniz. Daha fazla bilgi i\u00e7in, bkz. <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/11/28/react-v16.2.0-fragment-support.html\">React v16.2.0: Fragment\u2019ler i\u00e7in Geli\u015ftirilmi\u015f Destek</a>.</p>\n<h3 id=\"reactcreateref\"><a class=\"anchor\" href=\"/react/react-api#reactcreateref\"></a><code class=\"language-javascript\">React.createRef</code> </h3>\n<p><code class=\"language-javascript\">React.createRef</code> ref \u00f6zelli\u011fi ile React elemanlar\u0131na eklenebilecek bir <a href=\"/react/refs-and-the-dom\">ref</a> olu\u015fturur.\n<div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<h3 id=\"reactforwardref\"><a class=\"anchor\" href=\"/react/react-api#reactforwardref\"></a><code class=\"language-javascript\">React.forwardRef</code> </h3>\n<p><code class=\"language-javascript\">React.forwardRef</code> ald\u0131\u011f\u0131 <a href=\"/react/refs-and-the-dom\">ref</a> \u00f6zelli\u011fini a\u011fac\u0131n alt\u0131nda bulunan bir di\u011fer bile\u015fene ileten bir React bile\u015feni olu\u015fturur. Bu teknik \u00e7ok yayg\u0131n de\u011fildir, ancak iki durumda \u00f6zellikle faydal\u0131d\u0131r:</p>\n<ul>\n<li><a href=\"/react/forwarding-refs#forwarding-refs-to-dom-components\">Ref\u2019leri DOM bile\u015fenlerine iletme</a></li>\n<li><a href=\"/react/forwarding-refs#forwarding-refs-in-higher-order-components\">\u00dcst katman bile\u015fenlerinde ref iletimi</a></li>\n</ul>\n<p><code class=\"language-javascript\">React.forwardRef</code> bir render etme fonksiyonunu arg\u00fcman olarak kabul eder. React bu fonksiyonu <code class=\"language-javascript\">props</code> ve <code class=\"language-javascript\">ref</code> olmak \u00fczere iki arg\u00fcman ile \u00e7a\u011f\u0131racakt\u0131r. Bu fonksiyon ge\u00e7erli bir React birimi d\u00f6nd\u00fcrmelidir.</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> FancyButton <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FancyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// \u015eimdi DOM \u00fczerinde bulunacak butona do\u011frudan bir ref alabilirsiniz:</span>\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FancyButton</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click me!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FancyButton</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre>\n</div></p>\n<p>Yukar\u0131daki \u00f6rnekte, React <code class=\"language-javascript\">React.forwardRef</code> \u00e7a\u011fr\u0131s\u0131n\u0131n i\u00e7indeki render etme fonksiyonuna ikinci bir arg\u00fcman olarak <code class=\"language-javascript\">&lt;FancyButton ref={ref}&gt;</code> elementine verilen bir <code class=\"language-javascript\">ref</code> de\u011ferini iletir. Bu render etme fonksiyonu <code class=\"language-javascript\">ref</code>\u2018i <code class=\"language-javascript\">&lt;button ref={ref}&gt;</code> elementine ge\u00e7er.</p>\n<p>Sonu\u00e7 olarak, React ref\u2019i ekledikten sonra, <code class=\"language-javascript\">ref.current</code> do\u011frudan <code class=\"language-javascript\">&lt;button&gt;</code> DOM \u00f6\u011fesinin \u00f6rne\u011fine i\u015faret edecektir.</p>\n<p>Daha fazla bilgi i\u00e7in, bkz. <a href=\"/react/forwarding-refs\">ref iletimi</a>.</p>\n<h3 id=\"reactlazy\"><a class=\"anchor\" href=\"/react/react-api#reactlazy\"></a><code class=\"language-javascript\">React.lazy</code> </h3>\n<p><code class=\"language-javascript\">React.lazy()</code> dinamik olarak y\u00fcklenen bir bile\u015feni tan\u0131mlaman\u0131za izin verir. Bu, ilk render etme s\u0131ras\u0131nda kullan\u0131lmayan bile\u015fenlerin y\u00fcklemesini geciktirerek paket boyutunu azaltmaya yard\u0131mc\u0131 olur.</p>\n<p>Nas\u0131l kullan\u0131laca\u011f\u0131n\u0131 <a href=\"/react/code-splitting#reactlazy\">kod b\u00f6l\u00fcmleme d\u00f6k\u00fcman\u0131m\u0131zdan</a> \u00f6\u011frenebilirsiniz. Daha ayr\u0131nt\u0131l\u0131 olarak nas\u0131l kullan\u0131laca\u011f\u0131n\u0131 a\u00e7\u0131klayan <a class=\"external-link\" href=\"https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d\">bu makaleye</a> de g\u00f6z atmak isteyebilirsiniz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Bu bile\u015fen dinamik olarak y\u00fcklenir</span>\n<span class=\"token keyword\">const</span> SomeComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./SomeComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">lazy</code> bile\u015fenlerin render edilmesi i\u00e7in render a\u011fac\u0131nda daha yukar\u0131da bulunan bir <code class=\"language-javascript\">&lt;React.Suspense&gt;</code> bile\u015feninin olmas\u0131 gerekti\u011fini unutmay\u0131n. Bir y\u00fckleme g\u00f6stergesini bu \u015fekilde belirlersiniz.</p>\n<h3 id=\"reactsuspense\"><a class=\"anchor\" href=\"/react/react-api#reactsuspense\"></a><code class=\"language-javascript\">React.Suspense</code> </h3>\n<p><code class=\"language-javascript\">React.Suspense</code>, alt\u0131ndaki a\u011fa\u00e7ta bulunan baz\u0131 bile\u015fenlerin hen\u00fcz render edilmeye haz\u0131r olmamas\u0131 durumunda y\u00fckleme g\u00f6stergesini belirtmenizi sa\u011flar. Gelecekte, veri alma gibi daha fazla senaryoyu <code class=\"language-javascript\">Suspense</code> \u2018in i\u015flemesine izin vermeyi planl\u0131yoruz. Bunu <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/11/27/react-16-roadmap.html\">yol haritam\u0131zda</a> okuyabilirsiniz.</p>\n<p>G\u00fcn\u00fcm\u00fczde, tembel (<code class=\"language-javascript\">lazy</code>) y\u00fcklenen bile\u015fenler <code class=\"language-javascript\">&lt;React.Suspense&gt;</code> taraf\u0131ndan desteklenen <strong>tek</strong> kullan\u0131m durumudur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Bu bile\u015fen dinamik olarak y\u00fcklenir</span>\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// OtherComponent y\u00fcklenene kadar &lt;Spinner&gt; \u00f6\u011fesini g\u00f6r\u00fcnt\u00fcler</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Suspense</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu, <a href=\"/react/code-splitting#reactlazy\">kod b\u00f6l\u00fcmleme k\u0131lavuzumuzda</a> anlat\u0131lm\u0131\u015ft\u0131r. <code class=\"language-javascript\">lazy</code> bile\u015fenlerin <code class=\"language-javascript\">Suspense</code> a\u011fac\u0131n\u0131n i\u00e7inde derinlerde olabilece\u011fini unutmay\u0131n (her birini sarmak zorunda de\u011fildir). En iyi uygulama, bir y\u00fckleme g\u00f6stergesi g\u00f6rmek istedi\u011finiz yerlere <code class=\"language-javascript\">Suspense</code> koymak, ancak kodu b\u00f6lmek istedi\u011finiz her yerde <code class=\"language-javascript\">lazy()</code> kullanmakt\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>For content that is already shown to the user, switching back to a loading indicator can be disorienting. It is sometimes better to show the \u201cold\u201d UI while the new UI is being prepared. To do this, you can use the new transition APIs <a href=\"/react/react-api#starttransition\"><code class=\"language-javascript\">startTransition</code></a> and <a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">useTransition</code></a> to mark updates as transitions and avoid unexpected fallbacks.</p>\n</div>\n<h4 id=\"reactsuspense-in-server-side-rendering\"><a class=\"anchor\" href=\"/react/react-api#reactsuspense-in-server-side-rendering\"></a><code class=\"language-javascript\">React.Suspense</code> in Server Side Rendering </h4>\n<p>During server side rendering Suspense Boundaries allow you to flush your application in smaller chunks by suspending.\nWhen a component suspends we schedule a low priority task to render the closest Suspense boundary\u2019s fallback. If the component unsuspends before we flush the fallback then we send down the actual content and throw away the fallback.</p>\n<h4 id=\"reactsuspense-during-hydration\"><a class=\"anchor\" href=\"/react/react-api#reactsuspense-during-hydration\"></a><code class=\"language-javascript\">React.Suspense</code> during hydration </h4>\n<p>Suspense boundaries depend on their parent boundaries being hydrated before they can hydrate, but they can hydrate independently from sibling boundaries. Events on a boundary before it is hydrated will cause the boundary to hydrate at a higher priority than neighboring boundaries. <a class=\"external-link\" href=\"https://github.com/reactwg/react-18/discussions/130\">Read more</a></p>\n<h3 id=\"starttransition\"><a class=\"anchor\" href=\"/react/react-api#starttransition\"></a><code class=\"language-javascript\">React.startTransition</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span><span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">React.startTransition</code> lets you mark updates inside the provided callback as transitions. This method is designed to be used when <a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">React.useTransition</code></a> is not available.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>Updates in a transition yield to more urgent updates such as clicks.</p>\n<p>Updates in a transition will not show a fallback for re-suspended content, allowing the user to continue interacting while rendering the update.</p>\n<p><code class=\"language-javascript\">React.startTransition</code> does not provide an <code class=\"language-javascript\">isPending</code> flag. To track the pending status of a transition see <a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">React.useTransition</code></a>.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-react.md\">Edit this page</a></p></div></article>", "path": "/react/react-api", "nav": ["/react/web-components", "/react/react-component"]}, {"key": "React.Component", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bu sayfa, React s\u0131n\u0131f bile\u015fenleri hakk\u0131nda detayl\u0131 bir API dok\u00fcman\u0131 i\u00e7erir. Bu nedenle, <a href=\"/react/components-and-props\">Bile\u015fenler ve Prop\u2019lar</a>, <a href=\"/react/state-and-lifecycle\">State ve Ya\u015fam D\u00f6ng\u00fcs\u00fc</a> gibi temel React kavramlar\u0131na a\u015fina oldu\u011funuzu varsaymaktad\u0131r. E\u011fer de\u011filseniz \u00f6ncelikle bu dok\u00fcmanlar\u0131 okuyunuz.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-component#overview\"></a>Giri\u015f </h2>\n<p>React, bile\u015fenleri s\u0131n\u0131f ve fonksiyon olarak tan\u0131mlaman\u0131z\u0131 sa\u011flar. S\u0131n\u0131f olarak tan\u0131mlanan bile\u015fenler, fonksiyon olanlara g\u00f6re daha fazla \u00f6zellik sunar. Bu \u00f6zellikler sayfan\u0131n ilerleyen b\u00f6l\u00fcmlerinde daha detayl\u0131 \u015fekilde ele al\u0131nacakt\u0131r.</p>\n<p>React bile\u015fen s\u0131n\u0131f\u0131 olu\u015fturmak i\u00e7in, s\u0131n\u0131f\u0131n\u0131z\u0131 <code class=\"language-javascript\">React.Component</code>\u2018ten t\u00fcretmeniz gerekir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">React.Component</code>\u2018ten t\u00fcretilen s\u0131n\u0131flarda, <em>zorunlu</em> olarak tan\u0131mlaman\u0131z gereken metot sadece <a href=\"/react/react-component#render\"><code class=\"language-javascript\">render()</code></a>\u2018d\u0131r. Bu sayfada tan\u0131t\u0131lacak olan di\u011fer metotlar ise opsiyoneldir.</p>\n<p><strong><code class=\"language-javascript\">React.Component</code> yerine kendi \u00fcretti\u011finiz temel s\u0131n\u0131flar\u0131 olu\u015fturman\u0131z\u0131 kesinlikle tavsiye etmiyoruz.</strong> \u00c7\u00fcnk\u00fc React bile\u015fenlerinde, kodun tekrar kullan\u0131labilirli\u011fi <a href=\"/react/composition-vs-inheritance\">kal\u0131t\u0131m yoluyla de\u011fil, kompozisyon ile sa\u011flan\u0131r</a>.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React\u2019te s\u0131n\u0131f bile\u015feni tan\u0131mlarken, ES6 kod yap\u0131s\u0131n\u0131 kullanmak zorunda de\u011filsiniz. E\u011fer ES6 kullanmak istemiyorsan\u0131z, npm paketi olarak yer alan <a href=\"/react/creact-without-es6\">create-react-class</a> mod\u00fcl\u00fcn\u00fc veya benzer bir \u00f6zel soyutlama y\u00f6ntemini kullanabilirsiniz.</p>\n</div>\n<h3 id=\"the-component-lifecycle\"><a class=\"anchor\" href=\"/react/react-component#the-component-lifecycle\"></a>Bir Bile\u015fenin Ya\u015fam D\u00f6ng\u00fcs\u00fc </h3>\n<p>Her bile\u015fen, belirli durumlarda \u00e7al\u0131\u015ft\u0131rabilece\u011finiz birka\u00e7 \u201cya\u015fam d\u00f6ng\u00fcs\u00fc metodu\u201d (lifecycle methods) sunar. <strong>Bu metodlar\u0131 hat\u0131rlamak i\u00e7in, <a class=\"external-link\" href=\"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">ya\u015fam d\u00f6ng\u00fcs\u00fc diyagram\u0131n\u0131</a> kullanabilirsiniz.</strong> A\u015fa\u011f\u0131daki listede, yayg\u0131n olarak kullan\u0131lan ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131 <strong>kal\u0131n</strong> harfler ile belirtilmi\u015ftir. Geri kalan metotlar, daha nadir kullan\u0131mlar i\u00e7in uygundur.</p>\n<h4 id=\"mounting\"><a class=\"anchor\" href=\"/react/react-component#mounting\"></a>Eklenmesi </h4>\n<p>Bir bile\u015fenin olu\u015fumundan ve DOM\u2019a eklenmesine kadar ge\u00e7en s\u00fcre\u00e7 i\u00e7erisinde \u00e7a\u011fr\u0131lan metotlar, s\u0131ras\u0131yla a\u015fa\u011f\u0131daki gibi belirlenmi\u015ftir:</p>\n<ul>\n<li><a href=\"/react/react-component#constructor\"><strong><code class=\"language-javascript\">constructor()</code></strong></a></li>\n<li><a href=\"/react/react-component#static-getderivedstatefromprops\"><code class=\"language-javascript\">static getDerivedStateFromProps()</code></a></li>\n<li><a href=\"/react/react-component#render\"><strong><code class=\"language-javascript\">render()</code></strong></a></li>\n<li><a href=\"/react/react-component#componentdidmount\"><strong><code class=\"language-javascript\">componentDidMount()</code></strong></a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>A\u015fa\u011f\u0131daki metot eski React projelerinde kullan\u0131lmaktayd\u0131. Fakat asenkron render etme s\u00fcre\u00e7lerinde problemli oldu\u011fundan dolay\u0131 art\u0131k yeni projelerde <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">kullanmaman\u0131z gerekmektedir</a>:</p>\n<ul>\n<li><a href=\"/react/react-component#unsafe_componentwillmount\"><code class=\"language-javascript\">UNSAFE_componentWillMount()</code></a></li>\n</ul>\n</div>\n<h4 id=\"updating\"><a class=\"anchor\" href=\"/react/react-component#updating\"></a>G\u00fcncellenmesi </h4>\n<p>Bile\u015fenin g\u00fcncellemesi, kendi props\u2019u veya state\u2019i \u00fczerindeki de\u011fi\u015fikliklerden olu\u015fabilir. Bir bile\u015fen tekrar render edildi\u011finde \u00e7a\u011fr\u0131lan metotlar s\u0131ras\u0131yla a\u015fa\u011f\u0131daki gibidir:</p>\n<ul>\n<li><a href=\"/react/react-component#static-getderivedstatefromprops\"><code class=\"language-javascript\">static getDerivedStateFromProps()</code></a></li>\n<li><a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a></li>\n<li><a href=\"/react/react-component#render\"><strong><code class=\"language-javascript\">render()</code></strong></a></li>\n<li><a href=\"/react/react-component#getsnapshotbeforeupdate\"><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code></a></li>\n<li><a href=\"/react/react-component#componentdidupdate\"><strong><code class=\"language-javascript\">componentDidUpdate()</code></strong></a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>A\u015fa\u011f\u0131daki metotlar\u0131, problemli olduklar\u0131ndan dolay\u0131, art\u0131k yeni projelerde <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">kullanmaman\u0131z gerekir</a>:</p>\n<ul>\n<li><a href=\"/react/react-component#unsafe_componentwillupdate\"><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></a></li>\n<li><a href=\"/react/react-component#unsafe_componentwillreceiveprops\"><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code></a></li>\n</ul>\n</div>\n<h4 id=\"unmounting\"><a class=\"anchor\" href=\"/react/react-component#unmounting\"></a>\u00c7\u0131kar\u0131lmas\u0131 </h4>\n<p>Bir bile\u015fen, DOM\u2019dan \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda bu metot \u00e7al\u0131\u015f\u0131r:</p>\n<ul>\n<li><a href=\"/react/react-component#componentwillunmount\"><strong><code class=\"language-javascript\">componentWillUnmount()</code></strong></a></li>\n</ul>\n<h4 id=\"error-handling\"><a class=\"anchor\" href=\"/react/react-component#error-handling\"></a>Hatan\u0131n Yakalanmas\u0131 </h4>\n<p>A\u015fa\u011f\u0131daki metotlar; render esnas\u0131nda, ya\u015fam d\u00f6ng\u00fcs\u00fc metodunda veya herhangi bir alt bile\u015fenin constructor\u2019\u0131nda bir hata olu\u015ftu\u011funda \u00e7a\u011fr\u0131lmaktad\u0131r:</p>\n<ul>\n<li><a href=\"/react/react-component#static-getderivedstatefromerror\"><code class=\"language-javascript\">static getDerivedStateFromError()</code></a></li>\n<li><a href=\"/react/react-component#componentdidcatch\"><code class=\"language-javascript\">componentDidCatch()</code></a></li>\n</ul>\n<h3 id=\"other-apis\"><a class=\"anchor\" href=\"/react/react-component#other-apis\"></a>Di\u011fer API\u2019lar </h3>\n<p>Her bile\u015fen, bu metotlar\u0131n haricinde a\u015fa\u011f\u0131daki gibi baz\u0131 API\u2019lar\u0131 sunmaktad\u0131r:</p>\n<ul>\n<li><a href=\"/react/react-component#setstate\"><code class=\"language-javascript\">setState()</code></a></li>\n<li><a href=\"/react/react-component#forceupdate\"><code class=\"language-javascript\">forceUpdate()</code></a></li>\n</ul>\n<h3 id=\"class-properties\"><a class=\"anchor\" href=\"/react/react-component#class-properties\"></a>S\u0131n\u0131f \u00d6zellikleri </h3>\n<ul>\n<li><a href=\"/react/react-component#defaultprops\"><code class=\"language-javascript\">defaultProps</code></a></li>\n<li><a href=\"/react/react-component#displayname\"><code class=\"language-javascript\">displayName</code></a></li>\n</ul>\n<h3 id=\"instance-properties\"><a class=\"anchor\" href=\"/react/react-component#instance-properties\"></a>Nesne \u00d6zellikleri </h3>\n<ul>\n<li><a href=\"/react/react-component#props\"><code class=\"language-javascript\">props</code></a></li>\n<li><a href=\"/react/react-component#state\"><code class=\"language-javascript\">state</code></a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-component#reference\"></a>Ba\u015fvuru Dok\u00fcman\u0131 </h2>\n<h3 id=\"commonly-used-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#commonly-used-lifecycle-methods\"></a>Yayg\u0131n Olarak Kullan\u0131lan Ya\u015fam D\u00f6ng\u00fcs\u00fc Metotlar\u0131 </h3>\n<p>Bu b\u00f6l\u00fcmde anlat\u0131lacak metotlar, React bile\u015fenleri olu\u015ftururken yayg\u0131n olarak kar\u015f\u0131la\u015faca\u011f\u0131n\u0131z kullan\u0131m senaryolar\u0131n\u0131 i\u00e7erir. <strong>G\u00f6rsel bir anlat\u0131m i\u00e7in <a class=\"external-link\" href=\"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">ya\u015fam d\u00f6ng\u00fcs\u00fc diyagram\u0131n\u0131</a> inceleyebilirsiniz.</strong></p>\n<h3 id=\"render\"><a class=\"anchor\" href=\"/react/react-component#render\"></a><code class=\"language-javascript\">render()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">render()</code> metodu, bir s\u0131n\u0131f bile\u015feni olu\u015fturmak i\u00e7in gereken tek metottur.</p>\n<p>\u00c7a\u011fr\u0131ld\u0131\u011f\u0131nda, <code class=\"language-javascript\">this.props</code> ile <code class=\"language-javascript\">this.state</code>\u2018i denetler ve a\u015fa\u011f\u0131daki veri tiplerinden birini geri d\u00f6nd\u00fcr\u00fcr:</p>\n<ul>\n<li><strong>React elementleri.</strong> Genellikle <a href=\"/react/introducing-jsx\">JSX kodu</a> kullan\u0131larak olu\u015fturulurlar. \u00d6rne\u011fin, <code class=\"language-javascript\">&lt;div /&gt;</code> ve <code class=\"language-javascript\">&lt;MyComponent /&gt;</code> birer React elementidir. <code class=\"language-javascript\">&lt;div/&gt;</code>, React\u2019e bir HTML DOM d\u00fc\u011f\u00fcm\u00fcn\u00fc render etmesini gerekti\u011fini bildirir. <code class=\"language-javascript\">&lt;MyComponent/&gt;</code> ise kullan\u0131c\u0131n\u0131n tan\u0131mlad\u0131\u011f\u0131 bir React bile\u015fendir.</li>\n<li><strong>Diziler and fragment\u2019lar.</strong> Render edilecek olan birden fazla eleman\u0131 geri d\u00f6nd\u00fcr\u00fcrler. Daha fazla bilgi i\u00e7in <a href=\"/react/fragments\">fragments</a> dok\u00fcman\u0131n\u0131 inceleyebilirsiniz.</li>\n<li><strong>Portal\u2019lar</strong>. Alt bile\u015fenleri, farkl\u0131 bir DOM alt a\u011fac\u0131 olarak render etmeyi sa\u011flarlar. Daha fazla bilgi i\u00e7in <a href=\"/react/portals\">portals</a> dok\u00fcman\u0131n\u0131 inceleyebilirsiniz.</li>\n<li><strong>String\u2019ler ve say\u0131lar.</strong> DOM i\u00e7erisinde metin d\u00fc\u011f\u00fcm\u00fc olarak render edilirler.</li>\n<li><strong>Boolean\u2019lar ve <code class=\"language-javascript\">null</code></strong>. Hi\u00e7bir \u015fey render etmezler. (Genellikle <code class=\"language-javascript\">return test &amp;&amp; &lt;Child /&gt;</code> tarz\u0131ndaki kod yap\u0131s\u0131n\u0131 desteklemek i\u00e7in vard\u0131rlar. Buradaki <code class=\"language-javascript\">test</code>, boolean tipinde bir de\u011fi\u015fkendir.)</li>\n</ul>\n<p><code class=\"language-javascript\">render()</code> metodu saf halde olmal\u0131d\u0131r. Yani bile\u015fenin state\u2019ini de\u011fi\u015ftirmemeli, ayn\u0131 parametrelerle \u00e7a\u011fr\u0131ld\u0131\u011f\u0131nda hep ayn\u0131 \u00e7\u0131kt\u0131y\u0131 vermeli, ve internet taray\u0131c\u0131s\u0131 ile direkt olarak etkile\u015fimde <strong>bulunmamal\u0131d\u0131r</strong>. E\u011fer taray\u0131c\u0131 ile etkile\u015fimde bulunman\u0131z gerekirse, <code class=\"language-javascript\">componentDidMount()</code>\u2018ta veya di\u011fer ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131nda bu i\u015flemi ger\u00e7ekle\u015ftiriniz.</p>\n<p><code class=\"language-javascript\">render()</code>\u2018\u0131n saf halde tutulmas\u0131, bile\u015fen \u00fczerinde daha kolay d\u00fc\u015f\u00fcnmenizi sa\u011flar.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>E\u011fer <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> metodu <code class=\"language-javascript\">false</code> d\u00f6nerse, <code class=\"language-javascript\">render()</code> metodu \u00e7a\u011fr\u0131lmaz.</p>\n</div>\n\n<h3 id=\"constructor\"><a class=\"anchor\" href=\"/react/react-component#constructor\"></a><code class=\"language-javascript\">constructor()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>state\u2019i kullanmad\u0131\u011f\u0131n\u0131z durumlarda veya <code class=\"language-javascript\">bind()</code> fonksiyonu ile herhangi bir metot ba\u011flamad\u0131\u011f\u0131n\u0131z s\u00fcrece, React bile\u015feni i\u00e7in bir constructor metodu olu\u015fturman\u0131z gerekli de\u011fildir.</strong></p>\n<p>Bir React bile\u015feninin constructor\u2019\u0131, ilgili bile\u015fen uygulamaya eklenmeden \u00f6nce \u00e7a\u011fr\u0131l\u0131r. <code class=\"language-javascript\">React.Component</code>\u2018tan t\u00fcretilen s\u0131n\u0131f i\u00e7in bir constructor olu\u015ftururken, fonksiyon i\u00e7erisinde ilk sat\u0131rda <code class=\"language-javascript\">super(props)</code> \u00e7a\u011f\u0131rman\u0131z <strong>zorunludur</strong>. Aksi halde <code class=\"language-javascript\">this.props</code> \u00f6zelli\u011fi, constructor i\u00e7erisinde <code class=\"language-javascript\">undefined</code> olarak de\u011fer alacakt\u0131r. Bu durum, uygulaman\u0131zda birtak\u0131m hatalara neden olabilir.</p>\n<p>Constructor, genellikle iki temel ama\u00e7la kullan\u0131l\u0131r:</p>\n<ol>\n<li><code class=\"language-javascript\">this.state</code>\u2018e bir nesne atanarak <a href=\"/react/state-and-lifecycle\">yerel state</a>\u2018in olu\u015fturulmas\u0131.</li>\n<li><code class=\"language-javascript\">bind()</code> metodu kullan\u0131larak, bile\u015fene <a href=\"/react/handling-events\">olay metotlar\u0131n\u0131n</a> ba\u011flanmas\u0131.</li>\n</ol>\n<p><code class=\"language-javascript\">constructor()</code> i\u00e7erisinde, <code class=\"language-javascript\">setState()</code> metodunu <strong>\u00e7a\u011f\u0131rmamal\u0131s\u0131n\u0131z</strong>. E\u011fer bile\u015feninizin yerel state\u2019i kullanmas\u0131 gerekiyorsa, ilgili de\u011fi\u015fkenleri constructor i\u00e7erisinde direkt olarak <strong><code class=\"language-javascript\">this.state</code>\u2018e atay\u0131n\u0131z</strong>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Burada this.setState()'i \u00e7a\u011f\u0131rmay\u0131n\u0131z!</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">this.state</code>\u2018e direkt olarak atama yapman\u0131z gereken tek yer constructor\u2019d\u0131r. Di\u011fer t\u00fcm metotlarda, <code class=\"language-javascript\">this.setState()</code>\u2018i kullanman\u0131z gereklidir.</p>\n<p>Constructor\u2019da, yan etki eden metotlardan veya <code class=\"language-javascript\">setInterval()</code> gibi abonelik metotlar\u0131n\u0131 olu\u015fturmaktan ka\u00e7\u0131n\u0131n\u0131z. Bu t\u00fcr i\u015flemleri <code class=\"language-javascript\">componentDidMount()</code> metodunda ger\u00e7ekle\u015ftiriniz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p><strong>state\u2019e prop nesnelerinin i\u00e7eriklerini atamay\u0131n\u0131z! Bu \u00e7ok yayg\u0131n olarak yap\u0131lan bir hatad\u0131r:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// \u0130\u015fte bunu yapmay\u0131n\u0131z!</span>\n <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>color <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Buradaki problemlerden birincisi, state\u2019e props de\u011ferinin atanmas\u0131 gereksizdir. \u00c7\u00fcnk\u00fc <code class=\"language-javascript\">this.props.color</code> de\u011feri direkt olarak kullan\u0131labilir. \u0130kinci problem ise, <code class=\"language-javascript\">color</code> prop\u2019unda yap\u0131lan de\u011fi\u015fiklikler, state\u2019e hen\u00fcz yans\u0131t\u0131lmad\u0131\u011f\u0131 i\u00e7in hatalara neden olur.</p>\n<p><strong>Bu tarz bir kodlamay\u0131, yaln\u0131zca prop g\u00fcncellemelerini g\u00f6z ard\u0131 etmek istedi\u011finizde yap\u0131n\u0131z.</strong> B\u00f6yle bir durumda <code class=\"language-javascript\">color</code> de\u011fi\u015fkenini, <code class=\"language-javascript\">initialColor</code> (ba\u015flang\u0131\u00e7 rengi) veya <code class=\"language-javascript\">defaultColor</code> (varsay\u0131lan renk) olarak isimlendirmek daha uygun hale gelecektir. Bile\u015fenin i\u00e7 state\u2019ini g\u00fcncellemek i\u00e7in zorlaman\u0131z gerekti\u011finde bunu <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\"><code class=\"language-javascript\">key</code> \u00f6zelli\u011fini de\u011fi\u015ftirerek</a> yapabilirsiniz.</p>\n<p><a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">State\u2019in t\u00fcretilmesinden ka\u00e7\u0131nmak</a> adl\u0131 makalemizi okuyarak, prop\u2019lara ba\u011fl\u0131 bir state\u2019e ihtiyac\u0131n\u0131z oldu\u011funda ne yapman\u0131z gerekti\u011fi ile ilgili detayl\u0131 bilgi edinebilirsiniz.</p>\n</div>\n\n<h3 id=\"componentdidmount\"><a class=\"anchor\" href=\"/react/react-component#componentdidmount\"></a><code class=\"language-javascript\">componentDidMount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bir bile\u015fen, DOM a\u011fac\u0131na eklendikten hemen sonra <code class=\"language-javascript\">componentDidMount()</code> \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. DOM d\u00fc\u011f\u00fcmleri ile ili\u015fkili atama i\u015flemleri bu fonksiyon i\u00e7erisinde yap\u0131lmal\u0131d\u0131r. Bu nedenle e\u011fer verilerinizi uzak bir API\u2019den y\u00fcklemeniz gerekiyorsa, a\u011f iste\u011fini bu fonksiyonda ba\u015flatabilirsiniz.</p>\n<p>Ayr\u0131ca bu metot, <code class=\"language-javascript\">setInterval()</code> gibi abonelik gerektiren metotlar\u0131 \u00e7a\u011f\u0131rmak i\u00e7in de uygundur. E\u011fer b\u00f6yle bir abonelik metodu \u00e7a\u011f\u0131rd\u0131ysan\u0131z, <code class=\"language-javascript\">componentWillUnmount()</code> metodu i\u00e7erisinde abonelikten \u00e7\u0131kmay\u0131 unutmay\u0131n\u0131z. </p>\n<p><code class=\"language-javascript\">componentDidMount()</code>\u2018ta <code class=\"language-javascript\">setState()</code>\u2018i <strong>\u00e7a\u011f\u0131rabilirsiniz</strong>. Bunun sonucunda, bile\u015fenin fazladan render edilmesi tetiklenecektir. Fakat bu i\u015flem, taray\u0131c\u0131n\u0131n aray\u00fcz\u00fc g\u00fcncellemesinden \u00f6nce ger\u00e7ekle\u015fecektir. Bu durum, <code class=\"language-javascript\">render()</code> metodu iki kez \u00e7al\u0131\u015fsa bile, kullan\u0131c\u0131n\u0131n bu olay\u0131 farketmemesini garanti eder. Fakat bu kodlama mant\u0131\u011f\u0131n\u0131 kullan\u0131rken dikkatli olunuz. \u00c7\u00fcnk\u00fc bu kullan\u0131m, genellikle performans sorunlar\u0131na yol a\u00e7maktad\u0131r. Bu nedenle bir\u00e7ok durumda, <code class=\"language-javascript\">state</code> atamalar\u0131n\u0131 <code class=\"language-javascript\">constructor()</code> metodu i\u00e7erisinde ger\u00e7ekle\u015ftiriniz. Ancak tooltip veya modal bile\u015fenlerinin g\u00f6sterildi\u011fi durumlarda, render i\u015flemi \u00f6ncesinde ilgili DOM d\u00fc\u011f\u00fcm\u00fcn\u00fcn boyutu veya pozisyonu gibi bir \u00f6zelli\u011fi \u00f6l\u00e7\u00fcmlemek istiyorsan\u0131z, bu kod mant\u0131\u011f\u0131n\u0131 kullanman\u0131z gereklidir.</p>\n\n<h3 id=\"componentdidupdate\"><a class=\"anchor\" href=\"/react/react-component#componentdidupdate\"></a><code class=\"language-javascript\">componentDidUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Ad\u0131ndan da anla\u015f\u0131laca\u011f\u0131 gibi <code class=\"language-javascript\">componentDidUpdate()</code> metodu, sadece DOM g\u00fcncellemelerinde ger\u00e7ekle\u015ftirilir. Bu nedenle ba\u015flang\u0131\u00e7taki render i\u015fleminde \u00e7a\u011fr\u0131lmaz.</p>\n<p>Bile\u015fen g\u00fcncellendi\u011finde, DOM \u00fczerinde yapmak istedi\u011finiz i\u015fleri ger\u00e7ekle\u015ftirmek i\u00e7in bu metodu kullan\u0131n\u0131z. Ayr\u0131ca bu metot, \u00f6nceki prop ile sonraki prop de\u011ferlerini kar\u015f\u0131la\u015ft\u0131r\u0131p, buna ba\u011fl\u0131 olarak a\u011f isteklerini ger\u00e7ekle\u015ftirmek i\u00e7in de uygun bir yerdir. \u00d6rne\u011fin a\u015fa\u011f\u0131daki \u00f6rnekte oldu\u011fu gibi, prop nesnesi de\u011fi\u015fmediyse a\u011f iste\u011finin yap\u0131lmas\u0131na da gerek yoktur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Genel kullan\u0131m (prop de\u011ferlerini kar\u015f\u0131la\u015ft\u0131rmay\u0131 unutmay\u0131n\u0131z!):</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>userID <span class=\"token operator\">!==</span> prevProps<span class=\"token punctuation\">.</span>userID<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">componentDidUpdate()</code> metodunun <strong>i\u00e7erisinde <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131s\u0131</strong> yapabilirsiniz. Fakat unutmay\u0131n\u0131z ki bu \u00e7a\u011fr\u0131, \u00fcstteki gibi bir ko\u015ful ifadesi i\u00e7erisinde yer almal\u0131d\u0131r. Aksi halde uygulaman\u0131z sonsuz d\u00f6ng\u00fcye girebilir. Ayr\u0131ca kullan\u0131c\u0131 taraf\u0131ndan farkedilmeyen fakat bile\u015fen performans\u0131na etki edebilecek seviyede ekstra bir render i\u015flemi ger\u00e7ekle\u015fmesine neden olur. E\u011fer \u00fcst bile\u015fenden gelen prop\u2019u mevcut bile\u015fenin state\u2019ine kopyalamaya \u00e7al\u0131\u015f\u0131yorsan\u0131z, bunun yerine direkt olarak prop kullanabilirsiniz. Neden <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">prop\u2019un state\u2019e kopyalanmas\u0131n\u0131n hatalara yol a\u00e7abilece\u011fi</a> hakk\u0131nda daha fazla bilgi edinmek i\u00e7in blog yaz\u0131s\u0131n\u0131 inceleyebilirsiniz..</p>\n<p>E\u011fer bile\u015feninizde <code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> ya\u015fam d\u00f6ng\u00fcs\u00fc metodunu kodlam\u0131\u015fsan\u0131z (ki bu nadir bir durumdur), geri d\u00f6nd\u00fcrd\u00fc\u011f\u00fc de\u011fer <code class=\"language-javascript\">componentDidUpdate()</code> metoduna \u201csnapshot\u201d ismiyle \u00fc\u00e7\u00fcnc\u00fc parametre olarak aktar\u0131l\u0131r. Aksi halde bu parametre, <code class=\"language-javascript\">undefined</code> olacakt\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>E\u011fer <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> metodu false d\u00f6nd\u00fcr\u00fcyorsa, <code class=\"language-javascript\">componentDidUpdate()</code> metodu \u00e7a\u011fr\u0131lmayacak demektir.</p>\n</div>\n\n<h3 id=\"componentwillunmount\"><a class=\"anchor\" href=\"/react/react-component#componentwillunmount\"></a><code class=\"language-javascript\">componentWillUnmount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">componentWillUnmount()</code> metodu, bir bile\u015fen DOM\u2019dan \u00e7\u0131kar\u0131ld\u0131\u011f\u0131nda veya tamamen yok edildi\u011finde \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. <code class=\"language-javascript\">componentDidMount()</code>\u2018ta yap\u0131lan; zamanlay\u0131c\u0131 fonksiyonlar\u0131n ge\u00e7ersiz k\u0131l\u0131nmas\u0131, a\u011f isteklerinin iptal edilmesi, veya herhangi bir abonelik metodunun temizlenmesi gibi i\u015flemleri bu metotta ger\u00e7ekle\u015ftiriniz.</p>\n<p><code class=\"language-javascript\">componentWillUnmount()</code>\u2018ta <code class=\"language-javascript\">setState()</code> metodunu <strong>\u00e7a\u011f\u0131rmamal\u0131s\u0131n\u0131z.</strong> \u00c7\u00fcnk\u00fc, bile\u015fen art\u0131k DOM\u2019dan ayr\u0131ld\u0131\u011f\u0131 i\u00e7in, tekrar render edilme i\u015flemi asla ger\u00e7ekle\u015ftirilmeyecektir. Bir bile\u015fen e\u011fer DOM\u2019dan ayr\u0131ld\u0131ysa, art\u0131k tekrar DOM\u2019a geri tak\u0131lma s\u00fcreci ger\u00e7ekle\u015ftirmeyecektir.</p>\n\n<h3 id=\"rarely-used-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#rarely-used-lifecycle-methods\"></a>Nadiren Kullan\u0131lan Ya\u015fam D\u00f6ng\u00fcs\u00fc Metotlar\u0131 </h3>\n<p>Bu b\u00f6l\u00fcmdeki metotlar, nispeten daha az kullan\u0131lan durumlar i\u00e7indir. Nadiren i\u015finizi g\u00f6rseler de, b\u00fcy\u00fck ihtimalle bile\u015fenlerinizde hi\u00e7birini kullanmayacaks\u0131n\u0131z. <strong><a class=\"external-link\" href=\"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\">Bu ya\u015fam d\u00f6ng\u00fcs\u00fc \u015femas\u0131n\u0131n</a> \u00fcst k\u0131s\u0131m\u0131nda yer alan \u201cDaha az kullan\u0131lan ya\u015fam d\u00f6ng\u00fclerini g\u00f6ster\u201d kutucu\u011funu i\u015faretledi\u011finizde</strong> bu metotlar\u0131n \u00e7o\u011funu g\u00f6rebileceksiniz.</p>\n<h3 id=\"shouldcomponentupdate\"><a class=\"anchor\" href=\"/react/react-component#shouldcomponentupdate\"></a><code class=\"language-javascript\">shouldComponentUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">shouldComponentUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">,</span> nextState<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Mevcut state veya prop\u2019lar de\u011fi\u015fti\u011finde, bile\u015fenin \u00e7\u0131kt\u0131s\u0131n\u0131n bu durumdan etkilenmemesini belirtmek i\u00e7in <code class=\"language-javascript\">shouldComponentUpdate()</code> metodunu kullan\u0131n\u0131z. Normalde bile\u015fenin varsay\u0131lan davran\u0131\u015f\u0131, her state de\u011fi\u015fikli\u011finde tekrar render edilmesine y\u00f6neliktir. Bir\u00e7ok kullan\u0131mda bu varsay\u0131lan davran\u0131\u015fa uyman\u0131z gerekmektedir.</p>\n<p>Prop veya state de\u011ferleri de\u011fi\u015ftirildi\u011finde, render i\u015fleminden hemen \u00f6nce <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r ve varsay\u0131lan olarak <code class=\"language-javascript\">true</code> d\u00f6nd\u00fcr\u00fcr. Bile\u015fenin ba\u015flang\u0131\u00e7taki ilk render zaman\u0131nda veya <code class=\"language-javascript\">forceUpdate()</code> metodu kullan\u0131ld\u0131\u011f\u0131nda, bu metot <strong>\u00e7al\u0131\u015ft\u0131r\u0131lmaz</strong>.</p>\n<p>Bu metot yaln\u0131zca <strong><a href=\"/react/optimizing-performance\">performans iyile\u015ftirme</a> i\u015flemleri i\u00e7in yap\u0131lm\u0131\u015ft\u0131r.</strong> Render i\u015flemini engellemek i\u00e7in bu metodu kullanmay\u0131n\u0131z. Zira baz\u0131 hatalar\u0131n olu\u015fmas\u0131na yol a\u00e7abilir. Bu nedenle, <code class=\"language-javascript\">shouldComponentUpdate()</code> metodunu yazmak yerine, React i\u00e7erisinde varsay\u0131lan olarak gelen <strong><a href=\"/react/react-api#reactpurecomponent\"><code class=\"language-javascript\">PureComponent</code></a></strong> kullan\u0131n\u0131z. <code class=\"language-javascript\">PureComponent</code>, prop ve state\u2019leri y\u00fczeysel olarak kar\u015f\u0131la\u015ft\u0131r\u0131r. Bu sayede b\u00fcy\u00fck DOM a\u011fa\u00e7lar\u0131na sahip bile\u015fenlerde, k\u00fc\u00e7\u00fck de\u011fi\u015fiklikler ger\u00e7ekle\u015fti\u011finde olu\u015facak g\u00fcncellemelerin olu\u015fma \u015fans\u0131n\u0131 azalt\u0131r. B\u00f6ylece gereksiz g\u00fcncellemeler g\u00f6z ard\u0131 edilerek performans art\u0131\u015f\u0131 sa\u011flanm\u0131\u015f olur.</p>\n<p>E\u011fer bu metodu kullanmak i\u00e7in eminseniz, g\u00fcncellemenin g\u00f6z ard\u0131 edilmesi i\u00e7in <code class=\"language-javascript\">nextProps</code> ile <code class=\"language-javascript\">this.props</code>\u2018u, <code class=\"language-javascript\">nextState</code> ile <code class=\"language-javascript\">this.state</code> kar\u015f\u0131la\u015ft\u0131rabilir ve bunun sonucunda <code class=\"language-javascript\">false</code> de\u011ferini d\u00f6nd\u00fcrebilirsiniz. <code class=\"language-javascript\">false</code>\u2018un geri d\u00f6nd\u00fcr\u00fclmesi i\u015flemi, alt bile\u015fenlerin state\u2019i de\u011fi\u015fti\u011finde tekrar render edilmelerini engellemeyece\u011fini unutmay\u0131n\u0131z.</p>\n<p><code class=\"language-javascript\">shouldComponentUpdate()</code> metodu i\u00e7erisinde, e\u015fitlik kontrollerinin derinlemesine ger\u00e7ekle\u015ftirilmesi veya <code class=\"language-javascript\">JSON.stringify()</code>\u2018\u0131n kullan\u0131m\u0131 \u00f6nerilmez. Bu t\u00fcr kullan\u0131mlar verimsizdir ve performans\u0131 olumsuz y\u00f6nde etkiler.</p>\n<p>React\u2019in mevcut s\u00fcr\u00fcm\u00fcnde, <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcrd\u00fc\u011f\u00fcnde; <a href=\"/react/react-component#unsafe_componentwillupdate\"><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code></a>, <a href=\"/react/react-component#render\"><code class=\"language-javascript\">render()</code></a>, ve <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate()</code></a> metodlar\u0131 \u00e7a\u011fr\u0131lmaz. Gelecek s\u00fcr\u00fcmlerde React, <code class=\"language-javascript\">shouldComponentUpdate()</code> metodunu s\u0131k\u0131 bir \u015fekilde uygulamak yerine bir ipucu \u015feklinde ele alabilir. Bu nedenle <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcr\u00fclmesine ra\u011fmen, bile\u015fenin tekrar render edilmesi ile sonu\u00e7lanabilir.</p>\n\n<h3 id=\"static-getderivedstatefromprops\"><a class=\"anchor\" href=\"/react/react-component#static-getderivedstatefromprops\"></a><code class=\"language-javascript\">static getDerivedStateFromProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bile\u015fenin ba\u015flang\u0131\u00e7ta DOM\u2019a eklenmesinde ve devam\u0131nda s\u00fcregelen g\u00fcncellemelerde, render metodundan hemen \u00f6nce <code class=\"language-javascript\">getDerivedStateFromProps</code> \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Bu metot, state\u2019in g\u00fcncellenmesi i\u00e7in bir nesne geri d\u00f6nd\u00fcr\u00fcr. <code class=\"language-javascript\">null</code> d\u00f6nd\u00fcrd\u00fc\u011f\u00fcnde ise g\u00fcncelleme <strong>ger\u00e7ekle\u015ftirilmemi\u015f</strong> olur.</p>\n<p>Bu metot, state\u2019in props de\u011fi\u015fikliklerine ba\u011fl\u0131 oldu\u011fu <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#when-to-use-derived-state\">nadiren kullan\u0131lan durumlar</a> i\u00e7in vard\u0131r. \u00d6rne\u011fin <code class=\"language-javascript\">&lt;Transition&gt;</code> bile\u015feninin, \u00f6nceki ve sonraki alt bile\u015fenlerini kar\u015f\u0131la\u015ft\u0131rmas\u0131 sayesinde animasyona girme/\u00e7\u0131kma s\u00fcre\u00e7lerinin y\u00f6netimi i\u00e7in kullan\u0131\u015fl\u0131 olabilir.</p>\n<p>State \u00fcretmek, daha fazla kod yazmaya neden olur. Ve bir s\u00fcre sonra bile\u015fen kodunu takip edemez hale gelirsiniz.\n<a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">Bunun yerine alternatif yollar deneyebilirsiniz:</a></p>\n<ul>\n<li>E\u011fer props\u2019ta olu\u015fan de\u011fi\u015fikliklere cevap olarak, web iste\u011fi veya animasyon i\u015flemi gibi <strong>yan etki</strong> i\u00e7eren bir i\u015flem ger\u00e7ekle\u015ftirmeniz gerekiyorsa, <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate</code></a> ya\u015fam d\u00f6ng\u00fcs\u00fc metodunu kullan\u0131n\u0131z.</li>\n<li>E\u011fer bir prop de\u011fi\u015fti\u011finde, baz\u0131 verileri yeniden i\u015flemeniz gerekiyorsa, bunun i\u00e7in <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\">memoization y\u00f6ntemini kullan\u0131n\u0131z</a>.</li>\n<li>E\u011fer bir prop de\u011fi\u015fti\u011finde, baz\u0131 state de\u011ferlerini s\u0131f\u0131rlaman\u0131z gerekiyorsa, bunun i\u00e7in <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component\">tamamen kontroll\u00fc bir bile\u015fen</a> veya <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\">bir <code class=\"language-javascript\">key</code>\u2018e sahip tamamen kontrols\u00fcz bir bile\u015fen</a> kullan\u0131n\u0131z.</li>\n</ul>\n<p>Bu metodun, bile\u015fen nesnesine eri\u015fimi yoktur. E\u011fer dilerseniz s\u0131n\u0131f tan\u0131m\u0131n\u0131n d\u0131\u015far\u0131s\u0131nda, bile\u015fen prop\u2019lar\u0131ndan ve state\u2019inden saf fonksiyonlar \u00e7\u0131kararak, <code class=\"language-javascript\">getDerivedStateFromProps()</code> ve di\u011fer s\u0131n\u0131f metotlar\u0131 aras\u0131nda baz\u0131 kod i\u00e7eriklerini tekrar kullanabilirsiniz.</p>\n<p>Unutmay\u0131n\u0131z ki bu metot, sebebi ne olursa olsun <strong>her render i\u015flemi esnas\u0131nda</strong> \u00e7a\u011fr\u0131l\u0131r. Bu durum, yaln\u0131zca \u00fcst bile\u015fenin tekrar render i\u015flemine sebebiyet verdi\u011fi ve yerel <code class=\"language-javascript\">setState</code>\u2018in render etmedi\u011finde \u00e7al\u0131\u015ft\u0131r\u0131lan <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps</code>\u2018un tam z\u0131tt\u0131d\u0131r.</p>\n\n<h3 id=\"getsnapshotbeforeupdate\"><a class=\"anchor\" href=\"/react/react-component#getsnapshotbeforeupdate\"></a><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bile\u015fenin render edilmi\u015f \u00e7\u0131kt\u0131s\u0131 DOM\u2019a yerle\u015ftirilmeden hemen \u00f6nce <code class=\"language-javascript\">getSnapshotBeforeUpdate()</code> \u00e7a\u011fr\u0131l\u0131r. Bu sayede DOM de\u011fi\u015fmeden \u00f6nce, kayd\u0131rma \u00e7ubu\u011fu (scrollbar) pozisyonu gibi baz\u0131 bilgilerin DOM\u2019dan al\u0131nmas\u0131 sa\u011flan\u0131r. Bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodundan d\u00f6nd\u00fcr\u00fclen her de\u011fer, <code class=\"language-javascript\">componentDidUpdate()</code>\u2018e parametre olarak ge\u00e7ilir.</p>\n<p><code class=\"language-javascript\">getSnapshotBeforeUpdate()</code>\u2018in kullan\u0131m\u0131 yayg\u0131n de\u011fildir. Fakat bir sohbet uygulamas\u0131nda yeni mesaj geldi\u011finde, kayd\u0131rma \u00e7ubu\u011funun a\u015fa\u011f\u0131 kayd\u0131r\u0131lmas\u0131 gibi \u00f6zel i\u015flemlerde gerekli olabilir.</p>\n<p>Bir <code class=\"language-javascript\">anl\u0131k g\u00f6r\u00fcnt\u00fc de\u011feri</code> (snapshot) veya <code class=\"language-javascript\">null</code> geri d\u00f6nd\u00fcr\u00fcl\u00fcr.</p>\n<p>\u00d6rne\u011fin:</p>\n<p><div class=\"gatsby-highlight\">\n<pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ScrollingList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getSnapshotBeforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Are we adding new items to the list?</span>\n    <span class=\"token comment\">// Capture the scroll position so we can adjust scroll later.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> list<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState<span class=\"token punctuation\">,</span> snapshot</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If we have a snapshot value, we've just added new items.</span>\n    <span class=\"token comment\">// Adjust scroll so these new items don't push the old ones out of view.</span>\n    <span class=\"token comment\">// (snapshot here is the value returned from getSnapshotBeforeUpdate)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snapshot <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> snapshot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ...contents... */</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</div></p>\n<p>\u00dcstteki \u00f6rnekte, <code class=\"language-javascript\">scrollHeight</code> \u00f6zelli\u011finin <code class=\"language-javascript\">getSnapshotBeforeUpdate</code>\u2018ten okunmas\u0131 \u00e7ok \u00f6nemlidir. \u00c7\u00fcnk\u00fc \u201crender\u201d ad\u0131m\u0131ndaki ya\u015fam d\u00f6ng\u00fcs\u00fc (<code class=\"language-javascript\">render()</code>) ile \u201ccommit\u201d ad\u0131m\u0131ndaki ya\u015fam d\u00f6ng\u00fcleri (<code class=\"language-javascript\">getSnapshotBeforeUpdate</code> ve <code class=\"language-javascript\">componentDidUpdate</code>) aras\u0131nda gecikmeler ya\u015fanabilir.</p>\n\n<h3 id=\"error-boundaries\"><a class=\"anchor\" href=\"/react/react-component#error-boundaries\"></a>Hata s\u0131n\u0131rlar\u0131 </h3>\n<p><a href=\"/react/error-boundaries\">Hata s\u0131n\u0131rlar\u0131 (error boundaries)</a>, alt bile\u015fen a\u011fac\u0131nda ger\u00e7ekle\u015fen bir JavaScript hatas\u0131n\u0131 yakalayan React bile\u015fenleridir. Yakalad\u0131klar\u0131 hatay\u0131 kaydeder ve bu hatadan dolay\u0131 \u00e7\u00f6ken bile\u015fen a\u011fac\u0131n\u0131n g\u00f6sterilmesi yerine, yedek olarak olu\u015fturulan bir aray\u00fcz \u00f6\u011fesinin g\u00f6r\u00fcnt\u00fclenmesini sa\u011flarlar. Hata s\u0131n\u0131rlar\u0131, kendi alt a\u011fac\u0131nda ger\u00e7ekle\u015fen render i\u015flemlerinde, ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131nda ve <code class=\"language-javascript\">constructor</code>\u2018larda olu\u015fan herhangi bir hatay\u0131 yakalarlar.</p>\n<p>Bir s\u0131n\u0131f bile\u015feni, <code class=\"language-javascript\">static getDerivedStateFromError()</code> veya <code class=\"language-javascript\">componentDidCatch()</code> ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131n\u0131 i\u00e7erirse, o bile\u015fen art\u0131k bir hata s\u0131n\u0131r\u0131 haline gelir. State\u2019in bu ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131 ile g\u00fcncellenmesi, alt a\u011fa\u00e7ta olu\u015fabilecek beklenmedik JavaScript hatalar\u0131n\u0131n yakalanmas\u0131n\u0131 ve bunun i\u00e7in bir aray\u00fcz g\u00f6r\u00fcnt\u00fclenmesini sa\u011flar.</p>\n<p>Hata s\u0131n\u0131rlar\u0131n\u0131 yaln\u0131zca beklenmedik exception\u2019lar\u0131n giderilmesi i\u00e7in kullan\u0131n\u0131z: <strong>kontrol ak\u0131\u015f\u0131 i\u00e7in kullanmay\u0131n\u0131z.</strong></p>\n<p>Daha fazla bilgi i\u00e7in <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/07/26/error-handling-in-react-16.html\"><em>React 16\u2019da hata y\u00f6netimini inceleyiniz</em></a>.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Hata s\u0131n\u0131rlar\u0131 sadece <strong>alt\u0131ndaki</strong> a\u011fa\u00e7ta bulunan bile\u015fenlerde olu\u015fan hatalar\u0131 yakalarlar. Bu nedenle hata s\u0131n\u0131rlar\u0131, kendi i\u00e7erisinde olu\u015fan bir hatay\u0131 yakalayamazlar.</p>\n</div>\n<h3 id=\"static-getderivedstatefromerror\"><a class=\"anchor\" href=\"/react/react-component#static-getderivedstatefromerror\"></a><code class=\"language-javascript\">static getDerivedStateFromError()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">getDerivedStateFromError(error)</code> metodu, bir alt bile\u015fende hata olu\u015ftuktan hemen sonra \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r.\nParametre olarak olu\u015fan hata nesnesini al\u0131r ve state\u2019in g\u00fcncellenmesi i\u00e7in geriye bir de\u011fer d\u00f6nd\u00fcr\u00fcr:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// state'in g\u00fcncellenmesi ile sonraki a\u015famada hata mesaj\u0131n\u0131n render edilmesi sa\u011flanacakt\u0131r </span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Hatan\u0131n g\u00f6r\u00fcnt\u00fclenmesi i\u00e7in herhangi bir i\u00e7erik sunabilirsiniz</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Something went wrong.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p><code class=\"language-javascript\">getDerivedStateFromError()</code> metodu, \u201crender\u201d a\u015famas\u0131nda \u00e7a\u011fr\u0131l\u0131r. Bu nedenle herhangi bir yan etkiye izin verilmez.\nBu t\u00fcr kullan\u0131mlar i\u00e7in, <code class=\"language-javascript\">componentDidCatch()</code>\u2018i kullan\u0131n\u0131z.</p>\n</div>\n\n<h3 id=\"componentdidcatch\"><a class=\"anchor\" href=\"/react/react-component#componentdidcatch\"></a><code class=\"language-javascript\">componentDidCatch()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">componentDidCatch(error, info)</code> metodu, bir alt bile\u015fende hata olu\u015ftuktan sonra hemen \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r.\n\u0130ki parametre al\u0131r:</p>\n<ol>\n<li><code class=\"language-javascript\">error</code> - Olu\u015fan hata nesnesi.</li>\n<li><code class=\"language-javascript\">info</code> - Hatay\u0131 <a href=\"/react/error-boundaries#component-stack-traces\">hangi bile\u015fenin verdi\u011fi ile ilgili bilgileri</a> tutan <code class=\"language-javascript\">componentStack</code>\u2018i i\u00e7eren hata bilgisi nesnesidir.</li>\n</ol>\n<p><code class=\"language-javascript\">componentDidCatch()</code> metodu, g\u00fcncellemenin \u201ccommit\u201d ad\u0131m\u0131nda \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Bu nedenle yan etkiye izin verir.\nHatalar\u0131n log\u2019lanmas\u0131 tarz\u0131ndaki i\u015fler i\u00e7in kullan\u0131lmal\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ErrorBoundary</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Sonraki render a\u015famas\u0131nda hata mesaj\u0131n\u0131n g\u00f6r\u00fcnt\u00fclenmesi i\u00e7in state g\u00fcncelleniyor.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hasError</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidCatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> info</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// \u00d6rnek bir `componentStack` metninin i\u00e7eri\u011fi a\u015fa\u011f\u0131daki gibidir:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in ComponentThatThrows (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in ErrorBoundary (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in div (created by App)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">//   in App</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">logComponentStackToMyService</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>componentStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Herhangi bir hata bile\u015feni g\u00f6r\u00fcnt\u00fcleyebilirsiniz.</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Something went wrong.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Production and development builds of React slightly differ in the way <code class=\"language-javascript\">componentDidCatch()</code> handles errors.</p>\n<p>On development, the errors will bubble up to <code class=\"language-javascript\">window</code>, this means that any <code class=\"language-javascript\">window.onerror</code> or <code class=\"language-javascript\">window.addEventListener('error', callback)</code> will intercept the errors that have been caught by <code class=\"language-javascript\">componentDidCatch()</code>.</p>\n<p>On production, instead, the errors will not bubble up, which means any ancestor error handler will only receive errors not explicitly caught by <code class=\"language-javascript\">componentDidCatch()</code>.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Bir hata durumunda, <code class=\"language-javascript\">setState</code>\u2018i \u00e7a\u011f\u0131rarak <code class=\"language-javascript\">componentDidCatch()</code> ile bir hata aray\u00fcz\u00fc g\u00f6r\u00fcnt\u00fcleyebilirsiniz. Fakat bu yakla\u015f\u0131m, gelecekteki React s\u00fcr\u00fcmlerinde kullan\u0131mdan kald\u0131r\u0131lacakt\u0131r.\nBunun yerine hata aray\u00fcz\u00fcn\u00fcn render edilmesi i\u00e7in <code class=\"language-javascript\">static getDerivedStateFromError()</code> metodunu kullan\u0131n\u0131z.</p>\n</div>\n\n<h3 id=\"legacy-lifecycle-methods\"><a class=\"anchor\" href=\"/react/react-component#legacy-lifecycle-methods\"></a>Eski Ya\u015fam D\u00f6ng\u00fcs\u00fc Methotlar\u0131 </h3>\n<p>A\u015fa\u011f\u0131daki ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131 <strong>eski (legacy)</strong> olarak i\u015faretlenmi\u015flerdir. Bu metotlar hala \u00e7al\u0131\u015f\u0131yor olmalar\u0131na ra\u011fmen, yeni yazaca\u011f\u0131n\u0131z kodlarda bu metotlar\u0131 kullanman\u0131z\u0131 tavsiye etmiyoruz. Eski ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131ndan kurtulmak i\u00e7in <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/03/27/update-on-async-rendering.html\">bu blog yaz\u0131s\u0131n\u0131</a> inceleyebilirsiniz.</p>\n<h3 id=\"unsafe_componentwillmount\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillmount\"></a><code class=\"language-javascript\">UNSAFE_componentWillMount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodunun ad\u0131 \u00f6nceden <code class=\"language-javascript\">componentWillMount</code> \u015feklindeydi. Bu isim, React\u2019in 17 s\u00fcr\u00fcm\u00fcne kadar \u00e7al\u0131\u015fmaya devam edecektir. Bile\u015fenlerinizi otomatik olarak g\u00fcncellemek i\u00e7in, <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\"><code class=\"language-javascript\">rename-unsafe-lifecycles</code> </a> komutunu kullanabilirsiniz.</p>\n</div>\n<p><code class=\"language-javascript\">UNSAFE_componentWillMount()</code> metodu, bile\u015fenin DOM\u2019a eklenmesinden \u00f6nce \u00e7a\u011fr\u0131l\u0131r. <code class=\"language-javascript\">render()</code> metodundan \u00f6nce \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131ndan dolay\u0131, bu metot i\u00e7erisinde <code class=\"language-javascript\">setState()</code> metodunun senkron olarak \u00e7a\u011fr\u0131lmas\u0131 ekstra bir render i\u015flemini tetiklememektedir. Bunun yerine, state\u2019in ba\u015flat\u0131lmas\u0131 i\u00e7in <code class=\"language-javascript\">constructor()</code> metodunu kullanman\u0131z\u0131 tavsiye ederiz.</p>\n<p>Bu metot i\u00e7erisinde herhangi bir yan etki i\u00e7eren i\u015flem veya abonelik i\u015flemleri yapmaktan ka\u00e7\u0131n\u0131n\u0131z. Bu t\u00fcr yakla\u015f\u0131mlar i\u00e7in <code class=\"language-javascript\">componentDidMount()</code> metodunu kullan\u0131n\u0131z.</p>\n<p>Sunucu tarafl\u0131 render etme i\u015fleminde yaln\u0131zca bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodu \u00e7a\u011fr\u0131l\u0131r.</p>\n\n<h3 id=\"unsafe_componentwillreceiveprops\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillreceiveprops\"></a><code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillReceiveProps</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>Bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodunun ad\u0131 \u00f6nceden <code class=\"language-javascript\">componentWillReceiveProps</code> \u015feklindeydi. Bu isim, React\u2019in 17 s\u00fcr\u00fcm\u00fcne kadar \u00e7al\u0131\u015fmaya devam edecektir. Bile\u015fenlerinizi otomatik olarak g\u00fcncellemek i\u00e7in, <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\"><code class=\"language-javascript\">rename-unsafe-lifecycles</code> </a> komutunu kullanabilirsiniz.</p>\n</div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodunun kullan\u0131m\u0131, uygulaman\u0131n hatal\u0131 ve tutars\u0131z \u00e7al\u0131\u015fmas\u0131na sebep olacakt\u0131r.</p>\n<ul>\n<li>E\u011fer verilerin getirilmesi veya bir animasyonun uygulanmas\u0131 gibi bir <strong>yan etki</strong> ger\u00e7ekle\u015ftirmek istiyorsan\u0131z, props\u2019ta olu\u015fan de\u011fi\u015fikliklere yan\u0131t vermek i\u00e7in <a href=\"/react/react-component#componentdidupdate\"><code class=\"language-javascript\">componentDidUpdate</code></a> metodunu kullan\u0131n\u0131z.</li>\n<li>Sadece bir prop de\u011fi\u015fti\u011finde baz\u0131 verilerin tekrar hesaplanmas\u0131 i\u00e7in <code class=\"language-javascript\">componentWillReceiveProps</code> metodunu kulland\u0131ysan\u0131z, bunun yerine <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#what-about-memoization\">memoization helper kullan\u0131n\u0131z</a>.</li>\n<li>E\u011fer bir prop de\u011fi\u015fti\u011finde baz\u0131 state de\u011fi\u015fkenlerini <code class=\"language-javascript\">componentWillReceiveProps</code> metodu ile yeniden ba\u015flatt\u0131ysan\u0131z, bunun yerine <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-controlled-component\">tamamen kontroll\u00fc bir bile\u015fen</a> veya <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key\">bir <code class=\"language-javascript\">key</code>\u2018e sahip tamamen kontrols\u00fcz bir bile\u015fen</a> olu\u015fturabilrsiniz.</li>\n</ul>\n<p>Di\u011fer kullan\u0131m durumlar\u0131 i\u00e7in, <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">state\u2019in t\u00fcretilmesi ile ilgili bu blog yaz\u0131s\u0131n\u0131</a> inceleyebilirsiniz.</p>\n</div>\n<p>DOM\u2019a eklenmi\u015f bir bile\u015fen, yeni prop de\u011ferlerini almas\u0131ndan hemen \u00f6nce <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> metodu \u00e7a\u011fr\u0131l\u0131r. Prop de\u011fi\u015fikliklerine g\u00f6re state\u2019i g\u00fcncellemeniz (\u00f6rne\u011fin state\u2019i yeniden ba\u015flatman\u0131z) gerekiyorsa, <code class=\"language-javascript\">this.props</code> ve <code class=\"language-javascript\">nextProps</code> de\u011ferlerini kar\u015f\u0131la\u015ft\u0131rabilir ve bu metot i\u00e7erisinde <code class=\"language-javascript\">this.setState()</code>\u2018i kullanarak state ge\u00e7i\u015flerini ger\u00e7ekle\u015ftirebilirsiniz.</p>\n<p>Unutmay\u0131n\u0131z ki, e\u011fer bir \u00fcst bile\u015fen, alt\u0131ndaki bile\u015fenin tekrar render edilmesine sebep oluyorsa, props de\u011ferleri de\u011fi\u015fmemi\u015f olsa bile bu metot \u00e7a\u011fr\u0131l\u0131r. Bu nedenle olu\u015fan de\u011fi\u015fiklikleri y\u00f6netmek i\u00e7in, mevcut de\u011fer ile ve sonraki de\u011ferleri kar\u015f\u0131la\u015ft\u0131r\u0131n\u0131z.</p>\n<p>React, bile\u015fenin DOM\u2019a <a href=\"/react/react-component#mounting\">eklenmesi</a> s\u0131ras\u0131nda, ba\u015flang\u0131\u00e7 prop de\u011ferleri ile <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> metodunu \u00e7a\u011f\u0131rmaz. Yaln\u0131zca bile\u015fenin prop de\u011ferleri de\u011fi\u015fti\u011finde bu metodu \u00e7al\u0131\u015ft\u0131r\u0131r. Bunun haricinde <code class=\"language-javascript\">this.setState()</code>\u2018in \u00e7a\u011fr\u0131lmas\u0131 da <code class=\"language-javascript\">UNSAFE_componentWillReceiveProps()</code> metodunun \u00e7a\u011fr\u0131lmas\u0131n\u0131 tetiklemez.</p>\n\n<h3 id=\"unsafe_componentwillupdate\"><a class=\"anchor\" href=\"/react/react-component#unsafe_componentwillupdate\"></a><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">UNSAFE_componentWillUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">,</span> nextState<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu ya\u015fam d\u00f6ng\u00fcs\u00fc metodunun ad\u0131 \u00f6nceden <code class=\"language-javascript\">componentWillUpdate</code> \u015feklindeydi. Bu isim, React\u2019in 17 s\u00fcr\u00fcm\u00fcne kadar \u00e7al\u0131\u015fmaya devam edecektir. Bile\u015fenlerinizi otomatik olarak g\u00fcncellemek i\u00e7in, <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles\"><code class=\"language-javascript\">rename-unsafe-lifecycles</code> </a> komutunu kullanabilirsiniz.</p>\n</div>\n<p><code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> metodu, yeni bir prop veya state de\u011feri al\u0131nd\u0131\u011f\u0131nda, render i\u015fleminin hemen \u00f6ncesinde \u00e7a\u011fr\u0131l\u0131r. Bu f\u0131rsat\u0131 de\u011ferlendirerek, g\u00fcncelleme olu\u015fmadan \u00f6nce ilgili haz\u0131rl\u0131klar\u0131 yapabilirsiniz. Bu metot, ilk render i\u015fleminde \u00e7al\u0131\u015ft\u0131r\u0131lmaz.</p>\n<p>Unutmay\u0131n\u0131z ki, bu fonksiyon i\u00e7erisinde, <code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> metodunun geriye de\u011fer d\u00f6nd\u00fcrmesinden \u00f6nce, React bile\u015feninin g\u00fcncellenmesini tetikleyecek; <code class=\"language-javascript\">this.setState()</code>\u2018i veya herhangi bir metodu (\u00f6rne\u011fin Redux action\u2019\u0131n\u0131n dispatch edilmesini) \u00e7a\u011f\u0131ramazs\u0131n\u0131z.</p>\n<p>Genellikle bu metot, <code class=\"language-javascript\">componentDidUpdate()</code> metodu ile de\u011fi\u015ftirilebilir. E\u011fer bu metot i\u00e7erisinde DOM\u2019dan bir de\u011fer okumas\u0131 yap\u0131yorsan\u0131z (\u00f6rne\u011fin kayd\u0131rma \u00e7ubu\u011fu pozisyonunu kaydediyorsan\u0131z), bu kodlar\u0131 <code class=\"language-javascript\">getSnapshotBeforeUpdate()</code>\u2018e ta\u015f\u0131yabilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>E\u011fer <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate()</code></a> metodu false d\u00f6nd\u00fcr\u00fcyorsa, <code class=\"language-javascript\">UNSAFE_componentWillUpdate()</code> metodu \u00e7a\u011fr\u0131lmaz.</p>\n</div>\n\n<h2 id=\"other-apis-1\"><a class=\"anchor\" href=\"/react/react-component#other-apis-1\"></a>Di\u011fer API\u2019lar </h2>\n<p>React\u2019in sizin i\u00e7in otomatik olarak \u00e7a\u011f\u0131rd\u0131\u011f\u0131 yukar\u0131daki ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131n\u0131n aksine, a\u015fa\u011f\u0131da yer alan metotlar\u0131 sadece <strong>siz</strong> \u00e7a\u011f\u0131rabilirsiniz. </p>\n<p>Yaln\u0131zca iki adet metot vard\u0131r. Bunlar <code class=\"language-javascript\">setState()</code> ve <code class=\"language-javascript\">forceUpdate()</code> metotlar\u0131d\u0131r.</p>\n<h3 id=\"setstate\"><a class=\"anchor\" href=\"/react/react-component#setstate\"></a><code class=\"language-javascript\">setState()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>updater<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">setState()</code> metodu, bile\u015fenin state\u2019inde olan de\u011fi\u015fiklikleri bir kuyru\u011fa atar ve React\u2019e, bu bile\u015fenin ve alt bile\u015fenlerinin g\u00fcncellenen state ile birlikte tekrar render edilmesi gerekti\u011fini bildirir. Sunucu cevaplar\u0131 ve onClick gibi olay gidericilerinden d\u00f6nen de\u011fi\u015fikliklerin aray\u00fcze yans\u0131t\u0131lmas\u0131 i\u00e7in ba\u015fl\u0131ca metottur.</p>\n<p><code class=\"language-javascript\">setState()</code>, bir bile\u015feni direkt olarak g\u00fcncelleyen bir metot de\u011fildir. Bu nedenle <code class=\"language-javascript\">setState()</code>\u2018i, React\u2019e yap\u0131lan bir <em>istek</em> olarak d\u00fc\u015f\u00fcnmelisiniz. React, daha iyi bir performans i\u00e7in bu metodun \u00e7al\u0131\u015fmas\u0131n\u0131 geciktirebilir, ve daha sonra t\u00fcm g\u00fcncellemeler ile birlikte tek seferde ger\u00e7ekle\u015ftirebilir. Bu nedenle React, state g\u00fcncellemelerinin an\u0131nda ger\u00e7ekle\u015ftirilece\u011fini garanti etmemektedir. Nadiren, DOM g\u00fcncellemelerinin an\u0131nda ve senkronize bir \u015fekilde olmas\u0131na ihtiyac\u0131n\u0131z olabilir. Bu durumda state g\u00fcncellemelerini <a href=\"/react/react-dom#flushsync\"><code class=\"language-javascript\">flushSync</code></a> ile \u00e7evreleyebilirsiniz. Unutmay\u0131n bu performas\u0131 olumsuz y\u00f6nde etkileyebilir.</p>\n<p><code class=\"language-javascript\">setState()</code> metodu, her zaman bile\u015feni an\u0131nda g\u00fcncellemez. G\u00fcncellemeleri y\u0131\u011f\u0131n haline getirebilir veya daha sonra ger\u00e7ekle\u015fmesi i\u00e7in geciktirebilir. Bu nedenle, <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131m\u0131ndan sonra <code class=\"language-javascript\">this.state</code> de\u011ferinin okunmas\u0131 yayg\u0131n olarak yap\u0131lan bir yanl\u0131\u015ft\u0131r. Bunun yerine, <code class=\"language-javascript\">componentDidUpdate</code> metodunu veya <code class=\"language-javascript\">setState</code> callback\u2019ini (<code class=\"language-javascript\">setState(updater, callback)</code>) kullan\u0131n\u0131z. Her iki kullan\u0131m da, g\u00fcncellemeler uyguland\u0131ktan sonra kodun \u00e7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 garanti eder. E\u011fer mevcut state\u2019i, \u00f6nceki state\u2019e g\u00f6re g\u00fcncellemeye ihtiyac\u0131n\u0131z varsa, a\u015fa\u011f\u0131da yer alan <code class=\"language-javascript\">updater</code> parametresini inceleyebilirsiniz.</p>\n<p><code class=\"language-javascript\">setState()</code>, <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu <code class=\"language-javascript\">false</code> d\u00f6nmedi\u011fi s\u00fcrece, ilgili bile\u015fenin tekrar render edilmesini sa\u011flar. E\u011fer de\u011fi\u015ftirilebilir (mutable) nesneler kullan\u0131l\u0131rsa ve buna ba\u011fl\u0131 olarak <code class=\"language-javascript\">shouldComponentUpdate()</code> i\u00e7erisinde ko\u015fullu render\u2019lama (conditional rendering) mant\u0131\u011f\u0131 kurulamazsa, \u00f6nceki state\u2019ten yeni state\u2019in farkl\u0131 oldu\u011fu durumda yaln\u0131zca <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131m\u0131 gereksiz render i\u015flemini <strong>ger\u00e7ekle\u015ftirmeyecektir</strong>.</p>\n<p><code class=\"language-javascript\">setState()</code>\u2018in ilk parametresi bir <code class=\"language-javascript\">updater</code> fonksiyonudur ve a\u015fa\u011f\u0131daki gibi yer almaktad\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> stateChange</code></pre></div>\n<p><code class=\"language-javascript\">state</code>, de\u011fi\u015fikli\u011fin uyguland\u0131\u011f\u0131 andaki bile\u015fenin state\u2019ini tutmaktad\u0131r. De\u011fi\u015fiklikler, <code class=\"language-javascript\">state</code> ve <code class=\"language-javascript\">props</code> girdilerini baz alan yeni bir nesne olu\u015fturularak temsil edilmelidir. \u00d6rne\u011fin, state\u2019teki bir de\u011feri, <code class=\"language-javascript\">props.step</code> de\u011feri ile artt\u0131rd\u0131\u011f\u0131m\u0131z\u0131 varsayal\u0131m: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu kodda, updater fonksiyonuna aktar\u0131lan <code class=\"language-javascript\">state</code> ve <code class=\"language-javascript\">props</code> de\u011ferlerinin g\u00fcncel oldu\u011fu garanti edilir. Updater\u2019\u0131n \u00e7\u0131kt\u0131s\u0131, <code class=\"language-javascript\">state</code> ile y\u00fczeysel olarak birle\u015ftirilir.</p>\n<p><code class=\"language-javascript\">setState()</code>\u2018in ikinci parametresi, <code class=\"language-javascript\">setState</code> \u00e7a\u011fr\u0131m\u0131 tamamland\u0131\u011f\u0131nda ve bile\u015fen tekrar render edildi\u011finde bir defa \u00e7a\u011fr\u0131lacak olan ve iste\u011fe ba\u011fl\u0131 olarak tan\u0131mlanan callback fonksiyonudur. Bunun yerine genellikle <code class=\"language-javascript\">componentDidUpdate()</code> metodunun kullan\u0131lmas\u0131n\u0131 \u00f6neririz.</p>\n<p>\u0130ste\u011fe ba\u011fl\u0131 olarak, <code class=\"language-javascript\">setState()</code>\u2018in ilk parametresi i\u00e7in, bir fonksiyon yerine a\u015fa\u011f\u0131daki gibi bir nesne ge\u00e7ebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>stateChange<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bu, <code class=\"language-javascript\">stateChange</code>\u2018in y\u00fczeysel olarak <code class=\"language-javascript\">state</code> ile birle\u015ftirilmesini sa\u011flar. \u00d6rne\u011fin bir al\u0131\u015fveri\u015f sepetindeki \u00fcr\u00fcn\u00fcn adedini a\u015fa\u011f\u0131daki gibi g\u00fcncelleyebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Ayr\u0131ca <code class=\"language-javascript\">setState()</code>\u2018in bu \u015fekilde kullan\u0131m\u0131 asenkron olarak \u00e7al\u0131\u015f\u0131r. Bu nedenle ayn\u0131 render d\u00f6ng\u00fcs\u00fcnde birka\u00e7 defa yap\u0131lan <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131lar\u0131, tekil hale getirilerek i\u015flenebilir. \u00d6rne\u011fin, ayn\u0131 render d\u00f6ng\u00fcs\u00fcnde \u00fcr\u00fcn adedini birden fazla kez artt\u0131rmaya \u00e7al\u0131\u015f\u0131rsan\u0131z, i\u015flemin sonucu <code class=\"language-javascript\">Object.assign()</code> ile tekil bir metot \u00e7a\u011fr\u0131s\u0131 haline getirilecek ve a\u015fa\u011f\u0131daki gibi olacakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-javascript\"><code class=\"language-javascript\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>\n  previousState<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Ayn\u0131 render d\u00f6ng\u00fcs\u00fcnde art arda yap\u0131lan \u00e7a\u011fr\u0131mlar, \u00f6nceki \u00e7a\u011fr\u0131mdan gelen de\u011fi\u015fiklikleri ezerek \u00fcst\u00fcne yazacakt\u0131r. B\u00f6ylece <code class=\"language-javascript\">quantity</code> de\u011feri yaln\u0131zca bir kez artt\u0131r\u0131lacakt\u0131r. Bu nedenle e\u011fer sonraki state, mevcut state\u2019e ba\u011f\u0131ml\u0131 ise, a\u015fa\u011f\u0131daki gibi bir <code class=\"language-javascript\">updater</code> fonksiyonu kullanman\u0131z\u0131 \u00f6neririz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Daha fazla bilgi i\u00e7in:</p>\n<ul>\n<li><a href=\"/react/state-and-lifecycle\">State ve Ya\u015fam D\u00f6ng\u00fcs\u00fc Rehberi</a></li>\n<li><a class=\"external-link\" href=\"https://stackoverflow.com/a/48610973/458193\">Derinlemesine inceleme: <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131lar\u0131 neden ve ne zaman tekil hale getirilirler?</a></li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/issues/11527#issuecomment-360199710\">Derinlemesine inceleme: <code class=\"language-javascript\">this.state</code> neden an\u0131nda g\u00fcncellenmez?</a></li>\n</ul>\n\n<h3 id=\"forceupdate\"><a class=\"anchor\" href=\"/react/react-component#forceupdate\"></a><code class=\"language-javascript\">forceUpdate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">component<span class=\"token punctuation\">.</span><span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bile\u015feninizin state\u2019i veya prop\u2019lar\u0131 de\u011fi\u015fti\u011finde, varsay\u0131lan olarak bile\u015feniniz tekrar render edilecektir. E\u011fer <code class=\"language-javascript\">render()</code> metodunuz, bunlar\u0131n haricinde ba\u015fka verilere ba\u011f\u0131ml\u0131 ise, <code class=\"language-javascript\">forceUpdate()</code>\u2018i \u00e7a\u011f\u0131rarak bile\u015feninizin tekrar render edilmesi gerekti\u011fini React\u2019e s\u00f6yleyebilirsiniz.</p>\n<p>Bile\u015fen \u00fczerinde <code class=\"language-javascript\">forceUpdate()</code> \u00e7a\u011fr\u0131m\u0131, <code class=\"language-javascript\">shouldComponentUpdate()</code>\u2018in es ge\u00e7ilerek <code class=\"language-javascript\">render()</code> metodunun \u00e7al\u0131\u015fmas\u0131na neden olacakt\u0131r. <code class=\"language-javascript\">forceUpdate()</code> \u00e7a\u011fr\u0131m\u0131, alt bile\u015fenler i\u00e7in normal ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131n\u0131 tetikleyecektir. Bu metotlara, her bir alt bile\u015fen i\u00e7in \u00e7a\u011fr\u0131lacak <code class=\"language-javascript\">shouldComponentUpdate()</code> metodu da dahildir. Buna ra\u011fmen HTML taraf\u0131nda olu\u015fan de\u011fi\u015fikliklerde, React sadece DOM\u2019\u0131 g\u00fcncellemeye devam edecektir.</p>\n<p>Normalde <code class=\"language-javascript\">forceUpdate()</code>\u2018in kullan\u0131m\u0131ndan ka\u00e7\u0131nmal\u0131 ve yaln\u0131zca <code class=\"language-javascript\">render()</code> metodu i\u00e7erisinde <code class=\"language-javascript\">this.props</code> ve <code class=\"language-javascript\">this.state</code>\u2018ten okuma i\u015flemi yapmal\u0131s\u0131n\u0131z.</p>\n\n<h2 id=\"class-properties-1\"><a class=\"anchor\" href=\"/react/react-component#class-properties-1\"></a>S\u0131n\u0131f Bile\u015feninin De\u011fi\u015fkenleri </h2>\n<h3 id=\"defaultprops\"><a class=\"anchor\" href=\"/react/react-component#defaultprops\"></a><code class=\"language-javascript\">defaultProps</code> </h3>\n<p><code class=\"language-javascript\">defaultProps</code>, bile\u015fen s\u0131n\u0131f\u0131n\u0131n varsay\u0131lan prop de\u011ferlerini atamak i\u00e7in s\u0131n\u0131f i\u00e7erisinde \u00f6zellik olarak tan\u0131mlanabilir. Bu de\u011fi\u015fken, tan\u0131ml\u0131 olmayan prop de\u011ferleri (<code class=\"language-javascript\">undefined</code>) i\u00e7in kullan\u0131l\u0131r. <code class=\"language-javascript\">null</code> de\u011feri i\u00e7eren prop\u2019lar i\u00e7in kullan\u0131lmaz. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\nCustomButton<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>E\u011fer bile\u015fene <code class=\"language-javascript\">props.color</code> de\u011feri aktar\u0131lmazsa, varsay\u0131lan olarak <code class=\"language-javascript\">'blue'</code> atanacakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// props.color de\u011feri blue olarak atanacakt\u0131r</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">props.color</code> de\u011feri <code class=\"language-javascript\">null</code> olarak atanm\u0131\u015fsa, de\u011fi\u015fmeden <code class=\"language-javascript\">null</code> olarak kalacakt\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CustomButton</span></span> <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// props.color de\u011feri null olarak kalacakt\u0131r</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n\n<h3 id=\"displayname\"><a class=\"anchor\" href=\"/react/react-component#displayname\"></a><code class=\"language-javascript\">displayName</code> </h3>\n<p><code class=\"language-javascript\">displayName</code> de\u011fi\u015fkeni, hata ay\u0131klama mesajlar\u0131nda kullan\u0131l\u0131r. Genellikle a\u00e7\u0131k olarak bu de\u011fi\u015fkene atama yapman\u0131za gerek yoktur. \u00c7\u00fcnk\u00fc tan\u0131mland\u0131\u011f\u0131 fonksiyon veya s\u0131n\u0131f bile\u015feninin isminden olu\u015fturulmaktad\u0131r. Hata ay\u0131klama i\u015fleminde farkl\u0131 bir isim kullanmak istiyorsan\u0131z, elbette bu de\u011fi\u015fkeni a\u00e7\u0131k bir \u015fekilde tan\u0131mlay\u0131p atama yapabilirsiniz. Ayr\u0131ca high-order bir bile\u015fen olu\u015ftururken de kullanabilirsiniz. <a href=\"/react/higher-order-components#convention-wrap-the-display-name-for-easy-debugging\">Kolay bir \u015fekilde hata ay\u0131klama i\u00e7in g\u00f6r\u00fcnen ismin de\u011fi\u015ftirilmesi</a> yaz\u0131s\u0131ndan daha detayl\u0131 bilgi edinebilirsiniz.</p>\n\n<h2 id=\"instance-properties-1\"><a class=\"anchor\" href=\"/react/react-component#instance-properties-1\"></a>Bile\u015fen Nesnesinin De\u011fi\u015fkenleri </h2>\n<h3 id=\"props\"><a class=\"anchor\" href=\"/react/react-component#props\"></a><code class=\"language-javascript\">props</code> </h3>\n<p><code class=\"language-javascript\">this.props</code>, bu de\u011fi\u015fkeni \u00e7a\u011f\u0131ran eleman taraf\u0131ndan tan\u0131mlanan prop de\u011ferlerini i\u00e7erir. Prop\u2019lara giri\u015f olmas\u0131 a\u00e7\u0131s\u0131ndan fazla bilgi i\u00e7in <a href=\"/react/components-and-props\">Bile\u015fenler ve Prop\u2019lar</a> yaz\u0131s\u0131n\u0131 inceleyebilirsiniz.</p>\n<p>Bilhassa, <code class=\"language-javascript\">this.props.children</code> \u00f6zel bir prop\u2019tur. Genellikle etiketin kendisi yerine JSX ifadesindeki alt etiketler taraf\u0131ndan tan\u0131mlan\u0131r.</p>\n<h3 id=\"state\"><a class=\"anchor\" href=\"/react/react-component#state\"></a><code class=\"language-javascript\">state</code> </h3>\n<p>State, zaman i\u00e7erisinde de\u011fi\u015fim g\u00f6sterebilen ve ilgili de\u011fi\u015fkene \u00f6zg\u00fc olan verileri tutar. State de\u011fi\u015fkeni kullan\u0131c\u0131 taraf\u0131ndan tan\u0131mlan\u0131r, ve d\u00fcz bir JavaScript nesnesi olmal\u0131d\u0131r.</p>\n<p>E\u011fer state\u2019te tan\u0131mlanan baz\u0131 de\u011ferler, render i\u015fleminde veya zamanlay\u0131c\u0131 ID\u2019sinin tutulmas\u0131 gibi veri ak\u0131\u015f\u0131na y\u00f6nelik i\u015flemlerde kullan\u0131lm\u0131yorsa, bu de\u011fi\u015fkenler state i\u00e7erisine konulmamal\u0131d\u0131r. Bu de\u011ferler, bile\u015fen nesnesinde de\u011fi\u015fken olarak tan\u0131mlanabilirler.</p>\n<p>State hakk\u0131nda daha fazla bilgi i\u00e7in <a href=\"/react/state-and-lifecycle\">State ve Lifecycle</a> sayfas\u0131na g\u00f6z atabilirsiniz.</p>\n<p><code class=\"language-javascript\">this.state</code>\u2018i direkt olarak de\u011fi\u015ftirmeyiniz. \u00c7\u00fcnk\u00fc daha sonra yap\u0131lan <code class=\"language-javascript\">setState()</code> \u00e7a\u011fr\u0131lar\u0131, yapt\u0131\u011f\u0131n\u0131z de\u011fi\u015fikliklerin \u00fczerine yazabilir. Bu nedenle <code class=\"language-javascript\">this.state</code>\u2018e immutable\u2019m\u0131\u015f gibi davranmal\u0131s\u0131n\u0131z.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-react-component.md\">Edit this page</a></p></div></article>", "path": "/react/react-component", "nav": ["/react/react-api", "/react/react-dom"]}, {"key": "ReactDOM", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><code class=\"language-javascript\">react-dom</code> uygulaman\u0131n en \u00fcst seviyesinde, DOM\u2019a \u00f6zel metotlar sunar ve bu da gerekti\u011finde React modelinin d\u0131\u015f\u0131na \u00e7\u0131kabilmenizi sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ES5\u2019i npm ile kullan\u0131yorsan\u0131z \u015f\u00f6yle yazabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ReactDOM <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">react-dom</code> paketi ayr\u0131ca istemci ve sunucu uygulamalar\u0131na \u00f6zel mod\u00fcller sa\u011flar:</p>\n<ul>\n<li><a href=\"/react/react-dom-client\"><code class=\"language-javascript\">react-dom/client</code></a></li>\n<li><a href=\"/react/react-dom-server\"><code class=\"language-javascript\">react-dom/server</code></a></li>\n</ul>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-dom#overview\"></a>Genel Bak\u0131\u015f </h2>\n<p><code class=\"language-javascript\">react-dom</code> paketi \u015fu metodlar\u0131 d\u0131\u015fa aktar\u0131r:</p>\n<ul>\n<li><a href=\"/react/react-dom#createportal\"><code class=\"language-javascript\">createPortal()</code></a></li>\n<li><a href=\"/react/react-dom#flushsync\"><code class=\"language-javascript\">flushSync()</code></a></li>\n</ul>\n<p>Bu <code class=\"language-javascript\">react-dom</code> metodlar\u0131 de d\u0131\u015fa aktar\u0131l\u0131r, ancak eski olarak kabul edilir:</p>\n<ul>\n<li><a href=\"/react/react-dom#render\"><code class=\"language-javascript\">render()</code></a></li>\n<li><a href=\"/react/react-dom#hydrate\"><code class=\"language-javascript\">hydrate()</code></a></li>\n<li><a href=\"/react/react-dom#finddomnode\"><code class=\"language-javascript\">findDOMNode()</code></a></li>\n<li><a href=\"/react/react-dom#unmountcomponentatnode\"><code class=\"language-javascript\">unmountComponentAtNode()</code></a></li>\n</ul>\n<div class=\"blockquote\">\n<strong>Not: </strong>\n<p>React 18\u2019de, hem <code class=\"language-javascript\">render</code> hem de <code class=\"language-javascript\">hydrate</code> yeni <a href=\"/react/react-dom-client\">istemci metodlar\u0131</a> ile de\u011fi\u015ftirildi. Bu metodlar, uygulaman\u0131z\u0131n React versiyon 17 kullan\u0131yormu\u015f gibi davranaca\u011f\u0131 konusunda uyar\u0131r. (<a class=\"external-link\" href=\"https://reactjs.org/link/switch-to-createroot\">buradan</a> daha fazla bilgi edinin).</p>\n</div>\n<h3 id=\"browser-support\"><a class=\"anchor\" href=\"/react/react-dom#browser-support\"></a>Taray\u0131c\u0131 Deste\u011fi </h3>\n<p>React, t\u00fcm modern taray\u0131c\u0131lar\u0131 destekler, yinede eski versiyonlar i\u00e7in <a href=\"/react/javascript-environment-requirements\">baz\u0131 polyfill\u2019ler gereklidir</a>.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>ES5 metotlar\u0131n\u0131 desteklemeyen taray\u0131c\u0131lar\u0131 desteklemiyoruz, ama <a class=\"external-link\" href=\"https://github.com/es-shims/es5-shim\">es5-shim ve es5-sham</a> gibi baz\u0131 eklentiler kullan\u0131ld\u0131\u011f\u0131nda, uygulaman\u0131z\u0131n \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 g\u00f6rebilirsiniz. Bu yolu kullanmak sizin takdirinizdir.</p>\n</div>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-dom#reference\"></a>Referans </h2>\n<h3 id=\"createportal\"><a class=\"anchor\" href=\"/react/react-dom#createportal\"></a><code class=\"language-javascript\">createPortal()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bir portal olu\u015fturur. Portallar, <a href=\"/react/portals\">alt elemanlar\u0131 DOM bile\u015feninin hiyerar\u015fisi d\u0131\u015f\u0131nda var olan bir DOM d\u00fc\u011f\u00fcm\u00fcne render etmek</a> i\u00e7in bir yol sa\u011flar.</p>\n<h3 id=\"flushsync\"><a class=\"anchor\" href=\"/react/react-dom#flushsync\"></a><code class=\"language-javascript\">flushSync()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">flushSync</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span></code></pre></div>\n<p>React\u2019i, parametre olarak verilen callback i\u00e7indeki t\u00fcm g\u00fcncellemeleri senkron olarak \u00e7al\u0131\u015ft\u0131rmaya zorlar. Bu, DOM\u2019un hemen g\u00fcncellenmesini sa\u011flar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Bu state g\u00fcncellemesini senkronize olmaya zorlay\u0131n.</span>\n<span class=\"token function\">flushSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Bu noktada, DOM g\u00fcncellenmi\u015ftir.</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">flushSync</code> performansa ciddi \u00f6l\u00e7\u00fcde zarar verebilir. Dikkatli kullan\u0131n.</p>\n<p><code class=\"language-javascript\">flushSync</code>, bekleyen Suspense s\u0131n\u0131rlar\u0131n\u0131 <code class=\"language-javascript\">ge\u00e7ici</code> durumlar\u0131n\u0131 g\u00f6stermeye zorlayabilir.</p>\n<p><code class=\"language-javascript\">flushSync</code> ayr\u0131ca bekleyen efektleri \u00e7al\u0131\u015ft\u0131rabilir ve geri d\u00f6nmeden \u00f6nce i\u00e7erdikleri g\u00fcncellemeleri e\u015fzamanl\u0131 olarak uygulayabilir.</p>\n<p><code class=\"language-javascript\">flushSync</code>, callback i\u00e7indeki g\u00fcncellemeleri uygulamak i\u00e7in gerekti\u011finde callback d\u0131\u015f\u0131ndaki g\u00fcncellemeleri de uygulayabilir. \u00d6rne\u011fin, bir t\u0131klamadan dolay\u0131 bekleyen g\u00fcncellemeler varsa; React, callback i\u00e7indeki g\u00fcncellemeleri uygulamak i\u00e7in \u00f6nce bunlar\u0131 uygulayabilir.</p>\n</div>\n<h2 id=\"legacy-reference\"><a class=\"anchor\" href=\"/react/react-dom#legacy-reference\"></a>Eski Referans </h2>\n<h3 id=\"render\"><a class=\"anchor\" href=\"/react/react-dom#render\"></a><code class=\"language-javascript\">render()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React versiyon 18 ile birlikte <code class=\"language-javascript\">render</code>\u2018in yerini <code class=\"language-javascript\">createRoot</code> ald\u0131. Daha fazla bilgi i\u00e7in <a href=\"/react/react-dom-client#createroot\">createRoot</a> k\u0131sm\u0131n\u0131 inceleyebilirsiniz.</p>\n</div>\n<p>E\u011fer React eleman\u0131 <code class=\"language-javascript\">container</code> a daha \u00f6nceden render edildiyse, bu; g\u00fcncelleme olarak ger\u00e7ekle\u015fir ve en g\u00fcncel React eleman\u0131n\u0131 yans\u0131tmak i\u00e7in sadece DOM\u2019u de\u011fi\u015ftirir.</p>\n<p>E\u011fer iste\u011fe ba\u011fl\u0131 callback sa\u011fland\u0131ysa, bile\u015fen render edildikten ya da g\u00fcncellendikten sonra \u00e7a\u011fr\u0131l\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">render()</code> iletti\u011finiz konteyner eleman\u0131n\u0131n i\u00e7eri\u011fini kontrol eder. \u0130lk \u00e7a\u011fr\u0131ld\u0131\u011f\u0131nda, i\u00e7erisindeki b\u00fct\u00fcn DOM elemanlar\u0131 de\u011fi\u015ftirilir. Daha sonra yap\u0131lan \u00e7a\u011fr\u0131lar, etkili g\u00fcncellemeler i\u00e7in React\u2019in DOM fark bulma algoritmas\u0131n\u0131 kullan\u0131r.</p>\n<p><code class=\"language-javascript\">render()</code>, konteyner eleman\u0131n\u0131 de\u011fi\u015ftirmez (yaln\u0131zca konteyner\u0131n alt elemanlar\u0131n\u0131 de\u011fi\u015ftirir). Mevcut alt elemanlar\u0131n \u00fczerine yazmadan varolan bir DOM eleman\u0131na, bile\u015fen eklemek m\u00fcmk\u00fcn olabilir.</p>\n<p><code class=\"language-javascript\">render()</code> halihaz\u0131rda <code class=\"language-javascript\">ReactComponent</code> nesnesinin k\u00f6k\u00fcne bir referans d\u00f6n\u00fcyor. Ancak, bu d\u00f6n\u00fc\u015f de\u011ferini kullanmak eskidi\nve bundan ka\u00e7\u0131n\u0131lmal\u0131d\u0131r, \u00e7\u00fcnk\u00fc React\u2019in gelecekteki s\u00fcr\u00fcmleri, baz\u0131 durumlarda bile\u015fenleri e\u015fzamans\u0131z olarak sa\u011flayabilir. K\u00f6k <code class=\"language-javascript\">ReactComponent</code> nesnesine referans gerekiyorsa, tercih edilen \u00e7\u00f6z\u00fcm k\u00f6k elemana bir <a href=\"/react/refs-and-the-dom#callback-refs\">callback referans\u0131</a> olmal\u0131d\u0131r.</p>\n<p>Sunucu taraf\u0131ndan render edilen bir konteyner\u0131 hidratlamak i\u00e7in <code class=\"language-javascript\">render()</code>\u0131n kullan\u0131lmas\u0131 art\u0131k desteklenmiyor. Bunun yerine <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">hydrateRoot()</code></a> kullan\u0131lmal\u0131d\u0131r.</p>\n</div>\n<h3 id=\"hydrate\"><a class=\"anchor\" href=\"/react/react-dom#hydrate\"></a><code class=\"language-javascript\">hydrate()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">hydrate</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React versiyon 18 ile birlikte <code class=\"language-javascript\">hydrate</code>\u2018in yerini <code class=\"language-javascript\">hydrateRoot</code> ald\u0131. Daha fazla bilgi i\u00e7in <a href=\"/react/react-dom-client#hydrateroot\">hydrateRoot</a> k\u0131sm\u0131n\u0131 inceleyebilirsiniz.</p>\n</div>\n<p><a href=\"/react/react-dom#render\"><code class=\"language-javascript\">render()</code></a> ile ayn\u0131d\u0131r, ancak HTML i\u00e7eri\u011fi <a href=\"/react/react-dom-server\"><code class=\"language-javascript\">ReactDOMServer</code></a> taraf\u0131ndan render edilen bir konteyn\u0131r\u0131 hidratlamak i\u00e7in kullan\u0131l\u0131r. React, olaylar\u0131n\u0131 mevcuda eklemeye \u00e7al\u0131\u015facakt\u0131r.</p>\n<p>React, olu\u015fturulan i\u00e7eri\u011fin sunucu ve istemci taraflar\u0131nda ayn\u0131 olmas\u0131n\u0131 bekler. Metin i\u00e7eri\u011findeki farkl\u0131l\u0131klar\u0131 d\u00fczeltebilir, ancak uyumsuzluklar\u0131 hata olarak g\u00f6rmeli ve d\u00fczeltmelisiniz. Geli\u015ftirme modunda React, hidrasyon s\u0131ras\u0131nda uyumsuzluklar i\u00e7in uyar\u0131r. Uyu\u015fmazl\u0131k durumunda, \u00f6znitelik farkl\u0131l\u0131klar\u0131n\u0131n d\u00fczeltilece\u011finin garantisi yoktur. Bu, performans nedenlerinden \u00f6t\u00fcr\u00fc \u00f6nemlidir; \u00e7\u00fcnk\u00fc \u00e7o\u011fu uygulamada uyumsuzluklar nadirdir ve bu nedenle t\u00fcm bi\u00e7imlendirmeyi do\u011frulamak \u00e7ok pahal\u0131 olacakt\u0131r.</p>\n<p>Tek bir eleman\u0131n \u00f6zniteli\u011fi veya metin i\u00e7eri\u011fi, sunucu ile istemci aras\u0131nda ka\u00e7\u0131n\u0131lmaz \u015fekilde farkl\u0131ysa (\u00f6rne\u011fin, bir zaman damgas\u0131), elemana <code class=\"language-javascript\">suppressHydrationWarning = {true}</code> ekleyerek uyar\u0131y\u0131 susturabilirsiniz. Sadece bir seviye derinlikte \u00e7al\u0131\u015f\u0131r ve bir ka\u00e7\u0131nma se\u00e7ene\u011fi olarak ama\u00e7lanm\u0131\u015ft\u0131r. Fazla kullan\u0131lmamal\u0131d\u0131r. Metin i\u00e7eri\u011fi olmad\u0131\u011f\u0131 s\u00fcrece React d\u00fczeltmeye \u00e7al\u0131\u015fmaz, bu nedenle gelecekteki g\u00fcncellemelere kadar tutars\u0131z kalabilir.</p>\n<p>Kas\u0131tl\u0131 olarak sunucuda ve istemcide farkl\u0131 bir \u015fey render etmeniz gerekirse, iki ge\u00e7i\u015fli bir render yapabilirsiniz. \u0130stemcide farkl\u0131 bir \u015fey render eden bile\u015fenler, <code class=\"language-javascript\">this.state.isClient</code> gibi bir de\u011fi\u015fkeni okuyabilir; bu de\u011feri <code class=\"language-javascript\">componentDidMount()</code>\u2018da <code class=\"language-javascript\">true</code> olarak ayarlayabilirsiniz. Bu \u015fekilde, ilk render, yanl\u0131\u015f e\u015fle\u015fmeleri \u00f6nleyerek sunucu ile ayn\u0131 i\u00e7eri\u011fi olu\u015fturur, ancak hidrasyondan hemen sonra e\u015f zamanl\u0131 olarak ek bir ge\u00e7i\u015f ger\u00e7ekle\u015fir. Bu yakla\u015f\u0131m\u0131n, bile\u015fenlerinizi yava\u015flataca\u011f\u0131n\u0131 unutmay\u0131n, \u00e7\u00fcnk\u00fc iki kez render olmalar\u0131 gerekir, bu nedenle dikkatli kullanmal\u0131s\u0131n\u0131z.</p>\n<p>Yava\u015f ba\u011flant\u0131larda kullan\u0131c\u0131 deneyimine dikkat etmeyi unutmay\u0131n\u0131z. JavaScript kodu, ilk HTML render\u0131ndan \u00f6nemli \u00f6l\u00e7\u00fcde sonra y\u00fcklenebilir; bu nedenle, yaln\u0131zca istemci ge\u00e7i\u015finde farkl\u0131 bir \u015fey render ederseniz, ge\u00e7i\u015f yava\u015f olabilir. Ancak, do\u011fru \u015fekilde \u00e7al\u0131\u015ft\u0131r\u0131l\u0131rsa, sunucuda uygulaman\u0131n bir \u201ckabu\u011funu\u201d render etmek ve yaln\u0131zca istemcideki ekstra g\u00f6rsel par\u00e7ac\u0131klar\u0131 g\u00f6stermek yararl\u0131 olabilir. Bi\u00e7imlendirme uyumsuzlu\u011fu sorunlar\u0131 olmadan bunu nas\u0131l yapaca\u011f\u0131n\u0131z\u0131 \u00f6\u011frenmek i\u00e7in \u00f6nceki paragraftaki a\u00e7\u0131klamaya bakabilirsiniz.</p>\n\n<h3 id=\"unmountcomponentatnode\"><a class=\"anchor\" href=\"/react/react-dom#unmountcomponentatnode\"></a><code class=\"language-javascript\">unmountComponentAtNode()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React versiyon 18 ile birlikte <code class=\"language-javascript\">unmountComponentAtNode</code>\u2018in yerini <code class=\"language-javascript\">root.unmount()</code> ald\u0131. Daha fazla bilgi i\u00e7in <a href=\"/react/react-dom-client#createroot\">createRoot</a> k\u0131sm\u0131n\u0131 inceleyebilirsiniz.</p>\n</div>\n<p>DOM\u2019dan y\u00fcklenmi\u015f bir React bile\u015fenini kald\u0131r\u0131p, olaylar\u0131n\u0131 ve state\u2019lerini temizleyiniz. Konteynere hi\u00e7bir bile\u015fen y\u00fcklenmemi\u015fse, bu fonksiyonu \u00e7a\u011f\u0131rmak hi\u00e7bir \u015fey yapmaz. Bir bile\u015fenin ba\u011flant\u0131s\u0131 kald\u0131r\u0131ld\u0131ysa <code class=\"language-javascript\">true</code> , kald\u0131r\u0131lacak bir bile\u015fen yoksa <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcr\u00fcr.</p>\n\n<h3 id=\"finddomnode\"><a class=\"anchor\" href=\"/react/react-dom#finddomnode\"></a><code class=\"language-javascript\">findDOMNode()</code> </h3>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">findDOMNode</code>, temeldeki DOM eleman\u0131na eri\u015fmek i\u00e7in kullan\u0131lan bir \u00e7\u0131k\u0131\u015f kap\u0131s\u0131d\u0131r. \u00c7o\u011fu durumda, bu \u00e7\u0131k\u0131\u015f kap\u0131s\u0131n\u0131n kullan\u0131m\u0131, bile\u015fen soyutlamas\u0131n\u0131 deldi\u011finden tavsiye edilmez. <a href=\"/react/strict-mode#warning-about-deprecated-finddomnode-usage\"><code class=\"language-javascript\">StrictMode</code> da desteklenmemektedir.</a></p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findDOMNode</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bu bile\u015fen DOM\u2019a y\u00fcklenmi\u015fse, ilgili yerel taray\u0131c\u0131n\u0131za, DOM eleman\u0131n\u0131 d\u00f6ner. Bu y\u00f6ntem, form alan\u0131 de\u011ferleri gibi DOM d\u0131\u015f\u0131ndaki de\u011ferleri okumak ve DOM \u00f6l\u00e7\u00fcmleri yapmak i\u00e7in kullan\u0131\u015fl\u0131d\u0131r. <strong>\u00c7o\u011fu durumda, DOM eleman\u0131na bir referans ekleyebilir ve <code class=\"language-javascript\">findDOMNode</code> komutunu kullanmaktan ka\u00e7\u0131nabilirsiniz.</strong></p>\n<p>Bir bile\u015fen <code class=\"language-javascript\">null</code> veya <code class=\"language-javascript\">false</code> olarak render edildi\u011finde, <code class=\"language-javascript\">findDOMNode</code>, <code class=\"language-javascript\">null</code> d\u00f6nd\u00fcr\u00fcr. Bir bile\u015fen <code class=\"language-javascript\">string</code> render etti\u011finde, <code class=\"language-javascript\">findDOMNode</code>, bu de\u011feri i\u00e7eren bir metin DOM eleman\u0131 d\u00f6nd\u00fcr\u00fcr. React 16\u2019dan itibaren, bir bile\u015fen birden fazla alt elemana sahip bir <code class=\"language-javascript\">fragment</code> d\u00f6nd\u00fcrebilir, bu durumda <code class=\"language-javascript\">findDOMNode</code>, bo\u015f olmayan ilk alt elemana kar\u015f\u0131l\u0131k gelen DOM eleman\u0131 d\u00f6nd\u00fcr\u00fcr.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">findDOMNode</code> yaln\u0131zca y\u00fcklenmi\u015f bile\u015fenlerde \u00e7al\u0131\u015f\u0131r (yani, DOM\u2019a yerle\u015ftirilmi\u015f bile\u015fenler). Hen\u00fcz yuklenmemi\u015f bir bile\u015fende bunu \u00e7a\u011f\u0131rmaya \u00e7al\u0131\u015f\u0131rsan\u0131z (hen\u00fcz olu\u015fturulmam\u0131\u015f bir bile\u015fende <code class=\"language-javascript\">findDOMNode()</code>da <code class=\"language-javascript\">render()</code>\u0131 \u00e7a\u011f\u0131rmak gibi) bir istisna at\u0131l\u0131r.</p>\n<p><code class=\"language-javascript\">findDOMNode</code> fonksiyon bile\u015fenlerinde kullan\u0131lamaz.</p>\n</div>\n</div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-react-dom.md\">Edit this page</a></p></div></article>", "path": "/react/react-dom", "nav": ["/react/react-component", "/react/react-dom-client"]}, {"key": "ReactDOMClient", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>The <code class=\"language-javascript\">react-dom/client</code> package provides client-specific methods used for initializing an app on the client. Most of your components should not need to use this module.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you use ES5 with npm, you can write:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ReactDOM <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-dom-client#overview\"></a>Overview </h2>\n<p>The following methods can be used in client environments:</p>\n<ul>\n<li><a href=\"/react/react-dom-client#createroot\"><code class=\"language-javascript\">createRoot()</code></a></li>\n<li><a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">hydrateRoot()</code></a></li>\n</ul>\n<h3 id=\"browser-support\"><a class=\"anchor\" href=\"/react/react-dom-client#browser-support\"></a>Browser Support </h3>\n<p>React supports all modern browsers, although <a href=\"/react/javascript-environment-requirements\">some polyfills are required</a> for older versions.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>We do not support older browsers that don\u2019t support ES5 methods or microtasks such as Internet Explorer. You may find that your apps do work in older browsers if polyfills such as <a class=\"external-link\" href=\"https://github.com/es-shims/es5-shim\">es5-shim and es5-sham</a> are included in the page, but you\u2019re on your own if you choose to take this path.</p>\n</div>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-dom-client#reference\"></a>Reference </h2>\n<h3 id=\"createroot\"><a class=\"anchor\" href=\"/react/react-dom-client#createroot\"></a><code class=\"language-javascript\">createRoot()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Create a React root for the supplied <code class=\"language-javascript\">container</code> and return the root. The root can be used to render a React element into the DOM with <code class=\"language-javascript\">render</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> <span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">createRoot</code> accepts two options:</p>\n<ul>\n<li><code class=\"language-javascript\">onRecoverableError</code>: optional callback called when React automatically recovers from errors.</li>\n<li><code class=\"language-javascript\">identifierPrefix</code>: optional prefix React uses for ids generated by <code class=\"language-javascript\">React.useId</code>. Useful to avoid conflicts when using multiple roots on the same page. Must be the same prefix used on the server.</li>\n</ul>\n<p>The root can also be unmounted with <code class=\"language-javascript\">unmount</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">root<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p><code class=\"language-javascript\">createRoot()</code> controls the contents of the container node you pass in. Any existing DOM elements inside are replaced when render is called. Later calls use React\u2019s DOM diffing algorithm for efficient updates.</p>\n<p><code class=\"language-javascript\">createRoot()</code> does not modify the container node (only modifies the children of the container). It may be possible to insert a component to an existing DOM node without overwriting the existing children.</p>\n<p>Using <code class=\"language-javascript\">createRoot()</code> to hydrate a server-rendered container is not supported. Use <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">hydrateRoot()</code></a> instead.</p>\n</div>\n\n<h3 id=\"hydrateroot\"><a class=\"anchor\" href=\"/react/react-dom-client#hydrateroot\"></a><code class=\"language-javascript\">hydrateRoot()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">hydrateRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Same as <a href=\"/react/react-dom-client#createroot\"><code class=\"language-javascript\">createRoot()</code></a>, but is used to hydrate a container whose HTML contents were rendered by <a href=\"/react/react-dom-server\"><code class=\"language-javascript\">ReactDOMServer</code></a>. React will attempt to attach event listeners to the existing markup.</p>\n<p><code class=\"language-javascript\">hydrateRoot</code> accepts two options:</p>\n<ul>\n<li><code class=\"language-javascript\">onRecoverableError</code>: optional callback called when React automatically recovers from errors.</li>\n<li><code class=\"language-javascript\">identifierPrefix</code>: optional prefix React uses for ids generated by <code class=\"language-javascript\">React.useId</code>. Useful to avoid conflicts when using multiple roots on the same page. Must be the same prefix used on the server.</li>\n</ul>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>React expects that the rendered content is identical between the server and the client. It can patch up differences in text content, but you should treat mismatches as bugs and fix them. In development mode, React warns about mismatches during hydration. There are no guarantees that attribute differences will be patched up in case of mismatches. This is important for performance reasons because in most apps, mismatches are rare, and so validating all markup would be prohibitively expensive.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-react-dom-client.md\">Edit this page</a></p></div></article>", "path": "/react/react-dom-client", "nav": ["/react/react-dom", "/react/react-dom-server"]}, {"key": "ReactDOMServer", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><code class=\"language-javascript\">ReactDOMServer</code> nesnesi, bile\u015fenleri statik i\u015faretlemeye d\u00f6n\u00fc\u015ft\u00fcrmenizi sa\u011flar. Genellikle, bir Node sunucusunda kullan\u0131l\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ES modules</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ReactDOMServer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/server'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// CommonJS</span>\n<span class=\"token keyword\">var</span> ReactDOMServer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom/server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/react-dom-server#overview\"></a>Genel Bak\u0131\u015f </h2>\n<p>Bu metotlar yaln\u0131zca <strong><a class=\"external-link\" href=\"https://nodejs.org/api/stream.html\">Node.js Ak\u0131\u015flar\u0131n\u0131</a> i\u00e7eren ortamlarda</strong> mevcuttur:</p>\n<ul>\n<li><a href=\"/react/react-dom-server#rendertopipeablestream\"><code class=\"language-javascript\">renderToPipeableStream()</code></a></li>\n<li><a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream()</code></a> (Deprecated)</li>\n<li><a href=\"/react/react-dom-server#rendertostaticnodestream\"><code class=\"language-javascript\">renderToStaticNodeStream()</code></a></li>\n</ul>\n<p>Bu metotlar sadece <strong><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Streams_API\">Web Ak\u0131\u015flar\u0131\u2019n\u0131n</a> oldu\u011fu ortamlarda</strong> (taray\u0131c\u0131lar, Deno, ve baz\u0131 modern runtime lar) kullan\u0131labilir:</p>\n<ul>\n<li><a href=\"/react/react-dom-server#rendertoreadablestream\"><code class=\"language-javascript\">renderToReadableStream()</code></a></li>\n</ul>\n<p>A\u015fa\u011f\u0131daki metotlar ak\u0131\u015flar\u0131 (stream) desteklemeyen ortamlarda kullan\u0131labilir:</p>\n<ul>\n<li><a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString()</code></a></li>\n<li><a href=\"/react/react-dom-server#rendertostaticmarkup\"><code class=\"language-javascript\">renderToStaticMarkup()</code></a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/react-dom-server#reference\"></a>Referans </h2>\n<h3 id=\"rendertopipeablestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertopipeablestream\"></a><code class=\"language-javascript\">renderToPipeableStream()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToPipeableStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Render a React element to its initial HTML. Returns a stream with a <code class=\"language-javascript\">pipe(res)</code> method to pipe the output and <code class=\"language-javascript\">abort()</code> to abort the request. Fully supports Suspense and streaming of HTML with \u201cdelayed\u201d content blocks \u201cpopping in\u201d via inline <code class=\"language-javascript\">&lt;script&gt;</code> tags later. <a class=\"external-link\" href=\"https://github.com/reactwg/react-18/discussions/37\">Read more</a></p>\n<p>If you call <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a> on a node that already has this server-rendered markup, React will preserve it and only attach event handlers, allowing you to have a very performant first-load experience.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> didError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token function\">renderToPipeableStream</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">onShellReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// The content above all Suspense boundaries is ready.</span>\n      <span class=\"token comment\">// If something errored before we started streaming, we set the error code appropriately.</span>\n      res<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> didError <span class=\"token operator\">?</span> <span class=\"token number\">500</span> <span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      stream<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">onShellError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Something errored before we could complete the shell so we emit an alternative shell.</span>\n      res<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'&lt;!doctype html&gt;&lt;p&gt;Loading...&lt;/p&gt;&lt;script src=\"clientrender.js\"&gt;&lt;/script&gt;'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">onAllReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// If you don't want streaming, use this instead of onShellReady.</span>\n      <span class=\"token comment\">// This will fire after the entire page content is ready.</span>\n      <span class=\"token comment\">// You can use this for crawlers or static generation.</span>\n\n      <span class=\"token comment\">// res.statusCode = didError ? 500 : 200;</span>\n      <span class=\"token comment\">// res.setHeader('Content-type', 'text/html');</span>\n      <span class=\"token comment\">// stream.pipe(res);</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      didError <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>See the <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/14c2be8dac2d5482fda8a0906a31d239df8551fc/packages/react-dom/src/server/ReactDOMFizzServerNode.js#L36-L46\">full list of options</a>.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This is a Node.js-specific API. Environments with <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Streams_API\">Web Streams</a>, like Deno and modern edge runtimes, should use <a href=\"/react/react-dom-server#rendertoreadablestream\"><code class=\"language-javascript\">renderToReadableStream</code></a> instead.</p>\n</div>\n\n<h3 id=\"rendertoreadablestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertoreadablestream\"></a><code class=\"language-javascript\">renderToReadableStream()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToReadableStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Streams a React element to its initial HTML. Returns a Promise that resolves to a <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\">Readable Stream</a>. Fully supports Suspense and streaming of HTML. <a class=\"external-link\" href=\"https://github.com/reactwg/react-18/discussions/127\">Read more</a></p>\n<p>If you call <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a> on a node that already has this server-rendered markup, React will preserve it and only attach event handlers, allowing you to have a very performant first-load experience.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> didError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">renderToReadableStream</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Success</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">,</span>\n      <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        didError <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// This is to wait for all Suspense boundaries to be ready. You can uncomment</span>\n  <span class=\"token comment\">// this line if you want to buffer the entire HTML instead of streaming it.</span>\n  <span class=\"token comment\">// You can use this for crawlers or static generation:</span>\n\n  <span class=\"token comment\">// await stream.allReady;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> didError <span class=\"token operator\">?</span> <span class=\"token number\">500</span> <span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'&lt;!doctype html&gt;&lt;p&gt;Loading...&lt;/p&gt;&lt;script src=\"clientrender.js\"&gt;&lt;/script&gt;'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>See the <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/14c2be8dac2d5482fda8a0906a31d239df8551fc/packages/react-dom/src/server/ReactDOMFizzServerBrowser.js#L27-L35\">full list of options</a>.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This API depends on <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Streams_API\">Web Streams</a>. For Node.js, use <a href=\"/react/react-dom-server#rendertopipeablestream\"><code class=\"language-javascript\">renderToPipeableStream</code></a> instead.</p>\n</div>\n\n<h3 id=\"rendertonodestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertonodestream\"></a><code class=\"language-javascript\">renderToNodeStream()</code>  (Deprecated) </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToNodeStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>React \u00f6\u011fesini ba\u015flang\u0131\u00e7 HTML\u2019ine d\u00f6n\u00fc\u015ft\u00fcr\u00fcn. React bir HTML string \u00e7\u0131kt\u0131s\u0131 veren bir <a class=\"external-link\" href=\"https://nodejs.org/api/stream.html#stream_readable_streams\">Node.js Readable stream</a> d\u00f6nd\u00fcr\u00fcr. Bu ak\u0131\u015f\u0131n HTML \u00e7\u0131kt\u0131s\u0131 <a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">ReactDOMServer.renderToString</code></a> \u00f6\u011fesinin d\u00f6nd\u00fcrece\u011fi de\u011fer ile tamamen ayn\u0131d\u0131r. Sunucuda HTML olu\u015fturmak ve daha h\u0131zl\u0131 sayfa y\u00fcklemeleri i\u00e7in ilk istek \u00fczerine i\u015faretlemeyi g\u00f6ndermek ve arama motorlar\u0131n\u0131n sayfalar\u0131n\u0131z\u0131 SEO amac\u0131yla taramas\u0131n\u0131 sa\u011flamak i\u00e7in bu y\u00f6ntemi kullanabilirsiniz.</p>\n<p>Zaten sunucu taraf\u0131ndan olu\u015fturulmu\u015f i\u015faretlemeye sahip olan bir birimde <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a>\u2018i \u00e7a\u011f\u0131r\u0131rsan\u0131z, gayet performansl\u0131 bir ilk y\u00fckleme deneyimine sahip olman\u0131z i\u00e7in React bunu saklay\u0131p, yaln\u0131zca olay y\u00f6neticilerini ekleyecektir.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Yaln\u0131zca sunucu i\u00e7in. Bu API taray\u0131c\u0131da mevcut de\u011fildir.</p>\n<p>Bu metot utf-8 ile kodlanm\u0131\u015f bir bayt ak\u0131\u015f\u0131 (byte stream) d\u00f6nd\u00fcr\u00fcr. Ba\u015fka bir kodlamadaki bir ak\u0131\u015fa ihtiyac\u0131n\u0131z varsa, kod d\u00f6n\u00fc\u015ft\u00fcrme metni i\u00e7in d\u00f6n\u00fc\u015ft\u00fcrme ak\u0131\u015flar\u0131 (transform streams) sa\u011flayan <a class=\"external-link\" href=\"https://www.npmjs.com/package/iconv-lite\">iconv-lite</a> gibi bir projeye g\u00f6z at\u0131n.</p>\n</div>\n\n<h3 id=\"rendertostaticnodestream\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostaticnodestream\"></a><code class=\"language-javascript\">renderToStaticNodeStream()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToStaticNodeStream</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream</code></a>\u2018e benzer \u015fekildedir. Farkl\u0131 olarak, React\u2019in <code class=\"language-javascript\">data-reactroot</code> gibi dahili olarak kulland\u0131\u011f\u0131 fazladan DOM nitelikleri olu\u015fturmaz. Bu, ekstra \u00f6zellikleri bir kenara atarak biraz bayt kurtarabilece\u011finiz i\u00e7in, React\u2019i basit bir statik sayfa olu\u015fturucu olarak kullanmak isterseniz yararl\u0131d\u0131r.</p>\n<p>Bu ak\u0131\u015f\u0131n HTML \u00e7\u0131kt\u0131s\u0131 <a href=\"/react/react-dom-server#rendertostaticmarkup\"><code class=\"language-javascript\">ReactDOMServer.renderToStaticMarkup</code></a> \u00f6\u011fesinin d\u00f6nd\u00fcrece\u011fi de\u011fer ile tamamen ayn\u0131d\u0131r.</p>\n<p>\u0130\u015faretlemeyi etkile\u015fimli hale getirmek i\u00e7in istemci taraf\u0131nda React\u2019i kullanmay\u0131 planl\u0131yorsan\u0131z, bu y\u00f6ntemi kullanmay\u0131n. Onun yerine, sunucuda <a href=\"/react/react-dom-server#rendertonodestream\"><code class=\"language-javascript\">renderToNodeStream</code></a> ve istemcide <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a> kullan\u0131n.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Yaln\u0131zca sunucu i\u00e7in. Bu API taray\u0131c\u0131da mevcut de\u011fildir.</p>\n<p>Bu metot utf-8 ile kodlanm\u0131\u015f bir bayt ak\u0131\u015f\u0131 (byte stream) d\u00f6nd\u00fcr\u00fcr. Ba\u015fka bir kodlamadaki bir ak\u0131\u015fa ihtiyac\u0131n\u0131z varsa, kod d\u00f6n\u00fc\u015ft\u00fcrme metni i\u00e7in d\u00f6n\u00fc\u015ft\u00fcrme ak\u0131\u015flar\u0131 (transform streams) sa\u011flayan <a class=\"external-link\" href=\"https://www.npmjs.com/package/iconv-lite\">iconv-lite</a> gibi bir projeye g\u00f6z at\u0131n.</p>\n</div>\n\n<h3 id=\"rendertostring\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostring\"></a><code class=\"language-javascript\">renderToString()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToString</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>React \u00f6\u011fesini ba\u015flang\u0131\u00e7 HTML\u2019ine d\u00f6n\u00fc\u015ft\u00fcr\u00fcn. React bir HTML stringi d\u00f6nd\u00fcr\u00fcr. Sunucuda HTML olu\u015fturmak ve daha h\u0131zl\u0131 sayfa y\u00fcklemeleri i\u00e7in ilk istek \u00fczerine i\u015faretlemeyi g\u00f6ndermek ve arama motorlar\u0131n\u0131n sayfalar\u0131n\u0131z\u0131 SEO amac\u0131yla taramas\u0131n\u0131 sa\u011flamak i\u00e7in bu y\u00f6ntemi kullanabilirsiniz.</p>\n<p>Zaten sunucu taraf\u0131ndan olu\u015fturulmu\u015f i\u015faretlemeye sahip olan bir birimde <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a>\u2018i \u00e7a\u011f\u0131r\u0131rsan\u0131z, gayet performansl\u0131 bir ilk y\u00fckleme deneyimine sahip olman\u0131z i\u00e7in React bunu saklay\u0131p, yaln\u0131zca olay y\u00f6neticilerini ekleyecektir.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>This API has limited Suspense support and does not support streaming.</p>\n<p>On the server, it is recommended to use either <a href=\"/react/react-dom-server#rendertopipeablestream\"><code class=\"language-javascript\">renderToPipeableStream</code></a> (for Node.js) or <a href=\"/react/react-dom-server#rendertoreadablestream\"><code class=\"language-javascript\">renderToReadableStream</code></a> (for Web Streams) instead.</p>\n</div>\n\n<h3 id=\"rendertostaticmarkup\"><a class=\"anchor\" href=\"/react/react-dom-server#rendertostaticmarkup\"></a><code class=\"language-javascript\">renderToStaticMarkup()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactDOMServer<span class=\"token punctuation\">.</span><span class=\"token function\">renderToStaticMarkup</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString</code></a>\u2018e benzer \u015fekildedir. Farkl\u0131 olarak, React\u2019in <code class=\"language-javascript\">data-reactroot</code> gibi dahili olarak kulland\u0131\u011f\u0131 fazladan DOM nitelikleri olu\u015fturmaz. Bu, ekstra \u00f6zellikleri bir kenara atarak biraz bayt kurtarabilece\u011finiz i\u00e7in, React\u2019i basit bir statik sayfa olu\u015fturucu olarak kullanmak isterseniz yararl\u0131d\u0131r.</p>\n<p>\u0130\u015faretlemeyi etkile\u015fimli hale getirmek i\u00e7in istemci taraf\u0131nda React\u2019i kullanmay\u0131 planl\u0131yorsan\u0131z, bu y\u00f6ntemi kullanmay\u0131n. Onun yerine, sunucuda <a href=\"/react/react-dom-server#rendertostring\"><code class=\"language-javascript\">renderToString</code></a> ve istemcide <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code></a> kullan\u0131n.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-react-dom-server.md\">Edit this page</a></p></div></article>", "path": "/react/react-dom-server", "nav": ["/react/react-dom-client", "/react/dom-elements"]}, {"key": "DOM Elemanlar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React, performans ve taray\u0131c\u0131lara uyumluluk sa\u011flayabilmek i\u00e7in taray\u0131c\u0131 ba\u011f\u0131ms\u0131z bir DOM sistemi uygulamaktad\u0131r. Taray\u0131c\u0131 DOM geli\u015ftirmelerinde birka\u00e7 zorlu noktay\u0131 d\u00fczeltme f\u0131rsat\u0131 yakalad\u0131k.</p>\n<p>React\u2019te, t\u00fcm DOM \u00f6zellikleri ve nitelikleri (olay i\u015fleyicileri dahil) camelCased olmal\u0131d\u0131r. \u00d6rne\u011fin, HTML niteli\u011fi olan <code class=\"language-javascript\">tabindex</code>, React\u2019te <code class=\"language-javascript\">tabIndex</code>\u2018e kar\u015f\u0131l\u0131k gelmektedir. Burada istisna olarak <code class=\"language-javascript\">aria-*</code> ve <code class=\"language-javascript\">data-*</code> nitelikleri bulunmaktad\u0131r. Bu nitelikler k\u00fc\u00e7\u00fck harfli olmal\u0131d\u0131r. \u00d6rne\u011fin, <code class=\"language-javascript\">aria-label</code>\u2018\u0131 <code class=\"language-javascript\">aria-label</code> olarak yazabilirsiniz.</p>\n<h2 id=\"differences-in-attributes\"><a class=\"anchor\" href=\"/react/dom-elements#differences-in-attributes\"></a>React ve HTML\u2019deki Nitelik Farkl\u0131l\u0131klar\u0131 </h2>\n<p>React ve HTML\u2019de birbirlerinden farkl\u0131 \u00e7al\u0131\u015fan birka\u00e7 nitelik bulunmaktad\u0131r:</p>\n<h3 id=\"checked\"><a class=\"anchor\" href=\"/react/dom-elements#checked\"></a>checked </h3>\n<p><code class=\"language-javascript\">checked</code> niteli\u011fi <code class=\"language-javascript\">checkbox</code> veya <code class=\"language-javascript\">radio</code> tipinde olan <code class=\"language-javascript\">&lt;input&gt;</code> elemanlar\u0131nda desteklenmektedir. Bu niteli\u011fi input eleman\u0131ndaki de\u011fer ya da de\u011ferleri se\u00e7mek i\u00e7in kullan\u0131rs\u0131n\u0131z. Bu nitelik kontroll\u00fc bile\u015fenleri olu\u015fturmak i\u00e7in kullan\u0131\u015fl\u0131d\u0131r. Kontrols\u00fcz bile\u015fende kar\u015f\u0131l\u0131k olarak <code class=\"language-javascript\">defaultChecked</code> bulunmaktad\u0131r. <code class=\"language-javascript\">defaultChecked</code> i\u00e7eren bile\u015fen sayfada ilk olu\u015ftu\u011funda kontrol edilip edilmeyece\u011fini belirlemektedir.</p>\n<h3 id=\"classname\"><a class=\"anchor\" href=\"/react/dom-elements#classname\"></a>className </h3>\n<p>CSS s\u0131n\u0131f\u0131 belirleyebilmek i\u00e7in <code class=\"language-javascript\">className</code> niteli\u011fini kullanabilirsiniz. Bu nitelik b\u00fct\u00fcn DOM ve SVG elemanlar\u0131na uygulanabilmektedir. \u00d6rne\u011fin <code class=\"language-javascript\">&lt;div&gt;</code>, <code class=\"language-javascript\">&lt;a&gt;</code> ve di\u011ferleri.</p>\n<p>React\u2019i Web bile\u015fenleri ile birlikte kullan\u0131rsan\u0131z (ki bu \u00e7ok nadirdir), <code class=\"language-javascript\">class</code> niteli\u011fini kullanmal\u0131s\u0131n\u0131z.</p>\n<h3 id=\"dangerouslysetinnerhtml\"><a class=\"anchor\" href=\"/react/dom-elements#dangerouslysetinnerhtml\"></a>dangerouslySetInnerHTML </h3>\n<p>Taray\u0131c\u0131 DOM\u2019\u0131nda kullan\u0131lan <code class=\"language-javascript\">innerHTML</code>\u2018e kar\u015f\u0131l\u0131k React\u2019te <code class=\"language-javascript\">dangerouslySetInnerHTML</code> kullan\u0131l\u0131r. Genellikle HTML\u2019i kod \u00fczerinden tan\u0131mlamak risklidir \u00e7\u00fcnk\u00fc yanl\u0131\u015fl\u0131kla kullan\u0131c\u0131lar\u0131n\u0131z\u0131 <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">cross-site scripting (XSS)</a> sald\u0131r\u0131s\u0131na maruz b\u0131rakabilirsiniz. React\u2019te HTML\u2019i do\u011frudan belirleyebilirsiniz ancak bunu yaparken HTML\u2019i <code class=\"language-javascript\">dangerouslySetInnerHTML</code>\u2018i <code class=\"language-javascript\">__html</code> anahtar\u0131 \u00fczerinden yazmak zorundas\u0131z. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">createMarkup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">__html</span><span class=\"token operator\">:</span> <span class=\"token string\">'Birinci &amp;middot; \u0130kinci'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">dangerouslySetInnerHTML</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">createMarkup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"htmlfor\"><a class=\"anchor\" href=\"/react/dom-elements#htmlfor\"></a>htmlFor </h3>\n<p><code class=\"language-javascript\">for</code> Javascript\u2019te kullan\u0131lan bir anahtar kelime oldu\u011fundan, React elemanlar\u0131 i\u00e7in <code class=\"language-javascript\">htmlFor</code> kullanmal\u0131s\u0131n\u0131z.</p>\n<h3 id=\"onchange\"><a class=\"anchor\" href=\"/react/dom-elements#onchange\"></a>onChange </h3>\n<p><code class=\"language-javascript\">onChange</code> olay\u0131 bekledi\u011finiz gibi davran\u0131\u015f sergiler: bir form alan\u0131 de\u011fi\u015ftirildi\u011finde, bu olay ba\u015flat\u0131l\u0131r. Varolan taray\u0131c\u0131 davran\u0131\u015f\u0131n\u0131 bilerek kullanm\u0131yoruz, \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">onChange</code> sergiledi\u011fi davran\u0131\u015fa g\u00f6re yanl\u0131\u015f isimdir. React, kullan\u0131c\u0131 girdisini ger\u00e7ek zamanl\u0131 olarak ele almak i\u00e7in bu olaya g\u00fcvenmektedir.</p>\n<h3 id=\"selected\"><a class=\"anchor\" href=\"/react/dom-elements#selected\"></a>selected </h3>\n<p>Bir <code class=\"language-javascript\">&lt;option&gt;</code>\u2018\u0131 se\u00e7ili olarak i\u015faretlemek istiyorsan\u0131z, <code class=\"language-javascript\">&lt;select&gt;</code> eleman\u0131n\u0131n <code class=\"language-javascript\">value</code> k\u0131sm\u0131nda bu se\u00e7ene\u011fin de\u011ferine bir referans verin. Detayl\u0131 talimatlar i\u00e7in <a href=\"/react/forms#the-select-tag\">\u201cselect Etiketi\u201d</a> k\u0131sm\u0131n\u0131 inceleyebilirsiniz.</p>\n<h3 id=\"style\"><a class=\"anchor\" href=\"/react/dom-elements#style\"></a>style </h3>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Dok\u00fcmantasyondaki baz\u0131 \u00f6rneklerde kolayl\u0131k sa\u011flamak ama\u00e7l\u0131 <code class=\"language-javascript\">style</code> kullan\u0131ld\u0131, <strong>fakat stil bi\u00e7imlendirmede kullan\u0131lan <code class=\"language-javascript\">style</code> niteli\u011finin kullan\u0131lmas\u0131 genelde tavsiye edilmez</strong>. Genellikle bu durumlarda <a href=\"/react/dom-elements#classname\"><code class=\"language-javascript\">className</code></a> kullan\u0131lmal\u0131d\u0131r. Bu \u015fekilde harici CSS dosyalar\u0131nda belirtilen class\u2019lar\u0131 kullanabilirsiniz. <code class=\"language-javascript\">style</code>\u2018\u0131n kullan\u0131m amac\u0131 genellikle React\u2019te dinamik hesaplanan stillerin ekrana yans\u0131tma an\u0131nda ekleyebilmek i\u00e7in kullan\u0131l\u0131r. <a href=\"/react/faq-styling\">SSS: CSS ve Stillendirme</a>\u2018ye bak\u0131n\u0131z.</p>\n</div>\n<p><code class=\"language-javascript\">style</code> niteli\u011fi CSS string\u2019i almak yerine camelCased \u015feklinde yaz\u0131lm\u0131\u015f \u00f6zellikleri, JavaScript objesi halinde beklemektedir. Bu \u015fekilde DOM <code class=\"language-javascript\">style</code> JavaScript \u00f6zelli\u011fiyle tutarl\u0131 hale gelmektedir. Ayr\u0131ca XSS g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 \u00f6nlemesinin de yan\u0131 s\u0131ra daha verimlidir. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> divStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">backgroundImage</span><span class=\"token operator\">:</span> <span class=\"token string\">'url('</span> <span class=\"token operator\">+</span> imgUrl <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">HelloWorldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>divStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba D\u00fcnya!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Stiller otomatik d\u00fczeltilmemektedir. Eski taray\u0131c\u0131lar\u0131 da desteklemek i\u00e7in ilgili stilleri belirtmeniz gerekmektedir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> divStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">WebkitTransition</span><span class=\"token operator\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// \u00f6zelli\u011fin burada b\u00fcy\u00fck harfle ba\u015flam\u0131\u015f olmas\u0131na dikkat ediniz</span>\n  <span class=\"token literal-property property\">msTransition</span><span class=\"token operator\">:</span> <span class=\"token string\">'all'</span> <span class=\"token comment\">// 'ms' k\u00fc\u00e7\u00fck harf olarak yaz\u0131lan tek vendor \u00f6n ekidir. </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ComponentWithTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>divStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">B\u00fct\u00fcn taray\u0131c\u0131larda \u00e7al\u0131\u015fmal\u0131d\u0131r.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Stil anahtarlar\u0131, JS\u2019deki DOM elemanlar\u0131ndaki \u00f6zelliklere eri\u015fimle tutarl\u0131 olmak i\u00e7in camelCased\u2019d\u0131r. (\u00f6rne\u011fin <code class=\"language-javascript\">node.style.backgroundImage</code>). Vendor \u00f6n ekleri <a class=\"external-link\" href=\"http://www.andismith.com/blog/2012/02/modernizr-prefixed/\"><code class=\"language-javascript\">ms</code>\u2018ten hari\u00e7</a> b\u00fcy\u00fck harf ile ba\u015flamal\u0131d\u0131r. Bundan dolay\u0131 yukar\u0131da <code class=\"language-javascript\">WebkitTransition</code>, b\u00fcy\u00fck harfle \u201cW\u201d ba\u015flam\u0131\u015ft\u0131r.</p>\n<p>React otomatik olarak \u201cpx\u201d son ekini belirli stil \u00f6zelliklerine eklemektedir. \u201cpx\u201d haricindeki di\u011fer birimleri kullanmak istiyorsan\u0131z, de\u011feri string olarak birimiyle beraber yazmal\u0131s\u0131n\u0131z.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Sonu\u00e7: '10px'</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Merhaba D\u00fcnya!\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">// Sonu\u00e7: '10%'</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'10%'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Merhaba D\u00fcnya!\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>T\u00fcm stil \u00f6zellikleri piksel string\u2019ine d\u00f6n\u00fc\u015ft\u00fcr\u00fclemez. Baz\u0131lar\u0131 birimsiz kalmaktad\u0131r. \u00d6rne\u011fin <code class=\"language-javascript\">zoom</code>, <code class=\"language-javascript\">order</code>, <code class=\"language-javascript\">flex</code>. B\u00fct\u00fcn birimi olmayan \u00f6zellikler <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSProperty.js#L15-L59\">burada</a> g\u00f6rebilirsiniz.</p>\n<h3 id=\"suppresscontenteditablewarning\"><a class=\"anchor\" href=\"/react/dom-elements#suppresscontenteditablewarning\"></a>suppressContentEditableWarning </h3>\n<p>Normalde, alt elemanlar\u0131 bulunan bir eleman <code class=\"language-javascript\">contentEditable</code> olarak i\u015faretlendi\u011finde \u00e7al\u0131\u015fmayaca\u011f\u0131na dair uyar\u0131 olu\u015fmaktad\u0131r. <code class=\"language-javascript\">suppressContentEditableWarning</code> niteli\u011fi bu uyar\u0131y\u0131 bast\u0131racakt\u0131r. Bu niteli\u011fi <a class=\"external-link\" href=\"https://facebook.github.io/draft-js/\">Draft.js</a> gibi <code class=\"language-javascript\">contentEditable</code>\u2018\u0131 manuel olarak y\u00f6neten bir k\u00fct\u00fcphane yazmayacaks\u0131n\u0131z kullanmaman\u0131z\u0131 tavsiye ederiz.</p>\n<h3 id=\"suppresshydrationwarning\"><a class=\"anchor\" href=\"/react/dom-elements#suppresshydrationwarning\"></a>suppressHydrationWarning </h3>\n<p>Sunucu taraf\u0131nda render ediyorsan\u0131z, sunucu ve istemcinin ekran\u0131 farkl\u0131 olu\u015fturdu\u011funa dair uyar\u0131 al\u0131rs\u0131n\u0131z. Fakat \u00e7ok nadiren, tam e\u015fle\u015fme neredeyse imkans\u0131zd\u0131r. \u00d6rne\u011fin, timestamps sunucu ve istemcide farkl\u0131 olmas\u0131 beklenir.</p>\n<p><code class=\"language-javascript\">suppressHydrationWarning</code>\u2018i <code class=\"language-javascript\">true</code> olarak belirlerseniz, React sizi eleman\u0131n niteliklerindeki ve i\u00e7eri\u011findeki uyu\u015fmazl\u0131klar hakk\u0131nda uyarmayacakt\u0131r. Sadece bir derece a\u015fa\u011f\u0131ya kadar \u00e7al\u0131\u015fmaktad\u0131r. Bu nitelik \u00e7\u0131k\u0131\u015f kap\u0131s\u0131 olarak kullan\u0131lmas\u0131 ama\u00e7lanm\u0131\u015ft\u0131r. Ba\u015fka ama\u00e7larda kullan\u0131lmamas\u0131n\u0131 tavsiye ederiz. <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">ReactDOM.hydrateRoot()</code> dok\u00fcmentasyonunda</a> hidrasyon ile ilgili daha fazla bilgi bulabilirsiniz.</p>\n<h3 id=\"value\"><a class=\"anchor\" href=\"/react/dom-elements#value\"></a>value </h3>\n<p><code class=\"language-javascript\">value</code> niteli\u011fi <code class=\"language-javascript\">&lt;input&gt;</code>, <code class=\"language-javascript\">&lt;select&gt;</code> ve <code class=\"language-javascript\">&lt;textarea&gt;</code> elemanlar\u0131nda kullan\u0131lmaktad\u0131r. Eleman\u0131n de\u011ferini belirleyebilmek i\u00e7in kullanabilirsiniz. Kontroll\u00fc bile\u015fen olu\u015fturmada kullan\u0131\u015fl\u0131d\u0131r. Kontrols\u00fcz bile\u015fende kar\u015f\u0131l\u0131k olarak <code class=\"language-javascript\">defaultValue</code> bulunmaktad\u0131r. Bu nitelik eleman\u0131n de\u011ferini sayfada ilk olu\u015ftu\u011funda belirleyebilmek i\u00e7in kullan\u0131l\u0131r.</p>\n<h2 id=\"all-supported-html-attributes\"><a class=\"anchor\" href=\"/react/dom-elements#all-supported-html-attributes\"></a>Desteklenen B\u00fct\u00fcn HTML Nitelikleri </h2>\n<p>React 16\u2019da herhangi bir standart <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2017/09/08/dom-attributes-in-react-16.html\">ya da \u00f6zelle\u015ftirmede</a> DOM nitelikleri tamamen desteklenmektedir.</p>\n<p>React her zaman JavaScript merkezli API\u2019\u0131 DOM\u2019a sa\u011flamaktad\u0131r. React bile\u015fenleri s\u0131k s\u0131k hem \u00f6zel hem de DOM\u2019la ilgili prop\u2019lar\u0131 ald\u0131\u011f\u0131 i\u00e7in, React, DOM API\u2019lardaki gibi <code class=\"language-javascript\">camelCase</code> konvansiyonunu kullanmaktad\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">tabIndex</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>      <span class=\"token comment\">// T\u0131pk\u0131 node.tabIndex DOM API gibi</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token comment\">// T\u0131pk\u0131 node.className DOM API gibi</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">readOnly</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>  <span class=\"token comment\">// T\u0131pk\u0131 node.readOnly DOM API gibi</span></code></pre></div>\n<p>Bu prop\u2019lara kar\u015f\u0131l\u0131k gelen HTML nitelikleri benzer \u015fekilde \u00e7al\u0131\u015fmaktad\u0131r. (Yukar\u0131da ifade edilen \u00f6zel durumlar hari\u00e7)</p>\n<p>React taraf\u0131ndan desteklenen DOM niteliklerinden baz\u0131lar\u0131 \u015funlard\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">accept acceptCharset accessKey action allowFullScreen alt async autoComplete\nautoFocus autoPlay capture cellPadding cellSpacing challenge charSet checked\ncite classID className colSpan cols content contentEditable contextMenu controls\ncontrolsList coords crossOrigin data dateTime default defer dir disabled\ndownload draggable encType form formAction formEncType formMethod formNoValidate\nformTarget frameBorder headers height hidden high href hrefLang htmlFor\nhttpEquiv icon id inputMode integrity is keyParams keyType kind label lang list\nloop low manifest marginHeight marginWidth max maxLength media mediaGroup method\nmin minLength multiple muted name noValidate nonce open optimum pattern\nplaceholder poster preload profile radioGroup readOnly rel required reversed\nrole rowSpan rows sandbox scope scoped scrolling seamless selected shape size\nsizes span spellCheck src srcDoc srcLang srcSet start step style summary\ntabIndex target title type useMap value width wmode wrap</code></pre></div>\n<p>Benzer olarak, b\u00fct\u00fcn SVG nitelikleri tamamen desteklenmektedir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">accentHeight accumulate additive alignmentBaseline allowReorder alphabetic\namplitude arabicForm ascent attributeName attributeType autoReverse azimuth\nbaseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight\nclip clipPath clipPathUnits clipRule colorInterpolation\ncolorInterpolationFilters colorProfile colorRendering contentScriptType\ncontentStyleType cursor cx cy d decelerate descent diffuseConstant direction\ndisplay divisor dominantBaseline dur dx dy edgeMode elevation enableBackground\nend exponent externalResourcesRequired fill fillOpacity fillRule filter\nfilterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize\nfontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy\ng1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef\ngradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic\nimageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength\nkerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor\nlimitingConeAngle local markerEnd markerHeight markerMid markerStart\nmarkerUnits markerWidth mask maskContentUnits maskUnits mathematical mode\nnumOctaves offset opacity operator order orient orientation origin overflow\noverlinePosition overlineThickness paintOrder panose1 pathLength\npatternContentUnits patternTransform patternUnits pointerEvents points\npointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits\nr radius refX refY renderingIntent repeatCount repeatDur requiredExtensions\nrequiredFeatures restart result rotate rx ry scale seed shapeRendering slope\nspacing specularConstant specularExponent speed spreadMethod startOffset\nstdDeviation stemh stemv stitchTiles stopColor stopOpacity\nstrikethroughPosition strikethroughThickness string stroke strokeDasharray\nstrokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity\nstrokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor\ntextDecoration textLength textRendering to transform u1 u2 underlinePosition\nunderlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic\nvHanging vIdeographic vMathematical values vectorEffect version vertAdvY\nvertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing\nwritingMode x x1 x2 xChannelSelector xHeight xlinkActuate xlinkArcrole\nxlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlns xmlnsXlink xmlBase\nxmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan</code></pre></div>\n<p>\u00d6zel nitelikleri tamamen k\u00fc\u00e7\u00fck harfle yazmak \u015fart\u0131yla kullanabilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-dom-elements.md\">Edit this page</a></p></div></article>", "path": "/react/dom-elements", "nav": ["/react/react-dom-server", "/react/events"]}, {"key": "SyntheticEvent", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Bu ba\u015fvuru rehberinde, React Olay Sistemi\u2019nin bir par\u00e7as\u0131n\u0131 olu\u015fturan <code class=\"language-javascript\">SyntheticEvent</code> sarmalay\u0131c\u0131s\u0131 (wrapper) a\u00e7\u0131klanmaktad\u0131r. Daha fazla bigli sahibi olmak i\u00e7in <a href=\"/react/handling-events\">Olay Y\u00f6netimi</a> kayna\u011f\u0131n\u0131 inceleyebilirsiniz.</p>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/events#overview\"></a>Genel Bak\u0131\u015f </h2>\n<p>Olay y\u00f6neticilerinize, taray\u0131c\u0131n\u0131n kendi olaylar\u0131n\u0131 sarmalayan bir \u00e7apraz-taray\u0131c\u0131 <code class=\"language-javascript\">SyntheticEvent</code> nesnesi iletilir. Bu nesne t\u00fcm taray\u0131c\u0131larda ayn\u0131 \u015fekilde \u00e7al\u0131\u015fmas\u0131 d\u0131\u015f\u0131nda, <code class=\"language-javascript\">stopPropagation()</code> ve <code class=\"language-javascript\">preventDefault()</code> dahil olmak \u00fczere, taray\u0131c\u0131n\u0131n kendi olay\u0131yla ayn\u0131 arabirime sahiptir.</p>\n<p>Bir nedenden \u00f6t\u00fcr\u00fc esas taray\u0131c\u0131 olay\u0131na ihtiya\u00e7 duyarsan\u0131z, basit\u00e7e <code class=\"language-javascript\">nativeEvent</code> \u00f6zelli\u011fini kullan\u0131n. Sentetik olaylar, taray\u0131c\u0131n\u0131n do\u011fal (native) olaylar\u0131ndan farkl\u0131d\u0131r ve do\u011frudan bunlarla e\u015fle\u015fmez. \u00d6rne\u011fin, <code class=\"language-javascript\">onMouseLeave</code>\u2018in i\u00e7indeki <code class=\"language-javascript\">event.nativeEvent</code> bir <code class=\"language-javascript\">mouseout</code> olay\u0131na i\u015faret edecektir. Spesifik e\u015fleme, genel API\u2019nin bir par\u00e7as\u0131 de\u011fildir ve herhangi bir zamanda de\u011fi\u015febilir. Her <code class=\"language-javascript\">SyntheticEvent</code> nesnesi a\u015fa\u011f\u0131daki \u00f6zelliklere sahiptir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean bubbles\nboolean cancelable\nDOMEventTarget currentTarget\nboolean defaultPrevented\nnumber eventPhase\nboolean isTrusted\nDOMEvent nativeEvent\n<span class=\"token keyword\">void</span> <span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboolean <span class=\"token function\">isDefaultPrevented</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboolean <span class=\"token function\">isPropagationStopped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nDOMEventTarget target\nnumber timeStamp\nstring type</code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>React 17\u2019den itibaren, <code class=\"language-javascript\">e.persist()</code> in bir i\u015flevi kalmam\u0131\u015ft\u0131r. \u00c7\u00fcnk\u00fc <code class=\"language-javascript\">SyntheticEvent</code> art\u0131k <a href=\"/react/legacy-event-pooling\">ortaklanmamaktad\u0131r. (event-pooling)</a>.</p>\n</div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>v0.14 itibariyle, bir olay y\u00f6neticisinden <code class=\"language-javascript\">false</code> d\u00f6nd\u00fcrmek art\u0131k olay yay\u0131l\u0131m\u0131n\u0131 durdurmayacakt\u0131r. Bunun yerine, uygun g\u00f6r\u00fcld\u00fc\u011f\u00fc \u015fekilde <code class=\"language-javascript\">e.stopPropagation()</code> ya da <code class=\"language-javascript\">e.preventDefault()</code> manuel olarak tetiklenmelidir.</p>\n</div>\n<h2 id=\"supported-events\"><a class=\"anchor\" href=\"/react/events#supported-events\"></a>Desteklenen Olaylar </h2>\n<p>React olaylar\u0131 normalle\u015ftirir ve olaylar bu \u015fekilde farkl\u0131 taray\u0131c\u0131larda tutarl\u0131 \u00f6zelliklere sahip olur.</p>\n<p>A\u015fa\u011f\u0131daki olay y\u00f6neticileri, balonlanma (bubbling) evresinde bir olay taraf\u0131ndan tetiklenir. Yakalama evresine bir olay y\u00f6neticisi kaydetmek i\u00e7in, olay ismine <code class=\"language-javascript\">Capture</code> ilave edin. \u00d6rne\u011fin t\u0131klama olay\u0131n\u0131, yakalama evresinde y\u00f6netmek i\u00e7in <code class=\"language-javascript\">onClick</code> kullanmak yerine <code class=\"language-javascript\">onClickCapture</code> kullan\u0131n.</p>\n<ul>\n<li><a href=\"/react/events#clipboard-events\">Not Panosu Olaylar\u0131</a></li>\n<li><a href=\"/react/events#composition-events\">Kompozisyon Olaylar\u0131</a></li>\n<li><a href=\"/react/events#keyboard-events\">Klavye Olaylar\u0131</a></li>\n<li><a href=\"/react/events#focus-events\">Odaklanma Olaylar\u0131</a></li>\n<li><a href=\"/react/events#form-events\">Form Olaylar\u0131</a></li>\n<li><a href=\"/react/events#generic-events\">Genel Olaylar</a></li>\n<li><a href=\"/react/events#mouse-events\">Fare Olaylar\u0131</a></li>\n<li><a href=\"/react/events#pointer-events\">\u0130\u015faret\u00e7i Olaylar\u0131</a></li>\n<li><a href=\"/react/events#selection-events\">Se\u00e7me Olaylar\u0131</a></li>\n<li><a href=\"/react/events#touch-events\">Dokunma Olaylar\u0131</a></li>\n<li><a href=\"/react/events#ui-events\">Kullan\u0131c\u0131 Aray\u00fcz\u00fc Olaylar\u0131</a></li>\n<li><a href=\"/react/events#wheel-events\">Tekerlek Olaylar\u0131</a></li>\n<li><a href=\"/react/events#media-events\">Medya Olaylar\u0131</a></li>\n<li><a href=\"/react/events#image-events\">Resim Olaylar\u0131</a></li>\n<li><a href=\"/react/events#animation-events\">Animasyon Olaylar\u0131</a></li>\n<li><a href=\"/react/events#transition-events\">Geci\u015f Olaylar\u0131</a></li>\n<li><a href=\"/react/events#other-events\">Di\u011fer Olaylar</a></li>\n</ul>\n\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/events#reference\"></a>Kaynak </h2>\n<h3 id=\"clipboard-events\"><a class=\"anchor\" href=\"/react/events#clipboard-events\"></a>Not Panosu Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onCopy onCut onPaste</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">DOMDataTransfer clipboardData</code></pre></div>\n\n<h3 id=\"composition-events\"><a class=\"anchor\" href=\"/react/events#composition-events\"></a>Kompozisyon Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onCompositionEnd onCompositionStart onCompositionUpdate</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string data</code></pre></div>\n\n<h3 id=\"keyboard-events\"><a class=\"anchor\" href=\"/react/events#keyboard-events\"></a>Klavye Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onKeyDown onKeyPress onKeyUp</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nnumber charCode\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nstring key\nnumber keyCode\nstring locale\nnumber location\nboolean metaKey\nboolean repeat\nboolean shiftKey\nnumber which</code></pre></div>\n<p><code class=\"language-javascript\">key</code> \u00f6zelli\u011fi <a class=\"external-link\" href=\"https://www.w3.org/TR/uievents-key/#named-key-attribute-values\">DOM 3. Seviye Olaylar Belirlemeleri</a>\u2018nde belgelenen t\u00fcm de\u011ferleri alabilir.</p>\n\n<h3 id=\"focus-events\"><a class=\"anchor\" href=\"/react/events#focus-events\"></a>Odaklanma Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onFocus onBlur</code></pre></div>\n<p>Bu odaklanma olaylar\u0131 sadece form elemanlar\u0131nda de\u011fil, React DOM\u2019daki t\u00fcm elemanlarda \u00e7al\u0131\u015fmaktad\u0131r.</p>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">DOMEventTarget relatedTarget</code></pre></div>\n<h4 id=\"onfocus\"><a class=\"anchor\" href=\"/react/events#onfocus\"></a>onFocus </h4>\n<p>The <code class=\"language-javascript\">onFocus</code> event is called when the element (or some element inside of it) receives focus. For example, it\u2019s called when the user clicks on a text input.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">onFocus</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Focused on input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onFocus is triggered when you click this input.<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"onblur\"><a class=\"anchor\" href=\"/react/events#onblur\"></a>onBlur </h4>\n<p>The <code class=\"language-javascript\">onBlur</code> event handler is called when focus has left the element (or left some element inside of it). For example, it\u2019s called when the user clicks outside of a focused text input.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">onBlur</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Triggered because this input lost focus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onBlur is triggered when you click this input and then you click outside of it.<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"detecting-focus-entering-and-leaving\"><a class=\"anchor\" href=\"/react/events#detecting-focus-entering-and-leaving\"></a>Detecting Focus Entering and Leaving </h4>\n<p>You can use the <code class=\"language-javascript\">currentTarget</code> and <code class=\"language-javascript\">relatedTarget</code> to differentiate if the focusing or blurring events originated from <em>outside</em> of the parent element. Here is a demo you can copy and paste that shows how to detect focusing a child, focusing the element itself, and focus entering or leaving the whole subtree.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">tabIndex</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onFocus</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>currentTarget <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focused self'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focused child'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>relatedTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Not triggered when swapping focus between children</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focus entered self'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onBlur</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>currentTarget <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'unfocused self'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'unfocused child'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>relatedTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Not triggered when swapping focus between children</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'focus left self'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<h3 id=\"form-events\"><a class=\"anchor\" href=\"/react/events#form-events\"></a>Form Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onChange onInput onInvalid onReset onSubmit</code></pre></div>\n<p>onChage olay\u0131 ile ilgili daha fazla bilgi i\u00e7in <a href=\"/react/forms\">Formlar</a>\u2018\u0131 inceleyin.</p>\n\n<h3 id=\"generic-events\"><a class=\"anchor\" href=\"/react/events#generic-events\"></a>Genel Olaylar </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onError onLoad</code></pre></div>\n\n<h3 id=\"mouse-events\"><a class=\"anchor\" href=\"/react/events#mouse-events\"></a>Fare Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit\nonDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\nonMouseMove onMouseOut onMouseOver onMouseUp</code></pre></div>\n<p><code class=\"language-javascript\">onMouseEnter</code> ve <code class=\"language-javascript\">onMouseLeave</code> olaylar\u0131, ola\u011fan balonlanma yerine b\u0131rak\u0131lan elemandan girilen elemana do\u011fru yay\u0131l\u0131rlar ve yakalama evreleri yoktur.</p>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nnumber button\nnumber buttons\nnumber clientX\nnumber clientY\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nboolean metaKey\nnumber pageX\nnumber pageY\nDOMEventTarget relatedTarget\nnumber screenX\nnumber screenY\nboolean shiftKey</code></pre></div>\n\n<h3 id=\"pointer-events\"><a class=\"anchor\" href=\"/react/events#pointer-events\"></a>\u0130\u015faret\u00e7i Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture\nonLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut</code></pre></div>\n<p><code class=\"language-javascript\">onMouseEnter</code> ve <code class=\"language-javascript\">onMouseLeave</code> olaylar\u0131, ola\u011fan balonlanma yerine b\u0131rak\u0131lan elemandan girilen elemana do\u011fru yay\u0131l\u0131rlar ve yakalama evreleri yoktur.</p>\n<p>\u00d6zellikler:</p>\n<p><a class=\"external-link\" href=\"https://www.w3.org/TR/pointerevents/\">W3 belirlemeleri</a>\u2018nde tan\u0131mland\u0131\u011f\u0131 \u00fczere, i\u015faret\u00e7i olaylar\u0131 <a href=\"/react/events#mouse-events\">Fare Olaylar\u0131</a>\u2018n\u0131 a\u015fa\u011f\u0131daki \u00f6zellikler ile geni\u015fletir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number pointerId\nnumber width\nnumber height\nnumber pressure\nnumber tangentialPressure\nnumber tiltX\nnumber tiltY\nnumber twist\nstring pointerType\nboolean isPrimary</code></pre></div>\n<p>\u00c7apraz-taray\u0131c\u0131 deste\u011fi \u00fczerine bir not:</p>\n<p>\u0130\u015faret\u00e7i olaylar\u0131 hen\u00fcz t\u00fcm taray\u0131c\u0131larda desteklenmemektedir (Bu makalenin yaz\u0131ld\u0131\u011f\u0131 tarihte destekleyen taray\u0131c\u0131lar: Chrome, Firefox, Edge ve Internet Explorer). React, <code class=\"language-javascript\">react-dom</code> paket boyutunun \u00f6nemli bit \u00f6l\u00e7\u00fcde artmamas\u0131 i\u00e7in kas\u0131tl\u0131 olarak di\u011fer taray\u0131c\u0131lar i\u00e7in polyfill deste\u011fi sunmamaktad\u0131r.</p>\n<p>E\u011fer uygulaman\u0131zda i\u015faret\u00e7i olaylar\u0131na ihtiya\u00e7 duyarsan\u0131z, \u00fc\u00e7\u00fcnc\u00fc parti bir i\u015faret\u00e7i olay polyfill\u2019i kullanman\u0131z\u0131 \u00f6neririz.</p>\n\n<h3 id=\"selection-events\"><a class=\"anchor\" href=\"/react/events#selection-events\"></a>Se\u00e7me Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onSelect</code></pre></div>\n\n<h3 id=\"touch-events\"><a class=\"anchor\" href=\"/react/events#touch-events\"></a>Dokunma Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onTouchCancel onTouchEnd onTouchMove onTouchStart</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">boolean altKey\nDOMTouchList changedTouches\nboolean ctrlKey\nboolean <span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\nboolean metaKey\nboolean shiftKey\nDOMTouchList targetTouches\nDOMTouchList touches</code></pre></div>\n\n<h3 id=\"ui-events\"><a class=\"anchor\" href=\"/react/events#ui-events\"></a>Kullan\u0131c\u0131 Aray\u00fcz\u00fc Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onScroll</code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React 17\u2019den ba\u015flayarak, <code class=\"language-javascript\">onScroll</code> olay\u0131 <strong>balonlanma (bubbling) olu\u015fturmaz</strong>. Bu, taray\u0131c\u0131 davran\u0131\u015f\u0131yla e\u015fle\u015fir ve i\u00e7 i\u00e7e yap\u0131daki kayd\u0131r\u0131labilir bir \u00f6\u011fe uzakta bulunan bir \u00fcst elemanda olaylar\u0131 (events) tetikledi\u011finde kar\u0131\u015f\u0131kl\u0131\u011f\u0131 \u00f6nler.</p>\n</div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number detail\nDOMAbstractView view</code></pre></div>\n\n<h3 id=\"wheel-events\"><a class=\"anchor\" href=\"/react/events#wheel-events\"></a>Tekerlek Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onWheel</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">number deltaMode\nnumber deltaX\nnumber deltaY\nnumber deltaZ</code></pre></div>\n\n<h3 id=\"media-events\"><a class=\"anchor\" href=\"/react/events#media-events\"></a>Medya Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted\nonEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay\nonPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend\nonTimeUpdate onVolumeChange onWaiting</code></pre></div>\n\n<h3 id=\"image-events\"><a class=\"anchor\" href=\"/react/events#image-events\"></a>Resim Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onLoad onError</code></pre></div>\n\n<h3 id=\"animation-events\"><a class=\"anchor\" href=\"/react/events#animation-events\"></a>Animasyon Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onAnimationStart onAnimationEnd onAnimationIteration</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string animationName\nstring pseudoElement\nfloat elapsedTime</code></pre></div>\n\n<h3 id=\"transition-events\"><a class=\"anchor\" href=\"/react/events#transition-events\"></a>Ge\u00e7i\u015f Olaylar\u0131 </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onTransitionEnd</code></pre></div>\n<p>\u00d6zellikler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">string propertyName\nstring pseudoElement\nfloat elapsedTime</code></pre></div>\n\n<h3 id=\"other-events\"><a class=\"anchor\" href=\"/react/events#other-events\"></a>Di\u011fer Olaylar </h3>\n<p>Olay isimleri:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">onToggle</code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-events.md\">Edit this page</a></p></div></article>", "path": "/react/events", "nav": ["/react/dom-elements", "/react/test-utils"]}, {"key": "Test Ara\u00e7lar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><strong>Ekleme</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ReactTestUtils <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">var</span> ReactTestUtils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES5 npm ile</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/test-utils#overview\"></a>Genel Bak\u0131\u015f </h2>\n<p><code class=\"language-javascript\">ReactTestUtils</code>, React bile\u015fenlerini se\u00e7ti\u011finiz test \u00e7er\u00e7evesinde test etmeyi kolayla\u015ft\u0131r\u0131r. Facebook, JavaScript testi i\u00e7in Jest\u2018i kullanmaktad\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bile\u015fenlerinizi son kullan\u0131c\u0131 kullan\u0131r gibi kullanan testler yazman\u0131z ve etkinle\u015ftirmeniz i\u00e7in tasarlanm\u0131\u015f <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a>\u2018yi kullanman\u0131z\u0131 \u00f6neririz.</p>\n<p>React versiyonu &lt;= 16 olan uygulamalar i\u00e7in, <a class=\"external-link\" href=\"https://airbnb.io/enzyme/\">Enzyme</a> k\u00fct\u00fcphanesi, React bile\u015fenlerinizin \u00e7\u0131kt\u0131s\u0131n\u0131 test etmenizi, \u00e7\u0131kt\u0131n\u0131n \u00fczerinde gezinmenizi ve \u00e7\u0131kt\u0131y\u0131 de\u011fi\u015ftirmenizi kolayla\u015ft\u0131rmaktad\u0131r.</p>\n</div>\n<ul>\n<li><a href=\"/react/test-utils#act\"><code class=\"language-javascript\">act()</code></a></li>\n<li><a href=\"/react/test-utils#mockcomponent\"><code class=\"language-javascript\">mockComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iselement\"><code class=\"language-javascript\">isElement()</code></a></li>\n<li><a href=\"/react/test-utils#iselementoftype\"><code class=\"language-javascript\">isElementOfType()</code></a></li>\n<li><a href=\"/react/test-utils#isdomcomponent\"><code class=\"language-javascript\">isDOMComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iscompositecomponent\"><code class=\"language-javascript\">isCompositeComponent()</code></a></li>\n<li><a href=\"/react/test-utils#iscompositecomponentwithtype\"><code class=\"language-javascript\">isCompositeComponentWithType()</code></a></li>\n<li><a href=\"/react/test-utils#findallinrenderedtree\"><code class=\"language-javascript\">findAllInRenderedTree()</code></a></li>\n<li><a href=\"/react/test-utils#scryrendereddomcomponentswithclass\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code></a></li>\n<li><a href=\"/react/test-utils#findrendereddomcomponentwithclass\"><code class=\"language-javascript\">findRenderedDOMComponentWithClass()</code></a></li>\n<li><a href=\"/react/test-utils#scryrendereddomcomponentswithtag\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code></a></li>\n<li><a href=\"/react/test-utils#findrendereddomcomponentwithtag\"><code class=\"language-javascript\">findRenderedDOMComponentWithTag()</code></a></li>\n<li><a href=\"/react/test-utils#scryrenderedcomponentswithtype\"><code class=\"language-javascript\">scryRenderedComponentsWithType()</code></a></li>\n<li><a href=\"/react/test-utils#findrenderedcomponentwithtype\"><code class=\"language-javascript\">findRenderedComponentWithType()</code></a></li>\n<li><a href=\"/react/test-utils#renderintodocument\"><code class=\"language-javascript\">renderIntoDocument()</code></a></li>\n<li><a href=\"/react/test-utils#simulate\"><code class=\"language-javascript\">Simulate</code></a></li>\n</ul>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/test-utils#reference\"></a>Ba\u015fvuru Dok\u00fcman\u0131 </h2>\n<h3 id=\"act\"><a class=\"anchor\" href=\"/react/test-utils#act\"></a><code class=\"language-javascript\">act()</code> </h3>\n<p>Bile\u015fen testlerini haz\u0131rlamak i\u00e7in kodunuzu paket haline getirip <code class=\"language-javascript\">act()</code>\u2018i kullanarak bile\u015feniniz i\u00e7erisinde g\u00fcncelleme yapabilirsiniz. <code class=\"language-javascript\">act()</code>, React\u2019in taray\u0131c\u0131da \u00e7al\u0131\u015fma bi\u00e7imine \u00e7ok yak\u0131n bir \u015fekilde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flamaktad\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>E\u011fer <code class=\"language-javascript\">react-test-renderer</code>\u2018\u0131 kullan\u0131rsan\u0131z, bu size <code class=\"language-javascript\">act</code> \u00e7\u0131kt\u0131s\u0131n\u0131n ayn\u0131 \u015fekilde davranmas\u0131n\u0131 sa\u011flar.</p>\n</div>\n<p>\u00d6rne\u011fin a\u015fa\u011f\u0131daki gibi bir <code class=\"language-javascript\">Counter</code> bile\u015fenimizin oldu\u011funu d\u00fc\u015f\u00fcn\u00fcn:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kez t\u0131klad\u0131n\u0131z</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kez t\u0131klad\u0131n\u0131z</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> kez t\u0131klad\u0131n\u0131z</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          Beni t\u0131kla\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu bile\u015feni a\u015fa\u011f\u0131daki gibi test edebiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sayac\u0131 render edebilir ve g\u00fcncelleyebilir'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// render ve componentDidMount'u test eder</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0 kez t\u0131klad\u0131n\u0131z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0 kez t\u0131klad\u0131n\u0131z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// render and componentDidUpdate'u test eder</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1 kez t\u0131klad\u0131n\u0131z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1 kez t\u0131klad\u0131n\u0131z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Unutmay\u0131n\u0131z ki, <code class=\"language-javascript\">document</code>\u2018a DOM container\u2019\u0131 eklenmedi\u011fi s\u00fcrece, DOM olaylar\u0131 \u00e7al\u0131\u015fmayacakt\u0131r. Bu tarz basmakal\u0131p/sabit kodlarla u\u011fra\u015fmamak i\u00e7in, <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a> gibi bir k\u00fct\u00fcphaneyi kullanabilirsiniz.</p>\n<p><a href=\"/react/testing-recipes\"><code class=\"language-javascript\">Test Tarifleri</code></a> sayfas\u0131 <code class=\"language-javascript\">act()</code> in nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131na dair, \u00f6rnek kullan\u0131mlarla birlikte, daha fazla bilgi i\u00e7erir.</p>\n\n<h3 id=\"mockcomponent\"><a class=\"anchor\" href=\"/react/test-utils#mockcomponent\"></a><code class=\"language-javascript\">mockComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">mockComponent</span><span class=\"token punctuation\">(</span>\n  componentClass<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>mockTagName<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Mock (sahte ya da taklit) bir React bile\u015feni olarak kullan\u0131labilmesine izin veren y\u00f6ntemleri ekleyebilmek i\u00e7in bu metoda mock edilmi\u015f bir bile\u015fen mod\u00fcl\u00fc g\u00f6nderin. Her zamanki gibi render etmesi yerine, bile\u015fen belirtilen herhangi bir alt eleman\u0131 i\u00e7eren basit bir <code class=\"language-javascript\">&lt;div&gt;</code> olacakt\u0131r. (Veya <code class=\"language-javascript\">mockTagName</code> belirtilmi\u015fse, belirtilen eleman olacakt\u0131r)</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">mockComponent()</code> eski bir API\u2019d\u0131r. Onun yerine <a class=\"external-link\" href=\"https://jestjs.io/docs/tutorial-react-native#mock-native-modules-using-jestmock\"><code class=\"language-javascript\">jest.mock()</code></a>\u2018u kullanman\u0131z\u0131 tavsiye ederiz.</p>\n</div>\n\n<h3 id=\"iselement\"><a class=\"anchor\" href=\"/react/test-utils#iselement\"></a><code class=\"language-javascript\">isElement()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isElement</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer <code class=\"language-javascript\">element</code> herhangi bir React eleman\u0131 ise <code class=\"language-javascript\">true</code> d\u00f6ner.</p>\n\n<h3 id=\"iselementoftype\"><a class=\"anchor\" href=\"/react/test-utils#iselementoftype\"></a><code class=\"language-javascript\">isElementOfType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isElementOfType</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer <code class=\"language-javascript\">element</code>, React\u2019in <code class=\"language-javascript\">componentClass</code> tipinde olan bir React eleman\u0131 ise <code class=\"language-javascript\">true</code> d\u00f6ner.</p>\n\n<h3 id=\"isdomcomponent\"><a class=\"anchor\" href=\"/react/test-utils#isdomcomponent\"></a><code class=\"language-javascript\">isDOMComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isDOMComponent</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer <code class=\"language-javascript\">instance</code>, <code class=\"language-javascript\">div</code> veya <code class=\"language-javascript\">span</code> gibi bir DOM bile\u015feni ise <code class=\"language-javascript\">true</code> d\u00f6ner.</p>\n\n<h3 id=\"iscompositecomponent\"><a class=\"anchor\" href=\"/react/test-utils#iscompositecomponent\"></a><code class=\"language-javascript\">isCompositeComponent()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isCompositeComponent</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer <code class=\"language-javascript\">instance</code>, kullan\u0131c\u0131 tan\u0131ml\u0131 s\u0131n\u0131f veya fonksiyon gibi bile\u015feni ise <code class=\"language-javascript\">true</code> d\u00f6ner.</p>\n\n<h3 id=\"iscompositecomponentwithtype\"><a class=\"anchor\" href=\"/react/test-utils#iscompositecomponentwithtype\"></a><code class=\"language-javascript\">isCompositeComponentWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">isCompositeComponentWithType</span><span class=\"token punctuation\">(</span>\n  instance<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer <code class=\"language-javascript\">instance</code>, React\u2019in <code class=\"language-javascript\">componentClass</code> tipinde olan bir React eleman\u0131 ise <code class=\"language-javascript\">true</code> d\u00f6ner.</p>\n\n<h3 id=\"findallinrenderedtree\"><a class=\"anchor\" href=\"/react/test-utils#findallinrenderedtree\"></a><code class=\"language-javascript\">findAllInRenderedTree()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findAllInRenderedTree</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  test\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">tree</code> i\u00e7indeki t\u00fcm bile\u015fenleri dola\u015f\u0131r ve <code class=\"language-javascript\">test(component)</code>\u2018\u0131n <code class=\"language-javascript\">true</code> oldu\u011fu t\u00fcm bile\u015fenleri toplar. Tek ba\u015f\u0131na pek kullan\u0131\u015fl\u0131 de\u011fildir, ancak di\u011fer test ara\u00e7lar\u0131 i\u00e7in basit olarak kullan\u0131lmaktad\u0131r.</p>\n\n<h3 id=\"scryrendereddomcomponentswithclass\"><a class=\"anchor\" href=\"/react/test-utils#scryrendereddomcomponentswithclass\"></a><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedDOMComponentsWithClass</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  className\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Render edilen a\u011fa\u00e7ta, belirtilen <code class=\"language-javascript\">className</code> ile e\u015fle\u015fen b\u00fct\u00fcn DOM elemanlar\u0131n\u0131 bulur.</p>\n\n<h3 id=\"findrendereddomcomponentwithclass\"><a class=\"anchor\" href=\"/react/test-utils#findrendereddomcomponentwithclass\"></a><code class=\"language-javascript\">findRenderedDOMComponentWithClass()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedDOMComponentWithClass</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  className\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/test-utils#scryrendereddomcomponentswithclass\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithClass()</code></a>\u2018a benzerdir, ancak sadece bir sonu\u00e7 olmas\u0131n\u0131 bekler ve geriye sonucu d\u00f6nd\u00fcr\u00fcr. (Birden fazla e\u015fle\u015fme varsa exception f\u0131rlat\u0131r).</p>\n\n<h3 id=\"scryrendereddomcomponentswithtag\"><a class=\"anchor\" href=\"/react/test-utils#scryrendereddomcomponentswithtag\"></a><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedDOMComponentsWithTag</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  tagName\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Render edilen a\u011fa\u00e7ta, belirtilen <code class=\"language-javascript\">tagName</code> ile e\u015fle\u015fen b\u00fct\u00fcn DOM elemanlar\u0131n\u0131 bulur.</p>\n\n<h3 id=\"findrendereddomcomponentwithtag\"><a class=\"anchor\" href=\"/react/test-utils#findrendereddomcomponentwithtag\"></a><code class=\"language-javascript\">findRenderedDOMComponentWithTag()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedDOMComponentWithTag</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  tagName\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/test-utils#scryrendereddomcomponentswithtag\"><code class=\"language-javascript\">scryRenderedDOMComponentsWithTag()</code></a>\u2018a benzerdir, ancak sadece bir sonu\u00e7 olmas\u0131n\u0131 bekler ve geriye sonucu d\u00f6nd\u00fcr\u00fcr. (Birden fazla e\u015fle\u015fme varsa exception f\u0131rlat\u0131r).</p>\n\n<h3 id=\"scryrenderedcomponentswithtype\"><a class=\"anchor\" href=\"/react/test-utils#scryrenderedcomponentswithtype\"></a><code class=\"language-javascript\">scryRenderedComponentsWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">scryRenderedComponentsWithType</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Belirtilen <code class=\"language-javascript\">componentClass</code>\u2018a e\u015fit olan b\u00fct\u00fcn bile\u015fenleri bulur.</p>\n\n<h3 id=\"findrenderedcomponentwithtype\"><a class=\"anchor\" href=\"/react/test-utils#findrenderedcomponentwithtype\"></a><code class=\"language-javascript\">findRenderedComponentWithType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">findRenderedComponentWithType</span><span class=\"token punctuation\">(</span>\n  tree<span class=\"token punctuation\">,</span>\n  componentClass\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"/react/test-utils#scryrenderedcomponentswithtype\"><code class=\"language-javascript\">scryRenderedComponentsWithType()</code></a>\u2018a benzerdir, ancak sadece bir sonu\u00e7 olmas\u0131n\u0131 bekler ve geriye sonucu d\u00f6nd\u00fcr\u00fcr. (Birden fazla e\u015fle\u015fme varsa exception f\u0131rlat\u0131r).</p>\n\n<h3 id=\"renderintodocument\"><a class=\"anchor\" href=\"/react/test-utils#renderintodocument\"></a><code class=\"language-javascript\">renderIntoDocument()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">renderIntoDocument</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Bir React \u00f6\u011fesini d\u00f6k\u00fcmandan ayr\u0131lm\u0131\u015f bir DOM eleman\u0131 olarak render edin. <strong>Bu fonksiyonun DOM\u2019a ihtiyac\u0131 vard\u0131r.</strong> \u015euna e\u015fde\u011ferdir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> domContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>domContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">React</code>\u2018a eklemeden <strong>\u00f6nce</strong> global olarak haz\u0131r olan <code class=\"language-javascript\">window</code>, <code class=\"language-javascript\">window.document</code> ve <code class=\"language-javascript\">window.document.createElement</code>\u2018e ihtiyac\u0131n\u0131z olacakt\u0131r. Aksi takdirde React DOM\u2019a eri\u015femedi\u011fini d\u00fc\u015f\u00fcnecektir ve bu sebeple <code class=\"language-javascript\">setState</code> gibi metodlar \u00e7al\u0131\u015fmayacakt\u0131r.</p>\n</div>\n\n<h2 id=\"other-utilities\"><a class=\"anchor\" href=\"/react/test-utils#other-utilities\"></a>Di\u011fer Ara\u00e7lar </h2>\n<h3 id=\"simulate\"><a class=\"anchor\" href=\"/react/test-utils#simulate\"></a><code class=\"language-javascript\">Simulate</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">Simulate<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>eventName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>eventData<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>\u0130ste\u011fe ba\u011fl\u0131 olan <code class=\"language-javascript\">eventData</code> olay verileri ile bir DOM eleman\u0131 \u00fczerinde olay g\u00f6nderimini sim\u00fcle edebilirsiniz.</p>\n<p><code class=\"language-javascript\">Simulate</code>, <a href=\"/react/events#support-events\">React\u2019in anlayabildi\u011fi her olay</a> i\u00e7in bir metoda sahiptir.</p>\n<p><strong>Elemana t\u0131klama</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;button ref={(node) =&gt; this.button = node}&gt;...&lt;/button&gt;</span>\n<span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Input alan\u0131ndaki de\u011feri de\u011fi\u015ftirme ve ENTER\u2019a basma</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;input ref={(node) =&gt; this.textInput = node} /&gt;</span>\n<span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textInput<span class=\"token punctuation\">;</span>\nnode<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'z\u00fcrafa'</span><span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactTestUtils<span class=\"token punctuation\">.</span>Simulate<span class=\"token punctuation\">.</span><span class=\"token function\">keyDown</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">keyCode</span><span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">which</span><span class=\"token operator\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React\u2019in sa\u011flayamad\u0131\u011f\u0131 ama bile\u015feninizde kulland\u0131\u011f\u0131n\u0131z herhangi bir olay \u00f6zelli\u011fini (\u00f6rne\u011fin: keyCode, which, vb\u2026) sizin sa\u011flaman\u0131z gerekmektedir.</p>\n</div>\n</div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/addons-test-utils.md\">Edit this page</a></p></div></article>", "path": "/react/test-utils", "nav": ["/react/events", "/react/test-renderer"]}, {"key": "Test Render Edici", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><strong>Importing</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES6</span>\n<span class=\"token keyword\">const</span> TestRenderer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES5 with npm</span></code></pre></div>\n<h2 id=\"overview\"><a class=\"anchor\" href=\"/react/test-renderer#overview\"></a>Genel Bak\u0131\u015f </h2>\n<p>Bu paket, DOM\u2019a veya yerel bir mobil ortama ba\u011fl\u0131 olmadan React bile\u015fenlerini saf JavaScript objesine  d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in kullan\u0131labilecek bir React render edici sa\u011flar.</p>\n<p>Temel olarak, bu paket, bir taray\u0131c\u0131 veya [jsdom] (<a class=\"external-link\" href=\"https://github.com/tmpvar/jsdom\">https://github.com/tmpvar/jsdom</a>) kullanmadan, React DOM veya React Native bile\u015feninin olu\u015fturdu\u011fu platform g\u00f6r\u00fcn\u00fcm\u00fc hiyerar\u015fisinin (DOM a\u011fac\u0131na benzer olarak) anl\u0131k g\u00f6r\u00fcnt\u00fcs\u00fcn\u00fc almay\u0131 kolayla\u015ft\u0131r\u0131r.</p>\n<p>\u00d6rnek:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Link</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testRenderer <span class=\"token operator\">=</span> TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">page</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.facebook.com/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Facebook</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: 'a',</span>\n<span class=\"token comment\">//   props: { href: 'https://www.facebook.com/' },</span>\n<span class=\"token comment\">//   children: [ 'Facebook' ] }</span></code></pre></div>\n<p>JSON a\u011fac\u0131n\u0131n bir kopyas\u0131n\u0131 bir dosyaya otomatik olarak kaydetmek ve testlerinizde de\u011fi\u015fip de\u011fi\u015fmedi\u011fini kontrol etmek i\u00e7in Jest\u2019in anl\u0131k g\u00f6r\u00fcnt\u00fc test \u00f6zelli\u011fini kullanabilirsiniz.<a class=\"external-link\" href=\"https://jestjs.io/docs/en/snapshot-testing\">Daha fazla bilgi i\u00e7in</a>.</p>\n<p>Ayr\u0131ca bile\u015fen \u00e7\u0131kt\u0131s\u0131 \u00fczerinde gezerek, belirli d\u00fc\u011f\u00fcmleri bulup bu d\u00fc\u011f\u00fcmler \u00fczerinde do\u011frulama metotlar\u0131n\u0131 (toBe, toEqual vb.) \u00e7a\u011f\u0131rabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SubComponent</span></span> <span class=\"token attr-name\">foo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bar<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Merhaba</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">SubComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sub<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Sub</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testRenderer <span class=\"token operator\">=</span> TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> testInstance <span class=\"token operator\">=</span> testRenderer<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByType</span><span class=\"token punctuation\">(</span>SubComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sub\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Sub'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"testrenderer\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderer\"></a>Test Renderer </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testrenderercreate\"><code class=\"language-javascript\">TestRenderer.create()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendereract\"><code class=\"language-javascript\">TestRenderer.act()</code></a></li>\n</ul>\n<h3 id=\"testrenderer-instance\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderer-instance\"></a>TestRenderer Nesnesi </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testrenderertojson\"><code class=\"language-javascript\">testRenderer.toJSON()</code></a></li>\n<li><a href=\"/react/test-renderer#testrenderertotree\"><code class=\"language-javascript\">testRenderer.toTree()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererupdate\"><code class=\"language-javascript\">testRenderer.update()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererunmount\"><code class=\"language-javascript\">testRenderer.unmount()</code></a></li>\n<li><a href=\"/react/test-renderer#testrenderergetinstance\"><code class=\"language-javascript\">testRenderer.getInstance()</code></a></li>\n<li><a href=\"/react/test-renderer#testrendererroot\"><code class=\"language-javascript\">testRenderer.root</code></a></li>\n</ul>\n<h3 id=\"testinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testinstance\"></a>Test Nesnesi </h3>\n<ul>\n<li><a href=\"/react/test-renderer#testinstancefind\"><code class=\"language-javascript\">testInstance.find()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindbytype\"><code class=\"language-javascript\">testInstance.findByType()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindbyprops\"><code class=\"language-javascript\">testInstance.findByProps()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindall\"><code class=\"language-javascript\">testInstance.findAll()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindallbytype\"><code class=\"language-javascript\">testInstance.findAllByType()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancefindallbyprops\"><code class=\"language-javascript\">testInstance.findAllByProps()</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceinstance\"><code class=\"language-javascript\">testInstance.instance</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancetype\"><code class=\"language-javascript\">testInstance.type</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceprops\"><code class=\"language-javascript\">testInstance.props</code></a></li>\n<li><a href=\"/react/test-renderer#testinstanceparent\"><code class=\"language-javascript\">testInstance.parent</code></a></li>\n<li><a href=\"/react/test-renderer#testinstancechildren\"><code class=\"language-javascript\">testInstance.children</code></a></li>\n</ul>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"/react/test-renderer#reference\"></a>Ba\u015fvuru Dok\u00fcman\u0131 </h2>\n<h3 id=\"testrenderercreate\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderercreate\"></a><code class=\"language-javascript\">TestRenderer.create()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u0130letilen React eleman\u0131 ile bir TestRenderer nesnesi olu\u015fturun. Bu nesne ger\u00e7ek DOM\u2019\u0131 kullanmaz; ancak yine de bile\u015fen a\u011fac\u0131n\u0131 tamamen belle\u011fe render eder, b\u00f6ylece bu konuda do\u011frulamalar (assertions) yapabilirsiniz. Bir <a href=\"/react/test-renderer#testrenderer-instance\">TestRenderer nesnesi</a> d\u00f6nd\u00fcr\u00fcr.</p>\n<h3 id=\"testrendereract\"><a class=\"anchor\" href=\"/react/test-renderer#testrendereract\"></a><code class=\"language-javascript\">TestRenderer.act()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">TestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">act</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">TestRenderer.act</code>, <a href=\"/react/test-utils#act\"><code class=\"language-javascript\">react-dom/test-utils</code> i\u00e7indeki <code class=\"language-javascript\">act()</code></a>\u2018e benzer \u015fekilde, bir bile\u015feni iddialar (assertions) i\u00e7in haz\u0131r hale getirir. <code class=\"language-javascript\">TestRenderer.create</code> ve <code class=\"language-javascript\">testRenderer.update</code> e yap\u0131lan \u00e7a\u011fr\u0131lar\u0131 sarmalamak i\u00e7in <code class=\"language-javascript\">act()</code>\u2018in bu versiyonunu kullan\u0131n.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>create<span class=\"token punctuation\">,</span> act<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.js'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Test edilen bile\u015fen</span>\n\n<span class=\"token comment\">// bile\u015feni render edin</span>\n<span class=\"token keyword\">let</span> root<span class=\"token punctuation\">;</span> \n<span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  root <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// root \u00fczerinde iddialar belirleyin.</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// baz\u0131 farkl\u0131 proplar ile g\u00fcncelleyin</span>\n<span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// root \u00fczerinde iddialar belirleyin</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"testrenderertojson\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderertojson\"></a><code class=\"language-javascript\">testRenderer.toJSON()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>\u0130\u015flenen a\u011fac\u0131 temsil eden bir nesne d\u00f6nd\u00fcr\u00fcn. Bu a\u011fa\u00e7 yaln\u0131zca <div> veya <view> gibi platforma \u00f6zg\u00fc birimleri ve bunlar\u0131n bile\u015fenlerini i\u00e7erir, ancak kullan\u0131c\u0131 taraf\u0131ndan yaz\u0131lm\u0131\u015f bile\u015fenleri i\u00e7ermez. Bu, anl\u0131k g\u00f6r\u00fcnt\u00fc <a class=\"external-link\" href=\"https://facebook.github.io/jest/docs/en/snapshot-testing.html#snapshot-testing-with-jest\">snapshot</a> testi i\u00e7in kullan\u0131\u015fl\u0131d\u0131r.</view></div></p>\n<h3 id=\"testrenderertotree\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderertotree\"></a><code class=\"language-javascript\">testRenderer.toTree()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">toTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Render edilen a\u011fac\u0131 temsil eden bir nesne d\u00f6nd\u00fcr\u00fcn. <code class=\"language-javascript\">toJSON()</code> \u2018dan farkl\u0131 olarak, g\u00f6sterim <code class=\"language-javascript\">toJSON()</code> taraf\u0131ndan sa\u011flanandan daha fazla ayr\u0131nt\u0131ya sahiptir ve kullan\u0131c\u0131 taraf\u0131ndan yaz\u0131lan bile\u015fenleri i\u00e7erir. Test render edicinin \u00fczerine kendi do\u011frulama k\u00fct\u00fcphanenizi yazmad\u0131\u011f\u0131n\u0131z s\u00fcrece muhtemelen bu y\u00f6nteme ihtiyac\u0131n\u0131z olmayacakt\u0131r.</p>\n<h3 id=\"testrendererupdate\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererupdate\"></a><code class=\"language-javascript\">testRenderer.update()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Dahili bellek a\u011fac\u0131n\u0131 yeni bir k\u00f6k elemanla tekrar render edin. Bu, k\u00f6kte bir React g\u00fcncellemesini sim\u00fcle eder. Yeni eleman, \u00f6nceki elemanla ayn\u0131 tip ve anahtara sahipse, a\u011fa\u00e7 g\u00fcncellenir; aksi takdirde yeni bir a\u011faca yeniden monte edilir.</p>\n<h3 id=\"testrendererunmount\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererunmount\"></a><code class=\"language-javascript\">testRenderer.unmount()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Uygun ya\u015fam d\u00f6ng\u00fcs\u00fc olaylar\u0131n\u0131 tetikleyerek dahili haf\u0131za a\u011fac\u0131n\u0131 \u00e7\u0131kar\u0131n.</p>\n<h3 id=\"testrenderergetinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testrenderergetinstance\"></a><code class=\"language-javascript\">testRenderer.getInstance()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>E\u011fer mevcutsa, k\u00f6k elemana kar\u015f\u0131l\u0131k gelen nesneyi d\u00f6nd\u00fcr\u00fcn. K\u00f6k eleman e\u011fer bir fonksiyon bile\u015feni ise, bir nesnesi olmad\u0131\u011f\u0131ndan \u00e7al\u0131\u015fmaz.</p>\n<h3 id=\"testrendererroot\"><a class=\"anchor\" href=\"/react/test-renderer#testrendererroot\"></a><code class=\"language-javascript\">testRenderer.root</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testRenderer<span class=\"token punctuation\">.</span>root</code></pre></div>\n<p>A\u011fa\u00e7taki belirli d\u00fc\u011f\u00fcmler hakk\u0131nda do\u011frulama yapmaya yarayan k\u00f6k \u201ctest nesnesini\u201d d\u00f6nd\u00fcr\u00fcr. A\u015fa\u011f\u0131da daha derinde bulunan di\u011fer \u201ctest nesnelerini\u201d bulmak i\u00e7in kullanabilirsiniz.</p>\n<h3 id=\"testinstancefind\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefind\"></a><code class=\"language-javascript\">testInstance.find()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">test(testInstance)</code> \u2018\u0131 <code class=\"language-javascript\">true</code> olarak d\u00f6nd\u00fcren tek bir alt test nesnesi bulun. E\u011fer bir test nesnesi i\u00e7in <code class=\"language-javascript\">test(testInstance)</code> <code class=\"language-javascript\">true</code> d\u00f6nd\u00fcrmez ise, bir hata verecektir.</p>\n<h3 id=\"testinstancefindbytype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindbytype\"></a><code class=\"language-javascript\">testInstance.findByType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verilen <code class=\"language-javascript\">type</code> ile tek bir alt test nesnesi bulun. Verilen <code class=\"language-javascript\">type</code> ile tam bir test nesnesi yoksa, bir hata verecektir.</p>\n<h3 id=\"testinstancefindbyprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindbyprops\"></a><code class=\"language-javascript\">testInstance.findByProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findByProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verilen prop\u2019lara sahip olan bir alt test nesnesi bulun. Tam olarak verilen prop\u2019lara sahip bir test nesnesi yoksa, bir hata verecektir.</p>\n<h3 id=\"testinstancefindall\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindall\"></a><code class=\"language-javascript\">testInstance.findAll()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">test(testInstance)</code>\u2018\u0131 <code class=\"language-javascript\">true</code> olarak d\u00f6nd\u00fcren t\u00fcm alt test nesnelerini bulun.</p>\n<h3 id=\"testinstancefindallbytype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindallbytype\"></a><code class=\"language-javascript\">testInstance.findAllByType()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verilen <code class=\"language-javascript\">type</code> ile t\u00fcm alt test nesnelerini bulun.</p>\n<h3 id=\"testinstancefindallbyprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancefindallbyprops\"></a><code class=\"language-javascript\">testInstance.findAllByProps()</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verilen <code class=\"language-javascript\">prop</code>\u2018lara ile t\u00fcm alt test nesnelerini bulun.</p>\n<h3 id=\"testinstanceinstance\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceinstance\"></a><code class=\"language-javascript\">testInstance.instance</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>instance</code></pre></div>\n<p>Bu test nesnesine kar\u015f\u0131l\u0131k gelen bile\u015fen nesnesi. Fonksiyon bile\u015fenlerinin nesneleri bulunmad\u0131\u011f\u0131ndan yaln\u0131zca s\u0131n\u0131f bile\u015fenleri i\u00e7in kullan\u0131labilir. Verilen bile\u015fenin i\u00e7indeki <code class=\"language-javascript\">this</code> de\u011ferine kar\u015f\u0131l\u0131k gelir.</p>\n<h3 id=\"testinstancetype\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancetype\"></a><code class=\"language-javascript\">testInstance.type</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>type</code></pre></div>\n<p>Bu test nesnesine kar\u015f\u0131l\u0131k gelen bile\u015fen t\u00fcr\u00fc. \u00d6rne\u011fin, bir <code class=\"language-javascript\">&lt;Button /&gt;</code> bile\u015feni bir t\u00fcr <code class=\"language-javascript\">Button</code> t\u00fcr\u00fcne sahiptir.</p>\n<h3 id=\"testinstanceprops\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceprops\"></a><code class=\"language-javascript\">testInstance.props</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>props</code></pre></div>\n<p>Bu test nesnesine kar\u015f\u0131l\u0131k gelen prop\u2019lar. \u00d6rne\u011fin, bir <code class=\"language-javascript\">&lt;Button size =\"small\"/&gt;</code> bile\u015feni props olarak <code class=\"language-javascript\">{size: 'small'}</code> \u2018a sahiptir.</p>\n<h3 id=\"testinstanceparent\"><a class=\"anchor\" href=\"/react/test-renderer#testinstanceparent\"></a><code class=\"language-javascript\">testInstance.parent</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>parent</code></pre></div>\n<p>Bu test nesnesinin \u00fcst test \u00f6rne\u011fi.</p>\n<h3 id=\"testinstancechildren\"><a class=\"anchor\" href=\"/react/test-renderer#testinstancechildren\"></a><code class=\"language-javascript\">testInstance.children</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">testInstance<span class=\"token punctuation\">.</span>children</code></pre></div>\n<p>Bu test objesinin alt test nesneleri.</p>\n<h2 id=\"ideas\"><a class=\"anchor\" href=\"/react/test-renderer#ideas\"></a>\u00d6neriler </h2>\n<p><code class=\"language-javascript\">createNodeMock</code> fonksiyonunu, \u00f6zel taklit referanslar\u0131na izin veren se\u00e7enek olarak\u201cTestRenderer.create\u201d \u2018e iletebilirsiniz. <code class=\"language-javascript\">createNodeMock</code>, mevcut eleman\u0131 kabul eder ve taklit olan bir ba\u015fvuru nesnesi return eder. Bu, referanslara dayanan bir bile\u015feni test ederken kullan\u0131\u015fl\u0131d\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TestRenderer <span class=\"token keyword\">from</span> <span class=\"token string\">'react-test-renderer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> el<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> focused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nTestRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">createNodeMock</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// mock a focus function</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function-variable function\">focus</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            focused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>focused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-test-renderer.md\">Edit this page</a></p></div></article>", "path": "/react/test-renderer", "nav": ["/react/test-utils", "/react/javascript-environment-requirements"]}, {"key": "Javascript Ortam Gereksinimleri", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React 18 versiyonu, t\u00fcm modern taray\u0131c\u0131lar\u0131 destekler (Edge, Firefox, Chrome, Safari gibi).</p>\n<p>Modern taray\u0131c\u0131 \u00f6zelliklerini yerel olarak desteklemeyen veya uyumlu olmayan \u00f6zellikleri olan Internet Explorer gibi eski taray\u0131c\u0131lar\u0131 ve cihazlar\u0131 destekliyorsan\u0131z, paketlenmi\u015f uygulaman\u0131za global bir polyfill dahil etmeyi d\u00fc\u015f\u00fcn\u00fcn.</p>\n<p>\u0130\u015fte React versiyon 18\u2019in kulland\u0131\u011f\u0131 modern \u00f6zelliklerin bir listesi:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code class=\"language-javascript\">Promise</code></a></li>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code class=\"language-javascript\">Symbol</code></a></li>\n<li><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code class=\"language-javascript\">Object.assign</code></a></li>\n</ul>\n<p>Bu \u00f6zellikler i\u00e7in do\u011fru polyfill ortam\u0131n\u0131za g\u00f6re de\u011fi\u015febilir. \u00c7o\u011fu kullan\u0131c\u0131, <a class=\"external-link\" href=\"https://github.com/browserslist/browserslist\">Browserlist</a> ayarlar\u0131n\u0131z\u0131 yap\u0131land\u0131rabilir. Di\u011ferlerinin ise, direkt olarak <a class=\"external-link\" href=\"https://github.com/zloirock/core-js\"><code class=\"language-javascript\">core-js</code></a> gibi bir polyfill dahil etmesi gerekebilir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-javascript-environment-requirements.md\">Edit this page</a></p></div></article>", "path": "/react/javascript-environment-requirements", "nav": ["/react/test-renderer", "/react/glossary"]}, {"key": "React Terimleri S\u00f6zl\u00fc\u011f\u00fc", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h2 id=\"single-page-application\"><a class=\"anchor\" href=\"/react/glossary#single-page-application\"></a>Tek-sayfal\u0131 Uygulama </h2>\n<p>Tek-sayfal\u0131 uygulama, uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131 i\u00e7in gereken tek bir HTML sayfas\u0131n\u0131 ve gerekli t\u00fcm varl\u0131klar\u0131 (JavaScript ve CSS gibi) y\u00fckleyen bir uygulamad\u0131r. Sayfa veya daha sonraki sayfalar ile ilgili herhangi bir etkile\u015fim sunucuya gidip gelmeye ihtiya\u00e7 duymaz, bu da sayfan\u0131n yeniden y\u00fcklenmedi\u011fi anlam\u0131na gelir.</p>\n<p>React\u2019te bir tek-sayfal\u0131 uygulama olu\u015fturabilseniz de, bu bir gereksinim de\u011fildir. React ayr\u0131ca, mevcut web sitelerinin k\u00fc\u00e7\u00fck par\u00e7alar\u0131n\u0131 ilave etkile\u015fim ile geli\u015ftirmek i\u00e7in de kullan\u0131labilir. React\u2019te yaz\u0131lan kod, sunucuda PHP gibi bir \u015fey taraf\u0131ndan olu\u015fturulan i\u015faretlemeyle veya di\u011fer istemci taraf\u0131 kitapl\u0131klar\u0131yla bar\u0131\u015f\u00e7\u0131l bir \u015fekilde bir arada bulunabilir. Asl\u0131nda, bu tam olarak React\u2019in Facebook\u2019ta kullan\u0131m \u015feklidir.</p>\n<h2 id=\"es6-es2015-es2016-etc\"><a class=\"anchor\" href=\"/react/glossary#es6-es2015-es2016-etc\"></a>ES6, ES2015, ES2016, vs. </h2>\n<p>Bu k\u0131saltmalar\u0131n t\u00fcm\u00fc, ECMAScript Dil Belirtimi standard\u0131n\u0131n (JavaScript dilinin bir uygulamas\u0131) en yeni s\u00fcr\u00fcmlerine at\u0131fta bulunur. ES6 s\u00fcr\u00fcm\u00fc (ES2015 olarak da bilinir) \u00f6nceki s\u00fcr\u00fcmlere bir\u00e7ok ek i\u00e7erir: ok fonksiyonu, s\u0131n\u0131flar, \u015fablon haz\u0131rlay\u0131c\u0131lar\u0131, <code class=\"language-javascript\">let</code> ve<code class=\"language-javascript\">const</code> ifadeleri. <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/ECMAScript#Versions\">Buradan</a> spesifik versiyonlar hakk\u0131nda daha fazla \u015fey \u00f6\u011frenebilirsiniz.</p>\n<h2 id=\"compilers\"><a class=\"anchor\" href=\"/react/glossary#compilers\"></a>Derleyiciler </h2>\n<p>Bir JavaScript derleyicisi JavaScript kodunu al\u0131r, d\u00f6n\u00fc\u015ft\u00fcr\u00fcr ve JavaScript kodunu farkl\u0131 bir formatta d\u00f6ner. En yayg\u0131n kullan\u0131m durumu, ES6 s\u00f6zdizimini al\u0131p, eski taray\u0131c\u0131lar\u0131n yorumlayabildi\u011fi s\u00f6zdizimine d\u00f6n\u00fc\u015ft\u00fcrmektir. <a class=\"external-link\" href=\"https://babeljs.io/\">Babel</a> React ile en s\u0131k kullan\u0131lan derleyicidir.</p>\n<h2 id=\"bundlers\"><a class=\"anchor\" href=\"/react/glossary#bundlers\"></a>Paketleyiciler </h2>\n<p>Paketleyiciler ayr\u0131 mod\u00fcller (genellikle y\u00fczlerce) olarak yaz\u0131lm\u0131\u015f JavaScript ve CSS kodlar\u0131n\u0131 al\u0131r ve bunlar\u0131 taray\u0131c\u0131lar i\u00e7in daha iyi optimize edilmi\u015f birka\u00e7 dosyada birle\u015ftirir. React uygulamalar\u0131nda yayg\u0131n olarak kullan\u0131lan baz\u0131 paketleyiciler aras\u0131nda <a class=\"external-link\" href=\"https://webpack.js.org/\">Webpack</a> ve <a class=\"external-link\" href=\"http://browserify.org/\">Browserify</a> bulunur.</p>\n<h2 id=\"package-managers\"><a class=\"anchor\" href=\"/react/glossary#package-managers\"></a>Paket Y\u00f6neticileri </h2>\n<p>Paket y\u00f6neticileri, projenizdeki ba\u011f\u0131ml\u0131l\u0131klar\u0131 y\u00f6netmenize olanak sa\u011flayan ara\u00e7lard\u0131r. <a class=\"external-link\" href=\"https://www.npmjs.com/\">npm</a> ve <a class=\"external-link\" href=\"https://yarnpkg.com/\">Yarn</a> React uygulamalar\u0131nda yayg\u0131n olarak kullan\u0131lan iki paket y\u00f6neticisidir. Her ikisi de ayn\u0131 npm paket kay\u0131t defteri i\u00e7in istemcilerdir.</p>\n<h2 id=\"cdn\"><a class=\"anchor\" href=\"/react/glossary#cdn\"></a>CDN </h2>\n<p>CDN, \u0130\u00e7erik Da\u011f\u0131t\u0131m A\u011f\u0131 anlam\u0131na gelir. CDN\u2019ler, d\u00fcnya genelinde bir sunucu a\u011f\u0131ndan \u00f6nbelle\u011fe al\u0131nm\u0131\u015f statik i\u00e7erik sa\u011flar.</p>\n<h2 id=\"jsx\"><a class=\"anchor\" href=\"/react/glossary#jsx\"></a>JSX </h2>\n<p>JSX, JavaScript i\u00e7in bir s\u00f6zdizimi uzant\u0131s\u0131d\u0131r. Bir \u015fablon diline benzer ancak JavaScript\u2019in tam g\u00fcc\u00fcne sahiptir. JSX, \u201cReact elemanlar\u0131\u201d olarak adland\u0131r\u0131lan d\u00fcz JavaScript nesnelerini d\u00f6nen <code class=\"language-javascript\">React.createElement()</code> \u00e7a\u011fr\u0131lar\u0131 i\u00e7in derlenir. JSX\u2019e temel bir giri\u015f yapmak i\u00e7in <a href=\"/react/introducing-jsx\">buradaki dok\u00fcman\u0131 inceleyin</a> ve JSX hakk\u0131nda daha ayr\u0131nt\u0131l\u0131 e\u011fitimlere <a href=\"/react/jsx-in-depth\">buradan</a> ula\u015f\u0131n.</p>\n<p>React DOM, HTML \u00f6zellik adlar\u0131 yerine camelCase \u00f6zellik adland\u0131rma kural\u0131n\u0131 kullan\u0131r. \u00d6rne\u011fin, JSX\u2019te <code class=\"language-javascript\">tabindex</code> <code class=\"language-javascript\">tabIndex</code> olur. <code class=\"language-javascript\">class</code> \u00f6zelli\u011fi de JavaScript\u2019e \u00f6zel bir s\u00f6zc\u00fck oldu\u011fu i\u00e7in <code class=\"language-javascript\">className</code> olarak yaz\u0131l\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">My name is Onur!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h2 id=\"elements\"><a class=\"anchor\" href=\"/react/glossary#elements\"></a><a href=\"/react/rendering-elements\">Elemanlar</a> </h2>\n<p>React elemanlar\u0131 React uygulamalar\u0131n\u0131n yap\u0131 ta\u015flar\u0131d\u0131r. Biri \u00f6\u011feleri daha yayg\u0131n olarak bilinen \u201cbile\u015fenler\u201d kavram\u0131 ile kar\u0131\u015ft\u0131rabilir. Bir eleman ekranda g\u00f6rmek istedi\u011finizi a\u00e7\u0131klar. React elemanlar\u0131 de\u011fi\u015fmezdir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Genellikle, elemanlar do\u011frudan kullan\u0131lmaz, ancak bile\u015fenlerden d\u00f6ner.</p>\n<h2 id=\"components\"><a class=\"anchor\" href=\"/react/glossary#components\"></a><a href=\"/react/components-and-props\">Bile\u015fenler</a> </h2>\n<p>React bile\u015fenleri, sayfaya bir React \u00f6\u011fesi d\u00f6nen k\u00fc\u00e7\u00fck, yeniden kullan\u0131labilir kod par\u00e7alar\u0131d\u0131r. React bile\u015feninin en basit s\u00fcr\u00fcm\u00fc, bir React \u00f6\u011fesi d\u00f6nen d\u00fcz bir JavaScript fonksiyonudur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bile\u015fenler ayr\u0131ca ES6 s\u0131n\u0131flar\u0131 olabilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bile\u015fenler farkl\u0131 fonksiyonellik par\u00e7alar\u0131na ayr\u0131labilir ve di\u011fer bile\u015fenlerde kullan\u0131labilir. Bile\u015fenler; di\u011fer bile\u015fenleri, dizileri, string\u2019leri ve say\u0131lar\u0131 d\u00f6nebilir. UI\u2019n\u0131z\u0131n bir k\u0131sm\u0131 birka\u00e7 kez kullan\u0131lm\u0131\u015fsa (Button, Panel, Avatar) veya kendi ba\u015f\u0131na yeterince karma\u015f\u0131ksa (App, FeedStory, Comment), yeniden kullan\u0131labilir bir bile\u015fen olmak i\u00e7in iyi bir aday olmas\u0131 iyi bir temel kurald\u0131r. Bile\u015fen adlar\u0131 ayr\u0131ca her zaman b\u00fcy\u00fck harfle ba\u015flamal\u0131d\u0131r (<code class=\"language-javascript\">&lt;Wrapper/&gt;</code> olmal\u0131, <code class=\"language-javascript\">&lt;wrapper/&gt;</code> <strong>de\u011fil</strong>). Bile\u015fenleri render etme ile ilgili daha fazla bilgi i\u00e7in <a href=\"/react/components-and-props#rendering-a-component\">bu dok\u00fcmana</a> bakabilirsiniz.</p>\n<h3 id=\"props\"><a class=\"anchor\" href=\"/react/glossary#props\"></a><a href=\"/react/components-and-props\"><code class=\"language-javascript\">props</code></a> </h3>\n<p><code class=\"language-javascript\">props</code>, bir React bile\u015fenine ait girdilerdir. Ana bile\u015fenden bir alt bile\u015fene aktar\u0131lan verilerdir.</p>\n<p><code class=\"language-javascript\">props</code>\u0131n salt okunur oldu\u011funu unutmay\u0131n. Hi\u00e7bir \u015fekilde de\u011fi\u015ftirilmemeleri gerekir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Yanl\u0131\u015f!</span>\nprops<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kullan\u0131c\u0131 girdisine veya bir a\u011f yan\u0131t\u0131na cevap olarak bir de\u011feri de\u011fi\u015ftirmeniz gerekirse, bunun yerine <code class=\"language-javascript\">state</code> kullan\u0131n.</p>\n<h3 id=\"propschildren\"><a class=\"anchor\" href=\"/react/glossary#propschildren\"></a><code class=\"language-javascript\">props.children</code> </h3>\n<p><code class=\"language-javascript\">props.children</code> her bile\u015fende mevcuttur. Bir bile\u015fenin a\u00e7\u0131l\u0131\u015f ve kapan\u0131\u015f etiketleri aras\u0131ndaki i\u00e7eri\u011fi kapsar. \u00d6rne\u011fin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Welcome</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>\u201cHello world!\u201d string\u2019i \u201cWelcome\u201d bile\u015fenindeki <code class=\"language-javascript\">props.children</code>da bulunur:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>S\u0131n\u0131f olarak tan\u0131mlanan bile\u015fenler i\u00e7in <code class=\"language-javascript\">this.props.children</code> kullan\u0131n:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"state\"><a class=\"anchor\" href=\"/react/glossary#state\"></a><a href=\"/react/state-and-lifecycle#adding-local-state-to-a-class\"><code class=\"language-javascript\">state</code></a> </h3>\n<p>Bir bile\u015fen, kendisiyle ili\u015fkili baz\u0131 veriler zaman i\u00e7inde de\u011fi\u015fti\u011finde <code class=\"language-javascript\">state</code>e ihtiya\u00e7 duyar. \u00d6rne\u011fin, bir \u201cCheckbox\u201d bile\u015feni state\u2019inde <code class=\"language-javascript\">isChecked</code>e ihtiya\u00e7 duyabilir ve bir <code class=\"language-javascript\">NewsFeed</code> bile\u015feni <code class=\"language-javascript\">fetchedPosts</code>u <code class=\"language-javascript\">state</code>inde takip etmek isteyebilir.</p>\n<p><code class=\"language-javascript\">state</code> ile <code class=\"language-javascript\">props</code> aras\u0131ndaki en \u00f6nemli fark, <code class=\"language-javascript\">props</code>\u0131n bir \u00fcst bile\u015fenden ge\u00e7irilmesidir, ancak <code class=\"language-javascript\">state</code> bile\u015fenin kendisi taraf\u0131ndan y\u00f6netilir. Bir bile\u015fen <code class=\"language-javascript\">props</code>lar\u0131n\u0131 de\u011fi\u015ftiremez, ancak <code class=\"language-javascript\">state</code>ini de\u011fi\u015ftirebilir.</p>\n<p>Her de\u011fi\u015fen veri par\u00e7as\u0131 i\u00e7in, state\u2019inde \u201csahibi\u201d olan tek bir bile\u015fen olmal\u0131d\u0131r. \u0130ki farkl\u0131 bile\u015fenin state\u2019lerini senkronize etmeye \u00e7al\u0131\u015fmay\u0131n. Bunun yerine, en yak\u0131n payla\u015f\u0131ml\u0131 atalar\u0131na <a href=\"/react/lifting-state-up\">\u00e7\u0131kart\u0131n</a> ve her ikisine de props olarak aktar\u0131n.</p>\n<h2 id=\"lifecycle-methods\"><a class=\"anchor\" href=\"/react/glossary#lifecycle-methods\"></a><a href=\"/react/state-and-lifecycle#adding-lifecycle-methods-to-a-class\">Ya\u015fam D\u00f6ng\u00fcs\u00fc Metotlar\u0131</a> </h2>\n<p>Ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131, bir bile\u015fenin farkl\u0131 a\u015famalar\u0131nda y\u00fcr\u00fct\u00fclen \u00f6zel fonksiyonelliklerdir. Bile\u015fenin olu\u015fturulmas\u0131 ve DOM\u2019a eklenmesi (<a href=\"/react/react-component#mounting\">monte edilme</a>), bile\u015fenin g\u00fcncellenmesi, ve bile\u015fenin demonte edilmesi veya DOM\u2019dan silinmesi gibi durumlar i\u00e7in mevcut metotlar vard\u0131r.</p>\n<h2 id=\"kontroll\u00fc-ve-kontrols\u00fcz-bile\u015fenlerin-farklar\u0131\"><a class=\"anchor\" href=\"/react/glossary#kontroll%C3%BC-ve-kontrols%C3%BCz-bile%C5%9Fenlerin-farklar%C4%B1\"></a><a href=\"/react/forms#controlled-components\">Kontroll\u00fc</a> ve <a href=\"/react/uncontrolled-components\">Kontrols\u00fcz Bile\u015fenlerin</a> Farklar\u0131</h2>\n<p>React, form girdilerini y\u00f6netmek i\u00e7in iki farkl\u0131 yakla\u015f\u0131ma sahiptir.</p>\n<p>De\u011feri React taraf\u0131ndan kontrol edilen bir girdi formu eleman\u0131na <em>kontroll\u00fc bile\u015fen</em> denir. Kullan\u0131c\u0131 bir kontroll\u00fc bile\u015fene veri girdi\u011finde bir de\u011fi\u015fim olay y\u00f6neticisi tetiklenir ve kodunuz girdinin ge\u00e7erli olup olmad\u0131\u011f\u0131na karar verir (g\u00fcncellenmi\u015f de\u011ferle yeniden render ederek). E\u011fer yeniden render etmezseniz, form eleman\u0131 de\u011fi\u015fmeden kalacakt\u0131r.</p>\n<p>Bir <em>kontrols\u00fcz bile\u015fen</em> form elemanlar\u0131n\u0131n React d\u0131\u015f\u0131nda yapt\u0131klar\u0131 gibi \u00e7al\u0131\u015f\u0131r. Bir kullan\u0131c\u0131 bir form alan\u0131na veri girdi\u011finde (bir girdi alan\u0131, a\u00e7\u0131l\u0131r men\u00fc vb.), g\u00fcncellenen bilgiler React\u2019in hi\u00e7bir \u015fey yapmaya ihtiyac\u0131 olmadan yans\u0131t\u0131l\u0131r. Ancak, bu ayn\u0131 zamanda alan\u0131 belirli bir de\u011fere sahip olmaya zorlayamayaca\u011f\u0131n\u0131z anlam\u0131na gelir.</p>\n<p>\u00c7o\u011fu durumda kontroll\u00fc bile\u015fenler kullanmal\u0131s\u0131n\u0131z.</p>\n<h2 id=\"keys\"><a class=\"anchor\" href=\"/react/glossary#keys\"></a><a href=\"/react/lists-and-keys\">Anahtarlar</a> </h2>\n<p>Bir \u201canahtar\u201d, eleman dizileri olu\u015ftururken eklemeniz gereken \u00f6zel bir string \u00f6zelli\u011fidir. Anahtarlar, React\u2019in hangi \u00f6\u011felerin de\u011fi\u015fti\u011fini, eklendi\u011fini veya kald\u0131r\u0131ld\u0131\u011f\u0131n\u0131 belirlemesine yard\u0131mc\u0131 olur. Elemanlara stabil bir kimlik kazand\u0131rmak i\u00e7in bir dizideki elemanlara anahtarlar verilmelidir.</p>\n<p>Anahtarlar\u0131n yaln\u0131zca ayn\u0131 dizideki karde\u015f elemanlar aras\u0131nda benzersiz olmas\u0131 gerekir. T\u00fcm uygulama boyunca veya hatta tek bir bile\u015fende bile benzersiz olmalar\u0131 gerekmez.</p>\n<p><code class=\"language-javascript\">Math.random()</code> gibi \u015feyleri anahtarlara iletmeyin. Anahtarlar\u0131n yeniden render ediciler aras\u0131nda bir \u201cstabil kimli\u011fe\u201d sahip olmas\u0131 \u00f6nemlidir, b\u00f6ylece React elemanlar\u0131n ne zaman eklenece\u011fini, kald\u0131r\u0131ld\u0131\u011f\u0131n\u0131 veya yeniden s\u0131raland\u0131\u011f\u0131n\u0131 belirler. \u0130deal olarak, anahtarlar <code class=\"language-javascript\">post.id</code> gibi verilerinizden gelen benzersiz ve stabil tan\u0131mlay\u0131c\u0131lara kar\u015f\u0131l\u0131k gelmelidir.</p>\n<h2 id=\"refs\"><a class=\"anchor\" href=\"/react/glossary#refs\"></a><a href=\"/react/refs-and-the-dom\">Ref\u2019ler</a> </h2>\n<p>React herhangi bir bile\u015fene ekleyebilece\u011finiz \u00f6zel bir \u00f6zelli\u011fi destekler. <code class=\"language-javascript\">ref</code> \u00f6zelli\u011fi, <a href=\"/react/react-api#reactcreateref\"><code class=\"language-javascript\">React.createRef()</code> fonksiyonu</a>, callback fonksiyonu veya bir string (eski API\u2019da) taraf\u0131ndan olu\u015fturulan bir nesne olabilir. <code class=\"language-javascript\">ref</code> \u00f6zelli\u011fi bir callback fonksiyonu oldu\u011funda, fonksiyon temel DOM \u00f6\u011fesini veya s\u0131n\u0131f nesnesine (eleman\u0131n t\u00fcr\u00fcne ba\u011fl\u0131 olarak) arg\u00fcman\u0131 olarak al\u0131r. Bu, DOM eleman\u0131na veya bile\u015fen nesnesine do\u011frudan eri\u015fmenize izin verir.</p>\n<p>Ref\u2019leri tutumlu bir \u015fekilde kullan\u0131n. E\u011fer kendinizi uygulaman\u0131zda s\u00fcrekli \u201cbir \u015feyleri ger\u00e7ekle\u015ftirmek\u201d i\u00e7in ref kullan\u0131rken buluyorsan\u0131z, <a href=\"/react/lifting-state-up\">yukar\u0131dan a\u015fa\u011f\u0131 veri ak\u0131\u015f\u0131</a> ile daha a\u015fina olmay\u0131 d\u00fc\u015f\u00fcn\u00fcn.</p>\n<h2 id=\"events\"><a class=\"anchor\" href=\"/react/glossary#events\"></a><a href=\"/react/handling-events\">Olaylar</a> </h2>\n<p>Olaylar\u0131 React elemanlar\u0131yla y\u00f6netme, s\u00f6z dizimsel baz\u0131 farkl\u0131l\u0131klara sahiptir:</p>\n<ul>\n<li>React olay y\u00f6neticileri, k\u00fc\u00e7\u00fck harf yerine camelCase kullan\u0131larak adland\u0131r\u0131l\u0131r.</li>\n<li>JSX ile bir fonksiyonu string yerine olay y\u00f6neticisi olarak iletirsiniz.</li>\n</ul>\n<h2 id=\"reconciliation\"><a class=\"anchor\" href=\"/react/glossary#reconciliation\"></a><a href=\"/react/reconciliation\">Uyumla\u015ft\u0131rma</a> </h2>\n<p>Bir bile\u015fenin prop\u2019lar\u0131 veya state\u2019i de\u011fi\u015fti\u011finde, React yeni d\u00f6nen eleman\u0131 \u00f6nceden olu\u015fturulmu\u015f olanla kar\u015f\u0131la\u015ft\u0131rarak ger\u00e7ek bir DOM g\u00fcncellemesi gerekip gerekmedi\u011fine karar verir. E\u015fit olmad\u0131klar\u0131nda, React DOM\u2019\u0131 g\u00fcnceller. Bu s\u00fcrece \u201cuyumla\u015ft\u0131rma\u201d denir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/reference-glossary.md\">Edit this page</a></p></div></article>", "path": "/react/glossary", "nav": ["/react/javascript-environment-requirements", "/react/hooks-intro"]}]}, {"key": "Hook'lar", "values": [{"key": "1. Hook'lara Giri\u015f", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hook\u2019lar</em> React 16.8\u2019deki yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flarlar.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \"count\" diyece\u011fimiz yeni bir state de\u011fi\u015fkeni tan\u0131mlay\u0131n</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu yeni <code class=\"language-javascript\">useState</code> fonksiyonu \u00f6\u011frenece\u011fimiz ilk \u201cHook\u201d, ancak bu \u00f6rnek sadece k\u0131sa bir tan\u0131t\u0131m. Hen\u00fcz bir anlam ifade etmiyorsa endi\u015felenmeyin!</p>\n<p><strong><a href=\"/react/hooks-overview\">Bir sonraki sayfada</a> Hook\u2019lar\u0131 \u00f6\u011frenmeye ba\u015flayabilirsiniz.</strong> Bu sayfada, React\u2019e Hook\u2019lar\u0131 neden ekledi\u011fimizi ve harika uygulamalar yazman\u0131za nas\u0131l yard\u0131mc\u0131 olabileceklerini a\u00e7\u0131klayarak devam edece\u011fiz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React 16.8.0, Hook\u2019lar\u0131 destekleyen ilk s\u00fcr\u00fcmd\u00fcr. S\u00fcr\u00fcm y\u00fckseltme yaparken, React DOM dahil olmak \u00fczere t\u00fcm paketleri g\u00fcncellemeyi unutmay\u0131n.\nReact Native, Hook\u2019lar\u0131 <a class=\"external-link\" href=\"https://reactnative.dev/blog/2019/03/12/releasing-react-native-059\">0.59 s\u00fcr\u00fcm\u00fcnden itibaren</a> desteklemektedir.</p>\n</div>\n<h2 id=\"video-introduction\"><a class=\"anchor\" href=\"/react/hooks-intro#video-introduction\"></a>Tan\u0131t\u0131m Videosu </h2>\n<p>React 2018 Konferans\u0131\u2019nda, Sophie Alpert ve Dan Abramov Hook\u2019lar\u0131 tan\u0131tt\u0131, ard\u0131ndan Ryan Florence bunlar\u0131 kullanmak i\u00e7in bir uygulaman\u0131n nas\u0131l yeniden yap\u0131land\u0131r\u0131laca\u011f\u0131n\u0131 g\u00f6sterdi. Videoyu buradan izleyin:</p>\n<br/>\n<a class=\"external-link\" href=\"//www.youtube.com/embed/dpw9EHDh2bM\">link</a>\n<h2 id=\"no-breaking-changes\"><a class=\"anchor\" href=\"/react/hooks-intro#no-breaking-changes\"></a>Mevcut Kodu Bozan De\u011fi\u015fiklikler Yok </h2>\n<p>Devam etmeden \u00f6nce, unutmay\u0131n ki Hook\u2019lar:</p>\n<ul>\n<li><strong>Tamamen opsiyoneldir.</strong> Hook\u2019lar\u0131 mevcut herhangi bir kodu tekrar yazmadan birka\u00e7 bile\u015fende deneyebilirsiniz. Fakat istemiyorsan\u0131z \u015fu anda Hook\u2019lar\u0131 \u00f6\u011frenmek veya kullanmak zorunda de\u011filsiniz.</li>\n<li><strong>100% geriye uyumludur.</strong> Hook\u2019lar mevcut kodu bozan herhangi bir de\u011fi\u015fiklik i\u00e7ermiyor.</li>\n<li><strong>\u015eu an kullan\u0131labilir.</strong> Hook\u2019lar v16.8.0 s\u00fcr\u00fcm\u00fcn\u00fcn yay\u0131mlanmas\u0131 ile \u015fu an kullan\u0131ma uygundur.</li>\n</ul>\n<p><strong>React\u2019ten s\u0131n\u0131flar\u0131 kald\u0131rmak gibi bir plan\u0131m\u0131z yok.</strong> Hook\u2019lar i\u00e7in kademeli kabul stratejisi hakk\u0131nda daha fazla bilgiyi bu sayfan\u0131n <a href=\"/react/hooks-intro#gradual-adoption-strategy\">alt k\u0131sm\u0131nda</a> bulabilirsiniz.</p>\n<p><strong>Hook\u2019lar, React kavramlar\u0131 hakk\u0131ndaki bilgilerinizin yerini almaz.</strong> Bunun yerine, Hook\u2019lar zaten bildi\u011finiz React kavramlar\u0131na (props, state, context, refs ve lifecycle) daha do\u011frudan bir API sa\u011flar. Daha sonra g\u00f6sterece\u011fimiz gibi, Hook\u2019lar bunlar\u0131 bir araya getirmek i\u00e7in yeni bir g\u00fc\u00e7l\u00fc yol sunar.</p>\n<p><strong>Sadece Hook\u2019lar\u0131 \u00f6\u011frenmeye ba\u015flamak istiyorsan\u0131z, <a href=\"/react/hooks-overview\">do\u011frudan bir sonraki sayfaya atlamaktan</a> \u00e7ekinmeyin!</strong> Ayr\u0131ca neden Hook\u2019lar\u0131 ekledi\u011fimizi ve uygulamalar\u0131m\u0131z\u0131 yeniden kodlamadan nas\u0131l kullanmaya ba\u015flayaca\u011f\u0131m\u0131z\u0131 \u00f6\u011frenmek i\u00e7in bu sayfay\u0131 okumaya devam edebilirsiniz.</p>\n<h2 id=\"motivation\"><a class=\"anchor\" href=\"/react/hooks-intro#motivation\"></a>Motivasyon </h2>\n<p>Hook\u2019lar, React\u2019te be\u015f y\u0131ldan fazla bir s\u00fcredir yazd\u0131\u011f\u0131m\u0131z ve on binlerce bile\u015fenin bak\u0131m\u0131n\u0131 yapt\u0131\u011f\u0131m\u0131z \u00e7ok \u00e7e\u015fitli g\u00f6r\u00fcn\u00fc\u015fte birbirinden ba\u011f\u0131ms\u0131z sorunlar\u0131 \u00e7\u00f6z\u00fcyor. React\u2019i \u00f6\u011freniyor, g\u00fcnl\u00fck hayat\u0131n\u0131zda kullan\u0131yor veya hatta benzer bir bile\u015fen modeline sahip farkl\u0131 bir k\u00fct\u00fcphaneyi tercih ediyor da olsan\u0131z, bu sorunlar\u0131n baz\u0131lar\u0131n\u0131 fark edebilirsiniz.</p>\n<h3 id=\"its-hard-to-reuse-stateful-logic-between-components\"><a class=\"anchor\" href=\"/react/hooks-intro#its-hard-to-reuse-stateful-logic-between-components\"></a>Bile\u015fenler aras\u0131ndaki stateful logic\u2019i yeniden kullanmak zor </h3>\n<p>React, bir bile\u015fene yeniden kullan\u0131labilir davran\u0131\u015flar\u0131 \u201ciletmenin\u201d bir yolunu sunmaz (\u00f6rne\u011fin, bir store\u2019a ba\u011flamak). Bir s\u00fcre React ile \u00e7al\u0131\u015ft\u0131ysan\u0131z, bu sorunu \u00e7\u00f6zmeye \u00e7al\u0131\u015fan <a href=\"/react/render-props\">prop\u2019lar\u0131 render etme</a> ve <a href=\"/react/higher-order-components\">higher-order bile\u015fenler</a> gibi kal\u0131plara a\u015fina olabilirsiniz. Ancak bu modeller, bile\u015fenlerinizi kulland\u0131k\u00e7a yeniden yap\u0131land\u0131rman\u0131z\u0131 gerektirir ki bu da kullan\u0131\u015fs\u0131zd\u0131r ve kodun takip edilmesini zorla\u015ft\u0131r\u0131r. React DevTools\u2019ta tipik bir React uygulamas\u0131na bakarsan\u0131z, b\u00fcy\u00fck olas\u0131l\u0131kla; sa\u011flay\u0131c\u0131lar, t\u00fcketiciler, higher-order bile\u015fenler, prop\u2019lar\u0131 render etme ve di\u011fer soyutlamala katmanlar\u0131 ile \u00e7evrili bile\u015fenlerin \u201cwrapper hell\u201d problemini bulacaks\u0131n\u0131z. Bunlar\u0131 <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools/pull/503\">DevTools\u2019ta filtreleyebiliyor</a> olsak da, bu daha derin bir soruna i\u015faret ediyor: React\u2019e, stateful logic\u2019i payla\u015fmak i\u00e7in daha iyi bir genel \u00e7\u00f6z\u00fcm gerekli.</p>\n<p>Hook\u2019lar ile, bir bile\u015fenden stateful logic \u00e7\u0131karabilir, b\u00f6ylece bile\u015fen ba\u011f\u0131ms\u0131z olarak test edilebilir ve yeniden kullan\u0131labilir. <strong>Hook\u2019lar, bile\u015fen hiyerar\u015finizi de\u011fi\u015ftirmeden stateful logic\u2019i yeniden kullanman\u0131za olanak sa\u011flar.</strong> Bu, Hook\u2019lar\u0131 bir\u00e7ok bile\u015fen aras\u0131nda veya toplulukla payla\u015fmay\u0131 kolayla\u015ft\u0131r\u0131r.</p>\n<p>Buna daha \u00e7ok <a href=\"/react/hooks-custom\">Kendi Hook\u2019lar\u0131n\u0131z\u0131 Olu\u015fturma</a> b\u00f6l\u00fcm\u00fcnde de\u011finece\u011fiz.</p>\n<h3 id=\"complex-components-become-hard-to-understand\"><a class=\"anchor\" href=\"/react/hooks-intro#complex-components-become-hard-to-understand\"></a>Karma\u015f\u0131k bile\u015fenlerin anla\u015f\u0131lmas\u0131 zorla\u015f\u0131yor </h3>\n<p>Basit bir \u015fekilde ba\u015flayan, ancak y\u00f6netilemez bir stateful logic ve yan etki karma\u015fas\u0131na d\u00f6n\u00fc\u015fen bile\u015fenlerin bak\u0131m\u0131n\u0131 s\u0131k\u00e7a yapmak zorunda kald\u0131k. Her ya\u015fam d\u00f6ng\u00fcs\u00fc metodu \u00e7o\u011fu zaman alakas\u0131z bir mant\u0131k kar\u0131\u015f\u0131m\u0131 i\u00e7erir. \u00d6rne\u011fin, bile\u015fenler <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code> i\u00e7erisinde baz\u0131 verileri getirebilir. Bununla birlikte, ayn\u0131 <code class=\"language-javascript\">componentDidMount</code> y\u00f6ntemi de, <code class=\"language-javascript\">componentWillUnmount</code> i\u00e7erisinde ger\u00e7ekle\u015ftirilen temizleme i\u015flemiyle olay dinleyicilerini ayarlayan alakas\u0131z bir mant\u0131k i\u00e7erebilir. Birlikte de\u011fi\u015fen kar\u015f\u0131l\u0131kl\u0131 ili\u015fkili kod par\u00e7alan\u0131r, ancak tamamen ili\u015fkisiz kod tek bir metotta bir araya gelmi\u015f olur. Bu, hatalar\u0131 ve tutars\u0131zl\u0131klar\u0131 ortaya \u00e7\u0131karmay\u0131 \u00e7ok kolayla\u015ft\u0131r\u0131r.</p>\n<p>\u00c7o\u011fu durumda, bu bile\u015fenleri daha k\u00fc\u00e7\u00fck par\u00e7alara b\u00f6lmek m\u00fcmk\u00fcn de\u011fil \u00e7\u00fcnk\u00fc stateful logic darmada\u011f\u0131n durumdad\u0131r. Test etmek de zordur. Bu, bir\u00e7ok insan\u0131n React\u2019i ayr\u0131 bir state y\u00f6netimi k\u00fct\u00fcphanesiyle kullanmay\u0131 tercih etmelerinin nedenlerinden biridir. Ancak, bu genellikle \u00e7ok fazla soyutlama getirir, farkl\u0131 dosyalar aras\u0131nda atlaman\u0131z\u0131 gerektirir ve bile\u015fenleri yeniden kullanmay\u0131 daha da zorla\u015ft\u0131r\u0131r.</p>\n<p>Bunu \u00e7\u00f6zmek i\u00e7in, ya\u015fam d\u00f6ng\u00fcs\u00fc metotlar\u0131n\u0131 baz alan bir ayr\u0131m\u0131 zorlamak yerine <strong>Hook\u2019lar, bir bile\u015feni hangi par\u00e7alarla ilgili oldu\u011funu (bir abonelik ayarlamak veya veri almak gibi) baz alarak daha k\u00fc\u00e7\u00fck fonksiyonlara ay\u0131rman\u0131za olanak tan\u0131r.</strong> Ayr\u0131ca, daha \u00f6ng\u00f6r\u00fclebilir hale getirmek i\u00e7in bile\u015fenin state durumunu bir reducer ile y\u00f6netmeyi de se\u00e7ebilirsiniz.</p>\n<p>Buna daha \u00e7ok <a href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\">Efekt Hook\u2019unu Kullanma</a> b\u00f6l\u00fcm\u00fcnde de\u011finece\u011fiz.</p>\n<h3 id=\"classes-confuse-both-people-and-machines\"><a class=\"anchor\" href=\"/react/hooks-intro#classes-confuse-both-people-and-machines\"></a>S\u0131n\u0131flar hem insanlar\u0131n hem de makinelerin kafas\u0131n\u0131 kar\u0131\u015ft\u0131r\u0131yor </h3>\n<p>S\u0131n\u0131flar\u0131n, kodun yeniden kullan\u0131lmas\u0131n\u0131 ve kod organizasyonunu zorla\u015ft\u0131rmas\u0131n\u0131n yan\u0131 s\u0131ra, React\u2019i \u00f6\u011frenme konusunda b\u00fcy\u00fck bir engel olabilece\u011fini g\u00f6rd\u00fck. <code class=\"language-javascript\">Bunun</code> JavaScript\u2019te nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 anlamal\u0131s\u0131n\u0131z, bu bir\u00e7ok dilde nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131ndan \u00e7ok farkl\u0131. Olay y\u00f6neticilerini ba\u011flamay\u0131 i\u00e7in hat\u0131rlaman\u0131z gereklidir. <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields#public_instance_fields\">ES2022 public class fields</a> olmadan, kod \u00e7ok fazla ayr\u0131nt\u0131l\u0131d\u0131r. \u0130nsanlar prop\u2019lar\u0131, state\u2019i ve yukar\u0131dan a\u015fa\u011f\u0131ya veri ak\u0131\u015f\u0131n\u0131 m\u00fckemmel bir \u015fekilde anlayabilir, ancak yine de s\u0131n\u0131flar\u0131 anlamak i\u00e7in \u00e7aba sarfedebilir. React\u2019teki fonksiyon ve s\u0131n\u0131f bile\u015fenleri aras\u0131ndaki ayr\u0131m ve her birinin ne zaman kullan\u0131laca\u011f\u0131, deneyimli React geli\u015ftiricileri aras\u0131nda bile anla\u015fmazl\u0131klara yol a\u00e7ar.</p>\n<p>Ayr\u0131ca, React 5 y\u0131ld\u0131r mevcut ve \u00f6n\u00fcm\u00fczdeki 5 y\u0131l i\u00e7in de kal\u0131c\u0131 olaca\u011f\u0131ndan emin olmak istiyoruz. <a class=\"external-link\" href=\"https://svelte.dev/\">Svelte</a>, <a class=\"external-link\" href=\"https://angular.io/\">Angular</a>, <a class=\"external-link\" href=\"https://glimmerjs.com/\">Glimmer</a> ve di\u011ferlerinin g\u00f6sterdi\u011fi gibi, bile\u015fenlerin <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Ahead-of-time_compilation\">\u00f6nceden yap\u0131lm\u0131\u015f derlemeler</a> \u00e7ok fazla gelecek potansiyeli var. \u00d6zellikle de \u015fablonlarla s\u0131n\u0131rl\u0131 de\u011filse. Son zamanlarda, <a class=\"external-link\" href=\"https://prepack.io/\">Prepack</a> kullanarak <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/7323\">bile\u015fen katlama</a> ile deneme yapt\u0131k ve ilk sonu\u00e7lar\u0131n umut verici oldu\u011funu g\u00f6zlemledik. Bununla birlikte, s\u0131n\u0131f bile\u015fenlerinin bu optimizasyonlar\u0131 daha yava\u015f bir yola geri \u00e7ekmesini sa\u011flayan istemsiz kal\u0131plar\u0131 te\u015fvik edebilece\u011fini g\u00f6rd\u00fck. S\u0131n\u0131flar da bug\u00fcn\u00fcn ara\u00e7lar\u0131 i\u00e7in sorunlar sunmaktad\u0131r. \u00d6rne\u011fin, s\u0131n\u0131flar \u00e7ok k\u00fc\u00e7\u00fcltmezler ve hot reloading\u2019i tuhaf ve g\u00fcvenilmez yaparlar. Kodun optimize edilebilir yolda kalmas\u0131n\u0131 daha kolay k\u0131lan bir API sunmak istiyoruz.</p>\n<p>Bu sorunlar\u0131 \u00e7\u00f6zmek i\u00e7in, <strong>Hook\u2019lar, s\u0131n\u0131fs\u0131z \u015fekilde React\u2019in \u00f6zelliklerini daha fazla kullanman\u0131z\u0131 sa\u011flar.</strong> Kavramsal olarak, React bile\u015fenleri her zaman fonksiyonlara daha yak\u0131n olmu\u015ftur. Hook\u2019lar React\u2019in pratik ruhundan \u00f6d\u00fcn vermeden. fonksiyonlar\u0131 kucaklar. Hook\u2019lar, mecburi ka\u00e7\u0131\u015f kapaklar\u0131na eri\u015fim sa\u011flar ve karma\u015f\u0131k fonksiyonel veya reaktif programlama tekniklerini \u00f6\u011frenmenizi gerektirmez.</p>\n<div class=\"blockquote\">\n<strong>\u00d6rnekler</strong>\n<p><a href=\"/react/hooks-overview\">Bir Bak\u0131\u015fta Hook\u2019lar</a>, Hook\u2019lar\u0131 \u00f6\u011frenmeye ba\u015flamak i\u00e7in iyi bir yer.</p>\n</div>\n<h2 id=\"gradual-adoption-strategy\"><a class=\"anchor\" href=\"/react/hooks-intro#gradual-adoption-strategy\"></a>Kademeli Kabul Stratejisi </h2>\n<div class=\"blockquote\">\n<strong>K\u0131saca: S\u0131n\u0131flar\u0131 React\u2019ten kald\u0131rmak gibi bir plan\u0131m\u0131z yok.</strong>\n</div>\n<p>React geli\u015ftiricilerinin \u00fcr\u00fcnlerini teslim etmeye odakland\u0131\u011f\u0131n\u0131 ve yay\u0131mlanan her yeni API\u2019y\u0131 incelemeye zamanlar\u0131n\u0131n olmad\u0131\u011f\u0131n\u0131 biliyoruz. Hook\u2019lar \u00e7ok yeni ve \u00f6\u011frenmeyi veya benimsemeyi d\u00fc\u015f\u00fcnmeden \u00f6nce daha fazla \u00f6rnek ve \u00f6\u011fretici beklemek daha iyi olabilir.</p>\n<p>Ayr\u0131ca, React\u2019e yeni bir ilkel (primitive) eklemek i\u00e7in \u00e7\u0131tan\u0131n son derece yukar\u0131da oldu\u011funun fark\u0131nday\u0131z. Merakl\u0131 okuyucular i\u00e7in, daha detayl\u0131ca motivasyonu i\u015fleyen ve belirli tasar\u0131m kararlar\u0131 ve \u00f6nceki ilgili teknikler hakk\u0131nda ekstra perspektif sa\u011flayan <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs/pull/68\">detayl\u0131 RFC</a>\u2018i haz\u0131rlad\u0131k.</p>\n<p><strong>\u00d6nemli olan Hook\u2019lar, mevcut kodla yan yana \u00e7al\u0131\u015f\u0131r, b\u00f6ylece bunlar\u0131 a\u015famal\u0131 olarak kullanabilirsiniz.</strong> Hook\u2019lara ge\u00e7meniz i\u00e7in acele etmenize gerek yok. \u00d6zellikle mevcut, karma\u015f\u0131k s\u0131n\u0131f bile\u015fenlerinizi \u201cyeniden yazmak\u201dtan ka\u00e7\u0131nman\u0131z\u0131 \u00f6neririz. \u201cHook\u2019lar\u0131 anlamak\u201d biraz zaman alabilir. Tecr\u00fcbelerimize g\u00f6re, Hook\u2019lar\u0131 \u00f6ncelikle yeni ve kritik olmayan bile\u015fenlerde kullanarak pratik yapmak ve ekibinizdeki herkesin kendisini bunu konuda rahat hissetmesini sa\u011flamak en iyisi. Hook\u2019lar\u0131 denedikten sonra, l\u00fctfen bize olumlu ya da olumsuz <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">geri bildirim g\u00f6nderin</a>.</p>\n<p>Hook\u2019lar\u0131n s\u0131n\u0131flar i\u00e7in mevcut t\u00fcm kullan\u0131m durumlar\u0131n\u0131 kapsamas\u0131n\u0131 istiyoruz, ancak <strong>\u00f6ng\u00f6r\u00fclebilir gelecek i\u00e7in s\u0131n\u0131f bile\u015fenlerini desteklemeye devam edece\u011fiz.</strong> Facebook\u2019ta, s\u0131n\u0131f olarak yaz\u0131lm\u0131\u015f on binlerce bile\u015fene sahibiz ve bunlar\u0131 yeniden yazmak i\u00e7in kesinlikle hi\u00e7bir plan\u0131m\u0131z yok. Bunun yerine, yeni kodda Hook\u2019lar\u0131 yan yana s\u0131n\u0131flarla kullanmaya ba\u015fl\u0131yoruz.</p>\n<h2 id=\"frequently-asked-questions\"><a class=\"anchor\" href=\"/react/hooks-intro#frequently-asked-questions\"></a>S\u0131k\u00e7a Sorulan Sorular </h2>\n<p>Hook\u2019lar hakk\u0131nda en s\u0131k sorulan sorular\u0131 cevaplayan bir <a href=\"/react/hooks-faq\">Hook\u2019lar i\u00e7in SSS sayfas\u0131</a> haz\u0131rlad\u0131k.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-intro#next-steps\"></a>Sonraki Ad\u0131mlar </h2>\n<p>Bu sayfan\u0131n sonunda, Hook\u2019lar\u0131n hangi problemleri \u00e7\u00f6zd\u00fc\u011f\u00fc hakk\u0131nda kabaca bir fikriniz olmal\u0131, ancak bir\u00e7ok detay muhtemelen belirsiz. Merak etmeyin! <strong>\u015eimdi Hook\u2019lar\u0131 \u00f6rneklerle \u00f6\u011frenmeye ba\u015flad\u0131\u011f\u0131m\u0131z <a href=\"/react/hooks-overview\">bir sonraki sayfaya</a> gidelim.</strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-intro.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-intro", "nav": ["/react/glossary", "/react/hooks-overview"]}, {"key": "2. Bir Bak\u0131\u015fta Hook'lar", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hook</em>\u2018lar React 16.8\u2019deki yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flar.</p>\n<p>Hook\u2019larda <a href=\"/react/hooks-intro#no-breaking-changes\">mevcut kodu bozan de\u011fi\u015fiklikler yok</a>. Bu sayfa, tecr\u00fcbeli React kullan\u0131c\u0131lar\u0131na Hook\u2019lar hakk\u0131nda genel bir fikir sa\u011flar. Bu h\u0131zl\u0131 bir g\u00f6zden ge\u00e7irme demektir. E\u011fer kafan\u0131z kar\u0131\u015f\u0131rsa bu tarz bir sar\u0131 kutu aray\u0131n:</p>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 a\u00e7\u0131klama</strong>\n<p>Neden Hook\u2019lar\u0131 \u00e7\u0131kard\u0131\u011f\u0131m\u0131z\u0131 anlamak i\u00e7in <a href=\"/react/hooks-intro#motivation\">Motivasyon</a> b\u00f6l\u00fcm\u00fcn\u00fc okuyun.</p>\n</div>\n<p><strong>\u2191\u2191\u2191 Her b\u00f6l\u00fcm bunun gibi bir sar\u0131 kutuyla biter</strong> Bunlar detayl\u0131 a\u00e7\u0131klamalar\u0131n nerede bulunaca\u011f\u0131n\u0131 g\u00f6sterir.</p>\n<h2 id=\"state-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#state-hook\"></a>\ud83d\udccc State Hook\u2019u </h2>\n<p>Bu \u00f6rnek bir saya\u00e7 render ediyor. Tu\u015fa bas\u0131ld\u0131\u011f\u0131nda de\u011feri bir artt\u0131r\u0131yor:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Yeni bir state de\u011fi\u015fkeni belirlenir, biz buna \"count\" diyece\u011fiz.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Burada, <code class=\"language-javascript\">useState</code> bir <em>Hook</em> (birazdan bunun ne demek oldu\u011fuyla alakal\u0131 konu\u015faca\u011f\u0131z). Bu fonksiyonu; fonksiyonel bir bile\u015fene, yerel bir state eklemek amac\u0131yla, bu bile\u015fenin i\u00e7erisinde \u00e7a\u011f\u0131r\u0131yoruz. React bu state\u2019i yenilenen render\u2019lar aras\u0131nda muhafaza edecek. <code class=\"language-javascript\">useState</code> bir \u00e7ift d\u00f6nd\u00fcr\u00fcr: <em>anl\u0131k</em> state de\u011feri ve bunu de\u011fi\u015ftirmenize yarayan bir fonksiyon. Bu fonksiyonu bir olay y\u00f6neticisinde veya ba\u015fka bir yerde \u00e7a\u011f\u0131rabilirsiniz. Bu, class\u2019lardaki <code class=\"language-javascript\">this.setState</code> fonksiyonuna benzer, fakat eski ve yeni state\u2019i birle\u015ftirmez. (<code class=\"language-javascript\">useState</code> ve <code class=\"language-javascript\">this.state</code> farklar\u0131n\u0131 <a href=\"/react/hooks-state\">State Hook\u2019unu Kullanmak</a> b\u00f6l\u00fcm\u00fcnde g\u00f6sterece\u011fiz.)</p>\n<p><code class=\"language-javascript\">useState</code>\u2018in ald\u0131\u011f\u0131 tek arg\u00fcman ba\u015flang\u0131\u00e7taki state\u2019dir. Yukar\u0131daki \u00f6rnekte bu arg\u00fcman <code class=\"language-javascript\">0</code>, \u00e7\u00fcnk\u00fc sayac\u0131m\u0131z s\u0131f\u0131rdan ba\u015fl\u0131yor. <code class=\"language-javascript\">this.state</code>\u2018ten farkl\u0131 olarak state\u2019in bir obje olmas\u0131 gerekmedi\u011fine dikkat edin \u2014 tabi isterseniz obje de kullanabilirsiniz. Ba\u015flang\u0131\u00e7 state arg\u00fcman\u0131 sadece ilk render\u2019da kullan\u0131l\u0131r.</p>\n<h4 id=\"declaring-multiple-state-variables\"><a class=\"anchor\" href=\"/react/hooks-overview#declaring-multiple-state-variables\"></a>Birden fazla state de\u011fi\u015fkeni tan\u0131mlamak </h4>\n<p>State Hook\u2019unu tek bir bile\u015fende, birden fazla kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ExampleWithManyStates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Declare multiple state variables!</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>age<span class=\"token punctuation\">,</span> setAge<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Learn Hooks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring\">Dizi par\u00e7alama (array destructuring)</a> syntax\u2019i <code class=\"language-javascript\">useState</code> kullanarak tan\u0131mlad\u0131\u011f\u0131m\u0131z state de\u011fi\u015fkenlerine farkl\u0131 isimler vermemize olanak tan\u0131r. Bu isimler <code class=\"language-javascript\">useState</code> API\u2019nin bir par\u00e7as\u0131 de\u011fildir. Bunun yerine; e\u011fer <code class=\"language-javascript\">useState</code>\u2018i \u00e7ok fazla \u00e7a\u011f\u0131r\u0131rsan\u0131z, React her render\u2019da ayn\u0131 s\u0131rayla \u00e7a\u011f\u0131rd\u0131\u011f\u0131n\u0131z\u0131 var sayar. Bunun niye \u00e7al\u0131\u015ft\u0131\u011f\u0131na ve nas\u0131l kullan\u0131\u015fl\u0131 olaca\u011f\u0131na ileride de\u011finece\u011fiz.</p>\n<h4 id=\"but-what-is-a-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#but-what-is-a-hook\"></a>Peki bir hook nedir? </h4>\n<p>Hook\u2019lar React state ve ya\u015fam d\u00f6ng\u00fcs\u00fc \u00f6zelliklerine fonksiyonel bile\u015fenleri kullanarak \u201cba\u011flaman\u0131za\u201d yarayan fonksiyonlard\u0131r. Hook\u2019lar class\u2019lar\u0131n i\u00e7erisinde \u00e7al\u0131\u015fmazlar \u2014 React\u2019\u0131 class\u2019lar olmadan kullanman\u0131za yararlar. (Var olan bile\u015fenlerinizi bir gecede tekrar yazman\u0131z\u0131 <a href=\"/react/hooks-intro#gradual-adoption-strategy\">\u00f6nermiyoruz</a> fakat yeni bile\u015fenleriniz i\u00e7in Hook\u2019lar\u0131 kullanmaya ba\u015flayabilirsiniz.)</p>\n<p>React \u00fczerinde <code class=\"language-javascript\">useState</code> gibi bir ka\u00e7 Hook bulunmaktad\u0131r. Ayr\u0131ca siz de state\u2019le alakal\u0131 davran\u0131\u015flar\u0131n\u0131z\u0131n, farkl\u0131 bile\u015fenler taraf\u0131ndan yeniden kullan\u0131lmas\u0131 i\u00e7in \u00f6zel Hook\u2019lar\u0131n\u0131z\u0131 yazabilirsiniz. \u00d6ncelikle React \u00fczerinde var olan Hook\u2019lar\u0131 inceleyece\u011fiz.</p>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 a\u00e7\u0131klama</strong>\n<p>State Hook\u2019u hakk\u0131nda daha fazla bilgiye bu sayfadan ula\u015fabilirsiniz: <a href=\"/react/hooks-state\">State Hook\u2019unu Kullanmak</a>.</p>\n</div>\n<h2 id=\"effect-hook\"><a class=\"anchor\" href=\"/react/hooks-overview#effect-hook\"></a>\u26a1\ufe0f Effect Hook\u2019u </h2>\n<p>Y\u00fcksek ihtimalle daha \u00f6ncesinde data \u00e7ekme, d\u0131\u015far\u0131ya ba\u011flanma ya da DOM\u2019u elle de\u011fi\u015ftirme gibi i\u015flemleri React bile\u015fenleri kullanarak yapm\u0131\u015fs\u0131n\u0131zd\u0131r. Bu tarz i\u015flemleri \u201cyan etkiler(side effects)\u201d (veya k\u0131saca \u201cetkiler\u201d) olarak adland\u0131r\u0131yoruz \u00e7\u00fcnk\u00fc ba\u015fka bile\u015fenleri etkileyebiliyorlar ve render s\u0131ras\u0131nda yap\u0131lamayan i\u015flemler oluyorlar.</p>\n<p>Effect Hook\u2019u; <code class=\"language-javascript\">useEffect</code>, fonksiyonel bir bile\u015fene yan etkileri kullanabilme yetkisini ekler. React class\u2019lar\u0131ndaki <code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, ve <code class=\"language-javascript\">componentWillUnmount</code> ile ayn\u0131 i\u015fleve sahiptir fakat tek bir API i\u00e7erisinde birle\u015ftirilmi\u015ftir. (<code class=\"language-javascript\">useEffect</code> ve bu metodlar\u0131n farklar\u0131n\u0131 \u00f6rneklerle <a href=\"/react/hooks-effect\">Effect Hook\u2019unu kullanmak</a> b\u00f6l\u00fcm\u00fcnde g\u00f6sterece\u011fiz.)</p>\n<p>\u00d6rne\u011fin, bu bile\u015fen html dosyas\u0131n\u0131n ba\u015fl\u0131\u011f\u0131n\u0131 React DOM\u2019u g\u00fcncelledikten sonra de\u011fi\u015ftirir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// componentdidMount ve componentDidUpdate'e benzer bir \u015fekilde:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Browser API kullan\u0131larak document title g\u00fcncellenir</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">useEffect</code>\u2018i \u00e7a\u011f\u0131rd\u0131\u011f\u0131n\u0131z zaman, React de\u011fi\u015fiklikleri DOM\u2019a ilettikten sonra \u201ceffect\u201d fonksiyonunu \u00e7a\u011f\u0131rmas\u0131n\u0131 s\u00f6yl\u00fcyorsunuz. Effect\u2019ler bile\u015fenin i\u00e7erisinde tan\u0131mland\u0131\u011f\u0131ndan state ve prop\u2019lara eri\u015febiliyor. Varsay\u0131lan \u015fekliyle React effect\u2019leri her render sonras\u0131nda \u00e7al\u0131\u015ft\u0131r\u0131r \u2014 ilk render da bunlar\u0131n <em>i\u00e7erisinde</em>. (Class ya\u015fam d\u00f6ng\u00fcleriyle fark\u0131n\u0131 detayl\u0131 olarak <a href=\"/react/hooks-effect\">Effect Hook\u2019unu kullanmak</a> b\u00f6l\u00fcm\u00fcnde i\u015fleyece\u011fiz.)</p>\n<p>\u0130ste\u011fe ba\u011fl\u0131 olarak Efect\u2019lerin nas\u0131l kendi \u201carkalar\u0131n\u0131 toplayacaklar\u0131\u201d, bir fonksiyon d\u00f6nd\u00fcr\u00fclerek belirtilebilir. \u00d6rne\u011fin, bu bile\u015fen bir effect kullanarak, bir arkada\u015f\u0131n online bilgisine ba\u011flan\u0131yor ve kendi arkas\u0131n\u0131 bu ba\u011flant\u0131y\u0131 kapatarak topluyor:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu \u00f6rnekte, bile\u015fen hem unmount an\u0131nda hem de sonraki render y\u00fcz\u00fcnden effect\u2019i tekrar \u00e7al\u0131\u015ft\u0131rmadan \u00f6nce, React <code class=\"language-javascript\">ChatAPI</code>\u2019\u0131m\u0131zla ba\u011flant\u0131y\u0131 kesiyor. (e\u011fer <code class=\"language-javascript\">ChatAPI</code>\u2018a verilen <code class=\"language-javascript\">props.firend.id</code> de\u011fi\u015fmediyse, React\u2019a tekrar <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">ba\u011flant\u0131 kurmamas\u0131n\u0131 s\u00f6yleyebilirsiniz.</a>)</p>\n<p><code class=\"language-javascript\">useState</code>\u2019de oldu\u011fu gibi tek bir bile\u015fende birden fazla effect kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatusWithCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Hook\u2019lar bir bile\u015fen i\u00e7erisindeki yan etkileri ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131na ay\u0131rmaktansa, hangi par\u00e7alar\u0131n etkilend\u011fine ba\u011fl\u0131 olarak bu yan etkileri organize etmenize yarar.</p>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 A\u00e7\u0131klama</strong>\n<p><code class=\"language-javascript\">useEffect</code> hakk\u0131nda daha fazla bilgiye bu sayfadan ula\u015fabilirsiniz: <a href=\"/react/hooks-effect\">Effect Hook\u2019unu kullanmak</a>.</p>\n</div>\n<h2 id=\"rules-of-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#rules-of-hooks\"></a>\u270c\ufe0f Hook\u2019lar\u0131n Kurallar\u0131 </h2>\n<p>Hook\u2019lar JavaScript fonksiyonlar\u0131d\u0131r ama ek olarak iki kural koymaktad\u0131rlar:</p>\n<ul>\n<li>Hook\u2019lar\u0131 sadece <strong>en \u00fcst seviyede</strong> \u00e7a\u011f\u0131r\u0131n. Hook\u2019lar\u0131 d\u00f6ng\u00fclerin, ko\u015fullar\u0131n veya i\u00e7 i\u00e7e fonksiyonlar\u0131n i\u00e7erisinde \u00e7a\u011f\u0131rmay\u0131n.</li>\n<li>Hook\u2019lar\u0131 sadece <strong>fonksiyonel React bile\u015fenlerinde</strong> \u00e7a\u011f\u0131r\u0131n. Normal JavaScript fonksiyonlar\u0131 i\u00e7erisinde Hook\u2019lar\u0131 \u00e7a\u011f\u0131rmay\u0131n. (Hook\u2019lar\u0131 ba\u015fka \u00e7a\u011f\u0131rabilece\u011finiz tek bir uygun yer var \u2014 kendi yaratt\u0131\u011f\u0131n\u0131z Hook\u2019lar. Birazdan bunlar hakk\u0131nda daha fazla \u015fey \u00f6\u011frenece\u011fiz.)</li>\n</ul>\n<p>Bu kurallar\u0131 otomatik bir \u015fekilde y\u00fcr\u00fctmek i\u00e7in bir <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">linter eklentisi</a> sa\u011fl\u0131yoruz. Bu kurallar\u0131n ilk bak\u0131\u015fta s\u0131n\u0131rlay\u0131c\u0131 ve kafa kar\u0131\u015ft\u0131r\u0131c\u0131 g\u00f6r\u00fcnebilece\u011fini anl\u0131yoruz fakat Hook\u2019lar\u0131n d\u00fczg\u00fcn \u00e7al\u0131\u015fmas\u0131 i\u00e7in hepsi \u00e7ok \u00f6nemlidir.</p>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 A\u00e7\u0131klama</strong>\n<p>Bu kurallar hakk\u0131nda daha fazla bilgiye bu sayfadan ula\u015fabilirsiniz: <a href=\"/react/hooks-rules\">Hook Kurallar\u0131</a>.</p>\n</div>\n<h2 id=\"building-your-own-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#building-your-own-hooks\"></a>\ud83d\udca1 \u00d6zel Hook\u2019lar\u0131n\u0131z\u0131 Yapmak </h2>\n<p>Bazen state\u2019le alakal\u0131 baz\u0131 davran\u0131\u015flar\u0131n bile\u015fenler aras\u0131nda yeniden kullan\u0131labilir olmas\u0131n\u0131 isteriz. Geleneksel olarak bunun i\u00e7in iki tane pop\u00fcler \u00e7\u00f6z\u00fcm vard\u0131r: <a href=\"/react/higher-order-components\">\u00fcst-seviye bile\u015fenler</a> ve <a href=\"/react/render-props\">render prop\u2019lar\u0131</a>. \u00d6zel Hook\u2019lar\u0131n\u0131z da bunu yapman\u0131za izin verir ve bunu yaparken bile\u015fen a\u011fac\u0131n\u0131za daha fazla bile\u015fen eklemek zorunda kalmazs\u0131n\u0131z.</p>\n<p>Daha \u00f6ncesinde <code class=\"language-javascript\">useState</code> ve <code class=\"language-javascript\">useEffect</code> kullanarak bir arkada\u015f\u0131n online durumuna ba\u011flanan <code class=\"language-javascript\">FriendStatus</code> adl\u0131 bir bile\u015fen tan\u0131tm\u0131\u015ft\u0131k. Bu ba\u011flant\u0131 davran\u0131\u015f\u0131n\u0131 ba\u015fka bir bile\u015fende tekrar kullanmak istedi\u011fimizi varsayal\u0131m.</p>\n<p>\u00d6nce, bu davran\u0131\u015f\u0131 kendi yaratt\u0131\u011f\u0131m\u0131z <code class=\"language-javascript\">useFriendStatus</code> adl\u0131 bir Hook\u2019a aktaraca\u011f\u0131z:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Arg\u00fcman olarak <code class=\"language-javascript\">friendID</code> al\u0131yor, ve arkada\u015f\u0131m\u0131z\u0131n online olup olmad\u0131\u011f\u0131n\u0131 d\u00f6nd\u00fcr\u00fcyor.</p>\n<p>Art\u0131k iki bile\u015fenden de bu davran\u0131\u015f\u0131 kullanabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Her bile\u015fenin state\u2019i birbirinden tamamen ba\u011f\u0131ms\u0131zd\u0131r. Hooklar <em>state\u2019le alakal\u0131 davran\u0131\u015flar\u0131n</em> tekrar kullan\u0131lmas\u0131n\u0131n bir yoludur, state\u2019in yeniden kullan\u0131lmas\u0131yla alakal\u0131 de\u011fildir. Hatta bir Hook her \u00e7a\u011f\u0131r\u0131ld\u0131\u011f\u0131nda tamamen ayr\u0131 bir state\u2019e sahiptir \u2014 bu sayede \u00f6zel Hook\u2019unuzu bir bile\u015fen i\u00e7erisinde iki kere \u00e7a\u011f\u0131rabilirsiniz.</p>\n<p>\u00d6zel Hook\u2019lar\u0131n\u0131z bir \u00f6zellikten daha \u00e7ok bir kural gibidir. E\u011fer bir fonksiyonun ad\u0131 \u201d<code class=\"language-javascript\">use</code>\u201d ile ba\u015fl\u0131yor ve ba\u015fka Hook\u2019lar\u0131 \u00e7a\u011f\u0131r\u0131yorsa, bu fonksiyon bir \u00f6zel Hook\u2019tur diyoruz. <code class=\"language-javascript\">useSomething</code> adland\u0131rmas\u0131 linter eklentimizin, Hook kullan\u0131larak yaz\u0131lan kodda buglar\u0131 bulmas\u0131n\u0131 sa\u011fl\u0131yor.</p>\n<p>\u00d6zel Hook\u2019lar\u0131n\u0131z\u0131 bizim bahsetmedi\u011fimiz bir \u00e7ok durum i\u00e7in kullanabilirsiniz, \u00f6rne\u011fin: form y\u00f6netimi, animasyon, tan\u0131msal ba\u011flant\u0131lar, zamanlay\u0131c\u0131lar ve akl\u0131m\u0131za gelmeyen bir \u00e7ok farkl\u0131 durum. React toplulu\u011funun ne t\u00fcr \u00f6zel Hook\u2019lar \u00fcretece\u011fini sab\u0131rs\u0131zl\u0131kla bekliyoruz.</p>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 A\u00e7\u0131klama</strong>\n<p>\u00d6zel Hook\u2019lar hakk\u0131nda daha fazla bilgiye bu sayfadan ula\u015fabilirsiniz:  <a href=\"/react/hooks-custom\">Kendi Hook\u2019lar\u0131n\u0131z\u0131 Olu\u015fturmak</a>.</p>\n</div>\n<h2 id=\"other-hooks\"><a class=\"anchor\" href=\"/react/hooks-overview#other-hooks\"></a>\ud83d\udd0c Di\u011fer Hook\u2019lar </h2>\n<p>React i\u00e7erisinde bulunan ve daha az kullan\u0131lan ama yararl\u0131 olabilecek bir ka\u00e7 Hook daha bulunuyor. \u00d6rne\u011fin, <a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a> i\u00e7 i\u00e7e ge\u00e7mi\u015f bile\u015fenler kullanmadan, React context\u2019e ba\u011flanman\u0131z\u0131 sa\u011flar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>LocaleContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ve <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> karma\u015f\u0131k bile\u015fenlerinizin yerel state\u2019ini bir reducer olmadan y\u00f6netmenizi sa\u011flar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Detayl\u0131 A\u00e7\u0131klama</strong>\n<p>React i\u00e7erisindeki t\u00fcm Hook\u2019lar hakk\u0131nda daha fazla bilgiye bu sayfadan ula\u015fabilirsiniz: <a href=\"/react/hooks-reference\">Hook\u2019lar\u0131n API Kayna\u011f\u0131</a>.</p>\n</div>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-overview#next-steps\"></a>S\u0131radaki Ad\u0131mlar </h2>\n<p>Oof, bu h\u0131zl\u0131yd\u0131! E\u011fer baz\u0131 \u015feyler kafan\u0131za tam oturmad\u0131ysa veya daha fazla detayla \u00f6\u011frenmek isterseniz <a href=\"/react/hooks-state\">State Hook\u2019u</a> ile ba\u015flayarak, s\u0131radaki sayfalar\u0131 okuyabilirsiniz.</p>\n<p>Ayr\u0131ca <a href=\"/react/hooks-reference\">Hook\u2019lar\u0131n API Kayna\u011f\u0131</a> ve <a href=\"/react/hooks-faq\">Hook\u2019lar i\u00e7in SSS</a> b\u00f6l\u00fcmlerine bakabilirsiniz.</p>\n<p>Son olarak, <em>neden</em> Hook\u2019lar\u0131 ekledi\u011fimizi ve uygulamalar\u0131m\u0131z\u0131 ba\u015ftan yazmadan class\u2019larla nas\u0131l birlikte kullanaca\u011f\u0131m\u0131z\u0131 a\u00e7\u0131klad\u0131\u011f\u0131m\u0131z <a href=\"/react/hooks-intro\">Hook\u2019lara Giri\u015f</a> b\u00f6l\u00fcm\u00fcn\u00fc okumay\u0131 unutmay\u0131n.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-overview.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-overview", "nav": ["/react/hooks-intro", "/react/hooks-state"]}, {"key": "3. State Hook'unu Kullanmak", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hook\u2019lar</em> React 16.8. ile gelen yeni bir eklentidir. Bu yeni eklenti size herhangi bir s\u0131n\u0131f olu\u015fturmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za izin verir.</p>\n<p><a href=\"/react/hooks-intro\">Giri\u015f Sayfas\u0131nda</a>, Hook\u2019lara a\u015fina olmak i\u00e7in, a\u015fa\u011f\u0131daki \u00f6rnek kullan\u0131lm\u0131\u015ft\u0131:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \"count\" ad\u0131nda yeni bir state de\u011fi\u015fkeni tan\u0131mlay\u0131n.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu kodu, e\u015fde\u011feri olan s\u0131n\u0131f koduyla kar\u015f\u0131la\u015ft\u0131rarak Hook\u2019lar\u0131 \u00f6\u011frenmeye ba\u015flayaca\u011f\u0131z. </p>\n<h2 id=\"equivalent-class-example\"><a class=\"anchor\" href=\"/react/hooks-state#equivalent-class-example\"></a>E\u015fde\u011fer S\u0131n\u0131f \u00d6rne\u011fi </h2>\n<p>E\u011fer React\u2019te s\u0131n\u0131flar\u0131 kulland\u0131ysan\u0131z, bu kod size tan\u0131d\u0131k gelecektir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          Click me\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>State <code class=\"language-javascript\">{ count: 0 }</code> olarak ba\u015flar ve kullan\u0131c\u0131 her t\u0131klad\u0131\u011f\u0131nda <code class=\"language-javascript\">this.setState()</code> \u00e7a\u011f\u0131r\u0131larak <code class=\"language-javascript\">state.count</code> artt\u0131r\u0131l\u0131r. Sayfa boyunca bu s\u0131n\u0131ftan par\u00e7alar kullanaca\u011f\u0131z.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Neden daha ger\u00e7ek\u00e7i bir \u00f6rnek yerine saya\u00e7 kulland\u0131\u011f\u0131m\u0131z\u0131 merak ediyor olabilirsiniz. Bu, Hook\u2019lar ile ilk ad\u0131mlar\u0131n\u0131z\u0131 atarken API\u2019a odaklanman\u0131za yard\u0131mc\u0131 olacakt\u0131r. </p>\n</div>\n<h2 id=\"hooks-and-function-components\"><a class=\"anchor\" href=\"/react/hooks-state#hooks-and-function-components\"></a>Hook\u2019lar ve Fonksiyon Bile\u015fenleri </h2>\n<p>React\u2019teki fonksiyon bile\u015fenlerinin b\u00f6yle g\u00f6z\u00fckt\u00fc\u011f\u00fcn\u00fc unutmay\u0131n\u0131z:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Hook'lar\u0131 burada kullanabilirsiniz!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ya da bunu:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Hook'lar\u0131 burada kullanabilirsiniz!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Yukar\u0131dakileri \u201cdurumsuz (stateless) bile\u015fenler\u201d olarak biliyor olabilirsiniz. \u015eimdi bu bile\u015fenlere React state\u2019ini kullanma \u00f6zelli\u011fini getiriyoruz; bu y\u00fczden bunlara \u201cfonksiyon bile\u015fenleri\u201d demeyi tercih ediyoruz. </p>\n<p>Hook\u2019lar s\u0131n\u0131flar\u0131n i\u00e7inde <strong>\u00e7al\u0131\u015fmazlar</strong> fakat onlar\u0131 s\u0131n\u0131f yazmadan da kullanabilirsiniz.</p>\n<h2 id=\"whats-a-hook\"><a class=\"anchor\" href=\"/react/hooks-state#whats-a-hook\"></a>Hook Nedir? </h2>\n<p>Yeni \u00f6rne\u011fimize React\u2019ten <code class=\"language-javascript\">useState</code> hook\u2019u import etmekle ba\u015fl\u0131yoruz</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Hook Nedir?</strong> Hook, React \u00f6zelliklerini \u201cba\u011flaman\u0131za\u201d izin veren \u00f6zel bir fonksiyondur. \u00d6rne\u011fin <code class=\"language-javascript\">useState</code>, React state\u2019ini fonksiyon bile\u015fenlerine eklemenize izin veren bir Hook\u2019tur. Yak\u0131nda di\u011fer Hook\u2019lar\u0131 da \u00f6\u011frenece\u011fiz.</p>\n<p><strong>Ne zaman bir Hook kullanmal\u0131y\u0131m?</strong> E\u011fer bir fonksiyon bile\u015feni yazarsan\u0131z ve ona biraz state eklemeniz gerekti\u011fini farkederseniz, bundan \u00f6nce o fonksiyonu bir s\u0131n\u0131fa (class) d\u00f6n\u00fc\u015ft\u00fcrmeniz gerekiyordu. Fakat \u015fimdi, varolan fonksiyon bile\u015fenlerinin i\u00e7inde Hook kullanabilirsiniz. \u015eimdi tam olarak bunu yapaca\u011f\u0131z!</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Hook\u2019lar\u0131 bile\u015fenlerin i\u00e7inde kullan\u0131p kullanamayaca\u011f\u0131m\u0131z hakk\u0131nda birka\u00e7 \u00f6zel kural vard\u0131r. Bunlar\u0131 <a href=\"/react/hooks-rules\">Hook Kurallar\u0131</a> sayfas\u0131nda \u00f6\u011frenece\u011fiz.</p>\n</div>\n<h2 id=\"declaring-a-state-variable\"><a class=\"anchor\" href=\"/react/hooks-state#declaring-a-state-variable\"></a>Bir State De\u011fi\u015fkeni Tan\u0131mlamak  </h2>\n<p>Bir s\u0131n\u0131f\u0131n i\u00e7inde, <code class=\"language-javascript\">count</code> state\u2019ini constructor (yap\u0131c\u0131 fonksiyon) i\u00e7inde <code class=\"language-javascript\">this.state</code>\u2018i <code class=\"language-javascript\">{ count: 0 }</code>\u2018a e\u015fitleyerek <code class=\"language-javascript\">0</code> olarak ba\u015flat\u0131yoruz. </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fonksiyon bile\u015fenlerinde <code class=\"language-javascript\">this</code> yoktur; bu y\u00fczden <code class=\"language-javascript\">this.state</code>\u2018e de\u011fer atamas\u0131 veya <code class=\"language-javascript\">this.state</code>ten okuma yapam\u0131yoruz. Bunun yerine bile\u015fenimizin i\u00e7inde direkt olarak <code class=\"language-javascript\">useState</code> hook\u2019unu \u00e7a\u011f\u0131r\u0131yoruz. </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \"count\" ad\u0131nda yeni bir state de\u011fi\u015fkeni tan\u0131mlay\u0131n.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><strong><code class=\"language-javascript\">useState</code>\u2018i \u00e7a\u011f\u0131rmak ne i\u015fe yarar?</strong> Bu, yeni bir \u201cstate de\u011fi\u015fkeni\u201d tan\u0131mlar. De\u011fi\u015fkenimizin ad\u0131 <code class=\"language-javascript\">count</code>; fakat farkl\u0131 bir \u015fekilde de (\u00f6rne\u011fin <code class=\"language-javascript\">banana</code>) \u00e7a\u011f\u0131rabilirdik. Bu y\u00f6ntemle fonksiyon \u00e7a\u011fr\u0131lar\u0131 aras\u0131nda verilerinizi koruyabilirsiniz. \u2014 <code class=\"language-javascript\">useState</code> ise <code class=\"language-javascript\">this.state</code>\u2018in s\u0131n\u0131fta sa\u011flad\u0131\u011f\u0131 \u00f6zellikleri kullanman\u0131n yeni bir yoludur. Normalde de\u011fi\u015fkenler fonksiyon bitiminde \u201ckaybolur\u201d; fakat state de\u011fi\u015fkenleri React taraf\u0131ndan korunur.</p>\n<p><strong><code class=\"language-javascript\">useState</code>\u2018e arg\u00fcman olarak ne atar\u0131z?</strong> <code class=\"language-javascript\">useState()</code> Hook\u2019u i\u00e7in tek arg\u00fcman initial (ba\u015flang\u0131\u00e7) state arg\u00fcman\u0131d\u0131r. S\u0131n\u0131flar\u0131n aksine, state bir nesne olmak zorunda de\u011fildir. Say\u0131 ya da string tutabiliriz. \u00d6rne\u011fimizde kullan\u0131c\u0131n\u0131n t\u0131klama say\u0131s\u0131 i\u00e7in bir say\u0131 istedik bu y\u00fczden de\u011fi\u015fkenimizin ba\u015flang\u0131\u00e7 de\u011feri <code class=\"language-javascript\">0</code> olarak atand\u0131. (e\u011fer state\u2019in i\u00e7inde iki farkl\u0131 de\u011fer tutmak isteseydik,  <code class=\"language-javascript\">useState()</code>\u2018i iki kere \u00e7a\u011f\u0131rmam\u0131z gerekecekti.)</p>\n<p><strong><code class=\"language-javascript\">useState</code> geriye ne d\u00f6nd\u00fcr\u00fcr?</strong> <code class=\"language-javascript\">useState</code> geriye iki tane de\u011fer d\u00f6nd\u00fcr\u00fcr: \u015eimdiki state ve o state\u2019i g\u00fcncelleyen fonksiyon. Bu, <code class=\"language-javascript\">const [count, setCount] = useState()</code> yazmam\u0131z\u0131n sebebidir. Bu, bir s\u0131n\u0131ftaki <code class=\"language-javascript\">this.state.count</code> ve <code class=\"language-javascript\">this.setState</code>\u2018e benzer. E\u011fer kulland\u0131\u011f\u0131m\u0131z s\u00f6z dizimi size tan\u0131d\u0131k gelmediyse, <a href=\"/react/hooks-state#tip-what-do-square-brackets-mean\">sayfan\u0131n alt k\u0131sm\u0131nda</a> bu konuya tekrar d\u00f6nece\u011fiz.</p>\n<p>\u015eimdi <code class=\"language-javascript\">useState</code> Hook\u2019unun ne yapt\u0131\u011f\u0131n\u0131 bildi\u011fimize g\u00f6re, \u00f6rne\u011fimiz daha mant\u0131kl\u0131 bir hale gelecektir.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \"count\" ad\u0131nda yeni bir state de\u011fi\u015fkeni tan\u0131mlay\u0131n.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p><code class=\"language-javascript\">count</code> ad\u0131nda bir state de\u011fi\u015fkeni tan\u0131mlad\u0131k ve <code class=\"language-javascript\">0</code>\u2018a e\u015fitledik. React, tekrar eden render i\u015flemleri aras\u0131nda de\u011fi\u015fkenin mevcut de\u011ferini hat\u0131rlayacak ve fonksiyonumuza en yeni de\u011feri verecektir. E\u011fer \u015fu anki <code class=\"language-javascript\">count</code> de\u011ferini de\u011fi\u015ftirmek isterseniz  <code class=\"language-javascript\">setCount</code> \u00e7a\u011f\u0131rabilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p><code class=\"language-javascript\">useState</code> \u2018in isminin neden <code class=\"language-javascript\">createState</code> olmad\u0131\u011f\u0131n\u0131 merak ediyor olabilirsiniz.</p>\n<p>\u201cCreate\u201d tam olarak do\u011fru olmazd\u0131. \u00c7\u00fcnk\u00fc state; sadece bile\u015fenimizi ilk kez render etti\u011fimizde olu\u015fturulur. Sonraki renderlarda <code class=\"language-javascript\">useState</code> bize o anki state\u2019i verir. Aksi takdirde bu \u201cstate\u201d olmazd\u0131. Ayn\u0131 zamanda hook\u2019lar\u0131n isimlerinin neden <em>hep</em> <code class=\"language-javascript\">use</code> ile ba\u015flamas\u0131n\u0131n nedeni de var. Bunu daha sonra <a href=\"/react/hooks-rules\">Hook Kurallar\u0131</a> b\u00f6l\u00fcm\u00fcnde \u00f6\u011frenece\u011fiz.</p>\n</div>\n<h2 id=\"reading-state\"><a class=\"anchor\" href=\"/react/hooks-state#reading-state\"></a>State Okuma </h2>\n<p>S\u0131n\u0131f temelli bir component\u2019de ge\u00e7erli count\u2019u g\u00f6stermek istedi\u011fimiz zaman <code class=\"language-javascript\">this.state.count</code>\u2018i okuruz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Foksiyon  temelli bir component\u2019de ise <code class=\"language-javascript\">count</code> de\u011fi\u015fkenini direk kullanabiliriz.:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h2 id=\"updating-state\"><a class=\"anchor\" href=\"/react/hooks-state#updating-state\"></a>State G\u00fcncelleme </h2>\n<p><code class=\"language-javascript\">count</code> state\u2019i g\u00fcncellemek i\u00e7in s\u0131n\u0131f\u0131n i\u00e7inde <code class=\"language-javascript\">this.setState()</code>\u2018i \u00e7a\u011f\u0131rmam\u0131z gerekiyor.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    Click me</span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>Fonksiyonda zaten de\u011fi\u015fken olarak <code class=\"language-javascript\">setCount</code> ve <code class=\"language-javascript\">count</code>\u2018a sahibiz, bu y\u00fczden <code class=\"language-javascript\">this</code>\u2018e ihtiya\u00e7 duymuyoruz :</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    Click me</span>\n<span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<h2 id=\"recap\"><a class=\"anchor\" href=\"/react/hooks-state#recap\"></a>\u00d6zet </h2>\n<p>Hadi \u015fimdi <strong>\u015eimdi de ba\u015ftan sona \u00f6\u011frendiklerimizin \u00fczerinden ge\u00e7elim ve anlay\u0131p anlamad\u0131\u011f\u0131m\u0131z\u0131 kontrol edelim.</strong></p>\n<!--\n  I'm not proud of this line markup. Please somebody fix this.\n  But if GitHub got away with it for years we can cheat.\n-->\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"> <span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n <span class=\"token number\">3</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\"> <span class=\"token number\">4</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n <span class=\"token number\">6</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n <span class=\"token number\">7</span><span class=\"token operator\">:</span>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\"> 8:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\"> 9:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">10:         Click me</span>\n<span class=\"token plain-text\">11:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">12:      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token number\">13</span><span class=\"token operator\">:</span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">14</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><strong>Sat\u0131r 1:</strong> React\u2019ten <code class=\"language-javascript\">useState</code> Hook\u2019unu ekliyoruz. Bu, yerel state\u2019i fonksiyon bile\u015feninde tutmam\u0131za izin verecek.</li>\n<li><strong>Sat\u0131r 4:</strong> <code class=\"language-javascript\">Example</code> bile\u015feninin i\u00e7inde <code class=\"language-javascript\">useState</code> Hook\u2019unu \u00e7a\u011f\u0131rarak yeni bir state de\u011fi\u015fkeni tan\u0131ml\u0131yoruz. Bu, isimlerini bizim verdi\u011fimiz bir \u00e7ift de\u011fer d\u00f6nd\u00fcr\u00fcr. De\u011fi\u015fkenimizin ad\u0131 <code class=\"language-javascript\">count</code> \u00e7\u00fcnk\u00fc t\u0131klama say\u0131s\u0131n\u0131 tutuyor.<code class=\"language-javascript\">useState</code>e <code class=\"language-javascript\">0</code> yollayarak <code class=\"language-javascript\">count</code>\u2018u <code class=\"language-javascript\">0</code>s\u0131f\u0131rdan ba\u015flat\u0131yoruz. \u0130kinci d\u00f6nd\u00fcr\u00fclen de\u011ferin kendisi bir fonksiyondur. Bu, bize <code class=\"language-javascript\">count</code>\u2018u g\u00fcncellemek i\u00e7in izin verir. Bu y\u00fczden onu <code class=\"language-javascript\">setCount</code> diye isimlendirdik.</li>\n<li><strong>Sat\u0131r 9:</strong> Kullan\u0131c\u0131 her t\u0131klad\u0131\u011f\u0131nda, <code class=\"language-javascript\">setCount</code>\u2018u yeni bir de\u011ferle \u00e7a\u011f\u0131r\u0131r\u0131z. React, <code class=\"language-javascript\">Example</code> bile\u015fenini tekrar render edip, ona yeni <code class=\"language-javascript\">count</code> de\u011ferini atar.</li>\n</ul>\n<p>\u0130lk bak\u0131\u015fta \u00f6\u011frenecek \u00e7ok fazla \u015fey varm\u0131\u015f gibi g\u00f6r\u00fcnebilir. Acele etmeyin! A\u00e7\u0131klamalar aras\u0131nda kaybolduysan\u0131z, yukar\u0131daki koda tekrar bak\u0131n ve ba\u015ftan sona tekrar okumaya \u00e7al\u0131\u015f\u0131n. State\u2019in s\u0131n\u0131flarda nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 unutup bu koda merakl\u0131 g\u00f6zlerle tekrar bakt\u0131\u011f\u0131n\u0131zda, s\u00f6z veriyoruz, daha anlaml\u0131 gelecek.</p>\n<h3 id=\"tip-what-do-square-brackets-mean\"><a class=\"anchor\" href=\"/react/hooks-state#tip-what-do-square-brackets-mean\"></a>\u0130pucu: K\u00f6\u015feli Parantez Ne Anlama gelir? </h3>\n<p>State de\u011fi\u015fkenlerini tan\u0131mlarken k\u00f6\u015feli parantezleri fark etmi\u015f olabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Soldaki isimler React API\u2019\u0131n\u0131n bir par\u00e7as\u0131 de\u011fildir.Kendi state de\u011fi\u015fkenlerinizi isimlendirebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu JavaScript s\u00f6zdizimi <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring\">\u201cdizi par\u00e7alama (array destructuring)\u201d</a> olarak adland\u0131r\u0131l\u0131r.<code class=\"language-javascript\">fruit</code> ve <code class=\"language-javascript\">setFruit</code> diye iki yeni de\u011fi\u015fken olu\u015fturdu\u011fumuz anlam\u0131na gelir.Burada <code class=\"language-javascript\">fruit</code>, <code class=\"language-javascript\">useState</code> taraf\u0131ndan d\u00f6nen ilk de\u011fere; <code class=\"language-javascript\">setFruit</code> ise ikinci de\u011fere atan\u0131r bu kod ile e\u015fde\u011ferdir. </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> fruitStateVariable <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns a pair</span>\n  <span class=\"token keyword\">var</span> fruit <span class=\"token operator\">=</span> fruitStateVariable<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// First item in a pair</span>\n  <span class=\"token keyword\">var</span> setFruit <span class=\"token operator\">=</span> fruitStateVariable<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Second item in a pair</span></code></pre></div>\n<p><code class=\"language-javascript\">useState</code> ile state de\u011fi\u015fkeni tan\u0131mlad\u0131\u011f\u0131m\u0131z zaman, bu bir \u00e7ift (iki elemanl\u0131 bir dizi) d\u00f6nd\u00fcr\u00fcr. \u0130lk eleman o anki de\u011fer, ikincisi ise onu g\u00fcncelleyen fonksiyondur. <code class=\"language-javascript\">[0]</code> ve <code class=\"language-javascript\">[1]</code> kullanarak eri\u015fmek biraz kafa kar\u0131\u015ft\u0131r\u0131c\u0131 \u00e7\u00fcnk\u00fc onlar\u0131n kendine \u00f6zg\u00fc anlamlar\u0131 var. Bu y\u00fczden onun yerine dizi par\u00e7alama (array destructuring) y\u00f6ntemini kullan\u0131yoruz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>this gibi bir \u015fey iletmedi\u011fimiz i\u00e7in, React\u2019in useState\u2019in hangi bile\u015fene denk geldi\u011fini nas\u0131l bildi\u011fini merak ediyor olabilirsiniz.  <a href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\">Bu soruyu</a> ve bunun gibi daha bir co\u011funu S.S.S. k\u0131sm\u0131nda cevapl\u0131yoruz.</p>\n</div>\n<h3 id=\"tip-using-multiple-state-variables\"><a class=\"anchor\" href=\"/react/hooks-state#tip-using-multiple-state-variables\"></a>\u0130pucu: \u00c7oklu State De\u011fi\u015fkeni Kullan\u0131m\u0131 </h3>\n<p>Ayr\u0131ca; birden fazla state kullanmak istedi\u011fimiz durumlarda, farkl\u0131 state de\u011fi\u015fkenlerine farkl\u0131 adlar vermemize izin verdi\u011fi i\u00e7in, state de\u011fi\u015fkenlerini bir \u00e7ift olarak (<code class=\"language-javascript\">[something, setSomething]</code>) tan\u0131mlamak kullan\u0131\u015fl\u0131d\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ExampleWithManyStates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Birden fazla state de\u011fi\u015fkeni bildir!</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>age<span class=\"token punctuation\">,</span> setAge<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruit<span class=\"token punctuation\">,</span> setFruit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Learn Hooks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yukar\u0131daki bile\u015fende, <code class=\"language-javascript\">age</code>, <code class=\"language-javascript\">fruit</code> ve <code class=\"language-javascript\">todos</code> ad\u0131nda yerel de\u011fi\u015fkenlerimiz var ve bunlar\u0131 ayr\u0131 ayr\u0131 g\u00fcncelleyebiliriz.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">function</span> <span class=\"token function\">handleOrangeClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// this.setState({ fruit: 'orange' }) ile benzerdir.</span>\n    <span class=\"token function\">setFruit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>birden fazla state de\u011fi\u015fkeni <strong>kullanmak zorunda de\u011filsiniz</strong>. State de\u011fi\u015fkenleri, nesneleri ve dizileri gayet g\u00fczel bir \u015fekilde tutabilir; b\u00f6ylece ilgili verileri birlikte tutabilirsiniz fakat s\u0131n\u0131ftaki <code class=\"language-javascript\">this.setState</code>\u2018\u0131n aksine state de\u011fi\u015fkenini g\u00fcncellemek, birle\u015ftirmek (merge) yerine var olan ile <em>de\u011fi\u015ftirir</em>.</p>\n<p>Ba\u011f\u0131ms\u0131z state de\u011fi\u015fkenlerini ay\u0131rma konusunda daha fazla \u00f6neriye <a href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\">bu b\u00f6l\u00fcmden</a> ula\u015fabilirsiniz.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-state#next-steps\"></a>Sonraki Ad\u0131mlar </h2>\n<p>Bu sayfada React taraf\u0131ndan sa\u011flanan Hook\u2019lardan birini, <code class=\"language-javascript\">useState</code>\u2018i, \u00f6\u011frendik.Bazen bundan \u201cState Hook\u201d olarak da bahsedecegiz. Bu, ilk kez yapm\u0131\u015f oldu\u011fumuz, React\u2019in fonksiyon bile\u015fenlerine yerel state eklememize imk\u00e2n sa\u011fl\u0131yor. </p>\n<p>Ayn\u0131 zamanda Hook\u2019lar hakk\u0131nda bir \u015feyler \u00f6\u011frendik. Hooklar, React \u00f6zelliklerini fonksiyon bile\u015fenlerine ba\u011flamam\u0131z\u0131 sa\u011flayan fonksiyonlardir. \u0130simleri her zaman <code class=\"language-javascript\">use</code> ile ba\u015flar ve hen\u00fcz \u00f6\u011frenmedi\u011fimiz Hook\u2019lar vard\u0131r.</p>\n<p><strong>Hadi \u015fimdi bir sonraki hook olarak  <a href=\"/react/hooks-effect\"><code class=\"language-javascript\">useEffect</code>\u2018i \u00f6\u011frenerek</a> devam edelim.</strong> useEffect, bile\u015fenler \u00fczerinde yan etkiler ger\u00e7ekle\u015ftirmenize izin verir ve s\u0131n\u0131flardaki ya\u015fam d\u00f6ng\u00fcs\u00fc (lifecycle) metotlar\u0131na benzer.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-state.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-state", "nav": ["/react/hooks-overview", "/react/hooks-effect"]}, {"key": "4. Effect Hook'unu Kullanmak", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Hooks, React 16.8 ile beraber gelen yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flarlar.</p>\n<p><em>Effect Hook\u2019u</em> fonksiyon bile\u015fenlerinde yan etkiler olu\u015fturman\u0131za olanak sa\u011flar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// componentDidMount ve componentDidUpdate kullan\u0131m\u0131na benzer bir kullan\u0131m sunar:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// taray\u0131c\u0131n\u0131n ba\u015fl\u0131k b\u00f6l\u00fcm\u00fcn\u00fc de\u011fi\u015ftirmemizi sa\u011flar</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu kod par\u00e7ac\u0131\u011f\u0131 <a href=\"/react/hooks-state\">bir \u00f6nceki sayfadaki saya\u00e7 uygulamas\u0131na</a> dayanmaktad\u0131r, fakat bir yeni \u00f6zellik eklenmi\u015ftir: sayac\u0131n t\u0131klanma say\u0131s\u0131na g\u00f6re taray\u0131c\u0131n\u0131n ba\u015fl\u0131\u011f\u0131 t\u0131klanma say\u0131s\u0131n\u0131 g\u00f6stermektedir.</p>\n<p>React bile\u015fenlerinde veri getirme, bir abonelik olu\u015fturma ve DOM\u2019u manuel olarak de\u011fi\u015ftirme yan etkilere \u00f6rnek olarak verilebilir. Bu i\u015flemleri \u201cyan etkiler\u201d (veya sadece \u201cetkiler\u201d) olarak adland\u0131rsan\u0131zda adland\u0131rmasan\u0131zda, bunlar\u0131 muhtemelen daha \u00f6nce bile\u015fenlerinizde kullanm\u0131\u015fs\u0131n\u0131zd\u0131r.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>E\u011fer React s\u0131n\u0131f ya\u015fam d\u00f6ng\u00fclerini (lifecycle) biliyorsan\u0131z, <code class=\"language-javascript\">useEffect</code> Hook\u2019unu <code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, ve <code class=\"language-javascript\">componentWillUnmount</code> ya\u015fam d\u00f6ng\u00fcs\u00fc methodlar\u0131n\u0131n birle\u015fimi olarak d\u00fc\u015f\u00fcnebilirsiniz.</p>\n</div>\n<p>React bile\u015fenlerinde iki t\u00fcr yan etki vard\u0131r: temizlik gerektirmeyenler ve ihtiya\u00e7 duyanlar. Gelin bu aradaki farka detayl\u0131 olarak bakal\u0131m.</p>\n<h2 id=\"effects-without-cleanup\"><a class=\"anchor\" href=\"/react/hooks-effect#effects-without-cleanup\"></a>Temizlik Gerektirmeyen Etkiler </h2>\n<p>Bazen <strong>React DOM\u2019u g\u00fcncelledikten sonra baz\u0131 ek kodlar\u0131 \u00e7al\u0131\u015ft\u0131rmak</strong> isteriz. A\u011f istekleri, manuel DOM de\u011fi\u015fiklikleri ve g\u00fcnl\u00fck uygulama kay\u0131tlar\u0131, temizleme gerektirmeyen yayg\u0131n etkilere \u00f6rnektir. Bu \u015fekilde \u00f6rneklendirebiliriz, \u00e7\u00fcnk\u00fc onlar\u0131 \u00e7al\u0131\u015ft\u0131rabilir ve ard\u0131ndan tamamen unutabiliriz. S\u0131n\u0131flar\u0131n ve Hook\u2019lar\u0131n bu t\u00fcr yan etkileri nas\u0131l ifade etmemize izin verdi\u011fini kar\u015f\u0131la\u015ft\u0131ral\u0131m.</p>\n<h3 id=\"example-using-classes\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-classes\"></a>\u00d6rnek: S\u0131n\u0131flar Kullan\u0131larak Ger\u00e7ekle\u015ftirilmesi </h3>\n<p>React ta olu\u015fturulan s\u0131n\u0131f bile\u015fenlerinde, <code class=\"language-javascript\">render</code> methodunun kendisi yan etkilere neden olmamal\u0131d\u0131r. Aksi takdirde bu \u00e7ok erken bir \u015fekilde ger\u00e7ekle\u015fecektir \u2014 genellikle React\u2019\u0131n DOM\u2019u g\u00fcncellemesinden <strong>sonra</strong> bu yan etkilerin ger\u00e7ekle\u015fmesini isteriz.</p>\n<p>Bu nedenle React s\u0131n\u0131flar\u0131nda, <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code> yan etkileri tan\u0131mlanm\u0131\u015ft\u0131r. \u00d6rne\u011fe geri d\u00f6necek olursak, React DOM\u2019da de\u011fi\u015fiklik yapt\u0131ktan hemen sonra belge ba\u015fl\u0131\u011f\u0131n\u0131 g\u00fcncelleyen bir React saya\u00e7 s\u0131n\u0131f\u0131 bile\u015feni a\u015fa\u011f\u0131daki gibidir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          Click me</span>\n<span class=\"token plain-text\">        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>S\u0131n\u0131ftaki bu iki ya\u015fam d\u00f6ng\u00fcs\u00fc y\u00f6ntemi aras\u0131ndaki kodu nas\u0131l tekrarlamam\u0131z gerekti\u011fine</strong> dikkat edin. </p>\n<p>Bunun nedeni \u00e7o\u011fu durumda, bile\u015fenin yeni olu\u015fturuldu\u011funa veya g\u00fcncellenmi\u015f olup olmad\u0131\u011f\u0131na bak\u0131lmaks\u0131z\u0131n ayn\u0131 yan etkiyi ger\u00e7ekle\u015ftirmek istememizdir. Kavramsal olarak, her i\u015flemeden sonra ger\u00e7ekle\u015fmesini isteriz - ancak React s\u0131n\u0131f bile\u015fenlerinin b\u00f6yle bir methodu yoktur. Ayr\u0131 bir method olarak olu\u015fturulabilirdi ama yine de ilgili kodu iki yerde \u00e7a\u011f\u0131rmam\u0131z gerekir.</p>\n<p>\u015eimdi ayn\u0131 i\u015flemlerin <code class=\"language-javascript\">useEffect</code> Hook\u2019u ile nas\u0131l yap\u0131labilece\u011fine bakal\u0131m.</p>\n<h3 id=\"example-using-hooks\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-hooks\"></a>\u00d6rnek: Hook Kullan\u0131larak Ger\u00e7ekle\u015ftirilmesi </h3>\n<p>Bu \u00f6rne\u011fi daha \u00f6nce bu sayfan\u0131n en \u00fcst\u00fcnde g\u00f6rm\u00fc\u015ft\u00fck, ama hadi bu \u00f6rne\u011fe daha yak\u0131ndan bakal\u0131m:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        Click me</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><code class=\"language-javascript\">useEffect</code> Hook\u2019u ne yapar?</strong> Bu Hook\u2019u kullanarak, React\u2019e bile\u015fenininiz olu\u015ftuktan sonra bir \u015feyler yapmas\u0131 gerekti\u011fini s\u00f6ylersiniz. React, ge\u00e7ti\u011finiz fonksiyonu hat\u0131rlayacak (buna \u201ceffect (etki)\u201d olarak de\u011finece\u011fiz) ve DOM g\u00fcncellemelerini yapt\u0131ktan sonra onu \u00e7a\u011f\u0131racakt\u0131r. Bu etki de, taray\u0131c\u0131 ba\u015fl\u0131\u011f\u0131n\u0131 atad\u0131k fakat ayn\u0131 \u015fekilde veri getirebilir veya baz\u0131 API\u2019lar\u0131 \u00e7a\u011f\u0131rabilirdik.</p>\n<p><strong>Neden <code class=\"language-javascript\">useEffect</code> Hook\u2019u bir bile\u015fen i\u00e7inde \u00e7a\u011f\u0131r\u0131l\u0131yor?</strong> Bile\u015fenin i\u00e7ine \u201cuseEffect\u201d yerle\u015ftirmek, \u201ccount\u201d durum de\u011fi\u015fkenine (veya herhangi bir props\u2019a) bu efektten (etkiden) eri\u015fmemizi sa\u011flar. \u201cCount\u201d durum de\u011fi\u015fkenini okumak i\u00e7in \u00f6zel bir API\u2019a ihtiyac\u0131m\u0131z yok \u2014 fonksiyon kapan\u0131\u015flar\u0131nda bu de\u011fi\u015fkene ula\u015f\u0131labilmektedir. Hooklar, JavaScript kapan\u0131\u015flar\u0131n\u0131 benimser ve JavaScript\u2019in zaten bir \u00e7\u00f6z\u00fcm sa\u011flad\u0131\u011f\u0131 yerlerde React\u2019e \u00f6zg\u00fc API\u2019leri tan\u0131mlamaktan ka\u00e7\u0131n\u0131r.</p>\n<p><strong><code class=\"language-javascript\">useEffect</code> Hook\u2019u her render (i\u015flem) den sonra \u00e7a\u011f\u0131r\u0131l\u0131r m\u0131?</strong> Evet! Varsay\u0131lan olarak, hem ilk olu\u015fturmadan sonra <em>hem de her g\u00fcncellemeden sonra</em> \u00e7al\u0131\u015f\u0131r. <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">Bunun nas\u0131l \u00f6zelle\u015ftirilebilece\u011finden</a>. daha sonra bahsedece\u011fiz.) \u201cBile\u015fenin olu\u015fmas\u0131\u201d ve \u201cg\u00fcncelleme\u201d terimleriyle d\u00fc\u015f\u00fcnmek yerine, etkilerin \u201colu\u015fturulduktan sonra\u201d olu\u015ftu\u011funu d\u00fc\u015f\u00fcnmeyi daha kolay bulabilirsiniz. React, DOM\u2019un etkileri \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131nda g\u00fcncellendi\u011fini garanti eder.</p>\n<h3 id=\"detailed-explanation\"><a class=\"anchor\" href=\"/react/hooks-effect#detailed-explanation\"></a>Detayl\u0131 A\u00e7\u0131klama </h3>\n<p>Art\u0131k etkiler hakk\u0131nda daha fazla \u015fey bildi\u011fimize g\u00f6re, bu sat\u0131rlar bir anlam ifade etmeli:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Burada \u201cCount\u201d durum de\u011fi\u015fkenini tan\u0131ml\u0131yoruz ve ard\u0131ndan React\u2019e bir etki (effect) kullanmam\u0131z gerekti\u011fini s\u00f6yl\u00fcyoruz. Daha sonra ise <code class=\"language-javascript\">useEffect</code> Hook\u2019una bir fonksiyonu ge\u00e7iyoruz. Ge\u00e7mi\u015f oldu\u011fumuz <em>fonksiyon</em> bizim etkimizdir. Etkimizin i\u00e7inde, belge ba\u015fl\u0131\u011f\u0131n\u0131 \u201cdocument.title\u201d taray\u0131c\u0131 API\u2019\u0131n\u0131 kullanarak belirliyoruz. Etkinin i\u00e7indeki en son \u201ccount\u201d de\u011fi\u015fkenini okuyabiliriz \u00e7\u00fcnk\u00fc bu, fonksiyonumuzun kapsam\u0131ndad\u0131r. React bile\u015fenimizi olu\u015fturdu\u011funda, kulland\u0131\u011f\u0131m\u0131z efekti hat\u0131rlayacak ve ard\u0131ndan DOM\u2019u g\u00fcncelledikten sonra etkimizi \u00e7al\u0131\u015ft\u0131racak. Bu i\u015flem her render i\u015fleminde ger\u00e7ekle\u015fecektir.</p>\n<p>Deneyimli JavaScript geli\u015ftiricileri, <code class=\"language-javascript\">useEffect</code> e ge\u00e7ilen fonksiyonun her i\u015flemde farkl\u0131 olaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcnebilir. Bu kas\u0131tl\u0131 olarak yap\u0131lm\u0131\u015ft\u0131r. Asl\u0131nda bu, verinin g\u00fcncel olmamas\u0131 endi\u015fesi olmadan etkinin i\u00e7inden \u201ccount\u201d de\u011ferini okumam\u0131za izin veren \u015feydir. Her yeniden olu\u015fturdu\u011fumuzda, bir \u00f6ncekinin yerine bir <em>farkl\u0131</em> etki planlar\u0131z. Bir bak\u0131ma, bu, etkilerin daha \u00e7ok olu\u015fturma sonucunun bir par\u00e7as\u0131 gibi davranmas\u0131n\u0131 sa\u011flar - her etki belirli bir render a \u201caittir\u201d. Bu durumunu daha net bir \u015fekilde <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">a\u015fa\u011f\u0131da</a> g\u00f6rece\u011fiz.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p><code class=\"language-javascript\">componentDidMount</code> veya <code class=\"language-javascript\">componentDidUpdate</code> ten farkl\u0131 olarak, <code class=\"language-javascript\">useEffect</code> ile planlanan etkiler taray\u0131c\u0131n\u0131n ekran\u0131 g\u00fcncellemesini engellemez. Bu, uygulaman\u0131z\u0131 daha duyarl\u0131 hale getirir. Etkilerin \u00e7o\u011funun e\u015fzamanl\u0131 olarak ger\u00e7ekle\u015fmesi gerekmez. Yapt\u0131klar\u0131 nadir durumlarda (d\u00fczeni belirlemek gibi), <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a> ad\u0131nda <code class=\"language-javascript\">useEffect</code> ile ayn\u0131 yap\u0131da bir Hook vard\u0131r.</p>\n</div>\n<h2 id=\"effects-with-cleanup\"><a class=\"anchor\" href=\"/react/hooks-effect#effects-with-cleanup\"></a>Temizlenen(CleanUp) Etkiler </h2>\n<p>Daha \u00f6nce, herhangi bir temizlik gerektirmeyen yan etkilerin nas\u0131l ifade edilece\u011fine bakm\u0131\u015ft\u0131r. Bununla birlikte, baz\u0131 etkiler bunu yapar. \u00d6rne\u011fin, <strong>baz\u0131 harici veri kaynaklar\u0131na bir abonelik</strong> ayarlamak isteyebiliriz. Bunun gibi durumlarda, bellek s\u0131z\u0131nt\u0131s\u0131na neden olmamak i\u00e7in temizlemek \u00f6nemlidir! Bunu nas\u0131l yapabilece\u011fimizi s\u0131n\u0131flarla ve Hook\u2019larla kar\u015f\u0131la\u015ft\u0131ral\u0131m.</p>\n<h3 id=\"example-using-classes-1\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-classes-1\"></a>\u00d6rnek: S\u0131n\u0131flar Kullan\u0131larak Ger\u00e7ekle\u015ftirilmesi </h3>\n<p>Bir React s\u0131n\u0131f\u0131nda, genellikle <code class=\"language-javascript\">componentDidMount</code> da bir abonelik olu\u015fturulur ve <code class=\"language-javascript\">componentWillUnmount</code> ta temizlenir. \u00d6rne\u011fin, <code class=\"language-javascript\">ChatAPI</code> ad\u0131nda arkada\u015flar\u0131m\u0131z\u0131n \u00e7evrimi\u00e7i durumunu g\u00f6rmemize olanak sa\u011flayan bir mod\u00fcl\u00fcm\u00fcz oldu\u011funu varsayal\u0131m. Bu durumu bir s\u0131n\u0131f kullanarak \u015fu \u015fekilde abone olabilir ve g\u00f6sterebiliriz: </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FriendStatus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isOnline</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">isOnline</span><span class=\"token operator\">:</span> status<span class=\"token punctuation\">.</span>isOnline</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentWillUnmount</code> un birbirlerini nas\u0131l yans\u0131tmas\u0131 gerekti\u011fine dikkat edin. Ya\u015fam d\u00f6ng\u00fcs\u00fc methodlar\u0131, kavramsal olarak birbiriyle ili\u015fkili kodlar ise mant\u0131ksal olarak bizi b\u00f6lmeye zorlar.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Kartal g\u00f6zl\u00fc okuyucular, bu \u00f6rne\u011fin tamamen do\u011fru olmas\u0131 i\u00e7in bir <code class=\"language-javascript\">componentDidUpdate</code> methoduna da ihtiya\u00e7 duydu\u011funu fark edebilir. \u015eimdilik bunu g\u00f6rmezden gelece\u011fiz fakat bu sayfan\u0131n bir <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">sonraki b\u00f6l\u00fcm\u00fcnde</a> bundan bahsedece\u011fiz.</p>\n</div>\n<h3 id=\"example-using-hooks-1\"><a class=\"anchor\" href=\"/react/hooks-effect#example-using-hooks-1\"></a>\u00d6rnek: Hook Kullanarak Ger\u00e7ekle\u015ftirilmesi </h3>\n<p>Bu bile\u015feni Hook\u2019lar kullanarak nas\u0131l yazabilece\u011fimize bakal\u0131m.</p>\n<p>Temizlemeyi ger\u00e7ekle\u015ftirmek i\u00e7in ayr\u0131 bir etkiye ihtiyac\u0131m\u0131z oldu\u011funu d\u00fc\u015f\u00fcn\u00fcyor olabilirsiniz. Ancak bir abonelik eklemek ve kald\u0131rmak i\u00e7in olan kod o kadar yak\u0131ndan ili\u015fkilidir ki, <code class=\"language-javascript\">useEffect</code> onu bir arada tutmak i\u00e7in tasarlanm\u0131\u015ft\u0131r. Etkiniz bir i\u015flev d\u00f6nd\u00fcr\u00fcrse, React temizleme zaman\u0131 geldi\u011finde onu \u00e7al\u0131\u015ft\u0131r\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Specify how to clean up after this effect:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Neden etkimizden bir i\u015flevi d\u00f6nd\u00fcrd\u00fck?</strong> Bu, etkiler i\u00e7in iste\u011fe ba\u011fl\u0131 temizleme mekanizmas\u0131d\u0131r. Her etki, arkas\u0131ndan temizleyen bir i\u015flev d\u00f6nd\u00fcrebilir. Bu, abonelik ekleme ve kald\u0131rma mant\u0131\u011f\u0131n\u0131 birbirine yak\u0131n tutmam\u0131z\u0131 sa\u011flar. Ayn\u0131 etkinin par\u00e7alar\u0131d\u0131rlar!</p>\n<p><strong>React bir efekti tam olarak ne zaman temizler?</strong> React temizleme i\u015flemini bile\u015fen ayr\u0131ld\u0131\u011f\u0131nda ger\u00e7ekle\u015ftirir. Ancak, daha \u00f6nce \u00f6\u011frendi\u011fimiz gibi, etkiler yaln\u0131zca bir kez de\u011fil, her render da \u00e7al\u0131\u015f\u0131r. Bu nedenle React <em>ayr\u0131ca</em>, etkileri bir sonraki sefer \u00e7al\u0131\u015ft\u0131rmadan \u00f6nce \u00f6nceki i\u015flemdeki etkileri temizler. <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">Bunun neden hatalardan ka\u00e7\u0131nmaya yard\u0131mc\u0131 oldu\u011funu</a> ve <a href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\">performans sorunlar\u0131 yaratmas\u0131 durumunda bu davran\u0131\u015f\u0131n nas\u0131l devre d\u0131\u015f\u0131 b\u0131rak\u0131laca\u011f\u0131ndan</a> a\u015fa\u011f\u0131da daha sonra bahsedece\u011fiz.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Etkilerden adland\u0131r\u0131lm\u0131\u015f bir fonksiyon d\u00f6nmek zorunda de\u011filiz. Buraada amac\u0131n\u0131 belli etmesi a\u00e7\u0131s\u0131ndan <code class=\"language-javascript\">temizleme(cleanup)</code> olarak adland\u0131rd\u0131k fakat arrow fonksiyon d\u00f6nd\u00fcr\u00fclebilir veya ba\u015fka bir fonksiyon \u015feklinde \u00e7a\u011f\u0131rabilir.</p>\n</div>\n<h2 id=\"recap\"><a class=\"anchor\" href=\"/react/hooks-effect#recap\"></a>Tekrar </h2>\n<p><code class=\"language-javascript\">useEffect</code> in bir bile\u015fen olu\u015fturulduktan sonra farkl\u0131 yan etkileri ifade etmemize izin verdi\u011fini \u00f6\u011frendik. Baz\u0131 efektler temizleme gerektirebilmektedir, bu nedenle bir fonksiyon d\u00f6nd\u00fcr\u00fcrler:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Di\u011fer etkilerin temizleme a\u015famas\u0131 olmayabilir ve hi\u00e7bir \u015fey d\u00f6nd\u00fcrmeyebilirler.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Etki Hook\u2019u, her iki kullan\u0131m durumunu da tek bir API alt\u0131nda birle\u015ftirir.</p>\n\n<p><strong>Effect Hook\u2019unun nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 iyi bir \u015fekilde anlad\u0131\u011f\u0131n\u0131z\u0131 d\u00fc\u015f\u00fcn\u00fcyorsan\u0131z veya bunalm\u0131\u015f hissediyorsan\u0131z, <a href=\"/react/hooks-rules\">Hook Kurallar\u0131 hakk\u0131ndaki bir sonraki sayfaya</a> ge\u00e7ebilirsiniz.</strong></p>\n\n<h2 id=\"tips-for-using-effects\"><a class=\"anchor\" href=\"/react/hooks-effect#tips-for-using-effects\"></a>Etkileri Kullanmak \u0130\u00e7in \u0130pu\u00e7lar\u0131 </h2>\n<p>Bu sayfaya, deneyimli React kullan\u0131c\u0131lar\u0131n\u0131n muhtemelen merak edece\u011fi <code class=\"language-javascript\">useEffect</code> in baz\u0131 y\u00f6nlerine derinlemesine bir bak\u0131\u015fla devam edece\u011fiz. Kendinizi onlar\u0131 daha derinden incelemek zorunda hissetmeyin. Efekt Hook\u2019u hakk\u0131nda daha fazla ayr\u0131nt\u0131 \u00f6\u011frenmek i\u00e7in her zaman bu sayfaya geri d\u00f6nebilirsiniz.</p>\n<h3 id=\"tip-use-multiple-effects-to-separate-concerns\"><a class=\"anchor\" href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\"></a>\u0130pucu: Kavramlar\u0131 Daha \u0130yi Ay\u0131rmak \u0130\u00e7in Birden \u00c7ok Efekt Kullan\u0131n </h3>\n<p>Hooks i\u00e7in <a href=\"/react/hooks-intro#complex-components-become-hard-to-understand\">Motivasyon</a>\u2018da  ana hatlar\u0131yla belirtti\u011fimiz sorunlardan biri, s\u0131n\u0131f ya\u015fam d\u00f6ng\u00fcs\u00fc y\u00f6ntemlerinin genellikle ilgisiz mant\u0131k i\u00e7ermesi, fakat ilgili mant\u0131\u011f\u0131n birden fazla methodta bozulmas\u0131d\u0131r. \u00d6nceki \u00f6rneklerden saya\u00e7 ve arkada\u015f durumu g\u00f6stergesi mant\u0131\u011f\u0131n\u0131 birle\u015ftiren bir bile\u015fen:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FriendStatusWithCounter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">isOnline</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isOnline</span><span class=\"token operator\">:</span> status<span class=\"token punctuation\">.</span>isOnline\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p><code class=\"language-javascript\">document.title</code> \u00f6\u011fesini ayarlayan mant\u0131\u011f\u0131n <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code> aras\u0131nda nas\u0131l b\u00f6l\u00fcnd\u00fc\u011f\u00fcne dikkat edin. Abonelik mant\u0131\u011f\u0131 ayr\u0131ca <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentWillUnmount</code> aras\u0131nda da yay\u0131l\u0131r. Ve <code class=\"language-javascript\">componentDidMount</code>, her iki g\u00f6rev i\u00e7in kod i\u00e7erir.</p>\n<p>T\u0131pk\u0131 <a href=\"/react/hooks-state#tip-using-multiple-state-variables\"><em>State</em> Hook\u2019unu birden fazla kullanabildi\u011finiz</a> gibi, birka\u00e7 efekt de kullanabilirsiniz. Bu, alakas\u0131z uygulama mant\u0131\u011f\u0131n\u0131 farkl\u0131 etkilere ay\u0131rmam\u0131z\u0131 sa\u011flar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatusWithCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ya\u015fam d\u00f6ng\u00fcs\u00fc methodlar\u0131 yerine <strong>Hook\u2019lar, kodu yapt\u0131\u011f\u0131 i\u015fe g\u00f6re b\u00f6lmemize izin verir</strong>. React, bile\u015fen taraf\u0131ndan kullan\u0131lan <em>her</em> etkiyi, belirtilen s\u0131rayla uygulayacakt\u0131r.</p>\n<h3 id=\"explanation-why-effects-run-on-each-update\"><a class=\"anchor\" href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\"></a>A\u00e7\u0131klama: Neden Her G\u00fcncellemede Etkiler \u00c7al\u0131\u015f\u0131yor? </h3>\n<p>S\u0131n\u0131f kavram\u0131na al\u0131\u015fk\u0131nsan\u0131z, efekt temizleme a\u015famas\u0131n\u0131n neden her yeniden olu\u015fturmadan sonra oldu\u011funu, bile\u015fenin i\u015fleminin bitmesi s\u0131ras\u0131nda bir kez olmay\u0131p neden ger\u00e7ekle\u015fti\u011fini merak ediyor olabilirsiniz. Bu tasar\u0131m\u0131n neden daha az hata i\u00e7eren bile\u015fenler olu\u015fturmam\u0131za yard\u0131mc\u0131 oldu\u011funu g\u00f6rmek i\u00e7in a\u015fa\u011f\u0131daki \u00f6rne\u011fe bakal\u0131m.</p>\n<p><a href=\"/react/hooks-effect#example-using-classes-1\">Bu sayfan\u0131n \u00f6nceki k\u0131s\u0131mlar\u0131nda</a>, bir arkada\u015f\u0131n \u00e7evrimi\u00e7i olup olmad\u0131\u011f\u0131n\u0131 g\u00f6steren bir \u00f6rnek <code class=\"language-javascript\">FriendStatus</code> bile\u015fenini tan\u0131tt\u0131k. S\u0131n\u0131f\u0131m\u0131z <code class=\"language-javascript\">this.props</code> dan <code class=\"language-javascript\">friend.id</code> yi okur ve daha sonra bile\u015fen ba\u011fland\u0131ktan sonra arkada\u015f durumunu \u00f6\u011frenir (abone olur) ve ba\u011flant\u0131y\u0131 kesme s\u0131ras\u0131nda aboneli\u011fi iptal eder:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Peki bile\u015fen ekranda iken <code class=\"language-javascript\">friend</code> de\u011feri de\u011fi\u015firse</strong> ne olur? Bile\u015fenimiz, farkl\u0131 bir arkada\u015f\u0131n \u00e7evrimi\u00e7i durumunu g\u00f6stermeye devam edecektir. Bu bir hatad\u0131r (bug). Ayr\u0131ca abonelikten \u00e7\u0131kma \u00e7a\u011fr\u0131s\u0131 yanl\u0131\u015f arkada\u015f kimli\u011fini (friend ID) kullanaca\u011f\u0131ndan, ba\u011flant\u0131y\u0131 keserken bellek s\u0131z\u0131nt\u0131s\u0131na veya \u00e7\u00f6kmeye neden olabiliriz.</p>\n<p>Bir s\u0131n\u0131f bile\u015feninde, bu durumu ele almak i\u00e7in <code class=\"language-javascript\">componentDidUpdate</code> Hook\u2019unu eklememiz gerekir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Unsubscribe from the previous friend.id</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      prevProps<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// Subscribe to the next friend.id</span></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStatusChange\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>React uygulamalar\u0131nda <code class=\"language-javascript\">componentDidUpdate</code> Hook\u2019unu do\u011fru bir \u015fekilde y\u00f6netmeyi unutmak yayg\u0131n bir hata kayna\u011f\u0131d\u0131r.</p>\n<p>\u015eimdi bu bile\u015fenin Hook\u2019lar\u0131 kullanan s\u00fcr\u00fcm\u00fcn\u00fc d\u00fc\u015f\u00fcnelim:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu hatadan dolay\u0131 kaynaklanm\u0131yor. (Fakat biz de herhangi bir de\u011fi\u015fiklik yapmad\u0131k.)</p>\n<p>G\u00fcncellemeleri i\u015flemek i\u00e7in \u00f6zel bir kod yoktur \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">useEffect</code> bunlar\u0131 <em>varsay\u0131lan olarak</em> y\u00f6netir. Sonraki efektleri uygulamadan \u00f6nce \u00f6nceki efektleri temizler. Bunu somutla\u015ft\u0131rmak i\u00e7in, bir grup abone olma ve abonelikten \u00e7\u0131kma \u00e7a\u011f\u0131r\u0131s\u0131n\u0131n oldu\u011fu bir bile\u015fen kullan\u0131labilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Mount with { friend: { id: 100 } } props</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Run first effect</span>\n\n<span class=\"token comment\">// Update with { friend: { id: 200 } } props</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clean up previous effect</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Run next effect</span>\n\n<span class=\"token comment\">// Update with { friend: { id: 300 } } props</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clean up previous effect</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Run next effect</span>\n\n<span class=\"token comment\">// Unmount</span>\nChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Clean up last effect</span></code></pre></div>\n<p>Bu davran\u0131\u015f, varsay\u0131lan olarak tutarl\u0131l\u0131\u011f\u0131 sa\u011flar ve eksik g\u00fcncelleme mant\u0131\u011f\u0131 nedeniyle s\u0131n\u0131f bile\u015fenlerinde yayg\u0131n olan hatalar\u0131 \u00f6nler.</p>\n<h3 id=\"tip-optimizing-performance-by-skipping-effects\"><a class=\"anchor\" href=\"/react/hooks-effect#tip-optimizing-performance-by-skipping-effects\"></a>\u0130pucu: Efektleri Atlayarak Performans\u0131 Optimize Etme </h3>\n<p>Baz\u0131 durumlarda, her i\u015flemeden sonra efekti temizlemek veya uygulamak bir performans sorunu yaratabilir. S\u0131n\u0131f bile\u015fenlerinde, <code class=\"language-javascript\">componentDidUpdate</code> i\u00e7inde <code class=\"language-javascript\">prevProps</code> veya <code class=\"language-javascript\">prevState</code> ile ekstra bir kar\u015f\u0131la\u015ft\u0131rma yazarak bunu \u00e7\u00f6zebiliriz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevState<span class=\"token punctuation\">.</span>count <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu gereksinim, <code class=\"language-javascript\">useEffect</code> Hook API\u2019\u0131nda yerle\u015fik olmas\u0131 i\u00e7in yeterince yayg\u0131nd\u0131r. Yeniden render olmas\u0131 aras\u0131nda belirli de\u011ferler de\u011fi\u015fmediyse React\u2019e bir efekti uygulamay\u0131 <em>atlamas\u0131n\u0131</em> s\u00f6yleyebilirsiniz. Bunu yapmak i\u00e7in, bir diziyi <code class=\"language-javascript\">useEffect</code> e iste\u011fe ba\u011fl\u0131 ikinci bir parametre olarak iletin:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Only re-run the effect if count changes</span></span></code></pre></div>\n<p>Yukar\u0131daki \u00f6rnekte, ikinci arg\u00fcman olarak <code class=\"language-javascript\">[count]</code> u iletiyoruz. Peki bu ne anlama geliyor? <code class=\"language-javascript\">count</code> e\u011fer <code class=\"language-javascript\">5</code> ise ve daha sonra bile\u015fenimiz <code class=\"language-javascript\">count</code> hala <code class=\"language-javascript\">5</code> e e\u015fit olacak \u015fekilde yeniden olu\u015fturulursa, React \u00f6nceki render daki <code class=\"language-javascript\">[5]</code> ile sonraki render daki <code class=\"language-javascript\">[5]</code> \u2018i kar\u015f\u0131la\u015ft\u0131r\u0131r. Dizideki t\u00fcm \u00f6\u011feler ayn\u0131 oldu\u011fundan (<code class=\"language-javascript\">5 === 5</code>), React efekti atlar. Ger\u00e7ekle\u015ftirdi\u011fimiz iyile\u015ftirme bu \u015fekildedir.</p>\n<p><code class=\"language-javascript\">6</code> olarak g\u00fcncellenen <code class=\"language-javascript\">count</code> ile olu\u015fturdu\u011fumuzda, React, \u00f6nceki i\u015flemedeki <code class=\"language-javascript\">[5]</code> dizisindeki \u00f6\u011feleri bir sonraki i\u015flemedeki <code class=\"language-javascript\">[6]</code> dizisindeki \u00f6\u011felerle kar\u015f\u0131la\u015ft\u0131racakt\u0131r. Bu sefer React efekti yeniden uygulayacak \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">5 !== 6</code>. Dizide birden fazla \u00f6\u011fe varsa, React, yaln\u0131zca biri farkl\u0131 olsa bile efekti yeniden \u00e7al\u0131\u015ft\u0131racakt\u0131r.</p>\n<p>Bu, temizleme a\u015famas\u0131 olan efektler i\u00e7in de ayn\u0131 \u015fekilde i\u015fe yarar:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Only re-subscribe if props.friend.id changes</span></span></code></pre></div>\n<p>Gelecekte, ikinci arg\u00fcman bir derleme zaman\u0131 d\u00f6n\u00fc\u015f\u00fcm\u00fc ile otomatik olarak eklenebilir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Bu optimizasyonu kullan\u0131rsan\u0131z, dizinin <strong>bile\u015fen kapsam\u0131ndaki zamanla de\u011fi\u015fen ve efekt taraf\u0131ndan kullan\u0131lan t\u00fcm de\u011ferleri (props ve state gibi) i\u00e7erdi\u011finden emin olun</strong>. Aksi takdirde, kodunuz \u00f6nceki render\u2019lardan eski de\u011ferlere ba\u015fvurur. <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">Fonksiyonlar ile nas\u0131l ba\u015fa \u00e7\u0131k\u0131l\u0131r</a> ve <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-ofte\">diziler \u00e7ok fazla de\u011fi\u015fti\u011finde ne yap\u0131l\u0131r</a> hakk\u0131nda daha fazla bilgi i\u00e7in t\u0131klay\u0131n\u0131z.</p>\n</div>\n<div class=\"blockquote\">\n<strong>Bir efekt \u00e7al\u0131\u015ft\u0131rmak ve yaln\u0131zca bir kez temizlemek istiyorsan\u0131z (mount ve unmount s\u0131ras\u0131nda), bo\u015f bir diziyi ([]) ikinci arg\u00fcman olarak iletebilirsiniz. Bu, React\u2019e efektinizin props veya state\u2019deki hi\u00e7bir de\u011fere ba\u011fl\u0131 olmad\u0131\u011f\u0131n\u0131, bu y\u00fczden asla yeniden \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 gerekmedi\u011fini s\u00f6yler. Bu \u00f6zel bir durum olarak ele al\u0131nmaz - do\u011frudan ba\u011f\u0131ml\u0131l\u0131klar dizisinin her zaman \u00e7al\u0131\u015ft\u0131\u011f\u0131 gibi \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.</strong>\n</div>\n<div class=\"blockquote\">\n<strong>Bo\u015f bir dizi ge\u00e7irirseniz ([]), efektin i\u00e7indeki props ve state her zaman ba\u015flang\u0131\u00e7 de\u011ferlerine sahip olacakt\u0131r. \u0130kinci arg\u00fcman olarak [] ge\u00e7erken tan\u0131d\u0131k componentDidMount ve componentWillUnmount modelleri, \u00e7ok s\u0131k yeniden \u00e7al\u0131\u015fan efektleri \u00f6nlemek i\u00e7in genellikle daha iyi \u00e7\u00f6z\u00fcmler kullan\u0131l\u0131r.</strong>\n</div>\n<div class=\"blockquote\">\n<strong>\u201cEslint-plugin-react-hooks\u201d paketimizin bir par\u00e7as\u0131 olan exhaustive-deps kural\u0131n\u0131 kullanman\u0131z\u0131 \u00f6neririz. Ba\u011f\u0131ml\u0131l\u0131klar yanl\u0131\u015f belirlendi\u011finde uyar\u0131 verir ve bir d\u00fczeltme \u00f6nerir.</strong>\n</div>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-effect#next-steps\"></a>\u0130leriki Ad\u0131mlar </h2>\n<p>Tebrikler! Bu uzun bir sayfayd\u0131, ama umar\u0131z sonunda etkilerle ilgili sorular\u0131n\u0131z\u0131n \u00e7o\u011fu yan\u0131tlanm\u0131\u015ft\u0131r. Hem State Hook\u2019unu hem de Effect Hook\u2019unu \u00f6\u011frendiniz ve ikisini birle\u015ftirerek yapabilece\u011finiz <em>\u00e7ok fazla</em> \u015fey var. S\u0131n\u0131flar i\u00e7in kullan\u0131m durumlar\u0131n\u0131n \u00e7o\u011funu kapsar - ve olmad\u0131klar\u0131 yerlerde, <a href=\"/react/hooks-reference\">ek Hook\u2019lar</a> yararl\u0131 olabilir.</p>\n<p>Ayr\u0131ca Hooks\u2019un <a href=\"/react/hooks-intro#motivation\">Motivasyon</a> b\u00f6l\u00fcm\u00fcnde ana hatlar\u0131yla belirtilen sorunlar\u0131 nas\u0131l \u00e7\u00f6zd\u00fc\u011f\u00fcn\u00fc g\u00f6rmeye ba\u015fl\u0131yoruz. Etkili temizlemenin <code class=\"language-javascript\">componentDidUpdate</code> ve <code class=\"language-javascript\">componentWillUnmount</code> ta yinelemeyi nas\u0131l \u00f6nledi\u011fini, ilgili kodu birbirine yakla\u015ft\u0131rd\u0131\u011f\u0131n\u0131 ve hatalar\u0131 \u00f6nlememize yard\u0131mc\u0131 oldu\u011funu g\u00f6rd\u00fck. Ayr\u0131ca etkileri ama\u00e7lar\u0131na g\u00f6re nas\u0131l ay\u0131rabilece\u011fimizi de g\u00f6rd\u00fck, ki bu s\u0131n\u0131flarda hi\u00e7 yapamayaca\u011f\u0131m\u0131z bir \u015fey.</p>\n<p>Bu noktada Hook\u2019lar\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 sorguluyor olabilirsiniz. React, hangi <code class=\"language-javascript\">useState</code> \u00e7a\u011fr\u0131s\u0131n\u0131n yeniden renderlar aras\u0131ndaki hangi durum de\u011fi\u015fkenine kar\u015f\u0131l\u0131k geldi\u011fini nas\u0131l bilebilir? React her g\u00fcncellemede \u00f6nceki ve sonraki efektleri nas\u0131l \u201ce\u015fle\u015ftirir\u201d?  <strong>Bir sonraki sayfada <a href=\"/react/hooks-rules\">Hook Kurallar\u0131</a> hakk\u0131nda bilgi edinece\u011fiz - bunlar Hook\u2019lar\u0131n \u00e7al\u0131\u015fmas\u0131 i\u00e7in \u00f6nemlidir.</strong></p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-effect.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-effect", "nav": ["/react/hooks-state", "/react/hooks-rules"]}, {"key": "5. Hook Kurallar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hook\u2019lar</em> React 16.8\u2019deki yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flarlar.</p>\n<p>Hook\u2019lar JavaScript fonksiyonlar\u0131d\u0131r, ancak bunlar\u0131 kullan\u0131rken iki kurala uyman\u0131z gerekir. Bu kurallar\u0131 otomatik olarak uygulamak i\u00e7in bir <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">linter eklentisi</a> sunuyoruz:</p>\n<h3 id=\"only-call-hooks-at-the-top-level\"><a class=\"anchor\" href=\"/react/hooks-rules#only-call-hooks-at-the-top-level\"></a>Hook\u2019lar\u0131 Sadece En \u00dcst Seviyede \u00c7a\u011f\u0131r\u0131n </h3>\n<p><strong>D\u00f6ng\u00fclerde, ko\u015fullarda veya i\u00e7 i\u00e7e ge\u00e7mi\u015f fonksiyonlarda Hook \u00e7a\u011fr\u0131s\u0131 yapmay\u0131n.</strong> Bunun yerine, Hook\u2019lar\u0131 her zaman React fonksiyonunuzun en \u00fcst seviyesinde, herhangi bir return yapmadan \u00f6nce kullan\u0131n. Bu kural\u0131 uygulayarak, bir bile\u015fenin her render edildi\u011finde <em>Hook</em>\u2018lar\u0131n ayn\u0131 s\u0131rada \u00e7a\u011fr\u0131ld\u0131\u011f\u0131ndan emin olursunuz. React\u2019in \u00e7oklu <code class=\"language-javascript\">useState</code> ve <code class=\"language-javascript\">useEffect</code> \u00e7a\u011fr\u0131lar\u0131 aras\u0131ndaki Hook\u2019lar\u0131n durumunu do\u011fru \u015fekilde korumas\u0131n\u0131 sa\u011flayan \u015fey budur. (Merak ediyorsan\u0131z, bunu <a href=\"/react/hooks-rules#explanation\">a\u015fa\u011f\u0131da</a> detayl\u0131ca a\u00e7\u0131klayaca\u011f\u0131z.)</p>\n<h3 id=\"only-call-hooks-from-react-functions\"><a class=\"anchor\" href=\"/react/hooks-rules#only-call-hooks-from-react-functions\"></a>Hook\u2019lar\u0131 Sadece React Fonksiyonlar\u0131ndan \u00c7a\u011f\u0131r\u0131n </h3>\n<p><strong>S\u0131radan JavaScript fonksiyonlar\u0131nda Hook\u2019lar\u0131 \u00e7a\u011f\u0131rmay\u0131n.</strong> Bunun yerine:</p>\n<ul>\n<li>\u2705 React fonksiyon bile\u015fenlerinden Hook\u2019lar\u0131 \u00e7a\u011f\u0131rabilirsiniz.</li>\n<li>\u2705 \u00d6zel Hook\u2019lardan Hook\u2019lar\u0131 \u00e7a\u011f\u0131rabilirsiniz. (<a href=\"/react/hooks-custom\">bir sonraki sayfada</a> bunlar\u0131 \u00f6\u011frenece\u011fiz.)</li>\n</ul>\n<p>Bu kural\u0131 uygulayarak, bir bile\u015fendeki t\u00fcm durum bilgisi mant\u0131\u011f\u0131n\u0131n kaynak kodundan a\u00e7\u0131k\u00e7a g\u00f6r\u00fclebildi\u011finden emin olursunuz.</p>\n<h2 id=\"eslint-plugin\"><a class=\"anchor\" href=\"/react/hooks-rules#eslint-plugin\"></a>ESLint Eklentisi </h2>\n<p>Bu iki kural\u0131 uygulayan <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> ad\u0131nda bir ESLint eklentisi yay\u0131nlad\u0131k. Denemek isterseniz, bu eklentiyi projenize ekleyebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-bash\"><code class=\"language-javascript\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint-plugin-react-hooks --save-dev</code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Sizin ESLint yap\u0131land\u0131rman\u0131z</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string-property property\">\"react-hooks/rules-of-hooks\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Hook kurallar\u0131n\u0131 kontrol eder</span>\n    <span class=\"token string-property property\">\"react-hooks/exhaustive-deps\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"warn\"</span> <span class=\"token comment\">// Efekt ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 kontrol eder</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu eklenti varsay\u0131lan olarak <a href=\"/react/create-a-new-react-app#create-react-app\">Create React App</a> arac\u0131na dahil edilmi\u015ftir.</p>\n<p><strong><a href=\"/react/hooks-custom\">Kendi Hook\u2019lar\u0131n\u0131z\u0131</a> nas\u0131l yazaca\u011f\u0131n\u0131z\u0131 a\u00e7\u0131klayan bir sonraki sayfaya \u015fimdi atlayabilirsiniz.</strong> Bu sayfaya, bu kurallar\u0131n ard\u0131ndaki mant\u0131\u011f\u0131 a\u00e7\u0131klayarak devam edece\u011fiz.</p>\n<h2 id=\"explanation\"><a class=\"anchor\" href=\"/react/hooks-rules#explanation\"></a>A\u00e7\u0131klama </h2>\n<p><a href=\"/react/hooks-state#tip-using-multiple-state-variables\">Daha \u00f6nce \u00f6\u011frendi\u011fimiz</a> gibi, tek bir bile\u015fende birden fazla State veya Efekt Hook\u2019lar\u0131n\u0131 kullanabiliriz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. name state de\u011fi\u015fkenini kullan</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Onur'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 2. Formun devaml\u0131l\u0131\u011f\u0131n\u0131 sa\u011flamak i\u00e7in bir efekt kullan</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 3. surname state de\u011fi\u015fkenini kullan</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>surname<span class=\"token punctuation\">,</span> setSurname<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\u015euyal\u00e7\u0131nkaya'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 4. Ba\u015fl\u0131\u011f\u0131 g\u00fcncellemek i\u00e7in bir efekt kullan</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">updateTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> surname<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Peki React, hangi state\u2019in hangi <code class=\"language-javascript\">useState</code> \u00e7a\u011fr\u0131s\u0131na kar\u015f\u0131l\u0131k geldi\u011fini nas\u0131l biliyor? Cevap, <strong>React\u2019in Hook\u2019lar\u0131n \u00e7a\u011fr\u0131lma s\u0131ras\u0131na dayal\u0131 olmas\u0131d\u0131r.</strong> \u00d6rne\u011fimiz \u00e7al\u0131\u015f\u0131yor \u00e7\u00fcnk\u00fc Hook \u00e7a\u011fr\u0131lar\u0131n\u0131n s\u0131ras\u0131 her render etmede ayn\u0131:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// ------------</span>\n<span class=\"token comment\">// \u0130lk render etme</span>\n<span class=\"token comment\">// ------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Onur'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. name state de\u011fi\u015fkenini 'Onur' ile ba\u015flat</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Formun devaml\u0131l\u0131\u011f\u0131n\u0131 sa\u011flamak i\u00e7in bir efekt ekle</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\u015euyal\u00e7\u0131nkaya'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 3. surname state de\u011fi\u015fkenini '\u015euyal\u00e7\u0131nkaya' ile ba\u015flat</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Ba\u015fl\u0131\u011f\u0131 g\u00fcncellemek i\u00e7in bir efekt ekle</span>\n\n<span class=\"token comment\">// -------------</span>\n<span class=\"token comment\">// \u0130kinci render etme</span>\n<span class=\"token comment\">// -------------</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Onur'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. name state de\u011fi\u015fkenini oku (arg\u00fcman yoksay\u0131lm\u0131\u015ft\u0131r)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>persistForm<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 2. Formun devaml\u0131l\u0131\u011f\u0131n\u0131 sa\u011flamak efekti de\u011fi\u015ftir</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\u015euyal\u00e7\u0131nkaya'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 3. surname state de\u011fi\u015fkenini oku (arg\u00fcman yoksay\u0131lm\u0131\u015ft\u0131r)</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 4. Ba\u015fl\u0131\u011f\u0131 g\u00fcncellemek i\u00e7in efekti de\u011fi\u015ftir</span>\n\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Hook \u00e7a\u011fr\u0131lar\u0131n\u0131n s\u0131ras\u0131 render etmeler aras\u0131nda ayn\u0131 oldu\u011fu s\u00fcrece, React baz\u0131 yerel state\u2019leri bu \u00e7a\u011fr\u0131lar\u0131n her biriyle ili\u015fkilendirebilir. Ancak bir ko\u015fulun i\u00e7ine bir Hook \u00e7a\u011fr\u0131s\u0131 (\u00f6rne\u011fin, <code class=\"language-javascript\">persistForm</code> efekti) koyarsak ne olur?</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// \ud83d\udd34 Bir ko\u015ful i\u00e7erisinde Hook kullanarak ilk kural\u0131 \u00e7i\u011fniyoruz</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u0130lk render etmede <code class=\"language-javascript\">name !== ''</code> ko\u015fulu <code class=\"language-javascript\">true</code>, bu y\u00fczden bu Hook\u2019u \u00e7al\u0131\u015ft\u0131r\u0131yoruz. Bununla birlikte, bir sonraki render etmede kullan\u0131c\u0131 formu temizleyerek ko\u015fulu <code class=\"language-javascript\">false</code> hale getirebilir. Art\u0131k render etme s\u0131ras\u0131nda bu Hook\u2019u atlad\u0131\u011f\u0131m\u0131z i\u00e7in, Hook \u00e7a\u011fr\u0131lar\u0131n\u0131n s\u0131ras\u0131 de\u011fi\u015fiyor:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Onur'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1. name state de\u011fi\u015fkenini oku (arg\u00fcman yoksay\u0131lm\u0131\u015ft\u0131r)</span>\n<span class=\"token comment\">// useEffect(persistForm)  // \ud83d\udd34 Bu Hook atland\u0131!</span>\n<span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\u015euyal\u00e7\u0131nkaya'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// \ud83d\udd34 2 (ama 3't\u00fc). surname state de\u011fi\u015fkeni okunamad\u0131</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>updateTitle<span class=\"token punctuation\">)</span>     <span class=\"token comment\">// \ud83d\udd34 3 (ama 4't\u00fc). Efekt de\u011fi\u015ftirilemedi</span></code></pre></div>\n<p>React, ikinci <code class=\"language-javascript\">useState</code> Hook \u00e7a\u011fr\u0131s\u0131 i\u00e7in ne d\u00f6nece\u011fini bilemezdi. React, bu bile\u015fendeki ikinci Hook \u00e7a\u011fr\u0131s\u0131n\u0131n, bir \u00f6nceki render etme s\u0131ras\u0131nda oldu\u011fu gibi, <code class=\"language-javascript\">persistForm</code> efektine kar\u015f\u0131l\u0131k gelmesini bekliyordu, ancak art\u0131k gelmiyor. Bu noktadan itibaren, atlad\u0131\u011f\u0131m\u0131z \u00e7a\u011fr\u0131dan sonraki her bir Hook \u00e7a\u011fr\u0131s\u0131 da birer birer kay\u0131p, hatalara yol a\u00e7acakt\u0131r.</p>\n<p><strong>Bu y\u00fczden Hook\u2019lar bile\u015fenlerimizin en \u00fcst seviyesinde \u00e7a\u011fr\u0131lmal\u0131d\u0131r.</strong> E\u011fer bir efekti ko\u015fullu olarak \u00e7al\u0131\u015ft\u0131rmak istiyorsak, bu ko\u015fulu Hook\u2019umuzun <em>i\u00e7erisine</em> koyabiliriz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">persistForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \ud83d\udc4d Art\u0131k ilk kural\u0131 \u00e7i\u011fnemiyoruz</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formData'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>E\u011fer <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">sunulan lint kural\u0131n\u0131</a> kullan\u0131rsan\u0131z, bu sorun i\u00e7in endi\u015felenmenize gerek kalmad\u0131\u011f\u0131n\u0131 unutmay\u0131n.</strong> Ama art\u0131k Hook\u2019lar\u0131n <em>neden</em> bu \u015fekilde \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ve kural\u0131n hangi sorunlar\u0131 \u00f6nledi\u011fini de biliyorsunuz.</p>\n<h2 id=\"next-steps\"><a class=\"anchor\" href=\"/react/hooks-rules#next-steps\"></a>Sonraki Ad\u0131mlar </h2>\n<p>Sonunda, <a href=\"/react/hooks-custom\">kendi Hook\u2019lar\u0131n\u0131z\u0131 yazmay\u0131</a> \u00f6\u011frenmeye haz\u0131r\u0131z. \u00d6zel Hook\u2019lar, React taraf\u0131ndan sa\u011flanan Hook\u2019lar\u0131 kendi soyutlamalar\u0131n\u0131zla birle\u015ftirmenize ve farkl\u0131 bile\u015fenler aras\u0131ndaki ortak durum mant\u0131\u011f\u0131n\u0131 yeniden kullanman\u0131za olanak sa\u011flar.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-rules.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-rules", "nav": ["/react/hooks-effect", "/react/hooks-custom"]}, {"key": "6. Kendi Hook'lar\u0131n\u0131z\u0131 Olu\u015fturmak", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Hook\u2019lar React\u2019e 16.8 versiyonu ile hen\u00fcz yeni eklenmi\u015flerdir. Hook\u2019lar sayesinde state ve di\u011fer React \u00f6zelliklerini bir s\u0131n\u0131f olu\u015fturmadan kullanabilirsiniz.</p>\n<p>Kendi hook\u2019unuzu olu\u015fturmak, bile\u015fen kodunuzu tekrar kullan\u0131labilir fonksiyonlar halinde olu\u015fturarak y\u00f6netmenizi sa\u011flar.</p>\n<p><a href=\"/react/hooks-effect#example-using-hooks-1\">Effect Hook\u2019unu</a> kullanma yaz\u0131s\u0131nda, mesajla\u015fma uygulamas\u0131nda bir arkada\u015f\u0131n \u00e7evrimi\u00e7i veya \u00e7evrimd\u0131\u015f\u0131 oldu\u011funu belirten mesaj\u0131 g\u00f6r\u00fcnt\u00fcleyen a\u015fa\u011f\u0131daki bile\u015fene de\u011finmi\u015ftik: </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi, mesajla\u015fma uygulamam\u0131z\u0131n bir ki\u015fi listesine sahip oldu\u011funu d\u00fc\u015f\u00fcnelim. Ki\u015fi listesindeki \u00e7evrimi\u00e7i olan kullan\u0131c\u0131lar\u0131n isimlerini ye\u015fil renkte render etmek i\u00e7in, \u00fcstteki <code class=\"language-javascript\">FriendStatus</code> bile\u015feni ile benzer mant\u0131\u011f\u0131 <code class=\"language-javascript\">FriendListItem</code> bile\u015fenine kopyala/yap\u0131\u015ft\u0131r yapabiliriz. Fakat bu durum kod tekrar\u0131 olu\u015fturdu\u011fundan dolay\u0131 ideal bir \u00e7\u00f6z\u00fcm olmayacakt\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">FriendStatus</code> ve <code class=\"language-javascript\">FriendListItem</code>\u2018da bulunan bu mant\u0131\u011f\u0131 daha genel bir hale getirip bile\u015fenler aras\u0131nda payla\u015ft\u0131rabiliriz.</p>\n<p>React\u2019te state\u2019li mant\u0131\u011f\u0131 bile\u015fenler aras\u0131nda payla\u015fmak i\u00e7in <a href=\"/react/render-props\">render props</a> ve <a href=\"/react/higher-order-components\">higher-order components</a> olmak \u00fczere iki geleneksel y\u00f6ntem bulunmaktad\u0131r. Bunlar\u0131n yerine Hook\u2019lar\u0131 kullanarak, DOM a\u011fac\u0131na yeni bir bile\u015fen eklemeden bu tarz problemleri nas\u0131l \u00e7\u00f6zece\u011fimize de\u011finece\u011fiz.</p>\n<h2 id=\"extracting-a-custom-hook\"><a class=\"anchor\" href=\"/react/hooks-custom#extracting-a-custom-hook\"></a>\u00d6zel bir Hook Olu\u015fturma </h2>\n<p>Normalde, ortak bir i\u015flevin iki JavaScript fonksiyonu aras\u0131nda payla\u015ft\u0131r\u0131lmas\u0131n\u0131 istedi\u011fimizde, o i\u015flev i\u00e7in \u00fc\u00e7\u00fcnc\u00fc bir fonksiyon olu\u015fturabiliyoruz. Bile\u015fenler ve Hook\u2019lar da asl\u0131nda birer fonksiyon olduklar\u0131ndan dolay\u0131, bu durum onlar i\u00e7in de ge\u00e7erlidir.</p>\n<p><strong>\u00d6zel Hook asl\u0131nda bir JavaScript fonksiyonudur ve adlar\u0131 \u201d<code class=\"language-javascript\">use</code>\u201d ile ba\u015flar. Ayr\u0131ca di\u011fer Hook\u2019lar\u0131 da \u00e7a\u011f\u0131rabilirler.</strong> \u00d6rne\u011fin a\u015fa\u011f\u0131da ilk defa olu\u015fturdu\u011fumuz \u00f6zel Hook\u2019umuz bulunuyor:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleStatusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setIsOnline</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">.</span>isOnline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromFriendStatus</span><span class=\"token punctuation\">(</span>friendID<span class=\"token punctuation\">,</span> handleStatusChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kod mant\u0131\u011f\u0131n\u0131 \u00fcstteki bile\u015fenlerden ald\u0131\u011f\u0131 i\u00e7in i\u00e7erisinde yeni bir \u015fey bulunmuyor. T\u0131pk\u0131 bile\u015fenlerde oldu\u011fu gibi, \u00f6zel Hook\u2019unuzun \u00fcst k\u0131sm\u0131nda <code class=\"language-javascript\">useState()</code> gibi di\u011fer Hook\u2019lar\u0131 \u00e7a\u011f\u0131rabilirsiniz. </p>\n<p>Bile\u015fenlerin aksine, \u00f6zel Hook\u2019larda belirli bir fonksiyon imzas\u0131n\u0131n bulunma zorunlulu\u011fu yoktur. Hangi de\u011ferlerin parametre olarak verilece\u011fine ve Hook\u2019tan neyin geri d\u00f6nd\u00fcr\u00fclece\u011fine biz karar verebiliriz. Ba\u015fka bir deyi\u015fle, normal fonksiyonlarda yapt\u0131\u011f\u0131m\u0131z gibi Hook\u2019lar\u0131 kodlayabiliriz. \u00d6zel Hook olu\u015ftururken tek bir \u015fartbulunuyor: ilk bak\u0131\u015fta fonksiyonun bir React Hook oldu\u011funu anlayabilmek i\u00e7in fonksiyon isimlendirmesinin ba\u015f\u0131nda <code class=\"language-javascript\">use</code> kullan\u0131lmas\u0131 gerekiyor. Buna benzer olarak Hook\u2019lar hakk\u0131nda di\u011fer kurallar i\u00e7in <a href=\"/react/hooks-rules\">bu dok\u00fcman\u0131</a> inceleyebilirsiniz. </p>\n<p><code class=\"language-javascript\">useFriendStatus</code> Hook\u2019unun amac\u0131, mesajla\u015fma uygulamas\u0131ndaki ilgili arkada\u015f\u0131n durumuna abone olmay\u0131 sa\u011flamakt\u0131r. Bu nedenle parametre olarak <code class=\"language-javascript\">friendID</code>\u2018yi al\u0131r ve kullan\u0131c\u0131n\u0131n \u00e7evrimi\u00e7i/\u00e7evrimd\u0131\u015f\u0131 durumunu geri d\u00f6nd\u00fcr\u00fcr:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u015eimdi \u00f6zel Hook\u2019umuzu nas\u0131l kullanaca\u011f\u0131m\u0131za ge\u00e7elim.</p>\n<h2 id=\"using-a-custom-hook\"><a class=\"anchor\" href=\"/react/hooks-custom#using-a-custom-hook\"></a>\u00d6zel bir Hook\u2019un Kullan\u0131m\u0131 </h2>\n<p>Ba\u015flang\u0131\u00e7taki amac\u0131m\u0131z, <code class=\"language-javascript\">FriendStatus</code> ve <code class=\"language-javascript\">FriendListItem</code> bile\u015fenlerindeki tekrar eden kod mant\u0131\u011f\u0131n\u0131 genel bir hale getirmek idi. \u00c7\u00fcnk\u00fc iki bile\u015fen de bir arkada\u015f\u0131n \u00e7evrimi\u00e7i olma durumundan haberdar olmas\u0131 gerekiyordu.</p>\n<p>Bu kod mant\u0131\u011f\u0131n\u0131 iki bile\u015fenden \u00e7\u0131kararak <code class=\"language-javascript\">useFriendStatus</code> hook\u2019unu olu\u015fturduk. Art\u0131k a\u015fa\u011f\u0131daki gibi kullanabiliriz: </p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'Loading...'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FriendListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Bu kod orijinal \u00f6rneklerdeki ile ayn\u0131 \u015fekilde \u00e7al\u0131\u015f\u0131r m\u0131?</strong> diye soracak olursan\u0131z, evet tam olarak ayn\u0131 \u015fekilde \u00e7al\u0131\u015faca\u011f\u0131n\u0131 s\u00f6yleyebiliriz. E\u011fer yak\u0131ndan bakarsan\u0131z, kod mant\u0131\u011f\u0131 \u00fczerinde hi\u00e7bir de\u011fi\u015fiklik yapmad\u0131\u011f\u0131m\u0131z\u0131 g\u00f6receksiniz. Yapt\u0131\u011f\u0131m\u0131z tek \u015fey, iki fonksiyonda da olan kodu, ayr\u0131 bir fonksiyona ta\u015f\u0131mak oldu. <strong>Bu nedenle \u00f6zel olarak yaz\u0131lan Hook\u2019lar, bir React \u00f6zelli\u011finden ziyade, Hook\u2019lardaki tasar\u0131msal mant\u0131\u011f\u0131 takip ederek olu\u015fturulurlar.</strong></p>\n<p><strong>\u00d6zel olarak olu\u015fturdu\u011fum Hook\u2019u, \u201d<code class=\"language-javascript\">use</code>\u201d \u00f6n ekini kullanarak isimlendirmek zorunda m\u0131y\u0131m?</strong> Zorunda de\u011filsiniz fakat bu \u015fekilde isimlendirmenizi tavsiye ederiz. E\u011fer bu \u015fekilde isimlendirmezseniz, <a href=\"/react/hooks-rules\">Hook kurallar\u0131n\u0131n</a> ihlalini otomatik olarak kontrol edemeyiz. \u00c7\u00fcnk\u00fc hangi fonksiyonun kendi i\u00e7erisinde Hook\u2019lara \u00e7a\u011fr\u0131 yapt\u0131\u011f\u0131n\u0131 bilemeyiz. </p>\n<p><strong>Ayn\u0131 Hook\u2019u kullanan iki bile\u015fen, birbirleri aras\u0131nda state\u2019i de payla\u015f\u0131r m\u0131?</strong> Hay\u0131r. \u00d6zel Hook\u2019lar, <em>state\u2019li mant\u0131\u011f\u0131</em> (\u00f6rne\u011fin, bir abonelik olu\u015fturmak ve bu aboneli\u011fin de\u011ferini bar\u0131nd\u0131rmak gibi i\u015flemleri) tekrar kullanmak i\u00e7in bir mekanizmad\u0131r. Fakat her defas\u0131nda \u00f6zel bir Hook kulland\u0131\u011f\u0131n\u0131zda, state ve i\u00e7erisindeki etkileri tamamen bile\u015fenden izole edilmi\u015ftir.</p>\n<p><strong>\u00d6zel Hook, izole bir state\u2019e nas\u0131l sahip olur?</strong> Hook\u2019a yap\u0131lan her \u00e7a\u011fr\u0131, izole state\u2019e sahip olur. Biz <code class=\"language-javascript\">useFriendStatus</code>\u2018u direkt olarak \u00e7a\u011f\u0131rd\u0131\u011f\u0131m\u0131zda, React\u2019in bak\u0131\u015f a\u00e7\u0131s\u0131yla <code class=\"language-javascript\">useState</code> ve <code class=\"language-javascript\">useEffect</code> hook\u2019lar\u0131 \u00e7a\u011fr\u0131lm\u0131\u015f olur. <a href=\"/react/hooks-effect#tip-use-multiple-effects-to-separate-concerns\">Daha \u00f6nce</a> de <a href=\"/react/hooks-state#tip-using-multiple-state-variables\">\u00f6\u011frendi\u011fimiz gibi</a> bir bile\u015fen i\u00e7erisinde <code class=\"language-javascript\">useState</code> ve <code class=\"language-javascript\">useEffect</code> hook\u2019lar\u0131n\u0131 istedi\u011fimiz kadar \u00e7a\u011f\u0131rabiliriz ve bunu yapt\u0131\u011f\u0131m\u0131zda iki hook da birbirinden ba\u011f\u0131ms\u0131z olarak \u00e7al\u0131\u015facakt\u0131r.</p>\n<h3 id=\"tip-pass-information-between-hooks\"><a class=\"anchor\" href=\"/react/hooks-custom#tip-pass-information-between-hooks\"></a>\u0130pucu: Bilginin Hook\u2019lar Aras\u0131nda Aktar\u0131lmas\u0131 </h3>\n<p>Hook\u2019lar birer fonksiyon olduklar\u0131 i\u00e7in, bilgiyi birbirlerine aktarabiliriz. </p>\n<p>Bunu daha iyi a\u00e7\u0131klamak i\u00e7in, mesajla\u015fma uygulamas\u0131 \u00f6rne\u011fimizdeki di\u011fer bir bile\u015feni kullanaca\u011f\u0131z. Bu bile\u015fen, bir mesaj i\u00e7in al\u0131c\u0131 se\u00e7meye yarar. Bu sayede se\u00e7ili olarak i\u015faretlenmi\u015f bir arkada\u015f\u0131n \u00e7evrimi\u00e7i olup olmad\u0131\u011f\u0131n\u0131n g\u00f6r\u00fcnt\u00fclenmesi sa\u011flan\u0131r:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> friendList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Phoebe'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Rachel'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ross'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ChatRecipientPicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>recipientID<span class=\"token punctuation\">,</span> setRecipientID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> isRecipientOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>recipientID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span></span> <span class=\"token attr-name\">color</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isRecipientOnline <span class=\"token operator\">?</span> <span class=\"token string\">'green'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>recipientID<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setRecipientID</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>friendList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friend</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            </span><span class=\"token punctuation\">{</span>friend<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Mevcut se\u00e7ili arkada\u015f ID\u2019sini <code class=\"language-javascript\">recipientID</code> ismindeki state de\u011f\u015fkeninde sakl\u0131yoruz ve e\u011fer kullan\u0131c\u0131 <code class=\"language-javascript\">&lt;select&gt;</code> se\u00e7icisinden farkl\u0131 bir arkada\u015f\u0131 se\u00e7erse bu de\u011fi\u015fkeni g\u00fcncelliyoruz.</p>\n<p><code class=\"language-javascript\">useState</code> Hook\u2019u, <code class=\"language-javascript\">recipientID</code> state de\u011fi\u015fkeninin en g\u00fcncel de\u011ferini bize verdi\u011finden dolay\u0131, \u00f6nceden olu\u015fturdu\u011fumuz <code class=\"language-javascript\">useFriendStatus</code> ad\u0131ndaki \u00f6zel hook\u2019a bu de\u011feri parametre olarak ge\u00e7irebiliriz: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>recipientID<span class=\"token punctuation\">,</span> setRecipientID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isRecipientOnline <span class=\"token operator\">=</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span>recipientID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu kod, <em>mevcut se\u00e7ili</em> arkada\u015f\u0131n \u00e7evrimi\u00e7i olup olmad\u0131\u011f\u0131n\u0131 bilmemizi sa\u011flar. E\u011fer farkl\u0131 bir arkada\u015f\u0131 se\u00e7ip <code class=\"language-javascript\">recipientID</code> state de\u011fi\u015fkenini g\u00fcncellersek, <code class=\"language-javascript\">useFriendStatus</code> Hook\u2019u \u00f6nceden se\u00e7ili arkada\u015f\u0131n durumunu izlemedeki abonelikten \u00e7\u0131kacak ve yeni se\u00e7ili olan arkada\u015f\u0131n durumu i\u00e7in abone olacakt\u0131r.</p>\n<h2 id=\"useyourimagination\"><a class=\"anchor\" href=\"/react/hooks-custom#useyourimagination\"></a><code class=\"language-javascript\">useHayalG\u00fcc\u00fc()</code> </h2>\n<p>Daha \u00f6nce React bile\u015fenlerinde m\u00fcmk\u00fcn olmayan payla\u015f\u0131m esnekli\u011fini \u00f6zel Hook\u2019lar sunmaktad\u0131r. Akl\u0131n\u0131za gelebilecek bir \u00e7ok kullan\u0131m durumu i\u00e7in \u00f6zel Hook\u2019lar olu\u015fturabilirsiniz. Bu kullan\u0131m durumlar\u0131na \u00f6rnek verecek olursak: form i\u015fleme, animasyon, abonelikler, zamanlay\u0131c\u0131lar ve \u015fu an akl\u0131m\u0131za gelmeyen daha bir \u00e7ok \u015fey. React\u2019in beraberinde gelen \u00f6zellikleri kadar kullan\u0131m\u0131 kolay olacak bi\u00e7imde kendi Hook\u2019unuzu olu\u015fturabilirsiniz. </p>\n<p>Erken a\u015famalarda hemen soyutlamaya gitmeyiniz. \u015eu an bir fonksiyon bile\u015feni bir\u00e7ok i\u015flemi ger\u00e7ekle\u015ftiriyorsa, daha sonra projenizdeki bir fonksiyon bile\u015feninin ortalama uzunlu\u011fu da daha fazla olacakt\u0131r. Bu normaldir \u2014 hemen kodu Hook\u2019lara ay\u0131rma ihtiyac\u0131 duymak <em>zorunda de\u011filsiniz</em>. Fakat basit bir aray\u00fcz arkas\u0131ndaki karma\u015f\u0131k mant\u0131\u011f\u0131n gizlenmesini veya karma\u015f\u0131k bir bile\u015fenin ayr\u0131\u015ft\u0131r\u0131lmas\u0131na yard\u0131mc\u0131 olmas\u0131n\u0131 sa\u011flayacak yerlerde \u00f6zel Hook olu\u015fturman\u0131z\u0131 da tavsiye ederiz.</p>\n<p>\u00d6rne\u011fin, belirli bir ama\u00e7 i\u00e7in yaz\u0131lm\u0131\u015f bir\u00e7ok yerel state i\u00e7eren karma\u015f\u0131k bir bile\u015fene sahip oldu\u011funuzu d\u00fc\u015f\u00fcnelim. <code class=\"language-javascript\">useState</code> Hook\u2019unun, state g\u00fcncelleme mant\u0131\u011f\u0131n\u0131 merkezi bir hale getirmesi kolay olmayaca\u011f\u0131ndan dolay\u0131, <a class=\"external-link\" href=\"https://redux.js.org/\">Redux</a> reducer olarak yazmay\u0131 tercih edebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">todosReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'add'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ... other actions ...</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Reducer\u2019lar, izole bir ortamda test yapmak ve karma\u015f\u0131k g\u00fcncelleme mekanizmalar\u0131n\u0131 \u00f6l\u00e7ekleyerek olu\u015fturmak i\u00e7in olduk\u00e7a kullan\u0131\u015fl\u0131d\u0131r. Bu sayede bir reducer\u2019\u0131 gerekti\u011finde birden fazla k\u00fc\u00e7\u00fck reducer\u2019lara ay\u0131rabilirsiniz. Ancak, React\u2019in yerel state\u2019inin kullan\u0131m\u0131ndan keyif al\u0131yor ve projenize harici bir kod k\u00fct\u00fcphanesini eklemek istemiyor da olabilirsiniz.</p>\n<p>Peki  <code class=\"language-javascript\">useReducer</code> Hook\u2019unu, bir reducer ile birlikte bile\u015fenimizin <code class=\"language-javascript\">yerel</code> state\u2019ini y\u00f6netecek \u015fekilde yazarsak nas\u0131l olur? Basitle\u015ftirilmi\u015f versiyonu a\u015fa\u011f\u0131daki gibi olacakt\u0131r: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span> initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nextState <span class=\"token operator\">=</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>nextState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Art\u0131k olu\u015fturdu\u011fumuz Hook\u2019u bile\u015fenimizde kullanabilir, ve reducer\u2019\u0131n state y\u00f6netiminde d\u00fcmene ge\u00e7mesini sa\u011flayabiliriz:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAddClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Karma\u015f\u0131k bir bile\u015fende, reducer ile yerel state\u2019in y\u00f6netim ihtiyac\u0131 olduk\u00e7a yayg\u0131nd\u0131r. Bu nedenle React\u2019e, <code class=\"language-javascript\">useReducer</code> Hook\u2019unu varsay\u0131lan olarak ekledik. Bunun gibi varsay\u0131lan olarak gelen di\u011fer Hook\u2019lar hakk\u0131nda bilgi i\u00e7in <a href=\"/react/hooks-reference\">Hooks API ba\u015fvuru dok\u00fcman\u0131n\u0131</a> inceleyebilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-custom.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-custom", "nav": ["/react/hooks-rules", "/react/hooks-reference"]}, {"key": "7. Hook'lar\u0131n API Kayna\u011f\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hook\u2019lar</em> React 16.8\u2019deki yeni bir eklentidir. Bir s\u0131n\u0131f yazmadan state ve di\u011fer React \u00f6zelliklerini kullanman\u0131za olanak sa\u011flarlar.</p>\n<p>Bu sayfa React i\u00e7inde gelen Hook\u2019lar\u0131n kullan\u0131m aray\u00fcz\u00fcn\u00fc (API) a\u00e7\u0131klamaktad\u0131r.</p>\n<p>E\u011fer Hook\u2019lara yeniyseniz \u00f6nce <a href=\"/react/hooks-overview\">Bir Bak\u0131\u015fta Hook\u2019lar</a> b\u00f6l\u00fcm\u00fcne g\u00f6z at\u0131n. <a href=\"/react/hooks-faq\">S\u0131k\u00e7a sorulan sorular</a> b\u00f6l\u00fcm\u00fcnde de i\u015fe yarar bilgiler bulabilirsiniz.</p>\n<ul>\n<li>\n<p><a href=\"/react/hooks-reference#basic-hooks\">Temel Hook\u2019lar</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a></li>\n<li><a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usecontext\"><code class=\"language-javascript\">useContext</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#additional-hooks\">Di\u011fer Hook\u2019lar</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a></li>\n<li><a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a></li>\n<li><a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a></li>\n<li><a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef</code></a></li>\n<li><a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a></li>\n<li><a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a></li>\n<li><a href=\"/react/hooks-reference#usedebugvalue\"><code class=\"language-javascript\">useDebugValue</code></a></li>\n<li><a href=\"/react/hooks-reference#usedeferredvalue\"><code class=\"language-javascript\">useDeferredValue</code></a></li>\n<li><a href=\"/react/hooks-reference#usetransition\"><code class=\"language-javascript\">useTransition</code></a></li>\n<li><a href=\"/react/hooks-reference#useid\"><code class=\"language-javascript\">useId</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react/hooks-reference#library-hooks\">Library Hooks</a></p>\n<ul>\n<li><a href=\"/react/hooks-reference#usesyncexternalstore\"><code class=\"language-javascript\">useSyncExternalStore</code></a></li>\n<li><a href=\"/react/hooks-reference#useinsertioneffect\"><code class=\"language-javascript\">useInsertionEffect</code></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"basic-hooks\"><a class=\"anchor\" href=\"/react/hooks-reference#basic-hooks\"></a>Temel Hook\u2019lar </h2>\n<h3 id=\"usestate\"><a class=\"anchor\" href=\"/react/hooks-reference#usestate\"></a><code class=\"language-javascript\">useState</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir state par\u00e7as\u0131 ve onu g\u00fcncellemek i\u00e7in bir fonksiyon d\u00f6nd\u00fcr\u00fcr.</p>\n<p>\u0130lk render a\u015famas\u0131nda, d\u00f6nd\u00fcr\u00fclen state par\u00e7as\u0131 (<code class=\"language-javascript\">state</code>) ba\u015flang\u0131\u00e7ta girilen de\u011ferle (<code class=\"language-javascript\">initialState</code>) ayn\u0131d\u0131r.</p>\n<p><code class=\"language-javascript\">setState</code> fonksiyonu state par\u00e7as\u0131n\u0131 g\u00fcncellemek i\u00e7in kullan\u0131l\u0131r. Yeni bir state de\u011feri kabul eder ve bile\u015fenin yeniden render edilmesini i\u015flem s\u0131ras\u0131na koyar.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>newState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sonra gelen yeniden-render a\u015famalar\u0131nda, <code class=\"language-javascript\">useState</code> taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen ilk de\u011fer, g\u00fcncelleme uyguland\u0131ktan sonraki en son state de\u011ferine e\u015fittir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React, <code class=\"language-javascript\">setState</code> fonksiyonunun yeniden-render a\u015famalar\u0131nda kimli\u011fini sabit tutulaca\u011f\u0131 garantisini verir. Bu y\u00fczden <code class=\"language-javascript\">setState</code> fonksiyonunu <code class=\"language-javascript\">useEffect</code> ya da <code class=\"language-javascript\">useCallback</code> hook\u2019lar\u0131n\u0131n ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler listesine eklemenize gerek yoktur.</p>\n</div>\n<h4 id=\"functional-updates\"><a class=\"anchor\" href=\"/react/hooks-reference#functional-updates\"></a>Fonksiyonlu G\u00fcncellemeler </h4>\n<p>E\u011fer yeni state, bir \u00f6nceki state de\u011ferine ba\u011fl\u0131 olarak hesaplan\u0131yorsa, <code class=\"language-javascript\">setState</code> i\u00e7ine fonksiyon girebilirsiniz. Bu fonksiyon bir \u00f6nceki state de\u011ferini parametre olarak al\u0131r ve g\u00fcncel state de\u011ferini d\u00f6nd\u00fcr\u00fcr. <code class=\"language-javascript\">setState</code> fonksiyonunun her iki \u00e7e\u015fidini de kullanan bir \u00f6rnek saya\u00e7 fonksiyonu olu\u015ftural\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>initialCount<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Count: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>initialCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Reset</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevCount</span> <span class=\"token operator\">=&gt;</span> prevCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevCount</span> <span class=\"token operator\">=&gt;</span> prevCount <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>\u201d+\u201d ve \u201d-\u201d butonlar\u0131 fonksiyonlu \u00e7e\u015fidi kullan\u0131r, \u00e7\u00fcnk\u00fc g\u00fcncellenen de\u011fer bir \u00f6nceki de\u011fere ba\u011fl\u0131d\u0131r. Ancak \u201cReset\u201d butonu normal \u00e7e\u015fidi kullan\u0131r, \u00e7\u00fcnk\u00fc her seferinde sayac\u0131 ba\u015flang\u0131\u00e7 de\u011ferine s\u0131f\u0131rlar.</p>\n<p>E\u011fer bu g\u00fcncelleme fonksiyonunuz mevcut state ile ayn\u0131 de\u011feri d\u00f6nd\u00fcr\u00fcrse, s\u0131radaki yeniden-render i\u015flemi tamamen g\u00f6z ard\u0131 edilir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>S\u0131n\u0131f bile\u015fenlerindeki <code class=\"language-javascript\">setState</code> metodunun aksine, <code class=\"language-javascript\">useState</code> objeleri otomatik olarak birle\u015ftirmez. Fonksiyonlu g\u00fcncelleme metodu ve obje yayma (spread) operat\u00f6r\u00fc birlikte kullan\u0131larak bu \u00f6zellik yeniden \u00fcretilebilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Object.assign da kullan\u0131labilir</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>prevState<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>updatedValues<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Di\u011fer bir se\u00e7enek ise <code class=\"language-javascript\">useReducer</code> hook\u2019udur, ki bu birden fazla alt de\u011feri olan objelerin y\u00f6netimine daha uygundur.</p>\n</div>\n<h4 id=\"lazy-initial-state\"><a class=\"anchor\" href=\"/react/hooks-reference#lazy-initial-state\"></a>Tembel (lazy) ba\u015flang\u0131\u00e7 state de\u011feri </h4>\n<p><code class=\"language-javascript\">initialState</code> de\u011feri ilk render a\u015famas\u0131nda kullan\u0131lan state de\u011feridir. Sonra gelen render i\u015flemlerinde g\u00f6z ard\u0131 edilir. E\u011fer ba\u015flang\u0131\u00e7 state de\u011feri a\u011f\u0131r bir i\u015flemin sonucu olarak hesaplan\u0131yorsa, bunun yerine yaln\u0131zca ilk render a\u015famas\u0131nda \u00e7al\u0131\u015facak bir fonksiyon girebilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token function\">someExpensiveComputation</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"bailing-out-of-a-state-update\"><a class=\"anchor\" href=\"/react/hooks-reference#bailing-out-of-a-state-update\"></a>State g\u00fcncellemesinden kurtulmak </h4>\n<p>Bir State Hook\u2019unu mevcut state de\u011feri ile ayn\u0131 olan bir de\u011ferle g\u00fcncellerseniz, React render i\u015flemini yapmaz ya da efektleri i\u015fleme sokmaz. (React <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Description\"><code class=\"language-javascript\">Object.is</code> kar\u015f\u0131la\u015ft\u0131rma algoritmas\u0131n\u0131</a> kullan\u0131r.)</p>\n<p>Unutmay\u0131n, React yine de bu spesifik bile\u015feni tekrar render edebilir. Bu durum sorun te\u015fkil etmez \u00e7\u00fcnk\u00fc React gereksiz bir \u015fekilde bile\u015fen a\u011fac\u0131nda derinlere do\u011fru inmez. Render a\u015famas\u0131nda a\u011f\u0131r hesaplamalar yap\u0131yorsan\u0131z, bunlar\u0131 <code class=\"language-javascript\">useMemo</code> ile optimize edebilirsiniz.</p>\n<h4 id=\"batching-of-state-updates\"><a class=\"anchor\" href=\"/react/hooks-reference#batching-of-state-updates\"></a>Batching of state updates </h4>\n<p>React may group several state updates into a single re-render to improve performance. Normally, this improves performance and shouldn\u2019t affect your application\u2019s behavior.</p>\n<p>Before React 18, only updates inside React event handlers were batched. Starting with React 18, <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2022/03/08/react-18-upgrade-guide.html#automatic-batching\">batching is enabled for all updates by default</a>. Note that React makes sure that updates from several <em>different</em> user-initiated events \u2014 for example, clicking a button twice \u2014 are always processed separately and do not get batched. This prevents logical mistakes.</p>\n<p>In the rare case that you need to force the DOM update to be applied synchronously, you may wrap it in <a href=\"/react/react-dom#flushsync\"><code class=\"language-javascript\">flushSync</code></a>. However, this can hurt performance so do this only where needed.</p>\n<h3 id=\"useeffect\"><a class=\"anchor\" href=\"/react/hooks-reference#useeffect\"></a><code class=\"language-javascript\">useEffect</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>didUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Zorunlu yan etkileri (side effects) olan bir fonksiyonu parametre olarak al\u0131r.</p>\n<p>Mutasyonlar, abonelikler, zamanlay\u0131c\u0131lar, loglama, ve di\u011fer yan etkisi olan i\u015flemler bir fonksiyon bile\u015fenin ana g\u00f6vdesinde bulunamazlar (React\u2019\u0131n <em>render a\u015famas\u0131</em> olarak da bilinir). B\u00f6yle yapmak kafa kar\u0131\u015ft\u0131ran hatalara ve kullan\u0131c\u0131 aray\u00fcz\u00fcnde (UI) tutars\u0131zl\u0131klara sebep olacakt\u0131r.</p>\n<p>Bunun yerine, <code class=\"language-javascript\">useEffect</code> kullan\u0131n. <code class=\"language-javascript\">useEffect</code> i\u00e7ine girilen fonksiyon, render i\u015flemi ger\u00e7ekle\u015fip bile\u015fenler ekrana yazd\u0131r\u0131ld\u0131ktan sonra \u00e7al\u0131\u015facakt\u0131r. Efektleri, React\u2019\u0131n tamamen fonksiyonel olan d\u00fcnyas\u0131ndan ger\u00e7ek d\u00fcnyaya bir yang\u0131n \u00e7\u0131k\u0131\u015f\u0131 olarak g\u00f6rebilirsiniz.</p>\n<p>Varsay\u0131lan olarak, efektler her tamamlanan render i\u015fleminden sonra \u00e7al\u0131\u015f\u0131r, ancak <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">sadece belli de\u011ferler de\u011fi\u015fti\u011finde</a> \u00e7al\u0131\u015ft\u0131rmak da sizin elinizde.</p>\n<h4 id=\"cleaning-up-an-effect\"><a class=\"anchor\" href=\"/react/hooks-reference#cleaning-up-an-effect\"></a>Bir efekti temizlemek </h4>\n<p>Genelde, efektler bile\u015fen ekrandan kald\u0131r\u0131lmadan \u00f6nce temizlenmesi gereken baz\u0131 kaynaklar olu\u015fturur, bir abonelik ve zamanlay\u0131c\u0131 gibi. Bunu yapmak i\u00e7in, <code class=\"language-javascript\">useEffect</code> i\u00e7ine girilen fonksiyon bir temizlik fonksiyonu d\u00f6nd\u00fcr\u00fclebilir. \u00d6rne\u011fin bir abonelik olu\u015ftural\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> subscription <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Aboneli\u011fi temizle</span>\n    subscription<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Temizlik fonksiyonu, bellek s\u0131z\u0131nt\u0131lar\u0131n\u0131 \u00f6nlemek i\u00e7in, bile\u015fen ekrandan kald\u0131r\u0131lmadan hemen \u00f6nce \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Ek olarak, bile\u015fen birka\u00e7 defa render edilirse (ki genelde edilir), <strong>bir \u00f6nceki efekt yeni efekt \u00e7al\u0131\u015ft\u0131r\u0131lmadan temizlenir</strong>. Bizim \u00f6rne\u011fimizde bu demektir ki her g\u00fcncellemede yeni bir abonelik olu\u015fturuluyor. Bir efekti her g\u00fcncellemede \u00e7al\u0131\u015ft\u0131rman\u0131n \u00f6n\u00fcne ge\u00e7mek i\u00e7in bir sonraki b\u00f6l\u00fcme bak\u0131n\u0131z.</p>\n<h4 id=\"timing-of-effects\"><a class=\"anchor\" href=\"/react/hooks-reference#timing-of-effects\"></a>Efektlerin zamanlamas\u0131 </h4>\n<p><code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code>\u2018in aksine, <code class=\"language-javascript\">useEffect</code> i\u00e7ine girilen fonksiyon ekrana yazd\u0131rma i\u015fleminden <strong>sonra</strong>, gecikmeli bir olay olarak \u00e7al\u0131\u015f\u0131r. Bu <code class=\"language-javascript\">useEffect</code>\u2018i bir\u00e7ok yayg\u0131n yan etki i\u00e7in uygun getirir, mesela aboneliklerin ve olay y\u00f6neticilerinin olu\u015fturulmas\u0131, \u00e7\u00fcnk\u00fc bir\u00e7ok i\u015flem t\u00fcr\u00fc asl\u0131nda taray\u0131c\u0131n\u0131n ekran\u0131 g\u00fcncellemesini engellememelidir.</p>\n<p>Buna ra\u011fmen, t\u00fcm efekler ertelenemeyebilir. \u00d6rne\u011fin, kullan\u0131c\u0131n\u0131n g\u00f6rebildi\u011fi, DOM \u00fczerindeki bir de\u011fi\u015fiklik bir sonraki ekrana yazd\u0131rma a\u015famas\u0131ndan \u00f6nce ger\u00e7ekle\u015fmelidir ki kullan\u0131c\u0131 g\u00f6rsel bir uyumsuzluk ya\u015famas\u0131n. (Aradaki ay\u0131r\u0131m konsept olarak pasif vs. aktif olay dinleyicilerine benzer.) Bu tip efekler i\u00e7in React, <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a> ad\u0131nda ba\u015fka bir hook daha sa\u011flar. Bu hook da <code class=\"language-javascript\">useEffect</code> ile ayn\u0131 \u015fekilde \u00e7al\u0131\u015f\u0131r, sadece ne zaman \u00e7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131 farkl\u0131d\u0131r.</p>\n<p>Additionally, starting in React 18, the function passed to <code class=\"language-javascript\">useEffect</code> will fire synchronously <strong>before</strong> layout and paint when it\u2019s the result of a discrete user input such as a click, or when it\u2019s the result of an update wrapped in <a href=\"/react/react-dom#flushsync\"><code class=\"language-javascript\">flushSync</code></a>. This behavior allows the result of the effect to be observed by the event system, or by the caller of <a href=\"/react/react-dom#flushsync\"><code class=\"language-javascript\">flushSync</code></a>.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>This only affects the timing of when the function passed to <code class=\"language-javascript\">useEffect</code> is called - updates scheduled inside these effects are still deferred. This is different than <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a>, which fires the function and processes the updates inside of it immediately.</p>\n</div>\n<p><code class=\"language-javascript\">useEffect</code> taray\u0131c\u0131 ekrana yazd\u0131rma i\u015flemini tamamlanana kadar geciktirilmi\u015f olmas\u0131na ra\u011fmen, herhangi bir yeniden-render i\u015fleminden \u00f6nce \u00e7al\u0131\u015fmas\u0131 da garanti edilir. React her zaman bir \u00f6nceki render i\u015fleminin efektlerini, yeni bir g\u00fcncellemeye ba\u015flamadan \u00f6nce temizleyecektir.</p>\n<h4 id=\"conditionally-firing-an-effect\"><a class=\"anchor\" href=\"/react/hooks-reference#conditionally-firing-an-effect\"></a>\u015eartl\u0131 olarak bir efekti \u00e7al\u0131\u015ft\u0131rmak </h4>\n<p>Efektler i\u00e7in varsay\u0131lan davran\u0131\u015f, her bir tamamlanm\u0131\u015f render i\u015fleminden sonra efekti \u00e7al\u0131\u015ft\u0131rmakt\u0131r. Bu \u015fekilde bir efekt, ba\u011f\u0131ml\u0131 oldu\u011fu de\u011fi\u015fkenlerden birisi de\u011fi\u015fti\u011finde yeniden olu\u015fturulur. </p>\n<p>Ancak, baz\u0131 durumlarda bu a\u015f\u0131r\u0131 g\u00fc\u00e7 kullan\u0131m\u0131 gibi gelebilir, \u00f6rne\u011fin bir \u00f6nceki b\u00f6l\u00fcmdeki abonelik \u00f6rne\u011finde oldu\u011fu gibi. Her bir g\u00fcncellemede yeni bir abonelik olu\u015fturmam\u0131za gerek yoktur, sadece <code class=\"language-javascript\">source</code> prop de\u011feri de\u011fi\u015firse.</p>\n<p>Bunu uygulamak i\u00e7in, <code class=\"language-javascript\">useEffect</code>\u2018e efektin ba\u011f\u0131ml\u0131 oldu\u011fu de\u011ferlerden olu\u015fan bir diziyi ikinci bir arg\u00fcman girin. Yeni \u00f6rne\u011fimiz \u015fimdi \u015fu \u015fekilde g\u00f6r\u00fcn\u00fcyor:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> subscription <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      subscription<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>\u015eimdi abonelik yaln\u0131zca <code class=\"language-javascript\">props.source</code> de\u011fi\u015fti\u011finde yeniden olu\u015fturulacakt\u0131r.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>E\u011fer bu optimizasyonu kullan\u0131rsan\u0131z, diziye <strong>bile\u015fenin i\u00e7indeki zaman i\u00e7inde de\u011fi\u015fen ve efekt i\u00e7inde kullan\u0131lan t\u00fcm de\u011ferleri</strong> dahil etmeyi unutmay\u0131n. Aksi takdirde kodunuz bir \u00f6nceki render i\u015fleminden kalma ge\u00e7erlili\u011fini yitirmi\u015f de\u011ferlere referans g\u00f6sterecektir. <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">Fonksiyonlarla nas\u0131l \u00e7al\u0131\u015f\u0131l\u0131r</a> ve <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">dizinin de\u011ferleri \u00e7ok s\u0131k de\u011fi\u015fti\u011finde ne yap\u0131l\u0131r</a> konular\u0131 hakk\u0131nda daha fazla bilgi edinin.</p>\n<p>Bir efekti yaln\u0131zca bir kere \u00e7al\u0131\u015ft\u0131r\u0131p temizlemek istedi\u011finizde (mount ve unmount a\u015famalar\u0131nda), ikinci arg\u00fcman olarak bo\u015f bir dizi (<code class=\"language-javascript\">[]</code>) g\u00f6nderebilirsiniz. B\u00f6ylece React\u2019a, efektin state veya props i\u00e7indeki hi\u00e7bir de\u011fere ba\u011fl\u0131 olmad\u0131\u011f\u0131n\u0131 s\u00f6ylemi\u015f olursunuz, b\u00f6ylece efekt <em>hi\u00e7bir</em> zaman yeniden \u00e7al\u0131\u015ft\u0131r\u0131lmaz. Bu \u00f6zel bir durum de\u011fildir \u2014 ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisinin \u00e7al\u0131\u015fma prensibi bu \u015fekildedir.</p>\n<p>Bo\u015f bir dizi girdi\u011finizde (<code class=\"language-javascript\">[]</code>), efekt i\u00e7indeki props ve state her zaman ba\u015flang\u0131\u00e7 de\u011ferlerini al\u0131rlar. \u0130kinci arg\u00fcman olarak bo\u015f dizi <code class=\"language-javascript\">[]</code> girmek <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentWillUnmount</code> modeline benzese de, efektlerin \u00e7ok fazla yeniden \u00e7al\u0131\u015fmas\u0131n\u0131 engellemek i\u00e7in genelde <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">daha iyi</a> <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">\u00e7\u00f6z\u00fcmler</a> mevcuttur. Ayr\u0131ca, React\u2019\u0131n <code class=\"language-javascript\">useEffect</code>\u2018in \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131n\u0131 taray\u0131c\u0131 ekrana yazd\u0131rd\u0131ktan sonraya b\u0131rakt\u0131\u011f\u0131n\u0131 unutmay\u0131n, yani fazladan i\u015f yapmak \u00e7ok da \u00f6nemli de\u011fil.</p>\n<p>Biz <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> kural\u0131n\u0131n <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> paketinin bir par\u00e7as\u0131 olarak kullan\u0131lmas\u0131n\u0131 \u00f6neriyoruz. Bu paket ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler yanl\u0131\u015f bir \u015fekilde belirtildi\u011finde uyar\u0131r ve bir \u00e7\u00f6z\u00fcm \u00f6nerir.</p>\n</div>\n<p>Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisi efekt fonksiyonuna arg\u00fcman olarak girilmez. Ancak konsept olarak temsil ettikleri \u015fey odur: efekt fonksiyonu i\u00e7erisinde referans g\u00f6sterilen her de\u011fer ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisinde de bulunmal\u0131d\u0131r. Gelecekte, yeterince geli\u015fmi\u015f bir derleyici bu diziyi otomatik olarak olu\u015fturabilir.</p>\n<h3 id=\"usecontext\"><a class=\"anchor\" href=\"/react/hooks-reference#usecontext\"></a><code class=\"language-javascript\">useContext</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>MyContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bir context objesi al\u0131r (<code class=\"language-javascript\">React.createContext</code>\u2018den d\u00f6nd\u00fcr\u00fclen de\u011fer) ve mevcut context i\u00e7in o andaki context de\u011ferini d\u00f6nd\u00fcr\u00fcr. Mevcut context de\u011feri, bile\u015fen a\u011fac\u0131nda yukar\u0131 do\u011fru \u00e7\u0131karken en yak\u0131nda bulunan <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code> ifadesinin <code class=\"language-javascript\">value</code> de\u011feri taraf\u0131ndan belirlenir. </p>\n<p>Yukar\u0131 do\u011fru en yak\u0131ndaki <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code> g\u00fcncellendi\u011finde, bu Hook en g\u00fcncel context <code class=\"language-javascript\">value</code> de\u011ferini <code class=\"language-javascript\">MyContext</code> sa\u011flay\u0131c\u0131s\u0131na g\u00f6ndererek bir yeniden-render i\u015flemi tetikler. Yukar\u0131daki bile\u015fenler <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a> ya da <a href=\"/react/react-component#shouldcomponentupdate\"><code class=\"language-javascript\">shouldComponentUpdate</code></a> kullansa bile, yeniden-render i\u015flemi <code class=\"language-javascript\">useContext</code>\u2018i kullanan bile\u015fenden ba\u015flayarak yine de ger\u00e7ekle\u015fir.</p>\n<p><code class=\"language-javascript\">useContext</code>\u2018e girilen arg\u00fcman\u0131n <em>context objesinin kendisi</em> oldu\u011funu unutmay\u0131n:</p>\n<ul>\n<li><strong>Do\u011fru:</strong> <code class=\"language-javascript\">useContext(MyContext)</code></li>\n<li><strong>Yanl\u0131\u015f:</strong> <code class=\"language-javascript\">useContext(MyContext.Consumer)</code></li>\n<li><strong>Yanl\u0131\u015f:</strong> <code class=\"language-javascript\">useContext(MyContext.Provider)</code></li>\n</ul>\n<p><code class=\"language-javascript\">useContext</code>\u2018i \u00e7a\u011f\u0131ran bir bile\u015fen context de\u011feri her de\u011fi\u015fti\u011finde yeniden-render edilecektir. E\u011fer bile\u015fenin yeniden-render edilmesi a\u011f\u0131r bir i\u015flem ise, <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/15156#issuecomment-474590693\">memoization kullanarak</a> optimize edebilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Context API ile Hook\u2019lardan \u00f6nce tan\u0131\u015ft\u0131ysan\u0131z, <code class=\"language-javascript\">useContext(MyContext)</code> ile s\u0131n\u0131f bile\u015fenlerindeki <code class=\"language-javascript\">static contextType = MyContext</code> ya da <code class=\"language-javascript\">&lt;MyContext.Consumer&gt;</code> ayn\u0131 \u015feylerdir.</p>\n<p><code class=\"language-javascript\">useContext(MyContext)</code> sadece context\u2019i <em>okuman\u0131za</em> olanak sa\u011flar ve oradaki de\u011fi\u015fikliklere abone olur. Bile\u015fen a\u011fac\u0131n\u0131z\u0131n \u00fcst k\u0131s\u0131mlar\u0131nda, bu context\u2019in de\u011ferinin <em>sa\u011flay\u0131c\u0131s\u0131</em> olarak <code class=\"language-javascript\">&lt;MyContext.Provider&gt;</code>\u2018a hala ihtiyac\u0131n\u0131z vard\u0131r. </p>\n</div>\n<p><strong>Context.Provider ile par\u00e7alar\u0131 birle\u015ftirelim</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foreground</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#eeeeee\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foreground</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#222222\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span>themes<span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>themes<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toolbar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemedButton</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemedButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>foreground <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      I am styled by theme context!</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu \u00f6rnek, Context\u2019i ne zaman ve nas\u0131l kullanaca\u011f\u0131n\u0131za dair bilgiler bulabilece\u011finiz bir \u00f6nceki <a href=\"/react/context\">Context Geli\u015fmi\u015f Rehberi</a> \u00f6rne\u011finden al\u0131n\u0131p Hook\u2019lar i\u00e7in d\u00fczenlenmi\u015ftir.</p>\n<h2 id=\"additional-hooks\"><a class=\"anchor\" href=\"/react/hooks-reference#additional-hooks\"></a>Di\u011fer Hook\u2019lar </h2>\n<p>A\u015fa\u011f\u0131da bahsedilen hook\u2019lar ya \u00f6nce bahsedilen hook\u2019lardan t\u00fcretilmi\u015ftir, ya da belli ba\u015fl\u0131 u\u00e7 \u00f6rnekler i\u00e7in gereklidir. Ba\u015flang\u0131\u00e7 a\u015famas\u0131nda bunlar\u0131 \u00f6\u011frenmeyi dert etmeyin.</p>\n<h3 id=\"usereducer\"><a class=\"anchor\" href=\"/react/hooks-reference#usereducer\"></a><code class=\"language-javascript\">useReducer</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialArg<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a>\u2018e bir alternatiftir. <code class=\"language-javascript\">(state, action) =&gt; newState</code> \u015feklinde bir reducer fonksiyonunu parametre olarak al\u0131r, ve mevcut state\u2019i bir <code class=\"language-javascript\">dispatch</code> metodu ile birlikte d\u00f6nd\u00fcr\u00fcr. (E\u011fer Redux biliyorsan\u0131z, bunun da nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 zaten biliyorsunuz.)</p>\n<p>Birden fazla alt de\u011fere sahip karma\u015f\u0131k bir state mant\u0131\u011f\u0131n\u0131z (state logic) oldu\u011funda ya da bir sonraki state bir \u00f6ncekine ba\u011fl\u0131 oldu\u011fu durumlarda <code class=\"language-javascript\">useReducer</code>, <code class=\"language-javascript\">useState</code>\u2018e g\u00f6re daha \u00e7ok tercih edilir. Ayr\u0131ca <a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">Callback fonksiyonlar yerine <code class=\"language-javascript\">dispatch</code> g\u00f6nderebildi\u011finiz i\u00e7in</a>, <code class=\"language-javascript\">useReducer</code> derin g\u00fcncellemeler ger\u00e7ekle\u015ftiren bile\u015fenlerin performans\u0131n\u0131 art\u0131rman\u0131za m\u00fcsade eder.</p>\n<p>\u015eimdi de <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a> b\u00f6l\u00fcm\u00fcndeki \u00f6rne\u011fin reducer kullanarak yaz\u0131lm\u0131\u015f haline bakal\u0131m:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'increment'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'decrement'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      Count: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'decrement'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'increment'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React <code class=\"language-javascript\">dispatch</code> fonksiyonunun kimli\u011finin sabit kalaca\u011f\u0131n\u0131 garanti eder ve yeniden render i\u015fleminde bu fonksiyon de\u011fi\u015fmez. Bu y\u00fczden <code class=\"language-javascript\">useEffect</code> veya <code class=\"language-javascript\">useCallback</code> hook\u2019lar\u0131n\u0131n ba\u011f\u0131ml\u0131 de\u011fi\u015fken dizisine eklenmesine gerek yoktur.</p>\n</div>\n<h4 id=\"specifying-the-initial-state\"><a class=\"anchor\" href=\"/react/hooks-reference#specifying-the-initial-state\"></a>Ba\u015flang\u0131\u00e7 state de\u011ferinin belirlenmesi </h4>\n<p><code class=\"language-javascript\">useReducer</code> ile state olu\u015fturman\u0131n iki farkl\u0131 y\u00f6ntemi vard\u0131r. Kullan\u0131m amac\u0131n\u0131za g\u00f6re istedi\u011finizi se\u00e7ebilirsiniz. En kolay y\u00f6ntem, ba\u011flang\u0131\u00e7 state de\u011ferinin ikinci parametre olarak girilmesidir:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>\n    reducer<span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>React, Redux taraf\u0131ndan pop\u00fclerle\u015ftirilen <code class=\"language-javascript\">state = initialState</code> gelene\u011fini kullanmaz. State\u2019in ba\u015flang\u0131\u00e7 de\u011feri bazen prop\u2019lara ba\u011fl\u0131 olabilir ve tam da bu y\u00fczden Hook i\u00e7inde belirlenmi\u015ftir. Bu konuda kendinize g\u00fcveniyorsan\u0131z, Redux\u2019taki i\u015flemi taklit etmek i\u00e7in <code class=\"language-javascript\">useReducer(reducer, undefined, reducer)</code> \u015feklinde kullanabilirsiniz fakat bu y\u00f6ntem tavsiye edilmez.</p>\n</div>\n<h4 id=\"lazy-initialization\"><a class=\"anchor\" href=\"/react/hooks-reference#lazy-initialization\"></a>\u201cLazy ba\u015flatma\u201d </h4>\n<p>State\u2019in ba\u015flang\u0131\u00e7 de\u011ferini lazy y\u00fckleme y\u00f6ntemiyle de olu\u015fturabilirsiniz. Bunun i\u00e7in, \u00fc\u00e7\u00fcnc\u00fc arg\u00fcman olarak <code class=\"language-javascript\">init</code> fonksiyonu girebilirsiniz. Ba\u015flang\u0131\u00e7 state de\u011feri <code class=\"language-javascript\">init(initialArg)</code> olarak belirlenecektir.</p>\n<p>Bu y\u00f6ntem, ba\u015flang\u0131\u00e7 state de\u011ferini olu\u015fturan mant\u0131\u011f\u0131n reducer d\u0131\u015f\u0131na \u00e7\u0131kar\u0131lmas\u0131na yard\u0131mc\u0131 olur. Bu y\u00f6ntem sayesinde state\u2019in sonradan bir action\u2019a yan\u0131t olarak resetlenmesi de m\u00fcmk\u00fcnd\u00fcr:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialCount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'increment'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'decrement'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">case</span> <span class=\"token string\">'reset'</span><span class=\"token operator\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">return</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>initialCount<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialCount<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      Count: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'reset'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span> initialCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">        Reset</span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'decrement'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">-</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'increment'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"bailing-out-of-a-dispatch\"><a class=\"anchor\" href=\"/react/hooks-reference#bailing-out-of-a-dispatch\"></a>Dispatch\u2019ten kurtulmak </h4>\n<p>E\u011fer bir Reducer Hook\u2019tan mevcut state\u2019in ayn\u0131s\u0131n\u0131 d\u00f6nd\u00fcr\u00fcyorsan\u0131z, React alt bile\u015fenlerin yeniden render i\u015flemini yapmaktan veya efektlerini \u00e7al\u0131\u015ft\u0131rmaktan kurtulacakt\u0131r. (React <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Description\"><code class=\"language-javascript\">Object.is</code> kar\u015f\u0131la\u015ft\u0131rma algoritmas\u0131n\u0131</a> kullanmaktad\u0131r.)</p>\n<p>Unutmay\u0131n, React bu bahsedilen bile\u015feni, esas yeniden render i\u015fleminden kurtulmadan \u00f6nce bir kez daha render etmek zorunda olabilir. Bu sorun olmaz \u00e7\u00fcnk\u00fc React bile\u015fen a\u011fac\u0131nda gereksiz bir \u015fekilde a\u015fa\u011f\u0131lara do\u011fru inmez. Render i\u015flemi a\u015famas\u0131nda a\u011f\u0131r i\u015flemler yap\u0131yorsan\u0131z, bunlar\u0131 <code class=\"language-javascript\">useMemo</code>ile optimize edebilirsiniz.</p>\n<h3 id=\"usecallback\"><a class=\"anchor\" href=\"/react/hooks-reference#usecallback\"></a><code class=\"language-javascript\">useCallback</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedCallback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Memoization\">Memoize</a> edilmi\u015f bir callback fonksiyonu d\u00f6nd\u00fcr\u00fcr.</p>\n<p>Arg\u00fcman olarak sat\u0131ri\u00e7i bir callback ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisi girin. <code class=\"language-javascript\">useCallback</code> girdi\u011finiz callback\u2019in memoize edilmi\u015f, yani haf\u0131zadaki yeri korunmu\u015f, ve sadece ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisine girilen de\u011ferlerden birisi de\u011fi\u015fti\u011finde bu haf\u0131zadaki yerin de\u011fi\u015fti\u011fi bir versiyonunu d\u00f6nd\u00fcrecektir. Bu i\u015flem, yeniden render i\u015flemlerinin \u00f6n\u00fcne ge\u00e7mek i\u00e7in reference equality y\u00f6ntemine g\u00f6re optimize edilmi\u015f alt bile\u015fenlere callback fonksiyonu girerken i\u015finize yarar (\u00f6rne\u011fin <code class=\"language-javascript\">shouldComponentUpdate</code>).</p>\n<p><code class=\"language-javascript\">useCallback(fn, deps)</code> kullan\u0131m\u0131 ile <code class=\"language-javascript\">useMemo(() =&gt; fn, deps)</code> kullan\u0131m\u0131 birbirine e\u015fde\u011ferdir.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisi efekt fonksiyonuna arg\u00fcman olarak girilmez. Ancak konsept olarak temsil ettikleri \u015fey odur: efekt fonksiyonu i\u00e7erisinde referans g\u00f6sterilen her de\u011fer ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisinde de bulunmal\u0131d\u0131r. Gelecekte, yeterince geli\u015fmi\u015f bir derleyici bu diziyi otomatik olarak olu\u015fturabilir.</p>\n<p>Biz <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> kural\u0131n\u0131n <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> paketinin bir par\u00e7as\u0131 olarak kullan\u0131lmas\u0131n\u0131 \u00f6neriyoruz. Bu paket ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler yanl\u0131\u015f bir \u015fekilde belirtildi\u011finde uyar\u0131r ve bir \u00e7\u00f6z\u00fcm \u00f6nerir.</p>\n</div>\n<h3 id=\"usememo\"><a class=\"anchor\" href=\"/react/hooks-reference#usememo\"></a><code class=\"language-javascript\">useMemo</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://fazlamesai.net/posts/common-lisp-ve-bir-optimizasyon-teknigi-memoization\">Memoize</a> edilmi\u015f bir de\u011fer d\u00f6nd\u00fcr\u00fcr.</p>\n<p>\u201cCreate\u201d fonksiyonu ve bir ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisi girin. <code class=\"language-javascript\">useMemo</code> memoize edilen de\u011feri, yaln\u0131zca ba\u011f\u0131ml\u0131 de\u011fi\u015fkenlerden birisi de\u011fi\u015fti\u011finde yeniden hesaplar. Bu optimizasyon, a\u011f\u0131r i\u015flemlerin her render i\u015fleminde yeniden ger\u00e7ekle\u015ftirilmesini \u00f6nlemeye yard\u0131mc\u0131 olur.</p>\n<p><code class=\"language-javascript\">useMemo</code> i\u00e7ine girilen fonksiyonun render a\u015famas\u0131nda \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 unutmay\u0131n. Normalde render a\u015famas\u0131nda yapmayaca\u011f\u0131n\u0131z hi\u00e7 bir i\u015flemi burada yapmay\u0131n. \u00d6rne\u011fin, efektler <code class=\"language-javascript\">useEffect</code> i\u00e7inde olmal\u0131d\u0131r, <code class=\"language-javascript\">useMemo</code> i\u00e7inde de\u011fil.</p>\n<p>E\u011fer bir ba\u011f\u0131ml\u0131 de\u011fi\u015fken dizisi verilmezse, her render i\u015fleminde de\u011fer tekrar hesaplan\u0131r.</p>\n<p><strong><code class=\"language-javascript\">useMemo</code>\u2018ya performans art\u0131rmak i\u00e7in g\u00fcvenebilirsiniz, ancak anlamsal bir garanti s\u00f6z konusu de\u011fildir.</strong> Gelecekte, React daha \u00f6nce memoize edilmi\u015f baz\u0131 de\u011ferleri \u201cunutmay\u0131\u201d tercih edebilir ve bir sonraki render a\u015famas\u0131nda yeniden hesaplayabilir, mesela ekranda olmayan bile\u015fenlere haf\u0131zada yer a\u00e7mak i\u00e7in. Kodunuzu <code class=\"language-javascript\">useMemo</code> olmadan \u00e7al\u0131\u015facak \u015fekilde yaz\u0131n \u2014 ve sonra performans\u0131 art\u0131rmak i\u00e7in bu hook\u2019tan faydalan\u0131n.</p>\n<div class=\"blockquote\">\n<strong>Not</strong>\n<p>Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisi efekt fonksiyonuna arg\u00fcman olarak girilmez. Ancak konsept olarak temsil ettikleri \u015fey odur: efekt fonksiyonu i\u00e7erisinde referans g\u00f6sterilen her de\u011fer ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler dizisinde de bulunmal\u0131d\u0131r. Gelecekte, yeterince geli\u015fmi\u015f bir derleyici bu diziyi otomatik olarak olu\u015fturabilir.</p>\n<p>Biz <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> kural\u0131n\u0131n <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> paketinin bir par\u00e7as\u0131 olarak kullan\u0131lmas\u0131n\u0131 \u00f6neriyoruz. Bu paket ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler yanl\u0131\u015f bir \u015fekilde belirtildi\u011finde uyar\u0131r ve bir \u00e7\u00f6z\u00fcm \u00f6nerir.</p>\n</div>\n<h3 id=\"useref\"><a class=\"anchor\" href=\"/react/hooks-reference#useref\"></a><code class=\"language-javascript\">useRef</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> refContainer <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useRef</code> Hook, <code class=\"language-javascript\">.current</code> de\u011feri sizin girdi\u011finiz (<code class=\"language-javascript\">initialValue</code>) arg\u00fcman\u0131yla ba\u015flat\u0131lan, de\u011fi\u015ftirilebilen bir obje d\u00f6nd\u00fcr\u00fcr. D\u00f6nd\u00fcr\u00fclen obje, bile\u015fenin ya\u015fam d\u00f6ng\u00fcs\u00fc boyunca ayn\u0131 kalacakt\u0131r.</p>\n<p>Genel bir kullan\u0131m yeri, alt bile\u015fene zorunlu bir eri\u015fimin gerekti\u011fi durumlard\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">TextInputWithFocusButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputEl <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onButtonClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// `current` ekrandaki text input eleman\u0131na i\u015faret eder</span>\n    inputEl<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputEl<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onButtonClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Focus the input</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Temelde, <code class=\"language-javascript\">useRef</code>, <code class=\"language-javascript\">.current</code> de\u011ferinde de\u011fi\u015ftirilebilen bir de\u011fer tutan bir \u201ckutu\u201d gibidir.</p>\n<p>Ref\u2019leri, <a href=\"/react/refs-and-the-dom\">DOM\u2019a eri\u015fmenin</a> bir yolu olarak kullanm\u0131\u015f olabilirsiniz. Bir ref objesini React\u2019a <code class=\"language-javascript\">&lt;div ref={myRef} /&gt;</code> \u015feklinde girerseniz, React bu ref\u2019in <code class=\"language-javascript\">.current</code> de\u011ferini, bu DOM eleman\u0131na, eleman her de\u011fi\u015fti\u011finde e\u015fitler.</p>\n<p>Ancak <code class=\"language-javascript\">useRef()</code>, <code class=\"language-javascript\">ref</code>\u2018den ba\u015fka \u015feyler i\u00e7in de kullan\u0131\u015fl\u0131d\u0131r. S\u0131n\u0131flarda instance fields kullan\u0131m\u0131nda oldu\u011fu gibi <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">de\u011fi\u015ftirilebilen (mutable) bir de\u011feri elde tutmak i\u00e7in kullan\u0131labilir</a>.</p>\n<p>Bu y\u00f6ntem \u00e7al\u0131\u015f\u0131r \u00e7\u00fcnk\u00fc <code class=\"language-javascript\">useRef()</code> basit bir JavaScript objesi olu\u015fturur. Bir objeyi kendiniz <code class=\"language-javascript\">{current: ...}</code> \u015feklinde olu\u015fturman\u0131z ve <code class=\"language-javascript\">useRef()</code> kullanman\u0131z aras\u0131ndaki fark \u015fudur: <code class=\"language-javascript\">useRef()</code> size her render i\u015fleminden sonra haf\u0131zadaki yeri de\u011fi\u015fmeyen ayn\u0131 ref objesini verecektir.</p>\n<p>\u015eunu unutmay\u0131n ki <code class=\"language-javascript\">useRef</code> i\u00e7eri\u011fi de\u011fi\u015fti\u011finde size haber <em>vermez</em>. <code class=\"language-javascript\">.current</code> de\u011ferini de\u011fi\u015ftirmek yeniden render i\u015flemine sebep olmaz. E\u011fer React ekrana bir DOM eleman\u0131 yazd\u0131rd\u0131\u011f\u0131nda veya ekrandan kald\u0131rd\u0131\u011f\u0131nda bir kod \u00e7al\u0131\u015ft\u0131rmak istiyorsan\u0131z, <code class=\"language-javascript\">useRef</code> yerine <a href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\">callback ref</a> kullanmak isteyebilirsiniz.</p>\n<h3 id=\"useimperativehandle\"><a class=\"anchor\" href=\"/react/hooks-reference#useimperativehandle\"></a><code class=\"language-javascript\">useImperativeHandle</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> createHandle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>deps<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">useImperativeHandle</code>, <code class=\"language-javascript\">ref</code> kullan\u0131rken \u00fcst bile\u015fene a\u00e7\u0131lan bile\u015fenin instance de\u011ferini \u00f6zelle\u015ftirmeye yarar. Her zaman oldu\u011fu gibi, ref\u2019leri kullanan imperative koddan bir\u00e7ok durumda ka\u00e7\u0131n\u0131lmal\u0131d\u0131r. <code class=\"language-javascript\">useImperativeHandle</code>, <a href=\"/react/react-api#reactforwardref\"><code class=\"language-javascript\">forwardRef</code></a> ile birlikte kullan\u0131lmal\u0131d\u0131r: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> inputRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">focus</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputRef<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">...</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nFancyInput <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span>FancyInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bu \u00f6rnekte, <code class=\"language-javascript\">&lt;FancyInput ref={inputRef} /&gt;</code> elementini ekrana yazd\u0131ran \u00fcst bile\u015fen <code class=\"language-javascript\">inputRef.current.focus()</code> fonksiyonunu \u00e7a\u011f\u0131rabilecektir.</p>\n<h3 id=\"uselayouteffect\"><a class=\"anchor\" href=\"/react/hooks-reference#uselayouteffect\"></a><code class=\"language-javascript\">useLayoutEffect</code> </h3>\n<p>Kullan\u0131m \u015fekl <code class=\"language-javascript\">useEffect</code> ile e\u015fde\u011ferdir, ancak t\u00fcm DOM de\u011fi\u015fiklikleri ile senkronize olarak \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Bu hook\u2019u DOM\u2019daki tasar\u0131m\u0131 okuyup senkronize olarak yeniden ekrana yazd\u0131rmak i\u00e7in kullan\u0131n. <code class=\"language-javascript\">useLayoutEffect</code> i\u00e7inde planlanan de\u011fi\u015fiklikler, taray\u0131c\u0131 daha \u00e7izim yapmaya f\u0131rsat bulamadan, senkronize olarak temizlenecektir.</p>\n<p>G\u00f6r\u00fcnt\u00fcdeki g\u00fcncellemeleri geciktirmekten ka\u00e7\u0131nmak i\u00e7in, m\u00fcmk\u00fcn oldu\u011funda standart <code class=\"language-javascript\">useEffect</code> kullan\u0131m\u0131n\u0131 tercih edin.</p>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Kodunuzu class bile\u015fenlerden fonksiyonel bile\u015fenlere ta\u015f\u0131yorsan\u0131z, <code class=\"language-javascript\">useLayoutEffect</code>\u2018in <code class=\"language-javascript\">componentDidMount</code> ve <code class=\"language-javascript\">componentDidUpdate</code> ile ayn\u0131 a\u015famada \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131n\u0131 unutmay\u0131n. Ancak, <strong>biz <code class=\"language-javascript\">useEffect</code> ile ba\u015flaman\u0131z\u0131</strong> ve yine de problem ya\u015farsan\u0131z <code class=\"language-javascript\">useLayoutEffect</code>\u2018i denemenizi tavsiye ediyoruz. </p>\n<p>Server rendering kullan\u0131yorsan\u0131z, unutmay\u0131n ki ne <code class=\"language-javascript\">useLayoutEffect</code> ne de <code class=\"language-javascript\">useEffect</code> JavaScript indirilmeden \u00e7al\u0131\u015ft\u0131r\u0131lamaz. Bu y\u00fczden React, server-rendered bir bile\u015fen <code class=\"language-javascript\">useLayoutEffect</code> kullan\u0131ld\u0131\u011f\u0131nda uyar\u0131 verir. Bunu d\u00fczeltmek i\u00e7in, ya bu k\u0131s\u0131mdaki kodu <code class=\"language-javascript\">useEffect</code> i\u00e7ine ta\u015f\u0131y\u0131n (e\u011fer ilk render i\u00e7in gerekli de\u011filse), ya da bu bile\u015fenin g\u00f6sterilmesini istemci ekrana yazd\u0131rana kadar geciktirin (e\u011fer HTML <code class=\"language-javascript\">useLayoutEffect</code> \u00e7al\u0131\u015fana kadar bozuk g\u00f6r\u00fcn\u00fcyorsa).</p>\n<p>Serverda render edilen HTML\u2019den layout efektlerine ihtiyac\u0131 olan bir bile\u015feni hari\u00e7 tutmak i\u00e7in,  <code class=\"language-javascript\">showChild &amp;&amp; &lt;Child /&gt;</code> \u015feklinde ko\u015fullu olarak ekrana yazd\u0131r\u0131n ve g\u00f6r\u00fcnt\u00fclenmesini <code class=\"language-javascript\">useEffect(() =&gt; { setShowChild(true); }, [])</code> ile geciktirin. Bu sayede aray\u00fcz, hydration i\u015fleminden \u00f6nce bozuk g\u00f6r\u00fcnmeyecektir.</p>\n</div>\n<h3 id=\"usedebugvalue\"><a class=\"anchor\" href=\"/react/hooks-reference#usedebugvalue\"></a><code class=\"language-javascript\">useDebugValue</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">useDebugValue</code> custom hook\u2019lar i\u00e7in React DevTools i\u00e7inde bir etiket g\u00f6stermek i\u00e7in kullan\u0131labilir.</p>\n<p>\u00d6rne\u011fin, <a href=\"/react/hooks-custom\">\u201cBuilding Your Own Hooks\u201d</a> sayfas\u0131ndaki <code class=\"language-javascript\">useFriendStatus</code> hook\u2019unu d\u00fc\u015f\u00fcn\u00fcn:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useFriendStatus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">friendID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isOnline<span class=\"token punctuation\">,</span> setIsOnline<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// DevTools i\u00e7inde bu hook yan\u0131nda etiket g\u00f6ster</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u00d6rnek: \"FriendStatus: Online\"</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>isOnline <span class=\"token operator\">?</span> <span class=\"token string\">'Online'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Offline'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> isOnline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Her \u00f6zel hook\u2019a debug de\u011feri eklemenizi \u00f6nermiyoruz. Bu hook, payla\u015f\u0131lan k\u00fct\u00fcphanelerin bir par\u00e7as\u0131 olan custom hook\u2019lar i\u00e7in en \u00e7ok de\u011fere sahiptir.</p>\n</div>\n<h4 id=\"defer-formatting-debug-values\"><a class=\"anchor\" href=\"/react/hooks-reference#defer-formatting-debug-values\"></a>Debug de\u011ferlerini bi\u00e7imlendirmeyi geciktirin </h4>\n<p>Baz\u0131 durumlarda bir de\u011feri ekran i\u00e7in bi\u00e7imlendirmek a\u011f\u0131r bir i\u015flem olabilir. Ayr\u0131ca bu i\u015flem, Hook denetlenmeyecekse gereksizdir.</p>\n<p>Bu sebepten dolay\u0131 <code class=\"language-javascript\">useDebugValue</code> opsiyonel olarak bir bi\u00e7imlendirme fonksiyonunu ikinci parametre olarak al\u0131r. Bu fonksiyon yaln\u0131zca Hook denetlendi\u011finde \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Debug de\u011ferini parametre olarak al\u0131r ve bi\u00e7imlendirilmi\u015f de\u011feri d\u00f6nd\u00fcr\u00fcr.</p>\n<p>\u00d6rne\u011fin bir <code class=\"language-javascript\">Date</code> de\u011feri d\u00f6nd\u00fcren bir custom hook <code class=\"language-javascript\">toDateString</code> fonksiyonunu, a\u015fa\u011f\u0131daki bi\u00e7imlendirici fonksiyonu girerek gereksizce \u00e7a\u011f\u0131rmaktan ka\u00e7\u0131nabilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useDebugValue</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token parameter\">date</span> <span class=\"token operator\">=&gt;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">toDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"usedeferredvalue\"><a class=\"anchor\" href=\"/react/hooks-reference#usedeferredvalue\"></a><code class=\"language-javascript\">useDeferredValue</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> deferredValue <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useDeferredValue</code> accepts a value and returns a new copy of the value that will defer to more urgent updates. If the current render is the result of an urgent update, like user input, React will return the previous value and then render the new value after the urgent render has completed.</p>\n<p>This hook is similar to user-space hooks which use debouncing or throttling to defer updates. The benefits to using <code class=\"language-javascript\">useDeferredValue</code> is that React will work on the update as soon as other work finishes (instead of waiting for an arbitrary amount of time), and like <a href=\"/react/react-api#starttransition\"><code class=\"language-javascript\">startTransition</code></a>, deferred values can suspend without triggering an unexpected fallback for existing content.</p>\n<h4 id=\"memoizing-deferred-children\"><a class=\"anchor\" href=\"/react/hooks-reference#memoizing-deferred-children\"></a>Memoizing deferred children </h4>\n<p><code class=\"language-javascript\">useDeferredValue</code> only defers the value that you pass to it. If you want to prevent a child component from re-rendering during an urgent update, you must also memoize that component with <a href=\"/react/react-api#reactmemo\"><code class=\"language-javascript\">React.memo</code></a> or <a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">React.useMemo</code></a>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Typeahead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token function\">useSearchQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> deferredQuery <span class=\"token operator\">=</span> <span class=\"token function\">useDeferredValue</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Memoizing tells React to only re-render when deferredQuery changes,</span>\n  <span class=\"token comment\">// not when query changes.</span>\n  <span class=\"token keyword\">const</span> suggestions <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SearchSuggestions</span></span> <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>deferredQuery<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>deferredQuery<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SearchInput</span></span> <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Loading results...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>suggestions<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Memoizing the children tells React that it only needs to re-render them when <code class=\"language-javascript\">deferredQuery</code> changes and not when <code class=\"language-javascript\">query</code> changes. This caveat is not unique to <code class=\"language-javascript\">useDeferredValue</code>, and it\u2019s the same pattern you would use with similar hooks that use debouncing or throttling.</p>\n<h3 id=\"usetransition\"><a class=\"anchor\" href=\"/react/hooks-reference#usetransition\"></a><code class=\"language-javascript\">useTransition</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isPending<span class=\"token punctuation\">,</span> startTransition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Returns a stateful value for the pending state of the transition, and a function to start it.</p>\n<p><code class=\"language-javascript\">startTransition</code> lets you mark updates in the provided callback as transitions:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-javascript\">isPending</code> indicates when a transition is active to show a pending state:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isPending<span class=\"token punctuation\">,</span> startTransition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=&gt;</span> c <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>Updates in a transition yield to more urgent updates such as clicks.</p>\n<p>Updates in a transition will not show a fallback for re-suspended content. This allows the user to continue interacting with the current content while rendering the update.</p>\n</div>\n<h3 id=\"useid\"><a class=\"anchor\" href=\"/react/hooks-reference#useid\"></a><code class=\"language-javascript\">useId</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useId</code> is a hook for generating unique IDs that are stable across the server and client, while avoiding hydration mismatches.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p><code class=\"language-javascript\">useId</code> is <strong>not</strong> for generating <a href=\"/react/lists-and-keys#keys\">keys in a list</a>. Keys should be generated from your data.</p>\n</div>\n<p>For a basic example, pass the <code class=\"language-javascript\">id</code> directly to the elements that need it:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Checkbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Do you like React?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>react<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For multiple IDs in the same component, append a suffix using the same <code class=\"language-javascript\">id</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">NameFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-firstName'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">First Name</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-firstName'</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-lastName'</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Last Name</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'-lastName'</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p><code class=\"language-javascript\">useId</code> generates a string that includes the <code class=\"language-javascript\">:</code> token. This helps ensure that the token is unique, but is not supported in CSS selectors or APIs like <code class=\"language-javascript\">querySelectorAll</code>.</p>\n<p><code class=\"language-javascript\">useId</code> supports an <code class=\"language-javascript\">identifierPrefix</code> to prevent collisions in multi-root apps. To configure, see the options for <a href=\"/react/react-dom-client#hydrateroot\"><code class=\"language-javascript\">hydrateRoot</code></a> and <a href=\"/react/react-dom-server\"><code class=\"language-javascript\">ReactDOMServer</code></a>.</p>\n</div>\n<h2 id=\"library-hooks\"><a class=\"anchor\" href=\"/react/hooks-reference#library-hooks\"></a>Library Hooks </h2>\n<p>The following Hooks are provided for library authors to integrate libraries deeply into the React model, and are not typically used in application code.</p>\n<h3 id=\"usesyncexternalstore\"><a class=\"anchor\" href=\"/react/hooks-reference#usesyncexternalstore\"></a><code class=\"language-javascript\">useSyncExternalStore</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">useSyncExternalStore</span><span class=\"token punctuation\">(</span>subscribe<span class=\"token punctuation\">,</span> getSnapshot<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> getServerSnapshot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">useSyncExternalStore</code> is a hook recommended for reading and subscribing from external data sources in a way that\u2019s compatible with concurrent rendering features like selective hydration and time slicing.</p>\n<p>This method returns the value of the store and accepts three arguments:</p>\n<ul>\n<li><code class=\"language-javascript\">subscribe</code>: function to register a callback that is called whenever the store changes.</li>\n<li><code class=\"language-javascript\">getSnapshot</code>: function that returns the current value of the store.</li>\n<li><code class=\"language-javascript\">getServerSnapshot</code>: function that returns the snapshot used during server rendering.</li>\n</ul>\n<p>The most basic example simply subscribes to the entire store:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">useSyncExternalStore</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>subscribe<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span>getSnapshot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>However, you can also subscribe to a specific field:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> selectedField <span class=\"token operator\">=</span> <span class=\"token function\">useSyncExternalStore</span><span class=\"token punctuation\">(</span>\n  store<span class=\"token punctuation\">.</span>subscribe<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">getSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>selectedField<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>When server rendering, you must serialize the store value used on the server, and provide it to <code class=\"language-javascript\">useSyncExternalStore</code>. React will use this snapshot during hydration to prevent server mismatches:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> selectedField <span class=\"token operator\">=</span> <span class=\"token function\">useSyncExternalStore</span><span class=\"token punctuation\">(</span>\n  store<span class=\"token punctuation\">.</span>subscribe<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">getSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>selectedField<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token constant\">INITIAL_SERVER_SNAPSHOT</span><span class=\"token punctuation\">.</span>selectedField<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p><code class=\"language-javascript\">getSnapshot</code> must return a cached value. If getSnapshot is called multiple times in a row, it must return the same exact value unless there was a store update in between.</p>\n<p>A shim is provided for supporting multiple React versions published as <code class=\"language-javascript\">use-sync-external-store/shim</code>. This shim will prefer <code class=\"language-javascript\">useSyncExternalStore</code> when available, and fallback to a user-space implementation when it\u2019s not.</p>\n<p>As a convenience, we also provide a version of the API with automatic support for memoizing the result of getSnapshot published as <code class=\"language-javascript\">use-sync-external-store/with-selector</code>.</p>\n</div>\n<h3 id=\"useinsertioneffect\"><a class=\"anchor\" href=\"/react/hooks-reference#useinsertioneffect\"></a><code class=\"language-javascript\">useInsertionEffect</code> </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useInsertionEffect</span><span class=\"token punctuation\">(</span>didUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The signature is identical to <code class=\"language-javascript\">useEffect</code>, but it fires synchronously <em>before</em> all DOM mutations. Use this to inject styles into the DOM before reading layout in <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a>. Since this hook is limited in scope, this hook does not have access to refs and cannot schedule updates.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p><code class=\"language-javascript\">useInsertionEffect</code> should be limited to css-in-js library authors. Prefer <a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code></a> or <a href=\"/react/hooks-reference#uselayouteffect\"><code class=\"language-javascript\">useLayoutEffect</code></a> instead.</p>\n</div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-reference.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-reference", "nav": ["/react/hooks-custom", "/react/hooks-faq"]}, {"key": "8. Hook'lar i\u00e7in SSS", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p><em>Hooks</em> are a new addition in React 16.8. They let you use state and other React features without writing a class.</p>\n<p>This page answers some of the frequently asked questions about <a href=\"/react/hooks-overview\">Hooks</a>.</p>\n<!--\n  if you ever need to regenerate this, this snippet in the devtools console might help:\n\n  $$('.anchor').map(a =>\n    `${' '.repeat(2 * +a.parentNode.nodeName.slice(1))}` +\n    `[${a.parentNode.textContent}](${a.getAttribute('href')})`\n  ).join('\\n')\n-->\n<ul>\n<li>\n<p><strong><a href=\"/react/hooks-faq#adoption-strategy\">Adoption Strategy</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#which-versions-of-react-include-hooks\">Which versions of React include Hooks?</a></li>\n<li><a href=\"/react/hooks-faq#do-i-need-to-rewrite-all-my-class-components\">Do I need to rewrite all my class components?</a></li>\n<li><a href=\"/react/hooks-faq#what-can-i-do-with-hooks-that-i-couldnt-with-classes\">What can I do with Hooks that I couldn\u2019t with classes?</a></li>\n<li><a href=\"/react/hooks-faq#how-much-of-my-react-knowledge-stays-relevant\">How much of my React knowledge stays relevant?</a></li>\n<li><a href=\"/react/hooks-faq#should-i-use-hooks-classes-or-a-mix-of-both\">Should I use Hooks, classes, or a mix of both?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-cover-all-use-cases-for-classes\">Do Hooks cover all use cases for classes?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-replace-render-props-and-higher-order-components\">Do Hooks replace render props and higher-order components?</a></li>\n<li><a href=\"/react/hooks-faq#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\">What do Hooks mean for popular APIs like Redux connect() and React Router?</a></li>\n<li><a href=\"/react/hooks-faq#do-hooks-work-with-static-typing\">Do Hooks work with static typing?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-test-components-that-use-hooks\">How to test components that use Hooks?</a></li>\n<li><a href=\"/react/hooks-faq#what-exactly-do-the-lint-rules-enforce\">What exactly do the lint rules enforce?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#from-classes-to-hooks\">From Classes to Hooks</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#how-do-lifecycle-methods-correspond-to-hooks\">How do lifecycle methods correspond to Hooks?</a></li>\n<li><a href=\"/react/hooks-faq#how-can-i-do-data-fetching-with-hooks\">How can I do data fetching with Hooks?</a></li>\n<li><a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">Is there something like instance variables?</a></li>\n<li><a href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\">Should I use one or many state variables?</a></li>\n<li><a href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\">Can I run an effect only on updates?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-get-the-previous-props-or-state\">How to get the previous props or state?</a></li>\n<li><a href=\"/react/hooks-faq#why-am-i-seeing-stale-props-or-state-inside-my-function\">Why am I seeing stale props or state inside my function?</a></li>\n<li><a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">How do I implement getDerivedStateFromProps?</a></li>\n<li><a href=\"/react/hooks-faq#is-there-something-like-forceupdate\">Is there something like forceUpdate?</a></li>\n<li><a href=\"/react/hooks-faq#can-i-make-a-ref-to-a-function-component\">Can I make a ref to a function component?</a></li>\n<li><a href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\">How can I measure a DOM node?</a></li>\n<li><a href=\"/react/hooks-faq#what-does-const-thing-setthing--usestate-mean\">What does const [thing, setThing] = useState() mean?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#performance-optimizations\">Performance Optimizations</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\">Can I skip an effect on updates?</a></li>\n<li><a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">Is it safe to omit functions from the list of dependencies?</a></li>\n<li><a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">What can I do if my effect dependencies change too often?</a></li>\n<li><a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\">How do I implement shouldComponentUpdate?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-memoize-calculations\">How to memoize calculations?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">How to create expensive objects lazily?</a></li>\n<li><a href=\"/react/hooks-faq#are-hooks-slow-because-of-creating-functions-in-render\">Are Hooks slow because of creating functions in render?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">How to avoid passing callbacks down?</a></li>\n<li><a href=\"/react/hooks-faq#how-to-read-an-often-changing-value-from-usecallback\">How to read an often-changing value from useCallback?</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"/react/hooks-faq#under-the-hood\">Under the Hood</a></strong></p>\n<ul>\n<li><a href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\">How does React associate Hook calls with components?</a></li>\n<li><a href=\"/react/hooks-faq#what-is-the-prior-art-for-hooks\">What is the prior art for Hooks?</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"adoption-strategy\"><a class=\"anchor\" href=\"/react/hooks-faq#adoption-strategy\"></a>Adoption Strategy </h2>\n<h3 id=\"which-versions-of-react-include-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#which-versions-of-react-include-hooks\"></a>Which versions of React include Hooks? </h3>\n<p>Starting with 16.8.0, React includes a stable implementation of React Hooks for:</p>\n<ul>\n<li>React DOM</li>\n<li>React Native</li>\n<li>React DOM Server</li>\n<li>React Test Renderer</li>\n<li>React Shallow Renderer</li>\n</ul>\n<p>Note that <strong>to enable Hooks, all React packages need to be 16.8.0 or higher</strong>. Hooks won\u2019t work if you forget to update, for example, React DOM.</p>\n<p><a class=\"external-link\" href=\"https://reactnative.dev/blog/2019/03/12/releasing-react-native-059\">React Native 0.59</a> and above support Hooks.</p>\n<h3 id=\"do-i-need-to-rewrite-all-my-class-components\"><a class=\"anchor\" href=\"/react/hooks-faq#do-i-need-to-rewrite-all-my-class-components\"></a>Do I need to rewrite all my class components? </h3>\n<p>No. There are <a href=\"/react/hooks-intro#gradual-adoption-strategy\">no plans</a> to remove classes from React \u2014 we all need to keep shipping products and can\u2019t afford rewrites. We recommend trying Hooks in new code.</p>\n<h3 id=\"what-can-i-do-with-hooks-that-i-couldnt-with-classes\"><a class=\"anchor\" href=\"/react/hooks-faq#what-can-i-do-with-hooks-that-i-couldnt-with-classes\"></a>What can I do with Hooks that I couldn\u2019t with classes? </h3>\n<p>Hooks offer a powerful and expressive new way to reuse functionality between components. <a href=\"/react/hooks-custom\">\u201cBuilding Your Own Hooks\u201d</a> provides a glimpse of what\u2019s possible. <a class=\"external-link\" href=\"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889\">This article</a> by a React core team member dives deeper into the new capabilities unlocked by Hooks.</p>\n<h3 id=\"how-much-of-my-react-knowledge-stays-relevant\"><a class=\"anchor\" href=\"/react/hooks-faq#how-much-of-my-react-knowledge-stays-relevant\"></a>How much of my React knowledge stays relevant? </h3>\n<p>Hooks are a more direct way to use the React features you already know \u2014 such as state, lifecycle, context, and refs. They don\u2019t fundamentally change how React works, and your knowledge of components, props, and top-down data flow is just as relevant.</p>\n<p>Hooks do have a learning curve of their own. If there\u2019s something missing in this documentation, <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org/issues/new\">raise an issue</a> and we\u2019ll try to help.</p>\n<h3 id=\"should-i-use-hooks-classes-or-a-mix-of-both\"><a class=\"anchor\" href=\"/react/hooks-faq#should-i-use-hooks-classes-or-a-mix-of-both\"></a>Should I use Hooks, classes, or a mix of both? </h3>\n<p>When you\u2019re ready, we\u2019d encourage you to start trying Hooks in new components you write. Make sure everyone on your team is on board with using them and familiar with this documentation. We don\u2019t recommend rewriting your existing classes to Hooks unless you planned to rewrite them anyway (e.g. to fix bugs).</p>\n<p>You can\u2019t use Hooks <em>inside</em> a class component, but you can definitely mix classes and function components with Hooks in a single tree. Whether a component is a class or a function that uses Hooks is an implementation detail of that component. In the longer term, we expect Hooks to be the primary way people write React components.</p>\n<h3 id=\"do-hooks-cover-all-use-cases-for-classes\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-cover-all-use-cases-for-classes\"></a>Do Hooks cover all use cases for classes? </h3>\n<p>Our goal is for Hooks to cover all use cases for classes as soon as possible. There are no Hook equivalents to the uncommon <code class=\"language-javascript\">getSnapshotBeforeUpdate</code>, <code class=\"language-javascript\">getDerivedStateFromError</code> and <code class=\"language-javascript\">componentDidCatch</code> lifecycles yet, but we plan to add them soon.</p>\n<h3 id=\"do-hooks-replace-render-props-and-higher-order-components\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-replace-render-props-and-higher-order-components\"></a>Do Hooks replace render props and higher-order components? </h3>\n<p>Often, render props and higher-order components render only a single child. We think Hooks are a simpler way to serve this use case. There is still a place for both patterns (for example, a virtual scroller component might have a <code class=\"language-javascript\">renderItem</code> prop, or a visual container component might have its own DOM structure). But in most cases, Hooks will be sufficient and can help reduce nesting in your tree.</p>\n<h3 id=\"what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\"><a class=\"anchor\" href=\"/react/hooks-faq#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\"></a>What do Hooks mean for popular APIs like Redux <code class=\"language-javascript\">connect()</code> and React Router? </h3>\n<p>You can continue to use the exact same APIs as you always have; they\u2019ll continue to work.</p>\n<p>React Redux since v7.1.0 <a class=\"external-link\" href=\"https://react-redux.js.org/api/hooks\">supports Hooks API</a> and exposes hooks like <code class=\"language-javascript\">useDispatch</code> or <code class=\"language-javascript\">useSelector</code>.</p>\n<p>React Router <a class=\"external-link\" href=\"https://reacttraining.com/react-router/web/api/Hooks\">supports hooks</a> since v5.1.</p>\n<p>Other libraries might support hooks in the future too.</p>\n<h3 id=\"do-hooks-work-with-static-typing\"><a class=\"anchor\" href=\"/react/hooks-faq#do-hooks-work-with-static-typing\"></a>Do Hooks work with static typing? </h3>\n<p>Hooks were designed with static typing in mind. Because they\u2019re functions, they are easier to type correctly than patterns like higher-order components. The latest Flow and TypeScript React definitions include support for React Hooks.</p>\n<p>Importantly, custom Hooks give you the power to constrain React API if you\u2019d like to type them more strictly in some way. React gives you the primitives, but you can combine them in different ways than what we provide out of the box.</p>\n<h3 id=\"how-to-test-components-that-use-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-test-components-that-use-hooks\"></a>How to test components that use Hooks? </h3>\n<p>From React\u2019s point of view, a component using Hooks is just a regular component. If your testing solution doesn\u2019t rely on React internals, testing components with Hooks shouldn\u2019t be different from how you normally test components.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p><a href=\"/react/testing-recipes\">Testing Recipes</a> include many examples that you can copy and paste.</p>\n</div>\n<p>For example, let\u2019s say we have this counter component:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Click me\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We\u2019ll test it using React DOM. To make sure that the behavior matches what happens in the browser, we\u2019ll wrap the code rendering and updating it into <a href=\"/react/test-utils#act\"><code class=\"language-javascript\">ReactTestUtils.act()</code></a> calls:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render and update a counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Test first render and effect</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Test second render and effect</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The calls to <code class=\"language-javascript\">act()</code> will also flush the effects inside of them.</p>\n<p>If you need to test a custom Hook, you can do so by creating a component in your test, and using your Hook from it. Then you can test the component you wrote.</p>\n<p>To reduce the boilerplate, we recommend using <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a> which is designed to encourage writing tests that use your components as the end users do.</p>\n<p>For more information, check out <a href=\"/react/testing-recipes\">Testing Recipes</a>.</p>\n<h3 id=\"what-exactly-do-the-lint-rules-enforce\"><a class=\"anchor\" href=\"/react/hooks-faq#what-exactly-do-the-lint-rules-enforce\"></a>What exactly do the <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">lint rules</a> enforce? </h3>\n<p>We provide an <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">ESLint plugin</a> that enforces <a href=\"/react/hooks-rules\">rules of Hooks</a> to avoid bugs. It assumes that any function starting with \u201d<code class=\"language-javascript\">use</code>\u201d and a capital letter right after it is a Hook. We recognize this heuristic isn\u2019t perfect and there may be some false positives, but without an ecosystem-wide convention there is just no way to make Hooks work well \u2014 and longer names will discourage people from either adopting Hooks or following the convention.</p>\n<p>In particular, the rule enforces that:</p>\n<ul>\n<li>Calls to Hooks are either inside a <code class=\"language-javascript\">PascalCase</code> function (assumed to be a component) or another <code class=\"language-javascript\">useSomething</code> function (assumed to be a custom Hook).</li>\n<li>Hooks are called in the same order on every render.</li>\n</ul>\n<p>There are a few more heuristics, and they might change over time as we fine-tune the rule to balance finding bugs with avoiding false positives.</p>\n<h2 id=\"from-classes-to-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#from-classes-to-hooks\"></a>From Classes to Hooks </h2>\n<h3 id=\"how-do-lifecycle-methods-correspond-to-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-lifecycle-methods-correspond-to-hooks\"></a>How do lifecycle methods correspond to Hooks? </h3>\n<ul>\n<li><code class=\"language-javascript\">constructor</code>: Function components don\u2019t need a constructor. You can initialize the state in the <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code></a> call. If computing the initial state is expensive, you can pass a function to <code class=\"language-javascript\">useState</code>.</li>\n<li><code class=\"language-javascript\">getDerivedStateFromProps</code>: Schedule an update <a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">while rendering</a> instead.</li>\n<li><code class=\"language-javascript\">shouldComponentUpdate</code>: See <code class=\"language-javascript\">React.memo</code> <a href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\">below</a>.</li>\n<li><code class=\"language-javascript\">render</code>: This is the function component body itself.</li>\n<li><code class=\"language-javascript\">componentDidMount</code>, <code class=\"language-javascript\">componentDidUpdate</code>, <code class=\"language-javascript\">componentWillUnmount</code>: The <a href=\"/react/hooks-reference#useeffect\"><code class=\"language-javascript\">useEffect</code> Hook</a> can express all combinations of these (including <a href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\">less</a> <a href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\">common</a> cases).</li>\n<li><code class=\"language-javascript\">getSnapshotBeforeUpdate</code>, <code class=\"language-javascript\">componentDidCatch</code> and <code class=\"language-javascript\">getDerivedStateFromError</code>: There are no Hook equivalents for these methods yet, but they will be added soon.</li>\n</ul>\n<h3 id=\"how-can-i-do-data-fetching-with-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#how-can-i-do-data-fetching-with-hooks\"></a>How can I do data fetching with Hooks? </h3>\n<p>Here is a <a class=\"external-link\" href=\"https://codesandbox.io/s/jvvkoo8pq3\">small demo</a> to get you started. To learn more, check out <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">this article</a> about data fetching with Hooks.</p>\n<h3 id=\"is-there-something-like-instance-variables\"><a class=\"anchor\" href=\"/react/hooks-faq#is-there-something-like-instance-variables\"></a>Is there something like instance variables? </h3>\n<p>Yes! The <a href=\"/react/hooks-reference#useref\"><code class=\"language-javascript\">useRef()</code></a> Hook isn\u2019t just for DOM refs. The \u201cref\u201d object is a generic container whose <code class=\"language-javascript\">current</code> property is mutable and can hold any value, similar to an instance property on a class.</p>\n<p>You can write to it from inside <code class=\"language-javascript\">useEffect</code>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> intervalRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    intervalRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If we just wanted to set an interval, we wouldn\u2019t need the ref (<code class=\"language-javascript\">id</code> could be local to the effect), but it\u2019s useful if we want to clear the interval from an event handler:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleCancelClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Conceptually, you can think of refs as similar to instance variables in a class. Unless you\u2019re doing <a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">lazy initialization</a>, avoid setting refs during rendering \u2014 this can lead to surprising behavior. Instead, typically you want to modify refs in event handlers and effects.</p>\n<h3 id=\"should-i-use-one-or-many-state-variables\"><a class=\"anchor\" href=\"/react/hooks-faq#should-i-use-one-or-many-state-variables\"></a>Should I use one or many state variables? </h3>\n<p>If you\u2019re coming from classes, you might be tempted to always call <code class=\"language-javascript\">useState()</code> once and put all state into a single object. You can do it if you\u2019d like. Here is an example of a component that follows the mouse movement. We keep its position and size in the local state:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now let\u2019s say we want to write some logic that changes <code class=\"language-javascript\">left</code> and <code class=\"language-javascript\">top</code> when the user moves their mouse. Note how we have to merge these fields into the previous state object manually:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Spreading \"...state\" ensures we don't \"lose\" width and height</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Note: this implementation is a bit simplified</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> handleWindowMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>This is because when we update a state variable, we <em>replace</em> its value. This is different from <code class=\"language-javascript\">this.setState</code> in a class, which <em>merges</em> the updated fields into the object.</p>\n<p>If you miss automatic merging, you could write a custom <code class=\"language-javascript\">useLegacyState</code> Hook that merges object state updates. However, <strong>we recommend to split state into multiple state variables based on which values tend to change together.</strong></p>\n<p>For example, we could split our component state into <code class=\"language-javascript\">position</code> and <code class=\"language-javascript\">size</code> objects, and always replace the <code class=\"language-javascript\">position</code> with no need for merging:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">handleWindowMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Separating independent state variables also has another benefit. It makes it easy to later extract some related logic into a custom Hook, for example:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">,</span> setSize<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> setPosition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> position<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note how we were able to move the <code class=\"language-javascript\">useState</code> call for the <code class=\"language-javascript\">position</code> state variable and the related effect into a custom Hook without changing their code. If all state was in a single object, extracting it would be more difficult.</p>\n<p>Both putting all state in a single <code class=\"language-javascript\">useState</code> call, and having a <code class=\"language-javascript\">useState</code> call per each field can work. Components tend to be most readable when you find a balance between these two extremes, and group related state into a few independent state variables. If the state logic becomes complex, we recommend <a href=\"/react/hooks-reference#usereducer\">managing it with a reducer</a> or a custom Hook.</p>\n<h3 id=\"can-i-run-an-effect-only-on-updates\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-run-an-effect-only-on-updates\"></a>Can I run an effect only on updates? </h3>\n<p>This is a rare use case. If you need it, you can <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">use a mutable ref</a> to manually store a boolean value corresponding to whether you are on the first or a subsequent render, then check that flag in your effect. (If you find yourself doing this often, you could create a custom Hook for it.)</p>\n<h3 id=\"how-to-get-the-previous-props-or-state\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-get-the-previous-props-or-state\"></a>How to get the previous props or state? </h3>\n<p>There are two cases in which you might want to get previous props or state.</p>\n<p>Sometimes, you need previous props to <strong>clean up an effect.</strong> For example, you might have an effect that subscribes to a socket based on the <code class=\"language-javascript\">userId</code> prop. If the <code class=\"language-javascript\">userId</code> prop changes, you want to unsubscribe from the <em>previous</em> <code class=\"language-javascript\">userId</code> and subscribe to the <em>next</em> one. You don\u2019t need to do anything special for this to work:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">subscribeToSocket</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> ChatAPI<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeFromSocket</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the above example, if <code class=\"language-javascript\">userId</code> changes from <code class=\"language-javascript\">3</code> to <code class=\"language-javascript\">4</code>, <code class=\"language-javascript\">ChatAPI.unsubscribeFromSocket(3)</code> will run first, and then <code class=\"language-javascript\">ChatAPI.subscribeToSocket(4)</code> will run. There is no need to get \u201cprevious\u201d <code class=\"language-javascript\">userId</code> because the cleanup function will capture it in a closure.</p>\n<p>Other times, you might need to <strong>adjust state based on a change in props or other state</strong>. This is rarely needed and is usually a sign you have some duplicate or redundant state. However, in the rare case that you need this pattern, you can <a href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\">store previous state or props in state and update them during rendering</a>.</p>\n<p>We have previously suggested a custom Hook called <code class=\"language-javascript\">usePrevious</code> to hold the previous value. However, we\u2019ve found that most use cases fall into the two patterns described above. If your use case is different, you can <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">hold a value in a ref</a> and manually update it when needed. Avoid reading and updating refs during rendering because this makes your component\u2019s behavior difficult to predict and understand.</p>\n<h3 id=\"why-am-i-seeing-stale-props-or-state-inside-my-function\"><a class=\"anchor\" href=\"/react/hooks-faq#why-am-i-seeing-stale-props-or-state-inside-my-function\"></a>Why am I seeing stale props or state inside my function? </h3>\n<p>Any function inside a component, including event handlers and effects, \u201csees\u201d the props and state from the render it was created in. For example, consider code like this:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleAlertClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked on: '</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Click me\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleAlertClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Show alert\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you first click \u201cShow alert\u201d and then increment the counter, the alert will show the <code class=\"language-javascript\">count</code> variable <strong>at the time you clicked the \u201cShow alert\u201d button</strong>. This prevents bugs caused by the code assuming props and state don\u2019t change.</p>\n<p>If you intentionally want to read the <em>latest</em> state from some asynchronous callback, you could keep it in <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">a ref</a>, mutate it, and read from it.</p>\n<p>Finally, another possible reason you\u2019re seeing stale props or state is if you use the \u201cdependency array\u201d optimization but didn\u2019t correctly specify all the dependencies. For example, if an effect specifies <code class=\"language-javascript\">[]</code> as the second argument but reads <code class=\"language-javascript\">someProp</code> inside, it will keep \u201cseeing\u201d the initial value of <code class=\"language-javascript\">someProp</code>. The solution is to either remove the dependency array, or to fix it. Here\u2019s <a href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\">how you can deal with functions</a>, and here\u2019s <a href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\">other common strategies</a> to run effects less often without incorrectly skipping dependencies.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>We provide an <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> ESLint rule as a part of the <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> package. It warns when dependencies are specified incorrectly and suggests a fix.</p>\n</div>\n<h3 id=\"how-do-i-implement-getderivedstatefromprops\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-i-implement-getderivedstatefromprops\"></a>How do I implement <code class=\"language-javascript\">getDerivedStateFromProps</code>? </h3>\n<p>While you probably <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2018/06/07/you-probably-dont-need-derived-state.html\">don\u2019t need it</a>, in rare cases that you do (such as implementing a <code class=\"language-javascript\">&lt;Transition&gt;</code> component), you can update the state right during rendering. React will re-run the component with updated state immediately after exiting the first render so it wouldn\u2019t be expensive.</p>\n<p>Here, we store the previous value of the <code class=\"language-javascript\">row</code> prop in a state variable so that we can compare:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ScrollView</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>row<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isScrollingDown<span class=\"token punctuation\">,</span> setIsScrollingDown<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prevRow<span class=\"token punctuation\">,</span> setPrevRow<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">!==</span> prevRow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Row changed since last render. Update isScrollingDown.</span>\n    <span class=\"token function\">setIsScrollingDown</span><span class=\"token punctuation\">(</span>prevRow <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> row <span class=\"token operator\">&gt;</span> prevRow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setPrevRow</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Scrolling down: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isScrollingDown<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This might look strange at first, but an update during rendering is exactly what <code class=\"language-javascript\">getDerivedStateFromProps</code> has always been like conceptually.</p>\n<h3 id=\"is-there-something-like-forceupdate\"><a class=\"anchor\" href=\"/react/hooks-faq#is-there-something-like-forceupdate\"></a>Is there something like forceUpdate? </h3>\n<p>Both <code class=\"language-javascript\">useState</code> and <code class=\"language-javascript\">useReducer</code> Hooks <a href=\"/react/hooks-reference#bailing-out-of-a-state-update\">bail out of updates</a> if the next value is the same as the previous one. Mutating state in place and calling <code class=\"language-javascript\">setState</code> will not cause a re-render.</p>\n<p>Normally, you shouldn\u2019t mutate local state in React. However, as an escape hatch, you can use an incrementing counter to force a re-render even if the state has not changed:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ignored<span class=\"token punctuation\">,</span> forceUpdate<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">forceUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Try to avoid this pattern if possible.</p>\n<h3 id=\"can-i-make-a-ref-to-a-function-component\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-make-a-ref-to-a-function-component\"></a>Can I make a ref to a function component? </h3>\n<p>While you shouldn\u2019t need this often, you may expose some imperative methods to a parent component with the <a href=\"/react/hooks-reference#useimperativehandle\"><code class=\"language-javascript\">useImperativeHandle</code></a> Hook.</p>\n<h3 id=\"how-can-i-measure-a-dom-node\"><a class=\"anchor\" href=\"/react/hooks-faq#how-can-i-measure-a-dom-node\"></a>How can I measure a DOM node? </h3>\n<p>One rudimentary way to measure the position or size of a DOM node is to use a <a href=\"/react/refs-and-the-dom#callback-refs\">callback ref</a>. React will call that callback whenever the ref gets attached to a different node. Here is a <a class=\"external-link\" href=\"https://codesandbox.io/s/l7m0v5x4v9\">small demo</a>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">,</span> setHeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> measuredRef <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>measuredRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The above header is </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px tall</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We didn\u2019t choose <code class=\"language-javascript\">useRef</code> in this example because an object ref doesn\u2019t notify us about <em>changes</em> to the current ref value. Using a callback ref ensures that <a class=\"external-link\" href=\"https://codesandbox.io/s/818zzk8m78\">even if a child component displays the measured node later</a> (e.g. in response to a click), we still get notified about it in the parent component and can update the measurements.</p>\n<p>Note that we pass <code class=\"language-javascript\">[]</code> as a dependency array to <code class=\"language-javascript\">useCallback</code>. This ensures that our ref callback doesn\u2019t change between the re-renders, and so React won\u2019t call it unnecessarily.</p>\n<p>In this example, the callback ref will be called only when the component mounts and unmounts, since the rendered <code class=\"language-javascript\">&lt;h1&gt;</code> component stays present throughout any rerenders. If you want to be notified any time a component resizes, you may want to use <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\"><code class=\"language-javascript\">ResizeObserver</code></a> or a third-party Hook built on it.</p>\n<p>If you want, you can <a class=\"external-link\" href=\"https://codesandbox.io/s/m5o42082xy\">extract this logic</a> into a reusable Hook:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MeasureExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span>rect <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">The above header is </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">px tall</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> setRect<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setRect</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>rect<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"what-does-const-thing-setthing--usestate-mean\"><a class=\"anchor\" href=\"/react/hooks-faq#what-does-const-thing-setthing--usestate-mean\"></a>What does <code class=\"language-javascript\">const [thing, setThing] = useState()</code> mean? </h3>\n<p>If you\u2019re not familiar with this syntax, check out the <a href=\"/react/hooks-state#tip-what-do-square-brackets-mean\">explanation</a> in the State Hook documentation.</p>\n<h2 id=\"performance-optimizations\"><a class=\"anchor\" href=\"/react/hooks-faq#performance-optimizations\"></a>Performance Optimizations </h2>\n<h3 id=\"can-i-skip-an-effect-on-updates\"><a class=\"anchor\" href=\"/react/hooks-faq#can-i-skip-an-effect-on-updates\"></a>Can I skip an effect on updates? </h3>\n<p>Yes. See <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">conditionally firing an effect</a>. Note that forgetting to handle updates often <a href=\"/react/hooks-effect#explanation-why-effects-run-on-each-update\">introduces bugs</a>, which is why this isn\u2019t the default behavior.</p>\n<h3 id=\"is-it-safe-to-omit-functions-from-the-list-of-dependencies\"><a class=\"anchor\" href=\"/react/hooks-faq#is-it-safe-to-omit-functions-from-the-list-of-dependencies\"></a>Is it safe to omit functions from the list of dependencies? </h3>\n<p>Generally speaking, no.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 This is not safe (it calls `doSomething` which uses `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>It\u2019s difficult to remember which props or state are used by functions outside of the effect. This is why <strong>usually you\u2019ll want to declare functions needed by an effect <em>inside</em> of it.</strong> Then it\u2019s easy to see what values from the component scope that effect depends on:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> someProp <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someProp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>someProp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 OK (our effect only uses `someProp`)</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>If after that we still don\u2019t use any values from the component scope, it\u2019s safe to specify <code class=\"language-javascript\">[]</code>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 OK in this example because we don't use *any* values from component scope</span></span></code></pre></div>\n<p>Depending on your use case, there are a few more options described below.</p>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>We provide the <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/14920\"><code class=\"language-javascript\">exhaustive-deps</code></a> ESLint rule as a part of the <a class=\"external-link\" href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks#installation\"><code class=\"language-javascript\">eslint-plugin-react-hooks</code></a> package. It helps you find components that don\u2019t handle updates consistently.</p>\n</div>\n<p>Let\u2019s see why this matters.</p>\n<p>If you specify a <a href=\"/react/hooks-reference#conditionally-firing-an-effect\">list of dependencies</a> as the last argument to <code class=\"language-javascript\">useEffect</code>, <code class=\"language-javascript\">useLayoutEffect</code>, <code class=\"language-javascript\">useMemo</code>, <code class=\"language-javascript\">useCallback</code>, or <code class=\"language-javascript\">useImperativeHandle</code>, it must include all values that are used inside the callback and participate in the React data flow. That includes props, state, and anything derived from them.</p>\n<p>It is <strong>only</strong> safe to omit a function from the dependency list if nothing in it (or the functions called by it) references props, state, or values derived from them. This example has a bug:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uses productId prop</span></span>    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 Invalid because `fetchProduct` uses `productId`</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>The recommended fix is to move that function <em>inside</em> of your effect</strong>. That makes it easy to see which props or state your effect uses, and to ensure they\u2019re all declared:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>product<span class=\"token punctuation\">,</span> setProduct<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// By moving this function inside the effect, we can clearly see the values it uses.</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Valid because our effect only uses productId</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This also allows you to handle out-of-order responses with a local variable inside the effect:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://myapi/product/'</span> <span class=\"token operator\">+</span> productId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ignore<span class=\"token punctuation\">)</span> <span class=\"token function\">setProduct</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> ignore <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We moved the function inside the effect so it doesn\u2019t need to be in its dependency list.</p>\n<div class=\"blockquote\">\n<strong>Tip</strong>\n<p>Check out <a class=\"external-link\" href=\"https://codesandbox.io/s/jvvkoo8pq3\">this small demo</a> and <a class=\"external-link\" href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">this article</a> to learn more about data fetching with Hooks.</p>\n</div>\n<p><strong>If for some reason you <em>can\u2019t</em> move a function inside an effect, there are a few more options:</strong></p>\n<ul>\n<li><strong>You can try moving that function outside of your component</strong>. In that case, the function is guaranteed to not reference any props or state, and also doesn\u2019t need to be in the list of dependencies.</li>\n<li>If the function you\u2019re calling is a pure computation and is safe to call while rendering, you may <strong>call it outside of the effect instead,</strong> and make the effect depend on the returned value.</li>\n<li>As a last resort, you can <strong>add a function to effect dependencies but <em>wrap its definition</em></strong> into the <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a> Hook. This ensures it doesn\u2019t change on every render unless <em>its own</em> dependencies also change:</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProductPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> productId <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// \u2705 Wrap with useCallback to avoid change on every render</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> fetchProduct <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// ... Does something with productId ...</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>productId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 All useCallback dependencies are specified</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProductDetails</span></span> <span class=\"token attr-name\">fetchProduct</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fetchProduct<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ProductDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> fetchProduct <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fetchProduct<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 All useEffect dependencies are specified</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note that in the above example we <strong>need</strong> to keep the function in the dependencies list. This ensures that a change in the <code class=\"language-javascript\">productId</code> prop of <code class=\"language-javascript\">ProductPage</code> automatically triggers a refetch in the <code class=\"language-javascript\">ProductDetails</code> component.</p>\n<h3 id=\"what-can-i-do-if-my-effect-dependencies-change-too-often\"><a class=\"anchor\" href=\"/react/hooks-faq#what-can-i-do-if-my-effect-dependencies-change-too-often\"></a>What can I do if my effect dependencies change too often? </h3>\n<p>Sometimes, your effect may be using state that changes too often. You might be tempted to omit that state from a list of dependencies, but that usually leads to bugs:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This effect depends on the `count` state</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \ud83d\udd34 Bug: `count` is not specified as a dependency</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The empty set of dependencies, <code class=\"language-javascript\">[]</code>, means that the effect will only run once when the component mounts, and not on every re-render. The problem is that inside the <code class=\"language-javascript\">setInterval</code> callback, the value of <code class=\"language-javascript\">count</code> does not change, because we\u2019ve created a closure with the value of <code class=\"language-javascript\">count</code> set to <code class=\"language-javascript\">0</code> as it was when the effect callback ran. Every second, this callback then calls <code class=\"language-javascript\">setCount(0 + 1)</code>, so the count never goes above 1.</p>\n<p>Specifying <code class=\"language-javascript\">[count]</code> as a list of dependencies would fix the bug, but would cause the interval to be reset on every change. Effectively, each <code class=\"language-javascript\">setInterval</code> would get one chance to execute before being cleared (similar to a <code class=\"language-javascript\">setTimeout</code>.) That may not be desirable. To fix this, we can use the <a href=\"/react/hooks-reference#functional-updates\">functional update form of <code class=\"language-javascript\">setState</code></a>. It lets us specify <em>how</em> the state needs to change without referencing the <em>current</em> state:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=&gt;</span> c <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 This doesn't depend on `count` variable outside</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \u2705 Our effect doesn't use any variables in the component scope</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>(The identity of the <code class=\"language-javascript\">setCount</code> function is guaranteed to be stable so it\u2019s safe to omit.)</p>\n<p>Now, the <code class=\"language-javascript\">setInterval</code> callback executes once a second, but each time the inner call to <code class=\"language-javascript\">setCount</code> can use an up-to-date value for <code class=\"language-javascript\">count</code> (called <code class=\"language-javascript\">c</code> in the callback here.)</p>\n<p>In more complex cases (such as if one state depends on another state), try moving the state update logic outside the effect with the <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code> Hook</a>. <a class=\"external-link\" href=\"https://adamrackis.dev/state-and-use-reducer/\">This article</a> offers an example of how you can do this. <strong>The identity of the <code class=\"language-javascript\">dispatch</code> function from <code class=\"language-javascript\">useReducer</code> is always stable</strong> \u2014 even if the reducer function is declared inside the component and reads its props.</p>\n<p>As a last resort, if you want something like <code class=\"language-javascript\">this</code> in a class, you can <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">use a ref</a> to hold a mutable variable. Then you can write and read to it. For example:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Keep latest props in a ref.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> latestProps <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    latestProps<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token comment\">// Read latest props at any time</span></span><span class=\"gatsby-highlight-code-line\">      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>latestProps<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This effect never re-runs</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Only do this if you couldn\u2019t find a better alternative, as relying on mutation makes components less predictable. If there\u2019s a specific pattern that doesn\u2019t translate well, <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">file an issue</a> with a runnable example code and we can try to help.</p>\n<h3 id=\"how-do-i-implement-shouldcomponentupdate\"><a class=\"anchor\" href=\"/react/hooks-faq#how-do-i-implement-shouldcomponentupdate\"></a>How do I implement <code class=\"language-javascript\">shouldComponentUpdate</code>? </h3>\n<p>You can wrap a function component with <code class=\"language-javascript\">React.memo</code> to shallowly compare its props:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Button <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// your component</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>It\u2019s not a Hook because it doesn\u2019t compose like Hooks do. <code class=\"language-javascript\">React.memo</code> is equivalent to <code class=\"language-javascript\">PureComponent</code>, but it only compares props. (You can also add a second argument to specify a custom comparison function that takes the old and new props. If it returns true, the update is skipped.)</p>\n<p><code class=\"language-javascript\">React.memo</code> doesn\u2019t compare state because there is no single state object to compare. But you can make children pure too, or even <a href=\"/react/hooks-faq#how-to-memoize-calculations\">optimize individual children with <code class=\"language-javascript\">useMemo</code></a>.</p>\n<h3 id=\"how-to-memoize-calculations\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-memoize-calculations\"></a>How to memoize calculations? </h3>\n<p>The <a href=\"/react/hooks-reference#usememo\"><code class=\"language-javascript\">useMemo</code></a> Hook lets you cache calculations between multiple renders by \u201cremembering\u201d the previous computation:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> memoizedValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">computeExpensiveValue</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This code calls <code class=\"language-javascript\">computeExpensiveValue(a, b)</code>. But if the dependencies <code class=\"language-javascript\">[a, b]</code> haven\u2019t changed since the last value, <code class=\"language-javascript\">useMemo</code> skips calling it a second time and simply reuses the last value it returned.</p>\n<p>Remember that the function passed to <code class=\"language-javascript\">useMemo</code> runs during rendering. Don\u2019t do anything there that you wouldn\u2019t normally do while rendering. For example, side effects belong in <code class=\"language-javascript\">useEffect</code>, not <code class=\"language-javascript\">useMemo</code>.</p>\n<p><strong>You may rely on <code class=\"language-javascript\">useMemo</code> as a performance optimization, not as a semantic guarantee.</strong> In the future, React may choose to \u201cforget\u201d some previously memoized values and recalculate them on next render, e.g. to free memory for offscreen components. Write your code so that it still works without <code class=\"language-javascript\">useMemo</code> \u2014 and then add it to optimize performance. (For rare cases when a value must <em>never</em> be recomputed, you can <a href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\">lazily initialize</a> a ref.)</p>\n<p>Conveniently, <code class=\"language-javascript\">useMemo</code> also lets you skip an expensive re-render of a child:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Only re-rendered if `a` changes:</span>\n  <span class=\"token keyword\">const</span> child1 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child1</span></span> <span class=\"token attr-name\">a</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Only re-rendered if `b` changes:</span>\n  <span class=\"token keyword\">const</span> child2 <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Child2</span></span> <span class=\"token attr-name\">b</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child1<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>child2<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note that this approach won\u2019t work in a loop because Hook calls <a href=\"/react/hooks-rules\">can\u2019t</a> be placed inside loops. But you can extract a separate component for the list item, and call <code class=\"language-javascript\">useMemo</code> there.</p>\n<h3 id=\"how-to-create-expensive-objects-lazily\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-create-expensive-objects-lazily\"></a>How to create expensive objects lazily? </h3>\n<p><code class=\"language-javascript\">useMemo</code> lets you <a href=\"/react/hooks-faq#how-to-memoize-calculations\">memoize an expensive calculation</a> if the dependencies are the same. However, it only serves as a hint, and doesn\u2019t <em>guarantee</em> the computation won\u2019t re-run. But sometimes you need to be sure an object is only created once.</p>\n<p><strong>The first common use case is when creating the initial state is expensive:</strong></p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u26a0\ufe0f createRows() is called on every render</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To avoid re-creating the ignored initial state, we can pass a <strong>function</strong> to <code class=\"language-javascript\">useState</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Table</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u2705 createRows() is only called once</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">,</span> setRows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">createRows</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React will only call this function during the first render. See the <a href=\"/react/hooks-reference#usestate\"><code class=\"language-javascript\">useState</code> API reference</a>.</p>\n<p><strong>You might also occasionally want to avoid re-creating the <code class=\"language-javascript\">useRef()</code> initial value.</strong> For example, maybe you want to ensure some imperative class instance only gets created once:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \u26a0\ufe0f IntersectionObserver is created on every render</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-javascript\">useRef</code> <strong>does not</strong> accept a special function overload like <code class=\"language-javascript\">useState</code>. Instead, you can write your own function that creates and sets it lazily:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Image</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// \u2705 IntersectionObserver is created lazily once</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>onIntersect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// When you need it, call getObserver()</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This avoids creating an expensive object until it\u2019s truly needed for the first time. If you use Flow or TypeScript, you can also give <code class=\"language-javascript\">getObserver()</code> a non-nullable type for convenience.</p>\n<h3 id=\"are-hooks-slow-because-of-creating-functions-in-render\"><a class=\"anchor\" href=\"/react/hooks-faq#are-hooks-slow-because-of-creating-functions-in-render\"></a>Are Hooks slow because of creating functions in render? </h3>\n<p>No. In modern browsers, the raw performance of closures compared to classes doesn\u2019t differ significantly except in extreme scenarios.</p>\n<p>In addition, consider that the design of Hooks is more efficient in a couple ways:</p>\n<ul>\n<li>Hooks avoid a lot of the overhead that classes require, like the cost of creating class instances and binding event handlers in the constructor.</li>\n<li><strong>Idiomatic code using Hooks doesn\u2019t need the deep component tree nesting</strong> that is prevalent in codebases that use higher-order components, render props, and context. With smaller component trees, React has less work to do.</li>\n</ul>\n<p>Traditionally, performance concerns around inline functions in React have been related to how passing new callbacks on each render breaks <code class=\"language-javascript\">shouldComponentUpdate</code> optimizations in child components. Hooks approach this problem from three sides.</p>\n<ul>\n<li>\n<p>The <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a> Hook lets you keep the same callback reference between re-renders so that <code class=\"language-javascript\">shouldComponentUpdate</code> continues to work:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// Will not change unless `a` or `b` changes</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> memoizedCallback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>The <a href=\"/react/hooks-faq#how-to-memoize-calculations\"><code class=\"language-javascript\">useMemo</code></a> Hook makes it easier to control when individual children update, reducing the need for pure components.</li>\n<li>Finally, the <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> Hook reduces the need to pass callbacks deeply, as explained below.</li>\n</ul>\n<h3 id=\"how-to-avoid-passing-callbacks-down\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\"></a>How to avoid passing callbacks down? </h3>\n<p>We\u2019ve found that most people don\u2019t enjoy manually passing callbacks through every level of a component tree. Even though it is more explicit, it can feel like a lot of \u201cplumbing\u201d.</p>\n<p>In large component trees, an alternative we recommend is to pass down a <code class=\"language-javascript\">dispatch</code> function from <a href=\"/react/hooks-reference#usereducer\"><code class=\"language-javascript\">useReducer</code></a> via context:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> TodosDispatch <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TodosApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// Note: `dispatch` won't change between re-renders</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>todosReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TodosDispatch.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>dispatch<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeepTree</span></span> <span class=\"token attr-name\">todos</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TodosDispatch.Provider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Any child in the tree inside <code class=\"language-javascript\">TodosApp</code> can use the <code class=\"language-javascript\">dispatch</code> function to pass actions up to <code class=\"language-javascript\">TodosApp</code>:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">DeepChild</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// If we want to perform an action, we can get dispatch from context.</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>TodosDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Add todo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is both more convenient from the maintenance perspective (no need to keep forwarding callbacks), and avoids the callback problem altogether. Passing <code class=\"language-javascript\">dispatch</code> down like this is the recommended pattern for deep updates.</p>\n<p>Note that you can still choose whether to pass the application <em>state</em> down as props (more explicit) or as context (more convenient for very deep updates). If you use context to pass down the state too, use two different context types \u2014 the <code class=\"language-javascript\">dispatch</code> context never changes, so components that read it don\u2019t need to rerender unless they also need the application state.</p>\n<h3 id=\"how-to-read-an-often-changing-value-from-usecallback\"><a class=\"anchor\" href=\"/react/hooks-faq#how-to-read-an-often-changing-value-from-usecallback\"></a>How to read an often-changing value from <code class=\"language-javascript\">useCallback</code>? </h3>\n<div class=\"blockquote\">\n<strong>Note</strong>\n<p>We recommend to <a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">pass <code class=\"language-javascript\">dispatch</code> down in context</a> rather than individual callbacks in props. The approach below is only mentioned here for completeness and as an escape hatch.</p>\n</div>\n<p>In some rare cases you might need to memoize a callback with <a href=\"/react/hooks-reference#usecallback\"><code class=\"language-javascript\">useCallback</code></a> but the memoization doesn\u2019t work very well because the inner function has to be re-created too often. If the function you\u2019re memoizing is an event handler and isn\u2019t used during rendering, you can use <a href=\"/react/hooks-faq#is-there-something-like-instance-variables\">ref as an instance variable</a>, and save the last committed value into it manually:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> textRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    textRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Write it to the ref</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> currentText <span class=\"token operator\">=</span> textRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Read it from the ref</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>currentText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>textRef<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Don't recreate handleSubmit like [text] would do</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is a rather convoluted pattern but it shows that you can do this escape hatch optimization if you need it. It\u2019s more bearable if you extract it to a custom Hook:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">,</span> updateText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Will be memoized even if `text` changes:</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> handleSubmit <span class=\"token operator\">=</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>text<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">updateText</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExpensiveTree</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">useEventCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> dependencies</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot call an event handler while rendering.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    ref<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> fn<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>fn<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>dependencies<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fn <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>ref<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In either case, we <strong>don\u2019t recommend this pattern</strong> and only show it here for completeness. Instead, it is preferable to <a href=\"/react/hooks-faq#how-to-avoid-passing-callbacks-down\">avoid passing callbacks deep down</a>.</p>\n<h2 id=\"under-the-hood\"><a class=\"anchor\" href=\"/react/hooks-faq#under-the-hood\"></a>Under the Hood </h2>\n<h3 id=\"how-does-react-associate-hook-calls-with-components\"><a class=\"anchor\" href=\"/react/hooks-faq#how-does-react-associate-hook-calls-with-components\"></a>How does React associate Hook calls with components? </h3>\n<p>React keeps track of the currently rendering component. Thanks to the <a href=\"/react/hooks-rules\">Rules of Hooks</a>, we know that Hooks are only called from React components (or custom Hooks \u2014 which are also only called from React components).</p>\n<p>There is an internal list of \u201cmemory cells\u201d associated with each component. They\u2019re just JavaScript objects where we can put some data. When you call a Hook like <code class=\"language-javascript\">useState()</code>, it reads the current cell (or initializes it during the first render), and then moves the pointer to the next one. This is how multiple <code class=\"language-javascript\">useState()</code> calls each get independent local state.</p>\n<h3 id=\"what-is-the-prior-art-for-hooks\"><a class=\"anchor\" href=\"/react/hooks-faq#what-is-the-prior-art-for-hooks\"></a>What is the prior art for Hooks? </h3>\n<p>Hooks synthesize ideas from several different sources:</p>\n<ul>\n<li>Our old experiments with functional APIs in the <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State\">react-future</a> repository.</li>\n<li>React community\u2019s experiments with render prop APIs, including <a class=\"external-link\" href=\"https://github.com/ryanflorence\">Ryan Florence</a>\u2019s <a class=\"external-link\" href=\"https://github.com/reactions/component\">Reactions Component</a>.</li>\n<li><a class=\"external-link\" href=\"https://github.com/trueadm\">Dominic Gannaway</a>\u2019s <a class=\"external-link\" href=\"https://gist.github.com/trueadm/17beb64288e30192f3aa29cad0218067\"><code class=\"language-javascript\">adopt</code> keyword</a> proposal as a sugar syntax for render props.</li>\n<li>State variables and state cells in <a class=\"external-link\" href=\"http://displayscript.org/introduction.html\">DisplayScript</a>.</li>\n<li><a class=\"external-link\" href=\"https://reasonml.github.io/reason-react/docs/en/state-actions-reducer.html\">Reducer components</a> in ReasonReact.</li>\n<li><a class=\"external-link\" href=\"http://reactivex.io/rxjs/class/es6/Subscription.js~Subscription.html\">Subscriptions</a> in Rx.</li>\n<li><a class=\"external-link\" href=\"https://github.com/ocamllabs/ocaml-effects-tutorial#2-effectful-computations-in-a-pure-setting\">Algebraic effects</a> in Multicore OCaml.</li>\n</ul>\n<p><a class=\"external-link\" href=\"https://github.com/sebmarkbage\">Sebastian Markb\u00e5ge</a> came up with the original design for Hooks, later refined by <a class=\"external-link\" href=\"https://github.com/acdlite\">Andrew Clark</a>, <a class=\"external-link\" href=\"https://github.com/sophiebits\">Sophie Alpert</a>, <a class=\"external-link\" href=\"https://github.com/trueadm\">Dominic Gannaway</a>, and other members of the React team.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/hooks-faq.md\">Edit this page</a></p></div></article>", "path": "/react/hooks-faq", "nav": ["/react/hooks-reference", "/react/testing"]}]}, {"key": "Test Etmek", "values": [{"key": "Test Etmeye Genel Bak\u0131\u015f", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>You can test React components similar to testing other JavaScript code.</p>\n<p>There are a few ways to test React components. Broadly, they divide into two categories:</p>\n<ul>\n<li><strong>Rendering component trees</strong> in a simplified test environment and asserting on their output.</li>\n<li><strong>Running a complete app</strong> in a realistic browser environment (also known as \u201cend-to-end\u201d tests).</li>\n</ul>\n<p>This documentation section focuses on testing strategies for the first case. While full end-to-end tests can be very useful to prevent regressions to important workflows, such tests are not concerned with React components in particular, and are out of the scope of this section.</p>\n<h3 id=\"tradeoffs\"><a class=\"anchor\" href=\"/react/testing#tradeoffs\"></a>Tradeoffs </h3>\n<p>When choosing testing tools, it is worth considering a few tradeoffs:</p>\n<ul>\n<li><strong>Iteration speed vs Realistic environment:</strong> Some tools offer a very quick feedback loop between making a change and seeing the result, but don\u2019t model the browser behavior precisely. Other tools might use a real browser environment, but reduce the iteration speed and are flakier on a continuous integration server.</li>\n<li><strong>How much to mock:</strong> With components, the distinction between a \u201cunit\u201d and \u201cintegration\u201d test can be blurry. If you\u2019re testing a form, should its test also test the buttons inside of it? Or should a button component have its own test suite? Should refactoring a button ever break the form test?</li>\n</ul>\n<p>Different answers may work for different teams and products.</p>\n<h3 id=\"tools\"><a class=\"anchor\" href=\"/react/testing#tools\"></a>Recommended Tools </h3>\n<p><strong><a class=\"external-link\" href=\"https://facebook.github.io/jest/\">Jest</a></strong> is a JavaScript test runner that lets you access the DOM via <a href=\"/react/testing-environments#mocking-a-rendering-surface\"><code class=\"language-javascript\">jsdom</code></a>. While jsdom is only an approximation of how the browser works, it is often good enough for testing React components. Jest provides a great iteration speed combined with powerful features like mocking <a href=\"/react/testing-environments#mocking-modules\">modules</a> and <a href=\"/react/testing-environments#mocking-timers\">timers</a> so you can have more control over how the code executes.</p>\n<p><strong><a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a></strong> is a set of helpers that let you test React components without relying on their implementation details. This approach makes refactoring a breeze and also nudges you towards best practices for accessibility. Although it doesn\u2019t provide a way to \u201cshallowly\u201d render a component without its children, a test runner like Jest lets you do this by <a href=\"/react/testing-recipes#mocking-modules\">mocking</a>.</p>\n<h3 id=\"learn-more\"><a class=\"anchor\" href=\"/react/testing#learn-more\"></a>Learn More </h3>\n<p>This section is divided in two pages:</p>\n<ul>\n<li><a href=\"/react/testing-recipes\">Recipes</a>: Common patterns when writing tests for React components.</li>\n<li><a href=\"/react/testing-environments\">Environments</a>: What to consider when setting up a testing environment for React components.</li>\n</ul></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/testing.md\">Edit this page</a></p></div></article>", "path": "/react/testing", "nav": ["/react/hooks-faq", "/react/testing-recipes"]}, {"key": "Test Tarifleri", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>Common testing patterns for React components.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This page assumes you\u2019re using <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a> as a test runner. If you use a different test runner, you may need to adjust the API, but the overall shape of the solution will likely be the same. Read more details on setting up a testing environment on the <a href=\"/react/testing-environments\">Testing Environments</a> page.</p>\n</div>\n<p>On this page, we will primarily use function components. However, these testing strategies don\u2019t depend on implementation details, and work just as well for class components too.</p>\n<ul>\n<li><a href=\"/react/testing-recipes#setup--teardown\">Setup/Teardown</a></li>\n<li><a href=\"/react/testing-recipes#act\"><code class=\"language-javascript\">act()</code></a></li>\n<li><a href=\"/react/testing-recipes#rendering\">Rendering</a></li>\n<li><a href=\"/react/testing-recipes#data-fetching\">Data Fetching</a></li>\n<li><a href=\"/react/testing-recipes#mocking-modules\">Mocking Modules</a></li>\n<li><a href=\"/react/testing-recipes#events\">Events</a></li>\n<li><a href=\"/react/testing-recipes#timers\">Timers</a></li>\n<li><a href=\"/react/testing-recipes#snapshot-testing\">Snapshot Testing</a></li>\n<li><a href=\"/react/testing-recipes#multiple-renderers\">Multiple Renderers</a></li>\n<li><a href=\"/react/testing-recipes#something-missing\">Something Missing?</a></li>\n</ul>\n\n<h3 id=\"setup--teardown\"><a class=\"anchor\" href=\"/react/testing-recipes#setup--teardown\"></a>Setup/Teardown </h3>\n<p>For each test, we usually want to render our React tree to a DOM element that\u2019s attached to <code class=\"language-javascript\">document</code>. This is important so that it can receive DOM events. When the test ends, we want to \u201cclean up\u201d and unmount the tree from the <code class=\"language-javascript\">document</code>.</p>\n<p>A common way to do it is to use a pair of <code class=\"language-javascript\">beforeEach</code> and <code class=\"language-javascript\">afterEach</code> blocks so that they\u2019ll always run and isolate the effects of a test to itself:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You may use a different pattern, but keep in mind that we want to execute the cleanup <em>even if a test fails</em>. Otherwise, tests can become \u201cleaky\u201d, and one test can change the behavior of another test. That makes them difficult to debug.</p>\n\n<h3 id=\"act\"><a class=\"anchor\" href=\"/react/testing-recipes#act\"></a><code class=\"language-javascript\">act()</code> </h3>\n<p>When writing UI tests, tasks like rendering, user events, or data fetching can be considered as \u201cunits\u201d of interaction with a user interface. <code class=\"language-javascript\">react-dom/test-utils</code> provides a helper called <a href=\"/react/test-utils#act\"><code class=\"language-javascript\">act()</code></a> that makes sure all updates related to these \u201cunits\u201d have been processed and applied to the DOM before you make any assertions:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// render components</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// make assertions</span></code></pre></div>\n<p>This helps make your tests run closer to what real users would experience when using your application. The rest of these examples use <code class=\"language-javascript\">act()</code> to make these guarantees.</p>\n<p>You might find using <code class=\"language-javascript\">act()</code> directly a bit too verbose. To avoid some of the boilerplate, you could use a library like <a class=\"external-link\" href=\"https://testing-library.com/react\">React Testing Library</a>, whose helpers are wrapped with <code class=\"language-javascript\">act()</code>.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>The name <code class=\"language-javascript\">act</code> comes from the <a class=\"external-link\" href=\"http://wiki.c2.com/?ArrangeActAssert\">Arrange-Act-Assert</a> pattern.</p>\n</div>\n\n<h3 id=\"rendering\"><a class=\"anchor\" href=\"/react/testing-recipes#rendering\"></a>Rendering </h3>\n<p>Commonly, you might want to test whether a component renders correctly for given props. Consider a simple component that renders a message based on a prop:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hey, stranger</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can write a test for this component:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Hello <span class=\"token keyword\">from</span> <span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"renders with or without a name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hey, stranger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Jenny<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, Jenny!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Margaret<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, Margaret!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"data-fetching\"><a class=\"anchor\" href=\"/react/testing-recipes#data-fetching\"></a>Data Fetching </h3>\n<p>Instead of calling real APIs in all your tests, you can mock requests with dummy data. Mocking data fetching with \u201cfake\u201d data prevents flaky tests due to an unavailable backend, and makes them run faster. Note: you may still want to run a subset of tests using an <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">\u201cend-to-end\u201d</a> framework that tells whether the whole app is working together.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// user.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchUserData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetchUserData</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"loading...\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>details</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"> years old\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      lives in </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>details</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can write tests for it:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// user.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> User <span class=\"token keyword\">from</span> <span class=\"token string\">\"./user\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"renders user data\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> fakeUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Joni Baez\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token string\">\"32\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">\"123, Charming Avenue\"</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  jest<span class=\"token punctuation\">.</span><span class=\"token function\">spyOn</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mockImplementation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span></span><span class=\"gatsby-highlight-code-line\">    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function-variable function\">json</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token comment\">// Use the asynchronous version of act to apply resolved promises</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toContain</span><span class=\"token punctuation\">(</span>fakeUser<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// remove the mock to ensure tests are completely isolated</span></span><span class=\"gatsby-highlight-code-line\">  global<span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">.</span><span class=\"token function\">mockRestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"mocking-modules\"><a class=\"anchor\" href=\"/react/testing-recipes#mocking-modules\"></a>Mocking Modules </h3>\n<p>Some modules might not work well inside a testing environment, or may not be as essential to the test itself. Mocking out these modules with dummy replacements can make it easier to write tests for your own code.</p>\n<p>Consider a <code class=\"language-javascript\">Contact</code> component that embeds a third-party <code class=\"language-javascript\">GoogleMap</code> component:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// map.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoadScript<span class=\"token punctuation\">,</span> GoogleMap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-google-maps\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoadScript</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>script-loader<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">googleMapsApiKey</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>YOUR_API_KEY<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GoogleMap</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>example-map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">LoadScript</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// contact.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Map <span class=\"token keyword\">from</span> <span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Contact</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>address</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Contact </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> via</span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"mailto:\"</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          email\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        or on their </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>site<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          website\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">.\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>address</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span></span> <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If we don\u2019t want to load this component in our tests, we can mock out the dependency itself to a dummy component, and run our tests:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// contact.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Contact <span class=\"token keyword\">from</span> <span class=\"token string\">\"./contact\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MockedMap <span class=\"token keyword\">from</span> <span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">jest<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./map\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">DummyMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">}</span><span class=\"token plain-text\">:</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">.</span>long<span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should render contact information\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">lat</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">long</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Contact</span></span>\n        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Joni Baez<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">email</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test@example.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">site</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://test.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">center</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>center<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n      container\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid='email']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mailto:test@example.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-testid=\"site\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://test.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-testid=\"map\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"0:0\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"events\"><a class=\"anchor\" href=\"/react/testing-recipes#events\"></a>Events </h3>\n<p>We recommend dispatching real DOM events on DOM elements, and then asserting on the result. Consider a <code class=\"language-javascript\">Toggle</code> component:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// toggle.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Toggle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">previousState</span> <span class=\"token operator\">=&gt;</span> <span class=\"token operator\">!</span>previousState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>state <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Turn off\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Turn on\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We could write tests for it:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// toggle.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Toggle <span class=\"token keyword\">from</span> <span class=\"token string\">\"./toggle\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"changes value when clicked\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onChange <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toggle</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// get a hold of the button element, and trigger some clicks on it</span>\n  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid=toggle]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn on\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn off\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Turn on\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Different DOM events and their properties are described in <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\">MDN</a>. Note that you need to pass <code class=\"language-javascript\">{ bubbles: true }</code> in each event you create for it to reach the React listener because React automatically delegates events to the root.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>React Testing Library offers a <a class=\"external-link\" href=\"https://testing-library.com/docs/dom-testing-library/api-events\">more concise helper</a> for firing events.</p>\n</div>\n\n<h3 id=\"timers\"><a class=\"anchor\" href=\"/react/testing-recipes#timers\"></a>Timers </h3>\n<p>Your code might use timer-based functions like <code class=\"language-javascript\">setTimeout</code> to schedule more work in the future. In this example, a multiple choice panel waits for a selection and advances, timing out if a selection isn\u2019t made in 5 seconds:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// card.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Card</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      props<span class=\"token punctuation\">.</span><span class=\"token function\">onSelect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>onSelect<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">choice</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n      <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">data-testid</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">onSelect</span><span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>choice<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can write tests for this component by leveraging <a class=\"external-link\" href=\"https://jestjs.io/docs/en/timer-mocks\">Jest\u2019s timer mocks</a>, and testing the different states it can be in.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// card.test.js</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"./card\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useRealTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should select null after timing out\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// move ahead in time by 100ms</span></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// and then move ahead by 5 seconds</span></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should cleanup on being removed\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// unmount the app</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"></span>  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    jest<span class=\"token punctuation\">.</span><span class=\"token function\">advanceTimersByTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should accept selections\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> onSelect <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Card</span></span> <span class=\"token attr-name\">onSelect</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSelect<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    container\n      <span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[data-testid='2']\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>onSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can use fake timers only in some tests. Above, we enabled them by calling <code class=\"language-javascript\">jest.useFakeTimers()</code>. The main advantage they provide is that your test doesn\u2019t actually have to wait five seconds to execute, and you also didn\u2019t need to make the component code more convoluted just for testing.</p>\n\n<h3 id=\"snapshot-testing\"><a class=\"anchor\" href=\"/react/testing-recipes#snapshot-testing\"></a>Snapshot Testing </h3>\n<p>Frameworks like Jest also let you save \u201csnapshots\u201d of data with <a class=\"external-link\" href=\"https://jestjs.io/docs/en/snapshot-testing\"><code class=\"language-javascript\">toMatchSnapshot</code> / <code class=\"language-javascript\">toMatchInlineSnapshot</code></a>. With these, we can \u201csave\u201d the rendered component output and ensure that a change to it has to be explicitly committed as a change to the snapshot.</p>\n<p>In this example, we render a component and format the rendered HTML with the <a class=\"external-link\" href=\"https://www.npmjs.com/package/pretty\"><code class=\"language-javascript\">pretty</code></a> package, before saving it as an inline snapshot:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token comment\">// hello.test.js, again</span>\n\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> unmountComponentAtNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> pretty <span class=\"token keyword\">from</span> <span class=\"token string\">\"pretty\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Hello <span class=\"token keyword\">from</span> <span class=\"token string\">\"./hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// setup a DOM element as a render target</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// cleanup on exiting</span>\n  <span class=\"token function\">unmountComponentAtNode</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should render a greeting\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* ... gets filled automatically by jest ... */</span></span>\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Jenny<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* ... gets filled automatically by jest ... */</span>\n\n  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Margaret<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">pretty</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* ... gets filled automatically by jest ... */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>It\u2019s typically better to make more specific assertions than to use snapshots. These kinds of tests include implementation details so they break easily, and teams can get desensitized to snapshot breakages. Selectively <a href=\"/react/testing-recipes#mocking-modules\">mocking some child components</a> can help reduce the size of snapshots and keep them readable for the code review.</p>\n\n<h3 id=\"multiple-renderers\"><a class=\"anchor\" href=\"/react/testing-recipes#multiple-renderers\"></a>Multiple Renderers </h3>\n<p>In rare cases, you may be running a test on a component that uses multiple renderers. For example, you may be running snapshot tests on a component with <code class=\"language-javascript\">react-test-renderer</code>, that internally uses <code class=\"language-javascript\">render</code> from <code class=\"language-javascript\">react-dom</code> inside a child component to render some content. In this scenario, you can wrap updates with <code class=\"language-javascript\">act()</code>s corresponding to their renderers.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token keyword\">as</span> domAct <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom/test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token keyword\">as</span> testAct<span class=\"token punctuation\">,</span> create <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-test-renderer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">let</span> root<span class=\"token punctuation\">;</span>\n<span class=\"token function\">domAct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">testAct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    root <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"something-missing\"><a class=\"anchor\" href=\"/react/testing-recipes#something-missing\"></a>Something Missing? </h3>\n<p>If some common scenario is not covered, please let us know on the <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org/issues\">issue tracker</a> for the documentation website.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/testing-recipes.md\">Edit this page</a></p></div></article>", "path": "/react/testing-recipes", "nav": ["/react/testing", "/react/testing-environments"]}, {"key": "Test Ortamlar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><!-- This document is intended for folks who are comfortable with JavaScript, and have probably written tests with it. It acts as a reference for the differences in testing environments for React components, and how those differences affect the tests that they write. This document also assumes a slant towards web-based react-dom components, but has notes for other renderers. -->\n<p>This document goes through the factors that can affect your environment and recommendations for some scenarios.</p>\n<h3 id=\"test-runners\"><a class=\"anchor\" href=\"/react/testing-environments#test-runners\"></a>Test runners </h3>\n<p>Test runners like <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a>, <a class=\"external-link\" href=\"https://mochajs.org/\">mocha</a>, <a class=\"external-link\" href=\"https://github.com/avajs/ava\">ava</a> let you write test suites as regular JavaScript, and run them as part of your development process. Additionally, test suites are run as part of continuous integration.</p>\n<ul>\n<li>Jest is widely compatible with React projects, supporting features like mocked <a href=\"/react/testing-environments#mocking-modules\">modules</a> and <a href=\"/react/testing-environments#mocking-timers\">timers</a>, and <a href=\"/react/testing-environments#mocking-a-rendering-surface\"><code class=\"language-javascript\">jsdom</code></a> support. <strong>If you use Create React App, <a class=\"external-link\" href=\"https://facebook.github.io/create-react-app/docs/running-tests\">Jest is already included out of the box</a> with useful defaults.</strong></li>\n<li>Libraries like <a class=\"external-link\" href=\"https://mochajs.org/#running-mocha-in-the-browser\">mocha</a> work well in real browser environments, and could help for tests that explicitly need it.</li>\n<li>End-to-end tests are used for testing longer flows across multiple pages, and require a <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">different setup</a>.</li>\n</ul>\n<h3 id=\"mocking-a-rendering-surface\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-a-rendering-surface\"></a>Mocking a rendering surface </h3>\n<p>Tests often run in an environment without access to a real rendering surface like a browser. For these environments, we recommend simulating a browser with <a class=\"external-link\" href=\"https://github.com/jsdom/jsdom\"><code class=\"language-javascript\">jsdom</code></a>, a lightweight browser implementation that runs inside Node.js.</p>\n<p>In most cases, jsdom behaves like a regular browser would, but doesn\u2019t have features like <a class=\"external-link\" href=\"https://github.com/jsdom/jsdom#unimplemented-parts-of-the-web-platform\">layout and navigation</a>. This is still useful for most web-based component tests, since it runs quicker than having to start up a browser for each test. It also runs in the same process as your tests, so you can write code to examine and assert on the rendered DOM.</p>\n<p>Just like in a real browser, jsdom lets us model user interactions; tests can dispatch events on DOM nodes, and then observe and assert on the side effects of these actions <a href=\"/react/testing-recipes#events\"><small>(example)</small></a>.</p>\n<p>A large portion of UI tests can be written with the above setup: using Jest as a test runner, rendered to jsdom, with user interactions specified as sequences of browser events, powered by the <code class=\"language-javascript\">act()</code> helper <a href=\"/react/testing-recipes\"><small>(example)</small></a>. For example, a lot of React\u2019s own tests are written with this combination.</p>\n<p>If you\u2019re writing a library that tests mostly browser-specific behavior, and requires native browser behavior like layout or real inputs, you could use a framework like <a class=\"external-link\" href=\"https://mochajs.org/\">mocha.</a></p>\n<p>In an environment where you <em>can\u2019t</em> simulate a DOM (e.g. testing React Native components on Node.js), you could use <a href=\"/react/test-utils#simulate\">event simulation helpers</a> to simulate interactions with elements. Alternately, you could use the <code class=\"language-javascript\">fireEvent</code> helper from <a class=\"external-link\" href=\"https://testing-library.com/docs/react-native-testing-library/intro\"><code class=\"language-javascript\">@testing-library/react-native</code></a>.</p>\n<p>Frameworks like <a class=\"external-link\" href=\"https://www.cypress.io/\">Cypress</a>, <a class=\"external-link\" href=\"https://github.com/GoogleChrome/puppeteer\">puppeteer</a> and <a class=\"external-link\" href=\"https://www.seleniumhq.org/projects/webdriver/\">webdriver</a> are useful for running <a href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\">end-to-end tests</a>.</p>\n<h3 id=\"mocking-functions\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-functions\"></a>Mocking functions </h3>\n<p>When writing tests, we\u2019d like to mock out the parts of our code that don\u2019t have equivalents inside our testing environment (e.g. checking <code class=\"language-javascript\">navigator.onLine</code> status inside Node.js). Tests could also spy on some functions, and observe how other parts of the test interact with them. It is then useful to be able to selectively mock these functions with test-friendly versions.</p>\n<p>This is especially useful for data fetching. It is usually preferable to use \u201cfake\u201d data for tests to avoid the slowness and flakiness due to fetching from real API endpoints <a href=\"/react/testing-recipes#data-fetching\"><small>(example)</small></a>. This helps make the tests predictable. Libraries like <a class=\"external-link\" href=\"https://jestjs.io/\">Jest</a> and <a class=\"external-link\" href=\"https://sinonjs.org/\">sinon</a>, among others, support mocked functions. For end-to-end tests, mocking network can be more difficult, but you might also want to test the real API endpoints in them anyway.</p>\n<h3 id=\"mocking-modules\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-modules\"></a>Mocking modules </h3>\n<p>Some components have dependencies for modules that may not work well in test environments, or aren\u2019t essential to our tests. It can be useful to selectively mock these modules out with suitable replacements <a href=\"/react/testing-recipes#mocking-modules\"><small>(example)</small></a>.</p>\n<p>On Node.js, runners like Jest <a class=\"external-link\" href=\"https://jestjs.io/docs/en/manual-mocks\">support mocking modules</a>. You could also use libraries like <a class=\"external-link\" href=\"https://www.npmjs.com/package/mock-require\"><code class=\"language-javascript\">mock-require</code></a>.</p>\n<h3 id=\"mocking-timers\"><a class=\"anchor\" href=\"/react/testing-environments#mocking-timers\"></a>Mocking timers </h3>\n<p>Components might be using time-based functions like <code class=\"language-javascript\">setTimeout</code>, <code class=\"language-javascript\">setInterval</code>, or <code class=\"language-javascript\">Date.now</code>. In testing environments, it can be helpful to mock these functions out with replacements that let you manually \u201cadvance\u201d time. This is great for making sure your tests run fast! Tests that are dependent on timers would still resolve in order, but quicker <a href=\"/react/testing-recipes#timers\"><small>(example)</small></a>. Most frameworks, including <a class=\"external-link\" href=\"https://jestjs.io/docs/en/timer-mocks\">Jest</a>, <a class=\"external-link\" href=\"https://sinonjs.org/releases/latest/fake-timers\">sinon</a> and <a class=\"external-link\" href=\"https://github.com/sinonjs/lolex\">lolex</a>, let you mock timers in your tests.</p>\n<p>Sometimes, you may not want to mock timers. For example, maybe you\u2019re testing an animation, or interacting with an endpoint that\u2019s sensitive to timing (like an API rate limiter). Libraries with timer mocks let you enable and disable them on a per test/suite basis, so you can explicitly choose how these tests would run.</p>\n<h3 id=\"end-to-end-tests-aka-e2e-tests\"><a class=\"anchor\" href=\"/react/testing-environments#end-to-end-tests-aka-e2e-tests\"></a>End-to-end tests </h3>\n<p>End-to-end tests are useful for testing longer workflows, especially when they\u2019re critical to your business (such as payments or signups). For these tests, you\u2019d probably want to test how a real browser renders the whole app, fetches data from the real API endpoints, uses sessions and cookies, navigates between different links. You might also likely want to make assertions not just on the DOM state, but on the backing data as well (e.g. to verify whether the updates have been persisted to the database).</p>\n<p>In this scenario, you would use a framework like <a class=\"external-link\" href=\"https://www.cypress.io/\">Cypress</a>, <a class=\"external-link\" href=\"https://playwright.dev\">Playwright</a> or a library like <a class=\"external-link\" href=\"https://pptr.dev/\">Puppeteer</a> so you can navigate between multiple routes and assert on side effects not just in the browser, but potentially on the backend as well.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/testing-environments.md\">Edit this page</a></p></div></article>", "path": "/react/testing-environments", "nav": ["/react/testing-recipes", "/react/how-to-contribute"]}]}, {"key": "Katk\u0131 Sa\u011flamak", "values": [{"key": "Nas\u0131l Katk\u0131 Sa\u011flars\u0131n\u0131z?", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React is one of Facebook\u2019s first open source projects that is both under very active development and is also being used to ship code to everybody on <a class=\"external-link\" href=\"https://www.facebook.com\">facebook.com</a>. We\u2019re still working out the kinks to make contributing to this project as easy and transparent as possible, but we\u2019re not quite there yet. Hopefully this document makes the process for contributing clear and answers some questions that you may have.</p>\n<h3 id=\"code-of-conduct\"><a class=\"anchor\" href=\"/react/how-to-contribute#code-of-conduct\"></a><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/main/CODE_OF_CONDUCT.md\">Code of Conduct</a> </h3>\n<p>Facebook has adopted the <a class=\"external-link\" href=\"https://www.contributor-covenant.org/\">Contributor Covenant</a> as its Code of Conduct, and we expect project participants to adhere to it. Please read <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/main/CODE_OF_CONDUCT.md\">the full text</a> so that you can understand what actions will and will not be tolerated.</p>\n<h3 id=\"open-development\"><a class=\"anchor\" href=\"/react/how-to-contribute#open-development\"></a>Open Development </h3>\n<p>All work on React happens directly on <a class=\"external-link\" href=\"https://github.com/facebook/react\">GitHub</a>. Both core team members and external contributors send pull requests which go through the same review process.</p>\n<h3 id=\"semantic-versioning\"><a class=\"anchor\" href=\"/react/how-to-contribute#semantic-versioning\"></a>Semantic Versioning </h3>\n<p>React follows <a class=\"external-link\" href=\"https://semver.org/\">semantic versioning</a>. We release patch versions for critical bugfixes, minor versions for new features or non-essential changes, and major versions for any breaking changes. When we make breaking changes, we also introduce deprecation warnings in a minor version so that our users learn about the upcoming changes and migrate their code in advance. Learn more about our commitment to stability and incremental migration in <a href=\"/react/faq-versioning\">our versioning policy</a>.</p>\n<p>Every significant change is documented in the <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/main/CHANGELOG.md\">changelog file</a>.</p>\n<h3 id=\"branch-organization\"><a class=\"anchor\" href=\"/react/how-to-contribute#branch-organization\"></a>Branch Organization </h3>\n<p>Submit all changes directly to the <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main\"><code class=\"language-javascript\">main branch</code></a>. We don\u2019t use separate branches for development or for upcoming releases. We do our best to keep <code class=\"language-javascript\">main</code> in good shape, with all tests passing.</p>\n<p>Code that lands in <code class=\"language-javascript\">main</code> must be compatible with the latest stable release. It may contain additional features, but no breaking changes. We should be able to release a new minor version from the tip of <code class=\"language-javascript\">main</code> at any time.</p>\n<h3 id=\"feature-flags\"><a class=\"anchor\" href=\"/react/how-to-contribute#feature-flags\"></a>Feature Flags </h3>\n<p>To keep the <code class=\"language-javascript\">main</code> branch in a releasable state, breaking changes and experimental features must be gated behind a feature flag.</p>\n<p>Feature flags are defined in <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/main/packages/shared/ReactFeatureFlags.js\"><code class=\"language-javascript\">packages/shared/ReactFeatureFlags.js</code></a>. Some builds of React may enable different sets of feature flags; for example, the React Native build may be configured differently than React DOM. These flags are found in <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/shared/forks\"><code class=\"language-javascript\">packages/shared/forks</code></a>. Feature flags are statically typed by Flow, so you can run <code class=\"language-javascript\">yarn flow</code> to confirm that you\u2019ve updated all the necessary files.</p>\n<p>React\u2019s build system will strip out disabled feature branches before publishing. A continuous integration job runs on every commit to check for changes in bundle size. You can use the change in size as a signal that a feature was gated correctly.</p>\n<h3 id=\"bugs\"><a class=\"anchor\" href=\"/react/how-to-contribute#bugs\"></a>Bugs </h3>\n<h4 id=\"where-to-find-known-issues\"><a class=\"anchor\" href=\"/react/how-to-contribute#where-to-find-known-issues\"></a>Where to Find Known Issues </h4>\n<p>We are using <a class=\"external-link\" href=\"https://github.com/facebook/react/issues\">GitHub Issues</a> for our public bugs. We keep a close eye on this and try to make it clear when we have an internal fix in progress. Before filing a new task, try to make sure your problem doesn\u2019t already exist.</p>\n<h4 id=\"reporting-new-issues\"><a class=\"anchor\" href=\"/react/how-to-contribute#reporting-new-issues\"></a>Reporting New Issues </h4>\n<p>The best way to get your bug fixed is to provide a reduced test case. This <a class=\"external-link\" href=\"https://jsfiddle.net/Luktwrdm/\">JSFiddle template</a> is a great starting point.</p>\n<h4 id=\"security-bugs\"><a class=\"anchor\" href=\"/react/how-to-contribute#security-bugs\"></a>Security Bugs </h4>\n<p>Facebook has a <a class=\"external-link\" href=\"https://www.facebook.com/whitehat/\">bounty program</a> for the safe disclosure of security bugs. With that in mind, please do not file public issues; go through the process outlined on that page.</p>\n<h3 id=\"how-to-get-in-touch\"><a class=\"anchor\" href=\"/react/how-to-contribute#how-to-get-in-touch\"></a>How to Get in Touch </h3>\n<ul>\n<li>IRC: <a class=\"external-link\" href=\"https://webchat.freenode.net/?channels=reactjs\">#reactjs on freenode</a></li>\n<li><a class=\"external-link\" href=\"https://tr.reactjs.org//community/support.html#popular-discussion-forums\">Discussion forums</a></li>\n</ul>\n<p>There is also <a class=\"external-link\" href=\"https://www.reactiflux.com/\">an active community of React users on the Discord chat platform</a> in case you need help with React.</p>\n<h3 id=\"proposing-a-change\"><a class=\"anchor\" href=\"/react/how-to-contribute#proposing-a-change\"></a>Proposing a Change </h3>\n<p>If you intend to change the public API, or make any non-trivial changes to the implementation, we recommend <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/new\">filing an issue</a>. This lets us reach an agreement on your proposal before you put significant effort into it.</p>\n<p>If you\u2019re only fixing a bug, it\u2019s fine to submit a pull request right away but we still recommend to file an issue detailing what you\u2019re fixing. This is helpful in case we don\u2019t accept that specific fix but want to keep track of the issue.</p>\n<h3 id=\"your-first-pull-request\"><a class=\"anchor\" href=\"/react/how-to-contribute#your-first-pull-request\"></a>Your First Pull Request </h3>\n<p>Working on your first Pull Request? You can learn how from this free video series:</p>\n<p><strong><a class=\"external-link\" href=\"https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github\">How to Contribute to an Open Source Project on GitHub</a></strong></p>\n<p>To help you get your feet wet and get you familiar with our contribution process, we have a list of <strong><a class=\"external-link\" href=\"https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22good+first+issue%22\">good first issues</a></strong> that contain bugs that have a relatively limited scope. This is a great place to get started.</p>\n<p>If you decide to fix an issue, please be sure to check the comment thread in case somebody is already working on a fix. If nobody is working on it at the moment, please leave a comment stating that you intend to work on it so other people don\u2019t accidentally duplicate your effort.</p>\n<p>If somebody claims an issue but doesn\u2019t follow up for more than two weeks, it\u2019s fine to take it over but you should still leave a comment.</p>\n<h3 id=\"sending-a-pull-request\"><a class=\"anchor\" href=\"/react/how-to-contribute#sending-a-pull-request\"></a>Sending a Pull Request </h3>\n<p>The core team is monitoring for pull requests. We will review your pull request and either merge it, request changes to it, or close it with an explanation. For API changes we may need to fix our internal uses at Facebook.com, which could cause some delay. We\u2019ll do our best to provide updates and feedback throughout the process.</p>\n<p><strong>Before submitting a pull request,</strong> please make sure the following is done:</p>\n<ol>\n<li>Fork <a class=\"external-link\" href=\"https://github.com/facebook/react\">the repository</a> and create your branch from <code class=\"language-javascript\">main</code>.</li>\n<li>Run <code class=\"language-javascript\">yarn</code> in the repository root.</li>\n<li>If you\u2019ve fixed a bug or added code that should be tested, add tests!</li>\n<li>Ensure the test suite passes (<code class=\"language-javascript\">yarn test</code>). Tip: <code class=\"language-javascript\">yarn test --watch TestName</code> is helpful in development.</li>\n<li>Run <code class=\"language-javascript\">yarn test --prod</code> to test in the production environment.</li>\n<li>If you need a debugger, run <code class=\"language-javascript\">yarn debug-test --watch TestName</code>, open <code class=\"language-javascript\">chrome://inspect</code>, and press \u201cInspect\u201d.</li>\n<li>Format your code with <a class=\"external-link\" href=\"https://github.com/prettier/prettier\">prettier</a> (<code class=\"language-javascript\">yarn prettier</code>).</li>\n<li>Make sure your code lints (<code class=\"language-javascript\">yarn lint</code>). Tip: <code class=\"language-javascript\">yarn linc</code> to only check changed files.</li>\n<li>Run the <a class=\"external-link\" href=\"https://flowtype.org/\">Flow</a> typechecks (<code class=\"language-javascript\">yarn flow</code>).</li>\n<li>If you haven\u2019t already, complete the CLA.</li>\n</ol>\n<h3 id=\"contributor-license-agreement-cla\"><a class=\"anchor\" href=\"/react/how-to-contribute#contributor-license-agreement-cla\"></a>Contributor License Agreement (CLA) </h3>\n<p>In order to accept your pull request, we need you to submit a CLA. You only need to do this once, so if you\u2019ve done this for another Facebook open source project, you\u2019re good to go. If you are submitting a pull request for the first time, just let us know that you have completed the CLA and we can cross-check with your GitHub username.</p>\n<p><strong><a class=\"external-link\" href=\"https://code.facebook.com/cla\">Complete your CLA here.</a></strong></p>\n<h3 id=\"contribution-prerequisites\"><a class=\"anchor\" href=\"/react/how-to-contribute#contribution-prerequisites\"></a>Contribution Prerequisites </h3>\n<ul>\n<li>You have <a class=\"external-link\" href=\"https://nodejs.org\">Node</a> installed at LTS and <a class=\"external-link\" href=\"https://yarnpkg.com/en/\">Yarn</a> at v1.2.0+.</li>\n<li>You have <a class=\"external-link\" href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> installed.</li>\n<li>You have <code class=\"language-javascript\">gcc</code> installed or are comfortable installing a compiler if needed. Some of our dependencies may require a compilation step. On OS X, the Xcode Command Line Tools will cover this. On Ubuntu, <code class=\"language-javascript\">apt-get install build-essential</code> will install the required packages. Similar commands should work on other Linux distros. Windows will require some additional steps, see the <a class=\"external-link\" href=\"https://github.com/nodejs/node-gyp#installation\"><code class=\"language-javascript\">node-gyp</code> installation instructions</a> for details.</li>\n<li>You are familiar with Git.</li>\n</ul>\n<h3 id=\"development-workflow\"><a class=\"anchor\" href=\"/react/how-to-contribute#development-workflow\"></a>Development Workflow </h3>\n<p>After cloning React, run <code class=\"language-javascript\">yarn</code> to fetch its dependencies.\nThen, you can run several commands:</p>\n<ul>\n<li><code class=\"language-javascript\">yarn lint</code> checks the code style.</li>\n<li><code class=\"language-javascript\">yarn linc</code> is like <code class=\"language-javascript\">yarn lint</code> but faster because it only checks files that differ in your branch.</li>\n<li><code class=\"language-javascript\">yarn test</code> runs the complete test suite.</li>\n<li><code class=\"language-javascript\">yarn test --watch</code> runs an interactive test watcher.</li>\n<li><code class=\"language-javascript\">yarn test --prod</code> runs tests in the production environment.</li>\n<li><code class=\"language-javascript\">yarn test &lt;pattern&gt;</code> runs tests with matching filenames.</li>\n<li><code class=\"language-javascript\">yarn debug-test</code> is just like <code class=\"language-javascript\">yarn test</code> but with a debugger. Open <code class=\"language-javascript\">chrome://inspect</code> and press \u201cInspect\u201d.</li>\n<li><code class=\"language-javascript\">yarn flow</code> runs the <a class=\"external-link\" href=\"https://flowtype.org/\">Flow</a> typechecks.</li>\n<li><code class=\"language-javascript\">yarn build</code> creates a <code class=\"language-javascript\">build</code> folder with all the packages.</li>\n<li><code class=\"language-javascript\">yarn build react/index,react-dom/index --type=UMD</code> creates UMD builds of just React and ReactDOM.</li>\n</ul>\n<p>We recommend running <code class=\"language-javascript\">yarn test</code> (or its variations above) to make sure you don\u2019t introduce any regressions as you work on your change. However, it can be handy to try your build of React in a real project.</p>\n<p>First, run <code class=\"language-javascript\">yarn build</code>. This will produce pre-built bundles in <code class=\"language-javascript\">build</code> folder, as well as prepare npm packages inside <code class=\"language-javascript\">build/packages</code>.</p>\n<p>The easiest way to try your changes is to run <code class=\"language-javascript\">yarn build react/index,react-dom/index --type=UMD</code> and then open <code class=\"language-javascript\">fixtures/packaging/babel-standalone/dev.html</code>. This file already uses <code class=\"language-javascript\">react.development.js</code> from the <code class=\"language-javascript\">build</code> folder so it will pick up your changes.</p>\n<p>If you want to try your changes in your existing React project, you may copy <code class=\"language-javascript\">build/node_modules/react/umd/react.development.js</code>, <code class=\"language-javascript\">build/node_modules/react-dom/umd/react-dom.development.js</code>, or any other build products into your app and use them instead of the stable version. </p>\n<p>If your project uses React from npm, you may delete <code class=\"language-javascript\">react</code> and <code class=\"language-javascript\">react-dom</code> in its dependencies and use <code class=\"language-javascript\">yarn link</code> to point them to your local <code class=\"language-javascript\">build</code> folder. Note that <strong>instead of <code class=\"language-javascript\">--type=UMD</code> you\u2019ll want to pass <code class=\"language-javascript\">--type=NODE</code> when building</strong>. You\u2019ll also need to build the <code class=\"language-javascript\">scheduler</code> package:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-sh\"><code class=\"language-javascript\">cd ~/path_to_your_react_clone/\nyarn build react/index,react/jsx,react-dom/index,scheduler --type=NODE\n\ncd build/node_modules/react\nyarn link\ncd build/node_modules/react-dom\nyarn link\n\ncd ~/path/to/your/project\nyarn link react react-dom</code></pre></div>\n<p>Every time you run <code class=\"language-javascript\">yarn build</code> in the React folder, the updated versions will appear in your project\u2019s <code class=\"language-javascript\">node_modules</code>. You can then rebuild your project to try your changes.</p>\n<p>If some package is still missing (e.g. maybe you use <code class=\"language-javascript\">react-dom/server</code> in your project), you can always do a full build with <code class=\"language-javascript\">yarn build</code>. Note that running <code class=\"language-javascript\">yarn build</code> without options takes a long time.</p>\n<p>We still require that your pull request contains unit tests for any new functionality. This way we can ensure that we don\u2019t break your code in the future.</p>\n<h3 id=\"style-guide\"><a class=\"anchor\" href=\"/react/how-to-contribute#style-guide\"></a>Style Guide </h3>\n<p>We use an automatic code formatter called <a class=\"external-link\" href=\"https://prettier.io/\">Prettier</a>.\nRun <code class=\"language-javascript\">yarn prettier</code> after making any changes to the code.</p>\n<p>Then, our linter will catch most issues that may exist in your code.\nYou can check the status of your code styling by simply running <code class=\"language-javascript\">yarn linc</code>.</p>\n<p>However, there are still some styles that the linter cannot pick up. If you are unsure about something, looking at <a class=\"external-link\" href=\"https://github.com/airbnb/javascript\">Airbnb\u2019s Style Guide</a> will guide you in the right direction.</p>\n<h3 id=\"request-for-comments-rfc\"><a class=\"anchor\" href=\"/react/how-to-contribute#request-for-comments-rfc\"></a>Request for Comments (RFC) </h3>\n<p>Many changes, including bug fixes and documentation improvements can be implemented and reviewed via the normal GitHub pull request workflow.</p>\n<p>Some changes though are \u201csubstantial\u201d, and we ask that these be put through a bit of a design process and produce a consensus among the React core team.</p>\n<p>The \u201cRFC\u201d (request for comments) process is intended to provide a consistent and controlled path for new features to enter the project. You can contribute by visiting the <a class=\"external-link\" href=\"https://github.com/reactjs/rfcs\">rfcs repository</a>.</p>\n<h3 id=\"license\"><a class=\"anchor\" href=\"/react/how-to-contribute#license\"></a>License </h3>\n<p>By contributing to React, you agree that your contributions will be licensed under its MIT license.</p>\n<h3 id=\"what-next\"><a class=\"anchor\" href=\"/react/how-to-contribute#what-next\"></a>What Next? </h3>\n<p>Read the <a href=\"/react/codebase-overview\">next section</a> to learn how the codebase is organized.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/how-to-contribute.md\">Edit this page</a></p></div></article>", "path": "/react/how-to-contribute", "nav": ["/react/testing-environments", "/react/codebase-overview"]}, {"key": "Codebase'e Genel Bak\u0131\u015f", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>This section will give you an overview of the React codebase organization, its conventions, and the implementation.</p>\n<p>If you want to <a href=\"/react/how-to-contribute\">contribute to React</a> we hope that this guide will help you feel more comfortable making changes.</p>\n<p>We don\u2019t necessarily recommend any of these conventions in React apps. Many of them exist for historical reasons and might change with time.</p>\n<h3 id=\"top-level-folders\"><a class=\"anchor\" href=\"/react/codebase-overview#top-level-folders\"></a>Top-Level Folders </h3>\n<p>After cloning the <a class=\"external-link\" href=\"https://github.com/facebook/react\">React repository</a>, you will see a few top-level folders in it:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages\"><code class=\"language-javascript\">packages</code></a> contains metadata (such as <code class=\"language-javascript\">package.json</code>) and the source code (<code class=\"language-javascript\">src</code> subdirectory) for all packages in the React repository. <strong>If your change is related to the code, the <code class=\"language-javascript\">src</code> subdirectory of each package is where you\u2019ll spend most of your time.</strong></li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/fixtures\"><code class=\"language-javascript\">fixtures</code></a> contains a few small React test applications for contributors.</li>\n<li><code class=\"language-javascript\">build</code> is the build output of React. It is not in the repository but it will appear in your React clone after you <a href=\"/react/how-to-contribute#development-workflow\">build it</a> for the first time.</li>\n</ul>\n<p>The documentation is hosted <a class=\"external-link\" href=\"https://github.com/reactjs/reactjs.org\">in a separate repository from React</a>.</p>\n<p>There are a few other top-level folders but they are mostly used for the tooling and you likely won\u2019t ever encounter them when contributing.</p>\n<h3 id=\"colocated-tests\"><a class=\"anchor\" href=\"/react/codebase-overview#colocated-tests\"></a>Colocated Tests </h3>\n<p>We don\u2019t have a top-level directory for unit tests. Instead, we put them into a directory called <code class=\"language-javascript\">__tests__</code> relative to the files that they test.</p>\n<p>For example, a test for <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/setInnerHTML.js\"><code class=\"language-javascript\">setInnerHTML.js</code></a> is located in <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js\"><code class=\"language-javascript\">__tests__/setInnerHTML-test.js</code></a> right next to it.</p>\n<h3 id=\"warnings-and-invariants\"><a class=\"anchor\" href=\"/react/codebase-overview#warnings-and-invariants\"></a>Warnings and Invariants </h3>\n<p>The React codebase uses <code class=\"language-javascript\">console.error</code> to display warnings:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Something is wrong.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Warnings are only enabled in development. In production, they are completely stripped out. If you need to forbid some code path from executing, use <code class=\"language-javascript\">invariant</code> module instead:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> invariant <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invariant'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">invariant</span><span class=\"token punctuation\">(</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'You shall not pass!'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>The invariant is thrown when the <code class=\"language-javascript\">invariant</code> condition is <code class=\"language-javascript\">false</code>.</strong></p>\n<p>\u201cInvariant\u201d is just a way of saying \u201cthis condition always holds true\u201d. You can think about it as making an assertion.</p>\n<p>It is important to keep development and production behavior similar, so <code class=\"language-javascript\">invariant</code> throws both in development and in production. The error messages are automatically replaced with error codes in production to avoid negatively affecting the byte size.</p>\n<h3 id=\"development-and-production\"><a class=\"anchor\" href=\"/react/codebase-overview#development-and-production\"></a>Development and Production </h3>\n<p>You can use <code class=\"language-javascript\">__DEV__</code> pseudo-global variable in the codebase to guard development-only blocks of code.</p>\n<p>It is inlined during the compile step, and turns into <code class=\"language-javascript\">process.env.NODE_ENV !== 'production'</code> checks in the CommonJS builds.</p>\n<p>For standalone builds, it becomes <code class=\"language-javascript\">true</code> in the unminified build, and gets completely stripped out with the <code class=\"language-javascript\">if</code> blocks it guards in the minified build.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// This code will only run in development.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"flow\"><a class=\"anchor\" href=\"/react/codebase-overview#flow\"></a>Flow </h3>\n<p>We recently started introducing <a class=\"external-link\" href=\"https://flow.org/\">Flow</a> checks to the codebase. Files marked with the <code class=\"language-javascript\">@flow</code> annotation in the license header comment are being typechecked.</p>\n<p>We accept pull requests <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/7600/files\">adding Flow annotations to existing code</a>. Flow annotations look like this:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">ReactRef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">detachRefs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\"><span class=\"token literal-property property\">instance</span><span class=\"token operator\">:</span> ReactInstance<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> ReactElement <span class=\"token operator\">|</span> string <span class=\"token operator\">|</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When possible, new code should use Flow annotations.\nYou can run <code class=\"language-javascript\">yarn flow</code> locally to check your code with Flow.</p>\n<h3 id=\"multiple-packages\"><a class=\"anchor\" href=\"/react/codebase-overview#multiple-packages\"></a>Multiple Packages </h3>\n<p>React is a <a class=\"external-link\" href=\"https://danluu.com/monorepo/\">monorepo</a>. Its repository contains multiple separate packages so that their changes can be coordinated together, and issues live in one place.</p>\n<h3 id=\"react-core\"><a class=\"anchor\" href=\"/react/codebase-overview#react-core\"></a>React Core </h3>\n<p>The \u201ccore\u201d of React includes all the <a href=\"/react/react-api#react\">top-level <code class=\"language-javascript\">React</code> APIs</a>, for example:</p>\n<ul>\n<li><code class=\"language-javascript\">React.createElement()</code></li>\n<li><code class=\"language-javascript\">React.Component</code></li>\n<li><code class=\"language-javascript\">React.Children</code></li>\n</ul>\n<p><strong>React core only includes the APIs necessary to define components.</strong> It does not include the <a href=\"/react/reconciliation\">reconciliation</a> algorithm or any platform-specific code. It is used both by React DOM and React Native components.</p>\n<p>The code for React core is located in <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react\"><code class=\"language-javascript\">packages/react</code></a> in the source tree. It is available on npm as the <a class=\"external-link\" href=\"https://www.npmjs.com/package/react\"><code class=\"language-javascript\">react</code></a> package. The corresponding standalone browser build is called <code class=\"language-javascript\">react.js</code>, and it exports a global called <code class=\"language-javascript\">React</code>.</p>\n<h3 id=\"renderers\"><a class=\"anchor\" href=\"/react/codebase-overview#renderers\"></a>Renderers </h3>\n<p>React was originally created for the DOM but it was later adapted to also support native platforms with <a class=\"external-link\" href=\"https://reactnative.dev/\">React Native</a>. This introduced the concept of \u201crenderers\u201d to React internals.</p>\n<p><strong>Renderers manage how a React tree turns into the underlying platform calls.</strong></p>\n<p>Renderers are also located in <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/\"><code class=\"language-javascript\">packages/</code></a>:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-dom\">React DOM Renderer</a> renders React components to the DOM. It implements <a href=\"/react/react-dom\">top-level <code class=\"language-javascript\">ReactDOM</code> APIs</a> and is available as <a class=\"external-link\" href=\"https://www.npmjs.com/package/react-dom\"><code class=\"language-javascript\">react-dom</code></a> npm package. It can also be used as standalone browser bundle called <code class=\"language-javascript\">react-dom.js</code> that exports a <code class=\"language-javascript\">ReactDOM</code> global.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-native-renderer\">React Native Renderer</a> renders React components to native views. It is used internally by React Native.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-test-renderer\">React Test Renderer</a> renders React components to JSON trees. It is used by the <a class=\"external-link\" href=\"https://facebook.github.io/jest/blog/2016/07/27/jest-14.html\">Snapshot Testing</a> feature of <a class=\"external-link\" href=\"https://facebook.github.io/jest\">Jest</a> and is available as <a class=\"external-link\" href=\"https://www.npmjs.com/package/react-test-renderer\">react-test-renderer</a> npm package.</li>\n</ul>\n<p>The only other officially supported renderer is <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-art\"><code class=\"language-javascript\">react-art</code></a>. It used to be in a separate <a class=\"external-link\" href=\"https://github.com/reactjs/react-art\">GitHub repository</a> but we moved it into the main source tree for now.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>Technically the <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-native-renderer\"><code class=\"language-javascript\">react-native-renderer</code></a> is a very thin layer that teaches React to interact with React Native implementation. The real platform-specific code managing the native views lives in the <a class=\"external-link\" href=\"https://github.com/facebook/react-native\">React Native repository</a> together with its components.</p>\n</div>\n<h3 id=\"reconcilers\"><a class=\"anchor\" href=\"/react/codebase-overview#reconcilers\"></a>Reconcilers </h3>\n<p>Even vastly different renderers like React DOM and React Native need to share a lot of logic. In particular, the <a href=\"/react/reconciliation\">reconciliation</a> algorithm should be as similar as possible so that declarative rendering, custom components, state, lifecycle methods, and refs work consistently across platforms.</p>\n<p>To solve this, different renderers share some code between them. We call this part of React a \u201creconciler\u201d. When an update such as <code class=\"language-javascript\">setState()</code> is scheduled, the reconciler calls <code class=\"language-javascript\">render()</code> on components in the tree and mounts, updates, or unmounts them.</p>\n<p>Reconcilers are not packaged separately because they currently have no public API. Instead, they are exclusively used by renderers such as React DOM and React Native.</p>\n<h3 id=\"stack-reconciler\"><a class=\"anchor\" href=\"/react/codebase-overview#stack-reconciler\"></a>Stack Reconciler </h3>\n<p>The \u201cstack\u201d reconciler is the implementation powering React 15 and earlier. We have since stopped using it, but it is documented in detail in the <a href=\"/react/implementation-notes\">next section</a>.</p>\n<h3 id=\"fiber-reconciler\"><a class=\"anchor\" href=\"/react/codebase-overview#fiber-reconciler\"></a>Fiber Reconciler </h3>\n<p>The \u201cfiber\u201d reconciler is a new effort aiming to resolve the problems inherent in the stack reconciler and fix a few long-standing issues. It has been the default reconciler since React 16.</p>\n<p>Its main goals are:</p>\n<ul>\n<li>Ability to split interruptible work in chunks.</li>\n<li>Ability to prioritize, rebase and reuse work in progress.</li>\n<li>Ability to yield back and forth between parents and children to support layout in React.</li>\n<li>Ability to return multiple elements from <code class=\"language-javascript\">render()</code>.</li>\n<li>Better support for error boundaries.</li>\n</ul>\n<p>You can read more about React Fiber Architecture <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">here</a> and <a class=\"external-link\" href=\"https://blog.ag-grid.com/inside-fiber-an-in-depth-overview-of-the-new-reconciliation-algorithm-in-react\">here</a>. While it has shipped with React 16, the async features are not enabled by default yet.</p>\n<p>Its source code is located in <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-reconciler\"><code class=\"language-javascript\">packages/react-reconciler</code></a>.</p>\n<h3 id=\"event-system\"><a class=\"anchor\" href=\"/react/codebase-overview#event-system\"></a>Event System </h3>\n<p>React implements a layer over native events to smooth out cross-browser differences. Its source code is located in <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-dom/src/events\"><code class=\"language-javascript\">packages/react-dom/src/events</code></a>.</p>\n<h3 id=\"what-next\"><a class=\"anchor\" href=\"/react/codebase-overview#what-next\"></a>What Next? </h3>\n<p>Read the <a href=\"/react/implementation-notes\">next section</a> to learn about the pre-React 16 implementation of reconciler in more detail. We haven\u2019t documented the internals of the new reconciler yet.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/codebase-overview.md\">Edit this page</a></p></div></article>", "path": "/react/codebase-overview", "nav": ["/react/how-to-contribute", "/react/implementation-notes"]}, {"key": "Uygulama Notlar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>This section is a collection of implementation notes for the <a href=\"/react/codebase-overview#stack-reconciler\">stack reconciler</a>.</p>\n<p>It is very technical and assumes a strong understanding of React public API as well as how it\u2019s divided into core, renderers, and the reconciler. If you\u2019re not very familiar with the React codebase, read <a href=\"/react/codebase-overview\">the codebase overview</a> first.</p>\n<p>It also assumes an understanding of the <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2015/12/18/react-components-elements-and-instances.html\">differences between React components, their instances, and elements</a>.</p>\n<p>The stack reconciler was used in React 15 and earlier. It is located at <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/15-stable/src/renderers/shared/stack/reconciler\">src/renderers/shared/stack/reconciler</a>.</p>\n<h3 id=\"video-building-react-from-scratch\"><a class=\"anchor\" href=\"/react/implementation-notes#video-building-react-from-scratch\"></a>Video: Building React from Scratch </h3>\n<p><a class=\"external-link\" href=\"https://twitter.com/zpao\">Paul O\u2019Shannessy</a> gave a talk about <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=_MAD4Oly9yg\">building React from scratch</a> that largely inspired this document.</p>\n<p>Both this document and his talk are simplifications of the real codebase so you might get a better understanding by getting familiar with both of them.</p>\n<h3 id=\"overview\"><a class=\"anchor\" href=\"/react/implementation-notes#overview\"></a>Overview </h3>\n<p>The reconciler itself doesn\u2019t have a public API. <a href=\"/react/codebase-overview#renderers\">Renderers</a> like React DOM and React Native use it to efficiently update the user interface according to the React components written by the user.</p>\n<h3 id=\"mounting-as-a-recursive-process\"><a class=\"anchor\" href=\"/react/implementation-notes#mounting-as-a-recursive-process\"></a>Mounting as a Recursive Process </h3>\n<p>Let\u2019s consider the first time you mount a component:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-javascript\">root.render</code> will pass <code class=\"language-javascript\">&lt;App /&gt;</code> along to the reconciler. Remember that <code class=\"language-javascript\">&lt;App /&gt;</code> is a React element, that is, a description of <em>what</em> to render. You can think about it as a plain object:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: App, props: {} }</span></code></pre></div>\n<p>The reconciler will check if <code class=\"language-javascript\">App</code> is a class or a function.</p>\n<p>If <code class=\"language-javascript\">App</code> is a function, the reconciler will call <code class=\"language-javascript\">App(props)</code> to get the rendered element.</p>\n<p>If <code class=\"language-javascript\">App</code> is a class, the reconciler will instantiate an <code class=\"language-javascript\">App</code> with <code class=\"language-javascript\">new App(props)</code>, call the <code class=\"language-javascript\">componentWillMount()</code> lifecycle method, and then will call the <code class=\"language-javascript\">render()</code> method to get the rendered element.</p>\n<p>Either way, the reconciler will learn the element <code class=\"language-javascript\">App</code> \u201crendered to\u201d.</p>\n<p>This process is recursive. <code class=\"language-javascript\">App</code> may render to a <code class=\"language-javascript\">&lt;Greeting /&gt;</code>, <code class=\"language-javascript\">Greeting</code> may render to a <code class=\"language-javascript\">&lt;Button /&gt;</code>, and so on. The reconciler will \u201cdrill down\u201d through user-defined components recursively as it learns what each component renders to.</p>\n<p>You can imagine this process as a pseudocode:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React.Component subclasses have this flag</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>isReactComponent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This function takes a React element (e.g. &lt;App /&gt;)</span>\n<span class=\"token comment\">// and returns a DOM or Native node representing the mounted tree.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// We will determine the rendered element</span>\n  <span class=\"token comment\">// by either running the type as function</span>\n  <span class=\"token comment\">// or creating an instance and calling render().</span>\n  <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Component class</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Set the props</span>\n    publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Call the lifecycle if necessary</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Get the rendered element by calling render()</span>\n    renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Component function</span>\n    renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// This process is recursive because a component may</span>\n  <span class=\"token comment\">// return an element with a type of another component.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Note: this implementation is incomplete and recurses infinitely!</span>\n  <span class=\"token comment\">// It only handles elements like &lt;App /&gt; or &lt;Button /&gt;.</span>\n  <span class=\"token comment\">// It doesn't handle elements like &lt;div /&gt; or &lt;p /&gt; yet.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootEl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This really <em>is</em> a pseudo-code. It isn\u2019t similar to the real implementation. It will also cause a stack overflow because we haven\u2019t discussed when to stop the recursion.</p>\n</div>\n<p>Let\u2019s recap a few key ideas in the example above:</p>\n<ul>\n<li>React elements are plain objects representing the component type (e.g. <code class=\"language-javascript\">App</code>) and the props.</li>\n<li>User-defined components (e.g. <code class=\"language-javascript\">App</code>) can be classes or functions but they all \u201crender to\u201d elements.</li>\n<li>\u201cMounting\u201d is a recursive process that creates a DOM or Native tree given the top-level React element (e.g. <code class=\"language-javascript\">&lt;App /&gt;</code>).</li>\n</ul>\n<h3 id=\"mounting-host-elements\"><a class=\"anchor\" href=\"/react/implementation-notes#mounting-host-elements\"></a>Mounting Host Elements </h3>\n<p>This process would be useless if we didn\u2019t render something to the screen as a result.</p>\n<p>In addition to user-defined (\u201ccomposite\u201d) components, React elements may also represent platform-specific (\u201chost\u201d) components. For example, <code class=\"language-javascript\">Button</code> might return a <code class=\"language-javascript\">&lt;div /&gt;</code> from its render method.</p>\n<p>If element\u2019s <code class=\"language-javascript\">type</code> property is a string, we are dealing with a host element:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { type: 'div', props: {} }</span></code></pre></div>\n<p>There is no user-defined code associated with host elements.</p>\n<p>When the reconciler encounters a host element, it lets the renderer take care of mounting it. For example, React DOM would create a DOM node.</p>\n<p>If the host element has children, the reconciler recursively mounts them following the same algorithm as above. It doesn\u2019t matter whether children are host (like <code class=\"language-javascript\">&lt;div&gt;&lt;hr /&gt;&lt;/div&gt;</code>), composite (like <code class=\"language-javascript\">&lt;div&gt;&lt;Button /&gt;&lt;/div&gt;</code>), or both.</p>\n<p>The DOM nodes produced by the child components will be appended to the parent DOM node, and recursively, the complete DOM structure will be assembled.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>The reconciler itself is not tied to the DOM. The exact result of mounting (sometimes called \u201cmount image\u201d in the source code) depends on the renderer, and can be a DOM node (React DOM), a string (React DOM Server), or a number representing a native view (React Native).</p>\n</div>\n<p>If we were to extend the code to handle host elements, it would look like this:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// React.Component subclasses have this flag</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>isReactComponent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This function only handles elements with a composite type.</span>\n<span class=\"token comment\">// For example, it handles &lt;App /&gt; and &lt;Button /&gt;, but not a &lt;div /&gt;.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mountComposite</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Component class</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Set the props</span>\n    publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Call the lifecycle if necessary</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Component function</span>\n    renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// This is recursive but we'll eventually reach the bottom of recursion when</span>\n  <span class=\"token comment\">// the element is host (e.g. &lt;div /&gt;) rather than composite (e.g. &lt;App /&gt;):</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This function only handles elements with a host type.</span>\n<span class=\"token comment\">// For example, it handles &lt;div /&gt; and &lt;p /&gt; but not an &lt;App /&gt;.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mountHost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    children <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>children<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  children <span class=\"token operator\">=</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// This block of code shouldn't be in the reconciler.</span>\n  <span class=\"token comment\">// Different renderers might initialize nodes differently.</span>\n  <span class=\"token comment\">// For example, React Native would create iOS or Android views.</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Mount the children</span>\n  children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">childElement</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Children may be host (e.g. &lt;div /&gt;) or composite (e.g. &lt;Button /&gt;).</span>\n    <span class=\"token comment\">// We will also mount them recursively:</span>\n    <span class=\"token keyword\">var</span> childNode <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>childElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// This line of code is also renderer-specific.</span>\n    <span class=\"token comment\">// It would be different depending on the renderer:</span>\n    node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Return the DOM node as mount result.</span>\n  <span class=\"token comment\">// This is where the recursion ends.</span>\n  <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// User-defined components</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">mountComposite</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Platform-specific components</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">mountHost</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootEl<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This is working but still far from how the reconciler is really implemented. The key missing ingredient is support for updates.</p>\n<h3 id=\"introducing-internal-instances\"><a class=\"anchor\" href=\"/react/implementation-notes#introducing-internal-instances\"></a>Introducing Internal Instances </h3>\n<p>The key feature of React is that you can re-render everything, and it won\u2019t recreate the DOM or reset the state:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">root<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Should reuse the existing DOM:</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>However, our implementation above only knows how to mount the initial tree. It can\u2019t perform updates on it because it doesn\u2019t store all the necessary information, such as all the <code class=\"language-javascript\">publicInstance</code>s, or which DOM <code class=\"language-javascript\">node</code>s correspond to which components.</p>\n<p>The stack reconciler codebase solves this by making the <code class=\"language-javascript\">mount()</code> function a method and putting it on a class. There are drawbacks to this approach, and we are going in the opposite direction in the <a href=\"/react/codebase-overview#fiber-reconciler\">ongoing rewrite of the reconciler</a>. Nevertheless this is how it works now.</p>\n<p>Instead of separate <code class=\"language-javascript\">mountHost</code> and <code class=\"language-javascript\">mountComposite</code> functions, we will create two classes: <code class=\"language-javascript\">DOMComponent</code> and <code class=\"language-javascript\">CompositeComponent</code>.</p>\n<p>Both classes have a constructor accepting the <code class=\"language-javascript\">element</code>, as well as a <code class=\"language-javascript\">mount()</code> method returning the mounted node. We will replace a top-level <code class=\"language-javascript\">mount()</code> function with a factory that instantiates the correct class:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// User-defined components</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompositeComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Platform-specific components</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>First, let\u2019s consider the implementation of <code class=\"language-javascript\">CompositeComponent</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// For composite components, expose the class instance.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> renderedElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Component class</span>\n      publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Set the props</span>\n      publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Call the lifecycle if necessary</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillMount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      renderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Component function</span>\n      publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      renderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Save the public instance</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Instantiate the child internal instance according to the element.</span>\n    <span class=\"token comment\">// It would be a DOMComponent for &lt;div /&gt; or &lt;p /&gt;,</span>\n    <span class=\"token comment\">// and a CompositeComponent for &lt;App /&gt; or &lt;Button /&gt;:</span>\n    <span class=\"token keyword\">var</span> renderedComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>renderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> renderedComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Mount the rendered output</span>\n    <span class=\"token keyword\">return</span> renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is not much different from our previous <code class=\"language-javascript\">mountComposite()</code> implementation, but now we can save some information, such as <code class=\"language-javascript\">this.currentElement</code>, <code class=\"language-javascript\">this.renderedComponent</code>, and <code class=\"language-javascript\">this.publicInstance</code>, for use during updates.</p>\n<p>Note that an instance of <code class=\"language-javascript\">CompositeComponent</code> is not the same thing as an instance of the user-supplied <code class=\"language-javascript\">element.type</code>. <code class=\"language-javascript\">CompositeComponent</code> is an implementation detail of our reconciler, and is never exposed to the user. The user-defined class is the one we read from <code class=\"language-javascript\">element.type</code>, and <code class=\"language-javascript\">CompositeComponent</code> creates an instance of it.</p>\n<p>To avoid the confusion, we will call instances of <code class=\"language-javascript\">CompositeComponent</code> and <code class=\"language-javascript\">DOMComponent</code> \u201cinternal instances\u201d. They exist so we can associate some long-lived data with them. Only the renderer and the reconciler are aware that they exist.</p>\n<p>In contrast, we call an instance of the user-defined class a \u201cpublic instance\u201d. The public instance is what you see as <code class=\"language-javascript\">this</code> in the <code class=\"language-javascript\">render()</code> and other methods of your custom components.</p>\n<p>The <code class=\"language-javascript\">mountHost()</code> function, refactored to be a <code class=\"language-javascript\">mount()</code> method on <code class=\"language-javascript\">DOMComponent</code> class, also looks familiar:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// For DOM components, only expose the DOM node.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> props <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      children <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>children<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Create and save the node</span>\n    <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Set the attributes</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create and save the contained children.</span>\n    <span class=\"token comment\">// Each of them can be a DOMComponent or a CompositeComponent,</span>\n    <span class=\"token comment\">// depending on whether the element type is a string or a function.</span>\n    <span class=\"token keyword\">var</span> renderedChildren <span class=\"token operator\">=</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>instantiateComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> renderedChildren<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Collect DOM nodes they return on mount</span>\n    <span class=\"token keyword\">var</span> childNodes <span class=\"token operator\">=</span> renderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span> <span class=\"token operator\">=&gt;</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    childNodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">childNode</span> <span class=\"token operator\">=&gt;</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Return the DOM node as mount result</span>\n    <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The main difference after refactoring from <code class=\"language-javascript\">mountHost()</code> is that we now keep <code class=\"language-javascript\">this.node</code> and <code class=\"language-javascript\">this.renderedChildren</code> associated with the internal DOM component instance. We will also use them for applying non-destructive updates in the future.</p>\n<p>As a result, each internal instance, composite or host, now points to its child internal instances. To help visualize this, if a function <code class=\"language-javascript\">&lt;App&gt;</code> component renders a <code class=\"language-javascript\">&lt;Button&gt;</code> class component, and <code class=\"language-javascript\">Button</code> class renders a <code class=\"language-javascript\">&lt;div&gt;</code>, the internal instance tree would look like this:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>object CompositeComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">currentElement</span><span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">publicInstance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">renderedComponent</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object CompositeComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">currentElement</span><span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">publicInstance</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object Button<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">renderedComponent</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object DOMComponent<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">currentElement</span><span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">node</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>object HTMLDivElement<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">renderedChildren</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the DOM you would only see the <code class=\"language-javascript\">&lt;div&gt;</code>. However the internal instance tree contains both composite and host internal instances.</p>\n<p>The composite internal instances need to store:</p>\n<ul>\n<li>The current element.</li>\n<li>The public instance if element type is a class.</li>\n<li>The single rendered internal instance. It can be either a <code class=\"language-javascript\">DOMComponent</code> or a <code class=\"language-javascript\">CompositeComponent</code>.</li>\n</ul>\n<p>The host internal instances need to store:</p>\n<ul>\n<li>The current element.</li>\n<li>The DOM node.</li>\n<li>All the child internal instances. Each of them can be either a <code class=\"language-javascript\">DOMComponent</code> or a <code class=\"language-javascript\">CompositeComponent</code>.</li>\n</ul>\n<p>If you\u2019re struggling to imagine how an internal instance tree is structured in more complex applications, <a class=\"external-link\" href=\"https://github.com/facebook/react-devtools\">React DevTools</a> can give you a close approximation, as it highlights host instances with grey, and composite instances with purple:</p>\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/d96fec10d250eace9756f09543bf5d58/00d43/implementation-notes-tree.png\">\n<span class=\"gatsby-resp-image-wrapper\">\n<span class=\"gatsby-resp-image-background-image\">\n<a class=\"external-link\" href=\"https://tr.reactjs.org//static/d96fec10d250eace9756f09543bf5d58/1e088/implementation-notes-tree.png\">Image link</a>\n</span>\n</span>\n</a>\n<p>To complete this refactoring, we will introduce a function that mounts a complete tree into a container node and a public instance:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create the top-level internal instance</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Mount the top-level component into the container</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Return the public instance it provides</span>\n  <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> publicInstance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"unmounting\"><a class=\"anchor\" href=\"/react/implementation-notes#unmounting\"></a>Unmounting </h3>\n<p>Now that we have internal instances that hold onto their children and the DOM nodes, we can implement unmounting. For a composite component, unmounting calls a lifecycle method and recurses.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Call the lifecycle method if necessary</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillUnmount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Unmount the single rendered component</span>\n    <span class=\"token keyword\">var</span> renderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">;</span>\n    renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For <code class=\"language-javascript\">DOMComponent</code>, unmounting tells each child to unmount:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Unmount all the children</span>\n    <span class=\"token keyword\">var</span> renderedChildren <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren<span class=\"token punctuation\">;</span>\n    renderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span> <span class=\"token operator\">=&gt;</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In practice, unmounting DOM components also removes the event listeners and clears some caches, but we will skip those details.</p>\n<p>We can now add a new top-level function called <code class=\"language-javascript\">unmountTree(containerNode)</code> that is similar to <code class=\"language-javascript\">ReactDOM.unmountComponentAtNode()</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Read the internal instance from a DOM node:</span>\n  <span class=\"token comment\">// (This doesn't work yet, we will need to change mountTree() to store it.)</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>_internalInstance<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Unmount the tree and clear the container</span>\n  rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In order for this to work, we need to read an internal root instance from a DOM node. We will modify <code class=\"language-javascript\">mountTree()</code> to add the <code class=\"language-javascript\">_internalInstance</code> property to the root DOM node. We will also teach <code class=\"language-javascript\">mountTree()</code> to destroy any existing tree so it can be called multiple times:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Destroy any existing tree</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create the top-level internal instance</span>\n  <span class=\"token keyword\">var</span> rootComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Mount the top-level component into the container</span>\n  <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  containerNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Save a reference to the internal instance</span>\n  node<span class=\"token punctuation\">.</span>_internalInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Return the public instance it provides</span>\n  <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> rootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getPublicInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> publicInstance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, running <code class=\"language-javascript\">unmountTree()</code>, or running <code class=\"language-javascript\">mountTree()</code> repeatedly, removes the old tree and runs the <code class=\"language-javascript\">componentWillUnmount()</code> lifecycle method on components.</p>\n<h3 id=\"updating\"><a class=\"anchor\" href=\"/react/implementation-notes#updating\"></a>Updating </h3>\n<p>In the previous section, we implemented unmounting. However React wouldn\u2019t be very useful if each prop change unmounted and mounted the whole tree. The goal of the reconciler is to reuse existing instances where possible to preserve the DOM and the state:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Should reuse the existing DOM:</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We will extend our internal instance contract with one more method. In addition to <code class=\"language-javascript\">mount()</code> and <code class=\"language-javascript\">unmount()</code>, both <code class=\"language-javascript\">DOMComponent</code> and <code class=\"language-javascript\">CompositeComponent</code> will implement a new method called <code class=\"language-javascript\">receive(nextElement)</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Its job is to do whatever is necessary to bring the component (and any of its children) up to date with the description provided by the <code class=\"language-javascript\">nextElement</code>.</p>\n<p>This is the part that is often described as \u201cvirtual DOM diffing\u201d although what really happens is that we walk the internal tree recursively and let each internal instance receive an update.</p>\n<h3 id=\"updating-composite-components\"><a class=\"anchor\" href=\"/react/implementation-notes#updating-composite-components\"></a>Updating Composite Components </h3>\n<p>When a composite component receives a new element, we run the <code class=\"language-javascript\">componentWillUpdate()</code> lifecycle method.</p>\n<p>Then we re-render the component with the new props, and get the next rendered element:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> prevProps <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> publicInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publicInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRenderedComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRenderedElement <span class=\"token operator\">=</span> prevRenderedComponent<span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update *own* element</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextProps <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Figure out what the next render() output is</span>\n    <span class=\"token keyword\">var</span> nextRenderedElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isClass</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Component class</span>\n      <span class=\"token comment\">// Call the lifecycle if necessary</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>publicInstance<span class=\"token punctuation\">.</span>componentWillUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">componentWillUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Update the props</span>\n      publicInstance<span class=\"token punctuation\">.</span>props <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Re-render</span>\n      nextRenderedElement <span class=\"token operator\">=</span> publicInstance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Component function</span>\n      nextRenderedElement <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Next, we can look at the rendered element\u2019s <code class=\"language-javascript\">type</code>. If the <code class=\"language-javascript\">type</code> has not changed since the last render, the component below can also be updated in place.</p>\n<p>For example, if it returned <code class=\"language-javascript\">&lt;Button color=\"red\" /&gt;</code> the first time, and <code class=\"language-javascript\">&lt;Button color=\"blue\" /&gt;</code> the second time, we can just tell the corresponding internal instance to <code class=\"language-javascript\">receive()</code> the next element:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// If the rendered element type has not changed,</span>\n    <span class=\"token comment\">// reuse the existing component instance and exit.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevRenderedElement<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> nextRenderedElement<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>nextRenderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>However, if the next rendered element has a different <code class=\"language-javascript\">type</code> than the previously rendered element, we can\u2019t update the internal instance. A <code class=\"language-javascript\">&lt;button&gt;</code> can\u2019t \u201cbecome\u201d an <code class=\"language-javascript\">&lt;input&gt;</code>.</p>\n<p>Instead, we have to unmount the existing internal instance and mount the new one corresponding to the rendered element type. For example, this is what happens when a component that previously rendered a <code class=\"language-javascript\">&lt;button /&gt;</code> renders an <code class=\"language-javascript\">&lt;input /&gt;</code>:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// If we reached this point, we need to unmount the previously</span>\n    <span class=\"token comment\">// mounted component, mount the new one, and swap their nodes.</span>\n\n    <span class=\"token comment\">// Find the old node because it will need to be replaced</span>\n    <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Unmount the old child and mount a new child</span>\n    prevRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextRenderedComponent <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextRenderedElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextNode <span class=\"token operator\">=</span> nextRenderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Replace the reference to the child</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent <span class=\"token operator\">=</span> nextRenderedComponent<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Replace the old node with the new one</span>\n    <span class=\"token comment\">// Note: this is renderer-specific code and</span>\n    <span class=\"token comment\">// ideally should live outside of CompositeComponent:</span>\n    prevNode<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">replaceChild</span><span class=\"token punctuation\">(</span>nextNode<span class=\"token punctuation\">,</span> prevNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To sum this up, when a composite component receives a new element, it may either delegate the update to its rendered internal instance, or unmount it and mount a new one in its place.</p>\n<p>There is another condition under which a component will re-mount rather than receive an element, and that is when the element\u2019s <code class=\"language-javascript\">key</code> has changed. We don\u2019t discuss <code class=\"language-javascript\">key</code> handling in this document because it adds more complexity to an already complex tutorial.</p>\n<p>Note that we needed to add a method called <code class=\"language-javascript\">getHostNode()</code> to the internal instance contract so that it\u2019s possible to locate the platform-specific node and replace it during the update. Its implementation is straightforward for both classes:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Ask the rendered component to provide it.</span>\n    <span class=\"token comment\">// This will recursively drill down any composites.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedComponent<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"updating-host-components\"><a class=\"anchor\" href=\"/react/implementation-notes#updating-host-components\"></a>Updating Host Components </h3>\n<p>Host component implementations, such as <code class=\"language-javascript\">DOMComponent</code>, update differently. When they receive an element, they need to update the underlying platform-specific view. In case of React DOM, this means updating the DOM attributes:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DOMComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevElement <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevProps <span class=\"token operator\">=</span> prevElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextProps <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>    \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElement <span class=\"token operator\">=</span> nextElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Remove old attributes.</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>nextProps<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Set next attributes.</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propName <span class=\"token operator\">!==</span> <span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        node<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>propName<span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>Then, host components need to update their children. Unlike composite components, they might contain more than a single child.</p>\n<p>In this simplified example, we use an array of internal instances and iterate over it, either updating or replacing the internal instances depending on whether the received <code class=\"language-javascript\">type</code> matches their previous <code class=\"language-javascript\">type</code>. The real reconciler also takes element\u2019s <code class=\"language-javascript\">key</code> in the account and track moves in addition to insertions and deletions, but we will omit this logic.</p>\n<p>We collect DOM operations on children in a list so we can execute them in batch:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// These are arrays of React elements:</span>\n    <span class=\"token keyword\">var</span> prevChildren <span class=\"token operator\">=</span> prevProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>prevChildren<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>prevChildren<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> nextChildren <span class=\"token operator\">=</span> nextProps<span class=\"token punctuation\">.</span>children <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      nextChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nextChildren<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// These are arrays of internal instances:</span>\n    <span class=\"token keyword\">var</span> prevRenderedChildren <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nextRenderedChildren <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// As we iterate over children, we will add operations to the array.</span>\n    <span class=\"token keyword\">var</span> operationQueue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Note: the section below is extremely simplified!</span>\n    <span class=\"token comment\">// It doesn't handle reorders, children with holes, or keys.</span>\n    <span class=\"token comment\">// It only exists to illustrate the overall flow, not the specifics.</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nextChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Try to get an existing internal instance for this child</span>\n      <span class=\"token keyword\">var</span> prevChild <span class=\"token operator\">=</span> prevRenderedChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// If there is no internal instance under this index,</span>\n      <span class=\"token comment\">// a child has been appended to the end. Create a new</span>\n      <span class=\"token comment\">// internal instance, mount it, and use its node.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>prevChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> nextChild <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> nextChild<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Record that we need to append a node</span>\n        operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'ADD'</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// We can only update the instance if its element's type matches.</span>\n      <span class=\"token comment\">// For example, &lt;Button size=\"small\" /&gt; can be updated to</span>\n      <span class=\"token comment\">// &lt;Button size=\"large\" /&gt; but not to an &lt;App /&gt;.</span>\n      <span class=\"token keyword\">var</span> canUpdate <span class=\"token operator\">=</span> prevChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// If we can't update an existing instance, we have to unmount it</span>\n      <span class=\"token comment\">// and mount a new one instead of it.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>canUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> nextChild <span class=\"token operator\">=</span> <span class=\"token function\">instantiateComponent</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> nextNode <span class=\"token operator\">=</span> nextChild<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Record that we need to swap the nodes</span>\n        operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'REPLACE'</span><span class=\"token punctuation\">,</span> prevNode<span class=\"token punctuation\">,</span> nextNode<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// If we can update an existing internal instance,</span>\n      <span class=\"token comment\">// just let it receive the next element and handle its own update.</span>\n      prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>nextChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      nextRenderedChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>prevChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Finally, unmount any children that don't exist:</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> nextChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> prevChildren<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> prevChild <span class=\"token operator\">=</span> prevRenderedChildren<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">getHostNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      prevChild<span class=\"token punctuation\">.</span><span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Record that we need to remove the node</span>\n      operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'REMOVE'</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Point the list of rendered children to the updated version.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderedChildren <span class=\"token operator\">=</span> nextRenderedChildren<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>As the last step, we execute the DOM operations. Again, the real reconciler code is more complex because it also handles moves:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Process the operation queue.</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>operationQueue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> operation <span class=\"token operator\">=</span> operationQueue<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'ADD'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'REPLACE'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">replaceChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>nextNode<span class=\"token punctuation\">,</span> operation<span class=\"token punctuation\">.</span>prevNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'REMOVE'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And that is it for updating host components.</p>\n<h3 id=\"top-level-updates\"><a class=\"anchor\" href=\"/react/implementation-notes#top-level-updates\"></a>Top-Level Updates </h3>\n<p>Now that both <code class=\"language-javascript\">CompositeComponent</code> and <code class=\"language-javascript\">DOMComponent</code> implement the <code class=\"language-javascript\">receive(nextElement)</code> method, we can change the top-level <code class=\"language-javascript\">mountTree()</code> function to use it when the element <code class=\"language-javascript\">type</code> is the same as it was the last time:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> containerNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check for an existing tree</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> prevNode <span class=\"token operator\">=</span> containerNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevRootComponent <span class=\"token operator\">=</span> prevNode<span class=\"token punctuation\">.</span>_internalInstance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> prevElement <span class=\"token operator\">=</span> prevRootComponent<span class=\"token punctuation\">.</span>currentElement<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// If we can, reuse the existing root component</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevElement<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> element<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      prevRootComponent<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Otherwise, unmount the existing tree</span>\n    <span class=\"token function\">unmountTree</span><span class=\"token punctuation\">(</span>containerNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now calling <code class=\"language-javascript\">mountTree()</code> two times with the same type isn\u2019t destructive:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> rootEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Reuses the existing DOM:</span>\n<span class=\"token function\">mountTree</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">,</span> rootEl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>These are the basics of how React works internally.</p>\n<h3 id=\"what-we-left-out\"><a class=\"anchor\" href=\"/react/implementation-notes#what-we-left-out\"></a>What We Left Out </h3>\n<p>This document is simplified compared to the real codebase. There are a few important aspects we didn\u2019t address:</p>\n<ul>\n<li>Components can render <code class=\"language-javascript\">null</code>, and the reconciler can handle \u201cempty slots\u201d in arrays and rendered output.</li>\n<li>The reconciler also reads <code class=\"language-javascript\">key</code> from the elements, and uses it to establish which internal instance corresponds to which element in an array. A bulk of complexity in the actual React implementation is related to that.</li>\n<li>In addition to composite and host internal instance classes, there are also classes for \u201ctext\u201d and \u201cempty\u201d components. They represent text nodes and the \u201cempty slots\u201d you get by rendering <code class=\"language-javascript\">null</code>.</li>\n<li>Renderers use <a href=\"/react/codebase-overview#dynamic-injection\">injection</a> to pass the host internal class to the reconciler. For example, React DOM tells the reconciler to use <code class=\"language-javascript\">ReactDOMComponent</code> as the host internal instance implementation.</li>\n<li>The logic for updating the list of children is extracted into a mixin called <code class=\"language-javascript\">ReactMultiChild</code> which is used by the host internal instance class implementations both in React DOM and React Native.</li>\n<li>The reconciler also implements support for <code class=\"language-javascript\">setState()</code> in composite components. Multiple updates inside event handlers get batched into a single update.</li>\n<li>The reconciler also takes care of attaching and detaching refs to composite components and host nodes.</li>\n<li>Lifecycle methods that are called after the DOM is ready, such as <code class=\"language-javascript\">componentDidMount()</code> and <code class=\"language-javascript\">componentDidUpdate()</code>, get collected into \u201ccallback queues\u201d and are executed in a single batch.</li>\n<li>React puts information about the current update into an internal object called \u201ctransaction\u201d. Transactions are useful for keeping track of the queue of pending lifecycle methods, the current DOM nesting for the warnings, and anything else that is \u201cglobal\u201d to a specific update. Transactions also ensure React \u201ccleans everything up\u201d after updates. For example, the transaction class provided by React DOM restores the input selection after any update.</li>\n</ul>\n<h3 id=\"jumping-into-the-code\"><a class=\"anchor\" href=\"/react/implementation-notes#jumping-into-the-code\"></a>Jumping into the Code </h3>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/client/ReactMount.js\"><code class=\"language-javascript\">ReactMount</code></a> is where the code like <code class=\"language-javascript\">mountTree()</code> and <code class=\"language-javascript\">unmountTree()</code> from this tutorial lives. It takes care of mounting and unmounting top-level components. <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeMount.js\"><code class=\"language-javascript\">ReactNativeMount</code></a> is its React Native analog.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/shared/ReactDOMComponent.js\"><code class=\"language-javascript\">ReactDOMComponent</code></a> is the equivalent of <code class=\"language-javascript\">DOMComponent</code> in this tutorial. It implements the host component class for React DOM renderer. <a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeBaseComponent.js\"><code class=\"language-javascript\">ReactNativeBaseComponent</code></a> is its React Native analog.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\"><code class=\"language-javascript\">ReactCompositeComponent</code></a> is the equivalent of <code class=\"language-javascript\">CompositeComponent</code> in this tutorial. It handles calling user-defined components and maintaining their state.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/instantiateReactComponent.js\"><code class=\"language-javascript\">instantiateReactComponent</code></a> contains the switch that picks the right internal instance class to construct for an element. It is equivalent to <code class=\"language-javascript\">instantiateComponent()</code> in this tutorial.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactReconciler.js\"><code class=\"language-javascript\">ReactReconciler</code></a> is a wrapper with <code class=\"language-javascript\">mountComponent()</code>, <code class=\"language-javascript\">receiveComponent()</code>, and <code class=\"language-javascript\">unmountComponent()</code> methods. It calls the underlying implementations on the internal instances, but also includes some code around them that is shared by all internal instance implementations.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactChildReconciler.js\"><code class=\"language-javascript\">ReactChildReconciler</code></a> implements the logic for mounting, updating, and unmounting children according to the <code class=\"language-javascript\">key</code> of their elements.</li>\n<li><a class=\"external-link\" href=\"https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactMultiChild.js\"><code class=\"language-javascript\">ReactMultiChild</code></a> implements processing the operation queue for child insertions, deletions, and moves independently of the renderer.</li>\n<li><code class=\"language-javascript\">mount()</code>, <code class=\"language-javascript\">receive()</code>, and <code class=\"language-javascript\">unmount()</code> are really called <code class=\"language-javascript\">mountComponent()</code>, <code class=\"language-javascript\">receiveComponent()</code>, and <code class=\"language-javascript\">unmountComponent()</code> in React codebase for legacy reasons, but they receive elements.</li>\n<li>Properties on the internal instances start with an underscore, e.g. <code class=\"language-javascript\">_currentElement</code>. They are considered to be read-only public fields throughout the codebase.</li>\n</ul>\n<h3 id=\"future-directions\"><a class=\"anchor\" href=\"/react/implementation-notes#future-directions\"></a>Future Directions </h3>\n<p>Stack reconciler has inherent limitations such as being synchronous and unable to interrupt the work or split it in chunks. There is a work in progress on the <a href=\"/react/codebase-overview#fiber-reconciler\">new Fiber reconciler</a> with a <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">completely different architecture</a>. In the future, we intend to replace stack reconciler with it, but at the moment it is far from feature parity.</p>\n<h3 id=\"next-steps\"><a class=\"anchor\" href=\"/react/implementation-notes#next-steps\"></a>Next Steps </h3>\n<p>Read the <a href=\"/react/design-principles\">next section</a> to learn about the guiding principles we use for React development.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/implementation-notes.md\">Edit this page</a></p></div></article>", "path": "/react/implementation-notes", "nav": ["/react/codebase-overview", "/react/design-principles"]}, {"key": "Tasar\u0131m \u0130lkeleri", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>We wrote this document so that you have a better idea of how we decide what React does and what React doesn\u2019t do, and what our development philosophy is like. While we are excited to see community contributions, we are not likely to choose a path that violates one or more of these principles.</p>\n<div class=\"blockquote\">\n<strong>Note:</strong>\n<p>This document assumes a strong understanding of React. It describes the design principles of <em>React itself</em>, not React components or applications.</p>\n<p>For an introduction to React, check out <a href=\"/react/thinking-in-react\">Thinking in React</a> instead.</p>\n</div>\n<h3 id=\"composition\"><a class=\"anchor\" href=\"/react/design-principles#composition\"></a>Composition </h3>\n<p>The key feature of React is composition of components. Components written by different people should work well together. It is important to us that you can add functionality to a component without causing rippling changes throughout the codebase.</p>\n<p>For example, it should be possible to introduce some local state into a component without changing any of the components using it. Similarly, it should be possible to add some initialization and teardown code to any component when necessary.</p>\n<p>There is nothing \u201cbad\u201d about using state or lifecycle methods in components. Like any powerful feature, they should be used in moderation, but we have no intention to remove them. On the contrary, we think they are integral parts of what makes React useful. We might enable <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State\">more functional patterns</a> in the future, but both local state and lifecycle methods will be a part of that model.</p>\n<p>Components are often described as \u201cjust functions\u201d but in our view they need to be more than that to be useful. In React, components describe any composable behavior, and this includes rendering, lifecycle, and state. Some external libraries like <a class=\"external-link\" href=\"https://facebook.github.io/relay/\">Relay</a> augment components with other responsibilities such as describing data dependencies. It is possible that those ideas might make it back into React too in some form.</p>\n<h3 id=\"common-abstraction\"><a class=\"anchor\" href=\"/react/design-principles#common-abstraction\"></a>Common Abstraction </h3>\n<p>In general we <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=4anAwXYqLG8\">resist adding features</a> that can be implemented in userland. We don\u2019t want to bloat your apps with useless library code. However, there are exceptions to this.</p>\n<p>For example, if React didn\u2019t provide support for local state or lifecycle methods, people would create custom abstractions for them. When there are multiple abstractions competing, React can\u2019t enforce or take advantage of the properties of either of them. It has to work with the lowest common denominator.</p>\n<p>This is why sometimes we add features to React itself. If we notice that many components implement a certain feature in incompatible or inefficient ways, we might prefer to bake it into React. We don\u2019t do it lightly. When we do it, it\u2019s because we are confident that raising the abstraction level benefits the whole ecosystem. State, lifecycle methods, cross-browser event normalization are good examples of this.</p>\n<p>We always discuss such improvement proposals with the community. You can find some of those discussions by the <a class=\"external-link\" href=\"https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22Type:+Big+Picture%22\">\u201cbig picture\u201d</a> label on the React issue tracker.</p>\n<h3 id=\"escape-hatches\"><a class=\"anchor\" href=\"/react/design-principles#escape-hatches\"></a>Escape Hatches </h3>\n<p>React is pragmatic. It is driven by the needs of the products written at Facebook. While it is influenced by some paradigms that are not yet fully mainstream such as functional programming, staying accessible to a wide range of developers with different skills and experience levels is an explicit goal of the project.</p>\n<p>If we want to deprecate a pattern that we don\u2019t like, it is our responsibility to consider all existing use cases for it and <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">educate the community about the alternatives</a> before we deprecate it. If some pattern that is useful for building apps is hard to express in a declarative way, we will <a href=\"/react/more-about-refs\">provide an imperative API</a> for it. If we can\u2019t figure out a perfect API for something that we found necessary in many apps, we will <a href=\"/react/legacy-context\">provide a temporary subpar working API</a> as long as it is possible to get rid of it later and it leaves the door open for future improvements.</p>\n<h3 id=\"stability\"><a class=\"anchor\" href=\"/react/design-principles#stability\"></a>Stability </h3>\n<p>We value API stability. At Facebook, we have more than 50 thousand components using React. Many other companies, including <a class=\"external-link\" href=\"https://twitter.com/\">Twitter</a> and <a class=\"external-link\" href=\"https://www.airbnb.com/\">Airbnb</a>, are also heavy users of React. This is why we are usually reluctant to change public APIs or behavior.</p>\n<p>However we think stability in the sense of \u201cnothing changes\u201d is overrated. It quickly turns into stagnation. Instead, we prefer the stability in the sense of \u201cIt is heavily used in production, and when something changes, there is a clear (and preferably automated) migration path.\u201d</p>\n<p>When we deprecate a pattern, we study its internal usage at Facebook and add deprecation warnings. They let us assess the impact of the change. Sometimes we back out if we see that it is too early, and we need to think more strategically about getting the codebases to the point where they are ready for this change.</p>\n<p>If we are confident that the change is not too disruptive and the migration strategy is viable for all use cases, we release the deprecation warning to the open source community. We are closely in touch with many users of React outside of Facebook, and we monitor popular open source projects and guide them in fixing those deprecations.</p>\n<p>Given the sheer size of the Facebook React codebase, successful internal migration is often a good indicator that other companies won\u2019t have problems either. Nevertheless sometimes people point out additional use cases we haven\u2019t thought of, and we add escape hatches for them or rethink our approach.</p>\n<p>We don\u2019t deprecate anything without a good reason. We recognize that sometimes deprecations warnings cause frustration but we add them because deprecations clean up the road for the improvements and new features that we and many people in the community consider valuable.</p>\n<p>For example, we added a <a class=\"external-link\" href=\"https://tr.reactjs.org//warnings/unknown-prop.html\">warning about unknown DOM props</a> in React 15.2.0. Many projects were affected by this. However fixing this warning is important so that we can introduce the support for <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/140\">custom attributes</a> to React. There is a reason like this behind every deprecation that we add.</p>\n<p>When we add a deprecation warning, we keep it for the rest of the current major version, and <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/02/19/new-versioning-scheme.html\">change the behavior in the next major version</a>. If there is a lot of repetitive manual work involved, we release a <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=d0pOgY8__JM\">codemod</a> script that automates most of the change. Codemods enable us to move forward without stagnation in a massive codebase, and we encourage you to use them as well.</p>\n<p>You can find the codemods that we released in the <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod\">react-codemod</a> repository.</p>\n<h3 id=\"interoperability\"><a class=\"anchor\" href=\"/react/design-principles#interoperability\"></a>Interoperability </h3>\n<p>We place high value in interoperability with existing systems and gradual adoption. Facebook has a massive non-React codebase. Its website uses a mix of a server-side component system called XHP, internal UI libraries that came before React, and React itself. It is important to us that any product team can <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=BF58ZJ1ZQxY\">start using React for a small feature</a> rather than rewrite their code to bet on it.</p>\n<p>This is why React provides escape hatches to work with mutable models, and tries to work well together with other UI libraries. You can wrap an existing imperative UI into a declarative component, and vice versa. This is crucial for gradual adoption.</p>\n<h3 id=\"scheduling\"><a class=\"anchor\" href=\"/react/design-principles#scheduling\"></a>Scheduling </h3>\n<p>Even when your components are described as functions, when you use React you don\u2019t call them directly. Every component returns a <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2015/12/18/react-components-elements-and-instances.html#elements-describe-the-tree\">description of what needs to be rendered</a>, and that description may include both user-written components like <code class=\"language-javascript\">&lt;LikeButton&gt;</code> and platform-specific components like <code class=\"language-javascript\">&lt;div&gt;</code>. It is up to React to \u201cunroll\u201d <code class=\"language-javascript\">&lt;LikeButton&gt;</code> at some point in the future and actually apply changes to the UI tree according to the render results of the components recursively.</p>\n<p>This is a subtle distinction but a powerful one. Since you don\u2019t call that component function but let React call it, it means React has the power to delay calling it if necessary. In its current implementation React walks the tree recursively and calls render functions of the whole updated tree during a single tick. However in the future it might start <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6170\">delaying some updates to avoid dropping frames</a>.</p>\n<p>This is a common theme in React design. Some popular libraries implement the \u201cpush\u201d approach where computations are performed when the new data is available. React, however, sticks to the \u201cpull\u201d approach where computations can be delayed until necessary.</p>\n<p>React is not a generic data processing library. It is a library for building user interfaces. We think that it is uniquely positioned in an app to know which computations are relevant right now and which are not.</p>\n<p>If something is offscreen, we can delay any logic related to it. If data is arriving faster than the frame rate, we can coalesce and batch updates. We can prioritize work coming from user interactions (such as an animation caused by a button click) over less important background work (such as rendering new content just loaded from the network) to avoid dropping frames.</p>\n<p>To be clear, we are not taking advantage of this right now. However the freedom to do something like this is why we prefer to have control over scheduling, and why <code class=\"language-javascript\">setState()</code> is asynchronous. Conceptually, we think of it as \u201cscheduling an update\u201d.</p>\n<p>The control over scheduling would be harder for us to gain if we let the user directly compose views with a \u201cpush\u201d based paradigm common in some variations of <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Functional_reactive_programming\">Functional Reactive Programming</a>. We want to own the \u201cglue\u201d code.</p>\n<p>It is a key goal for React that the amount of the user code that executes before yielding back into React is minimal. This ensures that React retains the capability to schedule and split work in chunks according to what it knows about the UI.</p>\n<p>There is an internal joke in the team that React should have been called \u201cSchedule\u201d because React does not want to be fully \u201creactive\u201d.</p>\n<h3 id=\"developer-experience\"><a class=\"anchor\" href=\"/react/design-principles#developer-experience\"></a>Developer Experience </h3>\n<p>Providing a good developer experience is important to us.</p>\n<p>For example, we maintain <a class=\"external-link\" href=\"https://github.com/facebook/react/tree/main/packages/react-devtools\">React DevTools</a> which let you inspect the React component tree in Chrome and Firefox. We have heard that it brings a big productivity boost both to the Facebook engineers and to the community.</p>\n<p>We also try to go an extra mile to provide helpful developer warnings. For example, React warns you in development if you nest tags in a way that the browser doesn\u2019t understand, or if you make a common typo in the API. Developer warnings and the related checks are the main reason why the development version of React is slower than the production version.</p>\n<p>The usage patterns that we see internally at Facebook help us understand what the common mistakes are, and how to prevent them early. When we add new features, we try to anticipate the common mistakes and warn about them.</p>\n<p>We are always looking out for ways to improve the developer experience. We love to hear your suggestions and accept your contributions to make it even better.</p>\n<h3 id=\"debugging\"><a class=\"anchor\" href=\"/react/design-principles#debugging\"></a>Debugging </h3>\n<p>When something goes wrong, it is important that you have breadcrumbs to trace the mistake to its source in the codebase. In React, props and state are those breadcrumbs.</p>\n<p>If you see something wrong on the screen, you can open React DevTools, find the component responsible for rendering, and then see if the props and state are correct. If they are, you know that the problem is in the component\u2019s <code class=\"language-javascript\">render()</code> function, or some function that is called by <code class=\"language-javascript\">render()</code>. The problem is isolated.</p>\n<p>If the state is wrong, you know that the problem is caused by one of the <code class=\"language-javascript\">setState()</code> calls in this file. This, too, is relatively simple to locate and fix because usually there are only a few <code class=\"language-javascript\">setState()</code> calls in a single file.</p>\n<p>If the props are wrong, you can traverse the tree up in the inspector, looking for the component that first \u201cpoisoned the well\u201d by passing bad props down.</p>\n<p>This ability to trace any UI to the data that produced it in the form of current props and state is very important to React. It is an explicit design goal that state is not \u201ctrapped\u201d in closures and combinators, and is available to React directly.</p>\n<p>While the UI is dynamic, we believe that synchronous <code class=\"language-javascript\">render()</code> functions of props and state turn debugging from guesswork into a boring but finite procedure. We would like to preserve this constraint in React even though it makes some use cases, like complex animations, harder.</p>\n<h3 id=\"configuration\"><a class=\"anchor\" href=\"/react/design-principles#configuration\"></a>Configuration </h3>\n<p>We find global runtime configuration options to be problematic.</p>\n<p>For example, it is occasionally requested that we implement a function like <code class=\"language-javascript\">React.configure(options)</code> or <code class=\"language-javascript\">React.register(component)</code>. However this poses multiple problems, and we are not aware of good solutions to them.</p>\n<p>What if somebody calls such a function from a third-party component library? What if one React app embeds another React app, and their desired configurations are incompatible? How can a third-party component specify that it requires a particular configuration? We think that global configuration doesn\u2019t work well with composition. Since composition is central to React, we don\u2019t provide global configuration in code.</p>\n<p>We do, however, provide some global configuration on the build level. For example, we provide separate development and production builds. We may also <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/6627\">add a profiling build</a> in the future, and we are open to considering other build flags.</p>\n<h3 id=\"beyond-the-dom\"><a class=\"anchor\" href=\"/react/design-principles#beyond-the-dom\"></a>Beyond the DOM </h3>\n<p>We see the value of React in the way it allows us to write components that have fewer bugs and compose together well. DOM is the original rendering target for React but <a class=\"external-link\" href=\"https://reactnative.dev/\">React Native</a> is just as important both to Facebook and the community.</p>\n<p>Being renderer-agnostic is an important design constraint of React. It adds some overhead in the internal representations. On the other hand, any improvements to the core translate across platforms.</p>\n<p>Having a single programming model lets us form engineering teams around products instead of platforms. So far the tradeoff has been worth it for us.</p>\n<h3 id=\"implementation\"><a class=\"anchor\" href=\"/react/design-principles#implementation\"></a>Implementation </h3>\n<p>We try to provide elegant APIs where possible. We are much less concerned with the implementation being elegant. The real world is far from perfect, and to a reasonable extent we prefer to put the ugly code into the library if it means the user does not have to write it. When we evaluate new code, we are looking for an implementation that is correct, performant and affords a good developer experience. Elegance is secondary.</p>\n<p>We prefer boring code to clever code. Code is disposable and often changes. So it is important that it <a class=\"external-link\" href=\"https://youtu.be/4anAwXYqLG8?t=13m9s\">doesn\u2019t introduce new internal abstractions unless absolutely necessary</a>. Verbose code that is easy to move around, change and remove is preferred to elegant code that is prematurely abstracted and hard to change.</p>\n<h3 id=\"optimized-for-tooling\"><a class=\"anchor\" href=\"/react/design-principles#optimized-for-tooling\"></a>Optimized for Tooling </h3>\n<p>Some commonly used APIs have verbose names. For example, we use <code class=\"language-javascript\">componentDidMount()</code> instead of <code class=\"language-javascript\">didMount()</code> or <code class=\"language-javascript\">onMount()</code>. This is <a class=\"external-link\" href=\"https://github.com/reactjs/react-future/issues/40#issuecomment-142442124\">intentional</a>. The goal is to make the points of interaction with the library highly visible.</p>\n<p>In a massive codebase like Facebook, being able to search for uses of specific APIs is very important. We value distinct verbose names, and especially for the features that should be used sparingly. For example, <code class=\"language-javascript\">dangerouslySetInnerHTML</code> is hard to miss in a code review.</p>\n<p>Optimizing for search is also important because of our reliance on <a class=\"external-link\" href=\"https://www.youtube.com/watch?v=d0pOgY8__JM\">codemods</a> to make breaking changes. We want it to be easy and safe to apply vast automated changes across the codebase, and unique verbose names help us achieve this. Similarly, distinctive names make it easy to write custom <a class=\"external-link\" href=\"https://github.com/yannickcr/eslint-plugin-react\">lint rules</a> about using React without worrying about potential false positives.</p>\n<p><a href=\"/react/introducing-jsx\">JSX</a> plays a similar role. While it is not required with React, we use it extensively at Facebook both for aesthetic and pragmatic reasons.</p>\n<p>In our codebase, JSX provides an unambiguous hint to the tools that they are dealing with a React element tree. This makes it possible to add build-time optimizations such as <a class=\"external-link\" href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-constant-elements/\">hoisting constant elements</a>, safely lint and codemod internal component usage, and <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/6771\">include JSX source location</a> into the warnings.</p>\n<h3 id=\"dogfooding\"><a class=\"anchor\" href=\"/react/design-principles#dogfooding\"></a>Dogfooding </h3>\n<p>We try our best to address the problems raised by the community. However we are likely to prioritize the issues that people are <em>also</em> experiencing internally at Facebook. Perhaps counter-intuitively, we think this is the main reason why the community can bet on React.</p>\n<p>Heavy internal usage gives us the confidence that React won\u2019t disappear tomorrow. React was created at Facebook to solve its problems. It brings tangible business value to the company and is used in many of its products. <a class=\"external-link\" href=\"https://en.wikipedia.org/wiki/Eating_your_own_dog_food\">Dogfooding</a> it means that our vision stays sharp and we have a focused direction going forward.</p>\n<p>This doesn\u2019t mean that we ignore the issues raised by the community. For example, we added support for <a href=\"/react/webcomponents\">web components</a> and <a class=\"external-link\" href=\"https://github.com/facebook/react/pull/6243\">SVG</a> to React even though we don\u2019t rely on either of them internally. We are actively <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/2686\">listening to your pain points</a> and <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/07/11/introducing-reacts-error-code-system.html\">address them</a> to the best of our ability. The community is what makes React special to us, and we are honored to contribute back.</p>\n<p>After releasing many open source projects at Facebook, we have learned that trying to make everyone happy at the same time produced projects with poor focus that didn\u2019t grow well. Instead, we found that picking a small audience and focusing on making them happy brings a positive net effect. That\u2019s exactly what we did with React, and so far solving the problems encountered by Facebook product teams has translated well to the open source community.</p>\n<p>The downside of this approach is that sometimes we fail to give enough focus to the things that Facebook teams don\u2019t have to deal with, such as the \u201cgetting started\u201d experience. We are acutely aware of this, and we are thinking of how to improve in a way that would benefit everyone in the community without making the same mistakes we did with open source projects before.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/design-principles.md\">Edit this page</a></p></div></article>", "path": "/react/design-principles", "nav": ["/react/implementation-notes", "/react/faq-ajax"]}]}, {"key": "S\u0131k\u00e7a Sorulan Sorular", "values": [{"key": "AJAX ve API'ler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"how-can-i-make-an-ajax-call\"><a class=\"anchor\" href=\"/react/faq-ajax#how-can-i-make-an-ajax-call\"></a>Nas\u0131l AJAX iste\u011fi yapabilirim ? </h3>\n<p>React ile istedi\u011finiz AJAX k\u00fct\u00fcphanesini kullanabilirsiniz. Baz\u0131 pop\u00fcler k\u00fct\u00fcphaneler <a class=\"external-link\" href=\"https://github.com/axios/axios\">Axios</a>, <a class=\"external-link\" href=\"https://api.jquery.com/jQuery.ajax/\">jQuery AJAX</a>, ve taray\u0131c\u0131da yerle\u015fik bulunan <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">window.fetch</a>.</p>\n<h3 id=\"where-in-the-component-lifecycle-should-i-make-an-ajax-call\"><a class=\"anchor\" href=\"/react/faq-ajax#where-in-the-component-lifecycle-should-i-make-an-ajax-call\"></a>AJAX iste\u011fini hangi ya\u015fam d\u00f6ng\u00fcs\u00fc metodunda yapmal\u0131y\u0131m ? </h3>\n<p>Verilerinizi <a href=\"/react/react-component#mounting\"><code class=\"language-javascript\">componentDidMount</code></a> ya\u015fam d\u00f6ng\u00fcs\u00fc metodu i\u00e7inde AJAX iste\u011fi yaparak doldurabilirsiniz. Veriler al\u0131nd\u0131\u011f\u0131nda <code class=\"language-javascript\">setState</code> fonksiyonu ile bile\u015feninizi g\u00fcncelleyebilirsiniz.</p>\n<h3 id=\"example-using-ajax-results-to-set-local-state\"><a class=\"anchor\" href=\"/react/faq-ajax#example-using-ajax-results-to-set-local-state\"></a>\u00d6rnek: Yerel bile\u015fen durumlar\u0131n\u0131 ayarlamak i\u00e7in AJAX iste\u011fi </h3>\n<p>A\u015fa\u011f\u0131da bulunan bile\u015fende <code class=\"language-javascript\">componentDidMount</code> i\u00e7inde AJAX iste\u011fi yaparak yerel bile\u015fen durumunuzu nas\u0131l g\u00fcncelleyece\u011finizi g\u00f6sterir. </p>\n<p>API\u2019dan d\u00f6nen \u00f6rnek bir JSON verisi:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">{\n  \"items\": [\n    { \"id\": 1, \"name\": \"Apples\",  \"price\": \"$2\" },\n    { \"id\": 2, \"name\": \"Peaches\", \"price\": \"$5\" }\n  ] \n}</code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">items</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.example.com/items\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=&gt;</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">items</span><span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>items\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Not: Burada hatalar\u0131 yakalamak \u00f6nemlidir.</span>\n        <span class=\"token comment\">// Bile\u015fenimizde bug bulunmamas\u0131 i\u00e7in, 'catch ()' blo\u011fu yerine bulunan</span>\n        <span class=\"token comment\">// bu blok i\u00e7inde hatalar yakalan\u0131r.</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">isLoaded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            error\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">,</span> isLoaded<span class=\"token punctuation\">,</span> items <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Error: </span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a class=\"external-link\" href=\"https://reactjs.org/docs/hooks-intro.html\">Hooks</a> ile kar\u015f\u0131l\u0131\u011f\u0131 burada: </p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">,</span> setError<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoaded<span class=\"token punctuation\">,</span> setIsLoaded<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">,</span> setItems<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Note: the empty deps array [] means</span>\n  <span class=\"token comment\">// this useEffect will run once</span>\n  <span class=\"token comment\">// similar to componentDidMount()</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.example.com/items\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=&gt;</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setItems</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Note: it's important to handle errors here</span>\n        <span class=\"token comment\">// instead of a catch() block so that we don't swallow</span>\n        <span class=\"token comment\">// exceptions from actual bugs in components.</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setIsLoaded</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Error: </span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-ajax.md\">Edit this page</a></p></div></article>", "path": "/react/faq-ajax", "nav": ["/react/design-principles", "/react/faq-build"]}, {"key": "Babel, JSX, ve Kurulum A\u015famalar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"do-i-need-to-use-jsx-with-react\"><a class=\"anchor\" href=\"/react/faq-build#do-i-need-to-use-jsx-with-react\"></a>JSX\u2019i React ile kullanmam gerekir mi? </h3>\n<p>Hay\u0131r! Daha fazlas\u0131n\u0131 \u00f6\u011frenmek i\u00e7in <a href=\"/react/react-without-jsx\">\u201cJSX Olmadan React\u201d</a> b\u00f6l\u00fcm\u00fcne g\u00f6z at\u0131n.</p>\n<h3 id=\"do-i-need-to-use-es6--with-react\"><a class=\"anchor\" href=\"/react/faq-build#do-i-need-to-use-es6--with-react\"></a>ES6 (+)\u2018y\u0131 React ile kullanmam gerekir mi? </h3>\n<p>Hay\u0131r! Daha fazlas\u0131n\u0131 \u00f6\u011frenmek i\u00e7in <a href=\"/react/react-without-es6\">\u201cES6 Olmadan React\u201d</a> b\u00f6l\u00fcm\u00fcne g\u00f6z at\u0131n.</p>\n<h3 id=\"how-can-i-write-comments-in-jsx\"><a class=\"anchor\" href=\"/react/faq-build#how-can-i-write-comments-in-jsx\"></a>JSX\u2019te nas\u0131l yorum yazabilirim? </h3>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Yorum buraya gelecek */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Ayr\u0131ca \u00e7ok sat\u0131rl\u0131\n  yorumlar da \u00e7al\u0131\u015f\u0131r. */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">! \n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-build.md\">Edit this page</a></p></div></article>", "path": "/react/faq-build", "nav": ["/react/faq-ajax", "/react/faq-functions"]}, {"key": "Bile\u015fenlere Fonksiyon G\u00f6ndermek", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"how-do-i-pass-an-event-handler-like-onclick-to-a-component\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-pass-an-event-handler-like-onclick-to-a-component\"></a>Bir bile\u015fene nas\u0131l olay y\u00f6neticisi g\u00f6nderebilirim? (onClick gibi) </h3>\n<p>Olay y\u00f6neticileri ve di\u011fer fonksiyonlar alt bile\u015fenlere prop olarak aktar\u0131labilir:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n<p>E\u011fer olay y\u00f6neticisi i\u00e7inden  bir \u00fcst bile\u015fene eri\u015fmeniz gerekiyorsa, fonksiyonu ayn\u0131 zamanda bile\u015fene ba\u011flaman\u0131z gerekir. (a\u015fa\u011f\u0131ya bak\u0131n).</p>\n<h3 id=\"how-do-i-bind-a-function-to-a-component-instance\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-bind-a-function-to-a-component-instance\"></a>Bir fonksiyonu bir bile\u015fene nas\u0131l ba\u011flar\u0131m? </h3>\n<p>Fonksiyonlar\u0131n <code class=\"language-javascript\">this.props</code> ve <code class=\"language-javascript\">this.state</code> gibi bile\u015fen niteliklerine eri\u015fmelerini sa\u011flamak i\u00e7in \u00e7e\u015fitli yollar vard\u0131r. Bunlar hangi s\u00f6zdizimi ve yap\u0131 ad\u0131mlar\u0131n\u0131 kulland\u0131\u011f\u0131n\u0131za ba\u011fl\u0131 olarak de\u011fi\u015febilir.</p>\n<h4 id=\"bind-in-constructor-es2015\"><a class=\"anchor\" href=\"/react/faq-functions#bind-in-constructor-es2015\"></a>Yap\u0131land\u0131r\u0131c\u0131 i\u00e7inde ba\u011flamak (ES2015) </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click happened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"class-properties-es2022\"><a class=\"anchor\" href=\"/react/faq-functions#class-properties-es2022\"></a>S\u0131n\u0131f \u00d6zellikleri </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click happened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"bind-in-render\"><a class=\"anchor\" href=\"/react/faq-functions#bind-in-render\"></a>Render i\u00e7erisinde ba\u011flamak </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click happened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Render i\u00e7erisinde <code class=\"language-javascript\">Function.prototype.bind</code> kullanmak, bile\u015fen her render edildi\u011finde yeni bir fonksiyon olu\u015fturur. Bu da performans kay\u0131plar\u0131na sebep olabilir.</p>\n</div>\n<h4 id=\"arrow-function-in-render\"><a class=\"anchor\" href=\"/react/faq-functions#arrow-function-in-render\"></a>Render i\u00e7erisinde ok fonksiyonu </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click happened'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Render i\u00e7erisinde ok fonksiyonu kullanmak, bile\u015fen her render edildi\u011finde yeni bir fonksiyon olu\u015fturur. Bu da, kat\u0131 bir kimlik kar\u015f\u0131la\u015ft\u0131rmas\u0131na dayal\u0131 performans kay\u0131plar\u0131na yol a\u00e7abilir.</p>\n</div>\n<h3 id=\"is-it-ok-to-use-arrow-functions-in-render-methods\"><a class=\"anchor\" href=\"/react/faq-functions#is-it-ok-to-use-arrow-functions-in-render-methods\"></a>Render metodu i\u00e7erisinde ok fonksiyonu kullanmak do\u011fru mudur? </h3>\n<p>Genel olarak konu\u015fursak, evet do\u011frudur ve genellikle parametreleri geri \u00e7a\u011f\u0131rma fonksiyonlar\u0131na (callback) g\u00f6ndermenin en kolay yoludur.</p>\n<p>E\u011fer performans sorunlar\u0131n\u0131z varsa, optimize edin!</p>\n<h3 id=\"why-is-binding-necessary-at-all\"><a class=\"anchor\" href=\"/react/faq-functions#why-is-binding-necessary-at-all\"></a>Fonksiyonlar\u0131 ba\u011flamak neden gerekli? </h3>\n<p>JavaScript\u2019te a\u015fa\u011f\u0131daki iki kod par\u00e7ac\u0131\u011f\u0131 ayn\u0131 <strong>de\u011fil</strong>dir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> method <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span>\n<span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Metodlar\u0131 ba\u011flamak, ikinci kod par\u00e7ac\u0131\u011f\u0131n\u0131n birincisiyle ayn\u0131 \u015fekilde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.</p>\n<p>React\u2019te genellikle sadece di\u011fer bile\u015fenlere <em>g\u00f6nderdi\u011finiz</em> metodlar\u0131 ba\u011flaman\u0131z gerekir. \u00d6rne\u011fin <code class=\"language-javascript\">&lt;button onClick={this.handleClick}&gt;</code>, <code class=\"language-javascript\">this.handleClick</code> fonksiyonunu g\u00f6ndermektedir. Bu y\u00fczden bu metodu ba\u011flaman\u0131z gerekir. Ancak <code class=\"language-javascript\">render</code> metodunu veya di\u011fer ya\u015fam d\u00f6ng\u00fcs\u00fc metodlar\u0131n\u0131 ba\u011flamak gereksizdir \u00e7\u00fcnk\u00fc bunlar di\u011fer bile\u015fenlere aktar\u0131lmazlar.</p>\n<p><a class=\"external-link\" href=\"https://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/\">Yehuda Katz\u2019\u0131n bu yaz\u0131s\u0131</a> ba\u011flaman\u0131n ne oldu\u011funu ve fonksiyonlar\u0131n JavaScript\u2019te nas\u0131l \u00e7al\u0131\u015ft\u0131klar\u0131n\u0131 detayl\u0131 olarak a\u00e7\u0131klamaktad\u0131r.</p>\n<h3 id=\"why-is-my-function-being-called-every-time-the-component-renders\"><a class=\"anchor\" href=\"/react/faq-functions#why-is-my-function-being-called-every-time-the-component-renders\"></a>Neden fonksiyonum, bile\u015fen her render oldu\u011funda yeniden \u00e7a\u011f\u0131r\u0131l\u0131yor? </h3>\n<p>Fonksiyonu bir bile\u015fene aktard\u0131\u011f\u0131n\u0131zda, onu <em>\u00e7a\u011f\u0131rmad\u0131\u011f\u0131n\u0131zdan</em> emin olun.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Yanl\u0131\u015f: handleClick referans olarak aktar\u0131lmak yerine \u00e7a\u011f\u0131r\u0131l\u0131yor!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bunun yerine, <em>fonksiyonun kendisini aktar\u0131n</em> (parantezler olmadan):</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do\u011fru: handleClick referans olarak aktar\u0131l\u0131yor!</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Click Me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"how-do-i-pass-a-parameter-to-an-event-handler-or-callback\"><a class=\"anchor\" href=\"/react/faq-functions#how-do-i-pass-a-parameter-to-an-event-handler-or-callback\"></a>Bir olay y\u00f6neticisine veya geri \u00e7a\u011f\u0131rma fonksiyonuna nas\u0131l parametre g\u00f6nderirim? </h3>\n<p>Bir olay y\u00f6neticisini sarmalamak ve parametre g\u00f6ndermek i\u00e7in ok fonksiyonunu kullanabilirsiniz:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<p>Bu <code class=\"language-javascript\">.bind</code>\u2018\u0131 \u00e7a\u011f\u0131rmakla ayn\u0131d\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span></code></pre></div>\n<h4 id=\"example-passing-params-using-arrow-functions\"><a class=\"anchor\" href=\"/react/faq-functions#example-passing-params-using-arrow-functions\"></a>\u00d6rnek: Parametreleri ok fonksiyonu kullanarak g\u00f6ndermek </h4>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">65</span> <span class=\"token comment\">// ASCII karakter kodu</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Alphabet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">justClicked</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">letters</span><span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">justClicked</span><span class=\"token operator\">:</span> letter <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Just clicked: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>justClicked<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>letters<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span> <span class=\"token operator\">=&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"example-passing-params-using-data-attributes\"><a class=\"anchor\" href=\"/react/faq-functions#example-passing-params-using-data-attributes\"></a>\u00d6rnek: Veri niteliklerini kullanarak parametre g\u00f6ndermek </h4>\n<p>Alternatif olarak, olay y\u00f6neticileri i\u00e7in gereken verileri saklamak i\u00e7in DOM API\u2019lerini kullanabilirsiniz. \u00c7ok say\u0131da \u00f6\u011feyi optimize etmeniz gerekiyorsa veya React.PureComponent e\u015fitlik kontrollerine dayanan bir render a\u011fac\u0131na sahipseniz bu yakla\u015f\u0131m\u0131 g\u00f6z \u00f6n\u00fcnde bulundurun.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">65</span> <span class=\"token comment\">// ASCII karakter kodu</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Alphabet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">justClicked</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">letters</span><span class=\"token operator\">:</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">justClicked</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>letter\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        Just clicked: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>justClicked<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>letters<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">letter</span> <span class=\"token operator\">=&gt;</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">data-letter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>letter<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\"><a class=\"anchor\" href=\"/react/faq-functions#how-can-i-prevent-a-function-from-being-called-too-quickly-or-too-many-times-in-a-row\"></a>Bir fonksiyonun arka arkaya \u00e7ok defa veya \u00e7ok h\u0131zl\u0131 bir \u015fekilde \u00e7a\u011f\u0131r\u0131lmas\u0131n\u0131 nas\u0131l \u00f6nleyebilirim? </h3>\n<p><code class=\"language-javascript\">onClick</code> veya <code class=\"language-javascript\">onScroll</code> gibi bir olay y\u00f6neticiniz varsa ve geri \u00e7a\u011f\u0131r\u0131lman\u0131n \u00e7ok h\u0131zl\u0131 bir \u015fekilde ba\u015flat\u0131lmas\u0131n\u0131 istemiyorsan\u0131z, a\u015fa\u011f\u0131daki y\u00f6ntemlerle y\u00fcr\u00fct\u00fclme s\u0131kl\u0131\u011f\u0131n\u0131 s\u0131n\u0131rlayabilirsiniz. </p>\n<ul>\n<li><strong>daraltma</strong>: de\u011fi\u015fiklikleri zamana dayal\u0131 bir frekansa g\u00f6re \u00f6rnekler (\u00f6rne\u011fin <a class=\"external-link\" href=\"https://lodash.com/docs#throttle\"><code class=\"language-javascript\">_.throttle</code></a>)</li>\n<li><strong>s\u0131\u00e7rama \u00f6nleme</strong>: belirli bir s\u00fcre i\u015flem yap\u0131lmad\u0131\u011f\u0131nda tetiklenir (\u00f6rne\u011fin <a class=\"external-link\" href=\"https://lodash.com/docs#debounce\"><code class=\"language-javascript\">_.debounce</code></a>)</li>\n<li><strong><code class=\"language-javascript\">requestAnimationFrame</code> daraltmas\u0131</strong>: de\u011fi\u015fiklikleri <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\"><code class=\"language-javascript\">requestAnimationFrame</code></a>\u2018e dayanarak \u00f6rnekler (\u00f6rne\u011fin <a class=\"external-link\" href=\"https://github.com/alexreardon/raf-schd\"><code class=\"language-javascript\">raf-schd</code></a>)</li>\n</ul>\n<p><code class=\"language-javascript\">Daraltma</code> ve <code class=\"language-javascript\">s\u0131\u00e7rama \u00f6nleme</code> kar\u015f\u0131la\u015ft\u0131rmas\u0131 i\u00e7in <a class=\"external-link\" href=\"http://demo.nimius.net/debounce_throttle/\">bu g\u00f6rselle\u015ftirme</a>\u2018ye bak\u0131n\u0131z.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p><code class=\"language-javascript\">_.debounce</code>, <code class=\"language-javascript\">_.throttle</code> ve <code class=\"language-javascript\">raf-schd</code> geciken geri \u00e7a\u011f\u0131rmalar\u0131 iptal etmek i\u00e7in bir <code class=\"language-javascript\">cancel</code> metodu sa\u011flarlar.  Bu metodu <code class=\"language-javascript\">componentWillUnmount</code> i\u00e7inden \u00e7a\u011f\u0131rmal\u0131 <em>ya da</em> bile\u015fenin hala geciken fonksiyon i\u00e7inde ba\u011fl\u0131 oldu\u011fundan emin olmal\u0131s\u0131n\u0131z.</p>\n</div>\n<h4 id=\"throttle\"><a class=\"anchor\" href=\"/react/faq-functions#throttle\"></a>Daraltma </h4>\n<p>Daraltma, bir fonksiyonun belirli bir zaman aral\u0131\u011f\u0131nda bir defadan fazla \u00e7a\u011f\u0131r\u0131lmas\u0131n\u0131 \u00f6nler. A\u015fa\u011f\u0131daki \u00f6rnekte bir \u201ct\u0131klama\u201d olay y\u00f6neticisinin saniyede birden \u00e7ok kez \u00e7a\u011f\u0131r\u0131lmas\u0131 daraltma y\u00f6ntemiyle \u00f6nlenmi\u015ftir.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> throttle <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash.throttle'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LoadMoreButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClickThrottled<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Load More</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">loadMore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"debounce\"><a class=\"anchor\" href=\"/react/faq-functions#debounce\"></a>S\u0131\u00e7rama \u00f6nleme </h4>\n<p>S\u0131\u00e7rama \u00f6nleme, bir fonksiyonun son \u00e7a\u011f\u0131r\u0131ld\u0131\u011f\u0131 andan itibaren belirli bir s\u00fcre ge\u00e7inceye kadar tekrar y\u00fcr\u00fct\u00fclmemesini sa\u011flar. Bu, \u00e7ok h\u0131zl\u0131 bir \u015fekilde tetiklenebilecek bir olay y\u00f6neticisine (\u00f6rne\u011fin klavye veya kayd\u0131rma olaylar\u0131na) yan\u0131t olarak masrafl\u0131 hesaplamalar yapman\u0131z gerekti\u011fi zamanlarda \u00e7ok yararl\u0131 olabilir. A\u015fa\u011f\u0131daki \u00f6rnekte olay y\u00f6neticisi, 250ms boyunca metin giri\u015fi olmad\u0131\u011f\u0131nda \u00e7a\u011f\u0131r\u0131lmak \u00fczere kurulmu\u015ftur.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> debounce <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash.debounce'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Searchbox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChangeDebounced <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChange<span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitChangeDebounced<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Search...<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">defaultValue</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">emitChangeDebounced</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">emitChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"requestanimationframe-throttling\"><a class=\"anchor\" href=\"/react/faq-functions#requestanimationframe-throttling\"></a><code class=\"language-javascript\">requestAnimationFrame</code> daraltmas\u0131 </h4>\n<p><a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\"><code class=\"language-javascript\">requestAnimationFrame</code></a>, render edilme performans\u0131n\u0131 art\u0131rmak i\u00e7in bir metodun taray\u0131c\u0131da en uygun zamanda \u00e7al\u0131\u015ft\u0131r\u0131lmak \u00fczere s\u0131raya konulmas\u0131 i\u015flemidir. <code class=\"language-javascript\">requestAnimationFrame</code> ile s\u0131raya konulan bir fonksiyon, bir sonraki \u00e7er\u00e7evede \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Taray\u0131c\u0131lar, saniyede 60 kare (60 fps) g\u00f6r\u00fcnt\u00fc sunuldu\u011fundan emin olmak i\u00e7in y\u00fcksek \u00e7aba sarf eder. Ancak bunu ba\u015faramad\u0131klar\u0131nda, saniyede g\u00f6sterilen kare say\u0131s\u0131 do\u011fal olarak limitlenecektir. \u00d6rne\u011fin bir cihaz saniyede sadece 30 kare i\u015fleyebilecek kapasitedeyse, saniyede maksimum 30 kare g\u00f6r\u00fcnt\u00fc g\u00f6sterebilir. <code class=\"language-javascript\">requestAnimationFrame</code> daraltmas\u0131, bir saniyede 60\u2019tan fazla g\u00fcncelleme yap\u0131lmas\u0131n\u0131 \u00f6nleyen kullan\u0131\u015fl\u0131 bir tekniktir. E\u011fer saniyede 100 g\u00fcncelleme yap\u0131yorsan\u0131z, kullan\u0131c\u0131lar\u0131n\u0131z\u0131n zaten g\u00f6remeyece\u011fi ama taray\u0131c\u0131ya ek y\u00fck bindiren gereksiz i\u015flemler yap\u0131yor olabilirsiniz.</p>\n<div class=\"blockquote\">\n<strong>Not:</strong>\n<p>Bu tekni\u011fin kullan\u0131lmas\u0131 sadece bir \u00e7er\u00e7evede yay\u0131nlanan son de\u011feri yakalayacakt\u0131r. Bu optimizasyonun nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131n bir \u00f6rne\u011fini <a class=\"external-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/Events/scroll\"><code class=\"language-javascript\">MDN</code></a>\u2018de g\u00f6rebilirsiniz.</p>\n</div>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> rafSchedule <span class=\"token keyword\">from</span> <span class=\"token string\">'raf-schd'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScrollListener</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleScroll</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// G\u00fcncellemeleri planlamak i\u00e7in yeni bir fonksiyon olu\u015fturulur.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scheduleUpdate <span class=\"token operator\">=</span> <span class=\"token function\">rafSchedule</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">point</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onScroll</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleScroll</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Bir kayd\u0131rma etkinli\u011fi al\u0131nd\u0131\u011f\u0131nda, bir g\u00fcncelleme planlan\u0131r.</span>\n    <span class=\"token comment\">// Bir \u00e7er\u00e7eve i\u00e7inde bir\u00e7ok g\u00fcncelleme al\u0131n\u0131rsa, sadece en son de\u011fer yay\u0131nlan\u0131r.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduleUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Bile\u015fen umnount edilece\u011finden, bekleyen t\u00fcm g\u00fcncellemeler iptal edilir.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scheduleUpdate<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> <span class=\"token string\">'scroll'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onScroll</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleScroll<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/my-huge-image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"testing-your-rate-limiting\"><a class=\"anchor\" href=\"/react/faq-functions#testing-your-rate-limiting\"></a>S\u0131kl\u0131k s\u0131n\u0131rlamas\u0131n\u0131n test edilmesi </h4>\n<p>S\u0131kl\u0131k s\u0131n\u0131rlamas\u0131 (rate limiting) kodunuzun do\u011fru \u00e7al\u0131\u015f\u0131p \u00e7al\u0131\u015fmad\u0131\u011f\u0131n\u0131 test ederken, zaman\u0131 ileri sarabilme \u00f6zelli\u011fine sahip olmak \u00e7ok yard\u0131mc\u0131 olacakt\u0131r. E\u011fer <a class=\"external-link\" href=\"https://facebook.github.io/jest/\"><code class=\"language-javascript\">jest</code></a> kullan\u0131yorsan\u0131z, zaman\u0131 ileri sarmak i\u00e7in <a class=\"external-link\" href=\"https://facebook.github.io/jest/docs/en/timer-mocks.html\"><code class=\"language-javascript\">mock timers</code></a> kullanabilirsiniz. E\u011fer <code class=\"language-javascript\">requestAnimationFrame</code> daraltmas\u0131 kullan\u0131yorsan\u0131z, <a class=\"external-link\" href=\"https://github.com/alexreardon/raf-stub\"><code class=\"language-javascript\">raf-stub</code></a> animasyon \u00e7er\u00e7evelerini ileri sarmak i\u00e7in kullan\u0131\u015fl\u0131 bir ara\u00e7 olabilir.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-functions.md\">Edit this page</a></p></div></article>", "path": "/react/faq-functions", "nav": ["/react/faq-build", "/react/faq-state"]}, {"key": "Bile\u015fenin Durumu", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"what-does-setstate-do\"><a class=\"anchor\" href=\"/react/faq-state#what-does-setstate-do\"></a><code class=\"language-javascript\">setState</code> ne yapar? </h3>\n<p><code class=\"language-javascript\">setState()</code>, bir bile\u015fenin <code class=\"language-javascript\">state</code> nesnesine bir g\u00fcncelleme planlar. State de\u011fi\u015fti\u011finde, bile\u015fen yeniden render ederek kar\u015f\u0131l\u0131k verir.</p>\n<h3 id=\"what-is-the-difference-between-state-and-props\"><a class=\"anchor\" href=\"/react/faq-state#what-is-the-difference-between-state-and-props\"></a><code class=\"language-javascript\">state</code> ve <code class=\"language-javascript\">props</code> aras\u0131ndaki fark nedir? </h3>\n<p><a href=\"/react/components-and-props\"><code class=\"language-javascript\">props</code></a> (\u201cproperties\u201d k\u0131saltmas\u0131) ve <a href=\"/react/state-and-lifecycle\"><code class=\"language-javascript\">state</code></a>, her ikisi de d\u00fcz JavaScript nesneleridir. Her ikisi de render etmenin \u00e7\u0131kt\u0131s\u0131n\u0131 etkileyen bilgileri tutarken, \u00f6nemli bir y\u00f6nden farkl\u0131d\u0131rlar: <code class=\"language-javascript\">props</code>, <em>bile\u015fene</em> iletilirken (fonksiyon parametrelerine benzer), <code class=\"language-javascript\">state</code> <em>bile\u015fende</em> y\u00f6netilir (bir fonksiyon i\u00e7inde tan\u0131mlanan de\u011fi\u015fkenlere benzer).</p>\n<p>\u0130\u015fte <code class=\"language-javascript\">props</code> ve <code class=\"language-javascript\">state</code>in ne zaman kullan\u0131laca\u011f\u0131 hakk\u0131nda daha fazla okumak i\u00e7in birka\u00e7 iyi kaynak:</p>\n<ul>\n<li><a class=\"external-link\" href=\"https://github.com/uberVU/react-guide/blob/master/props-vs-state.md\">Props vs State</a></li>\n<li><a class=\"external-link\" href=\"https://lucybain.com/blog/2016/react-state-vs-pros/\">ReactJS: Props vs. State</a></li>\n</ul>\n<h3 id=\"why-is-setstate-giving-me-the-wrong-value\"><a class=\"anchor\" href=\"/react/faq-state#why-is-setstate-giving-me-the-wrong-value\"></a>Neden <code class=\"language-javascript\">setState</code> bana yanl\u0131\u015f bir de\u011fer veriyor? </h3>\n<p>React\u2019te, hem <code class=\"language-javascript\">this.props</code> hem de <code class=\"language-javascript\">this.state</code> <em>render edilmi\u015f</em> de\u011ferleri, yani \u015fu anda ekranda olanlar\u0131 belirtir.</p>\n<p><code class=\"language-javascript\">setState</code>\u2018e yap\u0131lan \u00e7a\u011fr\u0131lar asenkrondur - <code class=\"language-javascript\">setState</code> \u00e7a\u011fr\u0131s\u0131 yapt\u0131ktan hemen sonra yeni de\u011feri yans\u0131tmak i\u00e7in <code class=\"language-javascript\">this.state</code>\u2018e g\u00fcvenmeyin. Mevcut state\u2019e g\u00f6re de\u011ferleri hesaplaman\u0131z gerekiyorsa, nesne yerine g\u00fcncelleyici bir fonksiyon iletin (ayr\u0131nt\u0131lar i\u00e7in a\u015fa\u011f\u0131ya bak\u0131n).</p>\n<p>Beklendi\u011fi gibi <em>davranmayacak</em> kod \u00f6rne\u011fi:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Not: bu ama\u00e7land\u0131\u011f\u0131 gibi *\u00e7al\u0131\u015fmayacakt\u0131r*.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">handleSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// `this.state.count` 0 olarak ba\u015flar diyelim.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// React bile\u015feni yeniden render etti\u011finde, `this.state.count` 1 olur, ancak 3 olacak sand\u0131n.</span>\n\n  <span class=\"token comment\">// Bunun sebebi yukar\u0131daki `incrementCount()` fonksiyonunun `this.state.count`'tan okumas\u0131d\u0131r,</span>\n  <span class=\"token comment\">// ancak React, bile\u015fen yeniden render edilene kadar `this.state.count`'u g\u00fcncellemez.</span>\n  <span class=\"token comment\">// B\u00f6ylece `incrementCount()`, `this.state.count`'u her seferinde 0 olarak okumu\u015f ve 1 olarak set etmi\u015f olur.</span>\n\n  <span class=\"token comment\">// \u00c7\u00f6z\u00fcm a\u015fa\u011f\u0131da a\u00e7\u0131klanm\u0131\u015ft\u0131r!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bu sorunu nas\u0131l \u00e7\u00f6zece\u011finizi \u00f6\u011frenmek i\u00e7in a\u015fa\u011f\u0131ya bak\u0131n\u0131z.</p>\n<h3 id=\"how-do-i-update-state-with-values-that-depend-on-the-current-state\"><a class=\"anchor\" href=\"/react/faq-state#how-do-i-update-state-with-values-that-depend-on-the-current-state\"></a>State\u2019i mevcut state\u2019e ba\u011fl\u0131 de\u011ferlerle nas\u0131l g\u00fcncellerim? </h3>\n<p>\u00c7a\u011fr\u0131n\u0131n her zaman state\u2019in en g\u00fcncel s\u00fcr\u00fcm\u00fcn\u00fc kulland\u0131\u011f\u0131ndan emin olmak i\u00e7in <code class=\"language-javascript\">setState</code>\u2018e nesne yerine bir fonksiyon iletin (a\u015fa\u011f\u0131ya bak\u0131n\u0131z).</p>\n<h3 id=\"what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\"><a class=\"anchor\" href=\"/react/faq-state#what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\"></a><code class=\"language-javascript\">setState</code>\u2018teki bir nesneyi veya fonksiyonu iletmek aras\u0131ndaki fark nedir? </h3>\n<p>Bir g\u00fcncelleme fonksiyonunu iletmek, g\u00fcncelleyicinin i\u00e7indeki mevcut state de\u011ferine eri\u015fmenizi sa\u011flar. <code class=\"language-javascript\">setState</code> \u00e7a\u011fr\u0131lar\u0131 toplu halde i\u015flendi\u011finden, bu, g\u00fcncellemeleri zincirlemenizi ve \u00e7ak\u0131\u015fma yerine birbirlerinin \u00fczerine in\u015fa etmelerini sa\u011flar:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// \u00d6nemli: G\u00fcncelleme yaparken `this.state` yerine` state`'i kullan\u0131n.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">handleSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// `this.state.count` 0 olarak ba\u015flar diyelim.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">incrementCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// `this.state.count`'a \u015fimdi bakarsan\u0131z, hala 0 g\u00f6r\u00fcrs\u00fcn\u00fcz.</span>\n  <span class=\"token comment\">// Fakat React bile\u015feni yeniden render etti\u011finde, 3 olacakt\u0131r.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"/react/react-component#setstate\">setState hakk\u0131nda daha fazla bilgi edinin</a></p>\n<h3 id=\"when-is-setstate-asynchronous\"><a class=\"anchor\" href=\"/react/faq-state#when-is-setstate-asynchronous\"></a><code class=\"language-javascript\">setState</code> ne zaman asenkrondur? </h3>\n<p>\u015eu anda, <code class=\"language-javascript\">setState</code> olay y\u00f6neticileri i\u00e7inde asenkrondur.</p>\n<p>Bu, \u00f6rne\u011fin bir t\u0131klama olay\u0131 s\u0131ras\u0131nda hem <code class=\"language-javascript\">\u00dcst Eleman</code> hem de <code class=\"language-javascript\">Alt Eleman</code> <code class=\"language-javascript\">setState</code> \u00e7a\u011fr\u0131s\u0131 yapt\u0131\u011f\u0131nda, <code class=\"language-javascript\">Alt Eleman</code>\u2018\u0131n iki kez yeniden render edilmemesini sa\u011flar. Bunun yerine, React, taray\u0131c\u0131 olay\u0131n\u0131n sonunda state g\u00fcncellemelerini \u201ctemizler\u201d. Bu, daha b\u00fcy\u00fck uygulamalarda \u00f6nemli performans iyile\u015ftirmeleri sa\u011flar.</p>\n<p>Bu bir uygulama detay\u0131, bu y\u00fczden do\u011frudan buna g\u00fcvenmekten ka\u00e7\u0131n\u0131n. Gelecekteki s\u00fcr\u00fcmlerde, React bir\u00e7ok durumda varsay\u0131lan olarak toplu g\u00fcncelle\u015ftirmeler bar\u0131nd\u0131racak.</p>\n<h3 id=\"why-doesnt-react-update-thisstate-synchronously\"><a class=\"anchor\" href=\"/react/faq-state#why-doesnt-react-update-thisstate-synchronously\"></a>React neden <code class=\"language-javascript\">this.state</code>\u2018i senkron olarak g\u00fcncellemez? </h3>\n<p>\u00d6nceki b\u00f6l\u00fcmde a\u00e7\u0131kland\u0131\u011f\u0131 gibi React, t\u00fcm bile\u015fenler yeniden render edilmeye ba\u015flamadan \u00f6nce olay y\u00f6neticilerinde <code class=\"language-javascript\">setState()</code>\u2018i \u00e7a\u011f\u0131r\u0131ncaya kadar kasten \u201cbekler\u201d. Gereksiz yeniden render etme i\u015flemlerinden ka\u00e7\u0131narak performans\u0131 art\u0131r\u0131r.</p>\n<p>Bununla birlikte, React\u2019in neden yeniden render etmeden hemen <code class=\"language-javascript\">this.state</code>\u2018i g\u00fcncellemedi\u011fini merak ediyor olabilirsiniz.</p>\n<p>\u0130ki ana sebep var:</p>\n<ul>\n<li>Bu, <code class=\"language-javascript\">props</code> ile <code class=\"language-javascript\">state</code> aras\u0131ndaki tutarl\u0131l\u0131\u011f\u0131 bozar ve hata ay\u0131klamas\u0131 zor olan sorunlara neden olur.</li>\n<li>Bu, \u00fczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z baz\u0131 yeni \u00f6zelliklerin uygulanmas\u0131n\u0131 imkans\u0131z k\u0131lar.</li>\n</ul>\n<p>Bu <a class=\"external-link\" href=\"https://github.com/facebook/react/issues/11527#issuecomment-360199710\">GitHub yorumu</a> belirli \u00f6rneklerin derinliklerine iniyor.</p>\n<h3 id=\"should-i-use-a-state-management-library-like-redux-or-mobx\"><a class=\"anchor\" href=\"/react/faq-state#should-i-use-a-state-management-library-like-redux-or-mobx\"></a>Redux veya MobX gibi bir state y\u00f6netimi k\u00fct\u00fcphanesi mi kullanmal\u0131y\u0131m? </h3>\n<p><a class=\"external-link\" href=\"https://redux.js.org/faq/general#when-should-i-use-redux\">Olabilir.</a></p>\n<p>Ek k\u00fct\u00fcphaneleri eklemeden \u00f6nce React\u2019i anlamak iyi bir fikir. Yaln\u0131zca React\u2019i kullanarak olduk\u00e7a karma\u015f\u0131k uygulamalar olu\u015fturabilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-state.md\">Edit this page</a></p></div></article>", "path": "/react/faq-state", "nav": ["/react/faq-functions", "/react/faq-styling"]}, {"key": "Tasar\u0131m ve CSS", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"how-do-i-add-css-classes-to-components\"><a class=\"anchor\" href=\"/react/faq-styling#how-do-i-add-css-classes-to-components\"></a>Bile\u015fenlere CSS s\u0131n\u0131flar\u0131n\u0131 nas\u0131l eklerim? </h3>\n<p>S\u0131n\u0131flar\u0131 <code class=\"language-javascript\">className</code> prop\u2019una string olarak ekleyin:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu navigation-menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Menu</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS s\u0131n\u0131flar\u0131n\u0131n, bile\u015fenin prop\u2019lar\u0131na veya stateine ba\u011fl\u0131 olmas\u0131 yayg\u0131nd\u0131r:</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-jsx\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> className <span class=\"token operator\">=</span> <span class=\"token string\">'menu'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>isActive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    className <span class=\"token operator\">+=</span> <span class=\"token string\">' menu-active'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Menu</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"blockquote\">\n<strong>\u0130pucu</strong>\n<p>Kendinizi s\u0131k s\u0131k b\u00f6yle bir kod yazarken buluyorsan\u0131z, <a class=\"external-link\" href=\"https://www.npmjs.com/package/classnames#usage-with-reactjs\">classnames</a> paketi bunu basitle\u015ftirebilir.</p>\n</div>\n<h3 id=\"can-i-use-inline-styles\"><a class=\"anchor\" href=\"/react/faq-styling#can-i-use-inline-styles\"></a>Sat\u0131r i\u00e7i (inline) stilleri kullanabilir miyim? </h3>\n<p>Evet, stillendirme ile ilgili dok\u00fcmana <a href=\"/react/dom-elements#style\">buradan</a> bak\u0131n.</p>\n<h3 id=\"are-inline-styles-bad\"><a class=\"anchor\" href=\"/react/faq-styling#are-inline-styles-bad\"></a>Sat\u0131r i\u00e7i (inline) stiller k\u00f6t\u00fc m\u00fc? </h3>\n<p>CSS s\u0131n\u0131flar\u0131, performans a\u00e7\u0131s\u0131ndan genellikle sat\u0131r i\u00e7i stillerinden daha iyidir.</p>\n<h3 id=\"what-is-css-in-js\"><a class=\"anchor\" href=\"/react/faq-styling#what-is-css-in-js\"></a>JS-i\u00e7inde-CSS (CSS-in-JS) nedir? </h3>\n<p>\u201cJS-i\u00e7inde-CSS\u201d, CSS\u2019in harici dosyalarda tan\u0131mlanmas\u0131 yerine, JavaScript kullan\u0131larak olu\u015fturuldu\u011fu bir deseni belirtir.</p>\n<p><em>Bu i\u015flevin React\u2019in bir par\u00e7as\u0131 olmad\u0131\u011f\u0131n\u0131, ancak \u00fc\u00e7\u00fcnc\u00fc parti k\u00fct\u00fcphaneler taraf\u0131ndan sa\u011fland\u0131\u011f\u0131n\u0131 unutmay\u0131n.</em> React, stillerin nas\u0131l tan\u0131mland\u0131\u011f\u0131 hakk\u0131nda bir g\u00f6r\u00fc\u015fe sahip de\u011fildir; \u015f\u00fcpheniz varsa, stillerinizi her zamanki gibi ayr\u0131 bir <code class=\"language-javascript\">*.css</code> dosyas\u0131nda tan\u0131mlamak ve <a href=\"/react/dom-elements#classname\"><code class=\"language-javascript\">className</code></a> kullanarak bunlara eri\u015fmek iyi bir ba\u015flang\u0131\u00e7 noktas\u0131d\u0131r.</p>\n<h3 id=\"can-i-do-animations-in-react\"><a class=\"anchor\" href=\"/react/faq-styling#can-i-do-animations-in-react\"></a>React\u2019te animasyon yapabilir miyim? </h3>\n<p>React, animasyonlara g\u00fc\u00e7 vermek i\u00e7in kullan\u0131labilir. \u00d6rne\u011fin, <a class=\"external-link\" href=\"https://reactcommunity.org/react-transition-group/\">React Transition Group</a>, <a class=\"external-link\" href=\"https://github.com/chenglou/react-motion\">React Motion</a> , <a class=\"external-link\" href=\"https://github.com/react-spring/react-spring\">React Spring</a> veya <a class=\"external-link\" href=\"https://framer.com/motion\">Framer Motion</a> \u2018a bakabilirsiniz.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-styling.md\">Edit this page</a></p></div></article>", "path": "/react/faq-styling", "nav": ["/react/faq-state", "/react/faq-structure"]}, {"key": "Dosya Yap\u0131lar\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"is-there-a-recommended-way-to-structure-react-projects\"><a class=\"anchor\" href=\"/react/faq-structure#is-there-a-recommended-way-to-structure-react-projects\"></a>React projelerini yap\u0131land\u0131rmak i\u00e7in \u00f6nerilen bir yol var m\u0131? </h3>\n<p>React dosyalar\u0131n\u0131 klas\u00f6rlere nas\u0131l yerle\u015ftirece\u011finize dair genel bir kanaat bulunmamaktad\u0131r. Ancak dikkate almak isteyebilece\u011finiz ve ekosistemde pop\u00fcler birka\u00e7 yayg\u0131n yakla\u015f\u0131m bulunmaktad\u0131r.</p>\n<h4 id=\"grouping-by-features-or-routes\"><a class=\"anchor\" href=\"/react/faq-structure#grouping-by-features-or-routes\"></a>\u00d6zelliklere veya rotalara g\u00f6re grupland\u0131rma </h4>\n<p>Projeleri yap\u0131land\u0131rmak i\u00e7in kullan\u0131lan yayg\u0131n y\u00f6ntemlerden biri; CSS, JS ve testleri \u00f6zellik veya rotalara g\u00f6re gruplanan klas\u00f6rlerin i\u00e7ine beraber koymakt\u0131r.</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">common/\n  Avatar.js\n  Avatar.css\n  APIUtils.js\n  APIUtils.test.js\nfeed/\n  index.js\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  FeedAPI.js\nprofile/\n  index.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css\n  ProfileAPI.js</code></pre></div>\n<p>\u201c\u00d6zellik\u201d tan\u0131m\u0131 evrensel de\u011fildir ve ayr\u0131nt\u0131 derecesini se\u00e7mek size b\u0131rak\u0131lm\u0131\u015ft\u0131r. E\u011fer bir \u00fcst d\u00fczey klas\u00f6rler listesi ortaya \u00e7\u0131karamazsan\u0131z, kullan\u0131c\u0131lar\u0131n\u0131za \u00fcr\u00fcn\u00fcn\u00fcz\u00fcn hangi ana b\u00f6l\u00fcmlerden olu\u015ftu\u011funu sorabilir ve ak\u0131llar\u0131ndaki modeli bir taslak olarak kullanabilirsiniz.</p>\n<h4 id=\"grouping-by-file-type\"><a class=\"anchor\" href=\"/react/faq-structure#grouping-by-file-type\"></a>Dosya t\u00fcr\u00fcne g\u00f6re grupland\u0131rma </h4>\n<p>Projeleri yap\u0131land\u0131rman\u0131n bir di\u011fer pop\u00fcler y\u00f6ntemi ise benzer dosyalar\u0131 birlikte grupland\u0131rmakt\u0131r. \u00d6rne\u011fin;</p>\n<div class=\"gatsby-highlight\"><pre class=\"gatsby-code-text\"><code class=\"language-javascript\">api/\n  APIUtils.js\n  APIUtils.test.js\n  ProfileAPI.js\n  UserAPI.js\ncomponents/\n  Avatar.js\n  Avatar.css\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css</code></pre></div>\n<p>Baz\u0131 insanlar daha da ileri gidip, bile\u015fenleri uygulamadaki rollerine g\u00f6re farkl\u0131 klas\u00f6rlere ay\u0131rmay\u0131 tercih ederler. \u00d6rne\u011fin <a class=\"external-link\" href=\"http://bradfrost.com/blog/post/atomic-web-design/\">Atomic Design</a>, bu ilkeye dayal\u0131 bir tasar\u0131m metodolojisidir. Bu t\u00fcr metodolojilerin takip edilmesi gereken kat\u0131 kurallardan ziyade, yard\u0131mc\u0131 \u00f6rnekler olarak de\u011ferlendirilmesi  daha verimli olacakt\u0131r.</p>\n<h4 id=\"avoid-too-much-nesting\"><a class=\"anchor\" href=\"/react/faq-structure#avoid-too-much-nesting\"></a>\u00c7ok fazla i\u00e7 i\u00e7e koymaktan ka\u00e7\u0131n\u0131n </h4>\n<p>Javascript projelerinde klas\u00f6rleri derinlemesine i\u00e7 i\u00e7e koyman\u0131n \u00e7ok fazla zararl\u0131 noktas\u0131 bulunmaktad\u0131r. Klas\u00f6rler aras\u0131 ba\u011f\u0131l import\u2019lar yazmak veya dosyalar ta\u015f\u0131nd\u0131\u011f\u0131nda bu import\u2019lar\u0131 g\u00fcncellemek git gide zorla\u015f\u0131r. Derinlemesine bir dizin yap\u0131s\u0131 kullanmak i\u00e7in \u00e7ok zorlay\u0131c\u0131 bir nedeniniz olmad\u0131\u011f\u0131 s\u00fcrece, kendinizi tek bir proje i\u00e7in en fazla \u00fc\u00e7 ya da d\u00f6rt i\u00e7 i\u00e7e klas\u00f6r kullanmakla s\u0131n\u0131rlamay\u0131 d\u00fc\u015f\u00fcnebilirsiniz. Tabii ki bu sadece bir \u00f6neridir ve sizin projeniz i\u00e7in uygun olmayabilir.</p>\n<h4 id=\"dont-overthink-it\"><a class=\"anchor\" href=\"/react/faq-structure#dont-overthink-it\"></a>\u00c7ok fazla d\u00fc\u015f\u00fcnmeyin </h4>\n<p>E\u011fer bir projeye hen\u00fcz yeni ba\u015fl\u0131yorsan\u0131z, dizin yap\u0131s\u0131 \u00fczerine <a class=\"external-link\" href=\"https://eksisozluk.com/analysis-paralysis--833201\">be\u015f dakikadan daha fazla zaman harcamay\u0131n</a>. Yukar\u0131daki yakla\u015f\u0131mlardan herhangi birini se\u00e7in (veya kendi y\u00f6nteminizi getirin) ve kod yazmaya ba\u015flay\u0131n! Biraz ger\u00e7ek kod yazd\u0131ktan sonra bu husus hakk\u0131nda muhtemelen yeniden d\u00fc\u015f\u00fcnmek isteyeceksinizdir.</p>\n<p>E\u011fer tamamen \u00e7\u0131kmaza girdiyseniz, t\u00fcm dosyalar\u0131 tek bir klas\u00f6rde tutarak ba\u015flay\u0131n. Eninde sonunda projeniz baz\u0131 dosyalar\u0131 di\u011ferlerinden ay\u0131rmak isteyece\u011finiz kadar b\u00fcy\u00fcyecek. O zamana kadar hangi dosyalar\u0131 \u00e7o\u011fu kez birlikte d\u00fczenledi\u011finizi s\u00f6ylemeye yetecek kadar bilginiz olacakt\u0131r. Genel olarak, s\u0131kl\u0131kla birlikte de\u011fi\u015ftirilen dosyalar\u0131 birbirlerine yak\u0131n tutmak iyi bir fikirdir. Bu prensip, \u201cortak yerle\u015fim\u201d olarak adland\u0131r\u0131l\u0131r.</p>\n<p>Projeler b\u00fcy\u00fcd\u00fck\u00e7e, pratikte yukar\u0131daki yakla\u015f\u0131mlar\u0131n her ikisinin de bir kar\u0131\u015f\u0131m\u0131 uygulan\u0131r. Yani ba\u015flang\u0131\u00e7ta \u201cdo\u011fru\u201d olan\u0131 se\u00e7mek \u00e7ok \u00f6nemli de\u011fil.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-structure.md\">Edit this page</a></p></div></article>", "path": "/react/faq-structure", "nav": ["/react/faq-styling", "/react/faq-versioning"]}, {"key": "S\u00fcr\u00fcmleme Politikas\u0131", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><p>React <a class=\"external-link\" href=\"https://semver.org/lang/tr/\">anlamsal s\u00fcr\u00fcmleme (semver)</a> prensiplerini uygulamaktad\u0131r.</p>\n<p>Bu demektir ki s\u00fcr\u00fcm numaras\u0131 <strong>x.y.z</strong> ile:</p>\n<ul>\n<li><strong>Kritik hata d\u00fczeltmelerini</strong> yay\u0131nlarken <strong>z</strong> de\u011ferini g\u00fcncelleyerek <strong>yama s\u00fcr\u00fcm\u00fcn\u00fc</strong> yay\u0131nlar\u0131z (\u00d6rne\u011fin: 15.6.2\u2019den 15.6.3\u2019a ge\u00e7i\u015f).</li>\n<li><strong>Yeni \u00f6zellikleri</strong> ya da <strong>kritik olmayan hata d\u00fczeltmelerini</strong> yay\u0131nlarken <strong>y</strong> de\u011ferini g\u00fcncelleyerek <strong>min\u00f6r s\u00fcr\u00fcm\u00fc</strong> yay\u0131nlar\u0131z (\u00d6rne\u011fin: 15.6.2\u2019den 15.7.0\u2019a ge\u00e7i\u015f).</li>\n<li><strong>Uyumsuz de\u011fi\u015fiklikleri</strong> yay\u0131nlarken <strong>x</strong> de\u011ferini g\u00fcncelleyerek  <strong>ana s\u00fcr\u00fcm\u00fc</strong> yay\u0131nlar\u0131z  (\u00d6rne\u011fin: 15.6.2\u2019den 16.0.0\u2019a ge\u00e7i\u015f).</li>\n</ul>\n<p>Ana s\u00fcr\u00fcmler de yeni \u00f6zellikler i\u00e7erebilir, ve herhangi bir yeni s\u00fcr\u00fcm hata d\u00fczeltmelerini bulundurabilir.</p>\n<p>Min\u00f6r s\u00fcr\u00fcmler en yayg\u0131n s\u00fcr\u00fcm t\u00fcr\u00fcd\u00fcr.</p>\n<h3 id=\"breaking-changes\"><a class=\"anchor\" href=\"/react/faq-versioning#breaking-changes\"></a>Uyumsuz De\u011fi\u015fiklikler </h3>\n<p>Bu s\u00fcr\u00fcmleme politikas\u0131 <code class=\"language-javascript\">Next</code> ve <code class=\"language-javascript\">Experimental</code> kanallar\u0131ndaki s\u00fcr\u00fcm-\u00f6ncesi paketlerine uygulanmaz. <a href=\"/react/release-channels\">S\u00fcr\u00fcm-\u00f6ncesi paketlere dair daha fazlas\u0131n\u0131 \u00f6\u011frenin.</a></p>\n<p>Uyumsuz de\u011fi\u015fiklikler hepimiz i\u00e7in zahmetli oldu\u011fu i\u00e7in ana s\u00fcr\u00fcmlerin say\u0131s\u0131n\u0131 olabildi\u011fince az tutmaya \u00e7al\u0131\u015f\u0131yoruz \u2013 \u00f6rne\u011fin, React 15 Nisan 2016\u2019da, React 16 Eyl\u00fcl 2017\u2019de, React 17 ise Ekim 2020\u2019de yay\u0131nlanm\u0131\u015ft\u0131r.</p>\n<p>Bunun yerine yeni \u00f6zellikleri min\u00f6r s\u00fcr\u00fcmlerle yay\u0131nlamaktay\u0131z. Bu nedenle min\u00f6r s\u00fcr\u00fcmler \u00e7o\u011fu zaman ana s\u00fcr\u00fcmlerden daha ilgi \u00e7ekici ve merak uyand\u0131r\u0131c\u0131 olmaktad\u0131r.</p>\n<h3 id=\"commitment-to-stability\"><a class=\"anchor\" href=\"/react/faq-versioning#commitment-to-stability\"></a>Kararl\u0131l\u0131\u011fa Ba\u011fl\u0131l\u0131k </h3>\n<p>React\u2019\u0131 zaman i\u00e7inde de\u011fi\u015ftirdik\u00e7e React\u2019\u0131n yeni \u00f6zelliklerindan faydalanmak i\u00e7in gereken \u00e7abay\u0131 azaltmaya \u00f6zen g\u00f6stermekteyiz.\nBir \u00f6nceki APIyi ba\u015fka pakete koymam\u0131z gerekse bile, eski APIyi olabildi\u011fince \u00e7al\u0131\u015f\u0131r durumda tutar\u0131z. \u00d6rne\u011fin, <a class=\"external-link\" href=\"https://tr.reactjs.org//blog/2016/07/13/mixins-considered-harmful.html\">mixinlerin kullan\u0131m\u0131 y\u0131llard\u0131r tavsiye edilmese bile</a>, mixinler bu zamana kadar <a href=\"/react/react-without-es6#mixins\">create-react-class ile</a> desteklenmi\u015ftir ve bir\u00e7ok proje mixinleri eski kodlar\u0131nda stabil \u015fekilde kullanmaya devam etmektedir.</p>\n<p>React kullanan bir milyondan fazla geli\u015ftirici, milyonlarca React bile\u015fenini devam ettirmektedir. Sadece Facebook\u2019un kodunda 50.000\u2019den fazla React bile\u015feni vard\u0131r. Bu nedenle React versiyon y\u00fckseltemelerini olabildi\u011fince kolay hale getirmemiz gerekmektedir; e\u011fer b\u00fcy\u00fck de\u011fi\u015fikler yapar ve buna ge\u00e7i\u015f i\u00e7in bir yol haritas\u0131 sunmazsak, geli\u015ftiriciler eski s\u00fcr\u00fcmlerde tak\u0131l\u0131 kal\u0131rlar. Ge\u00e7i\u015f i\u00e7in sundu\u011fumuz \u00e7\u00f6z\u00fcmleri Facebook\u2019ta kendimiz de test etmekteyiz - e\u011fer 10 ki\u015fiden az olan tak\u0131m\u0131m\u0131z, 50.000\u2019den fazla bile\u015feni g\u00fcncelleyebiliyorsa, React kullanan herkesin bu ge\u00e7i\u015fi kolayl\u0131kla yapabilece\u011fine inan\u0131yoruz. \u00c7o\u011fu zaman  <a class=\"external-link\" href=\"https://github.com/reactjs/react-codemod\">otomatikle\u015ftirilmi\u015f scriptlerle</a> bile\u015fenleri g\u00fcncelliyoruz, ve sonras\u0131nda bunlar\u0131 herkesin kullanmas\u0131 i\u00e7in a\u00e7\u0131k kaynak s\u00fcr\u00fcm\u00fcm\u00fcze dahil ediyoruz.</p>\n<h3 id=\"gradual-upgrades-via-warnings\"><a class=\"anchor\" href=\"/react/faq-versioning#gradual-upgrades-via-warnings\"></a>Uyar\u0131larla Kademeli Versiyon Ge\u00e7i\u015fi </h3>\n<p>React\u2019\u0131n geli\u015ftirme derlemeleri bir\u00e7ok yararl\u0131 uyar\u0131 i\u00e7erir. Uyumsuz de\u011fi\u015fikliklere haz\u0131rl\u0131k i\u00e7in olabildi\u011fince uyar\u0131 eklemekteyiz. Bu sayede, e\u011fer uygulaman\u0131z son s\u00fcr\u00fcmde herhangi bir uyar\u0131 i\u00e7ermiyorsa, sonraki ana s\u00fcr\u00fcme uyumlu olacakt\u0131r. Bu size uygulamalar\u0131n\u0131zdaki bile\u015fenleri teker teker yeni s\u00fcr\u00fcme ge\u00e7irme olana\u011f\u0131 sa\u011flar.</p>\n<p>Geli\u015ftirme uyar\u0131lar\u0131 uygulaman\u0131z\u0131n i\u015fleyi\u015fini de\u011fi\u015ftirmez. Bu sayede uygulaman\u0131z\u0131n geli\u015ftirme ve canl\u0131 ortam derlemelerinde ayn\u0131 \u015fekilde davranaca\u011f\u0131na emin olabilirsiniz; aradaki tek fark canl\u0131 ortam derlemesinin uyar\u0131lar\u0131 loglamayacak olmas\u0131d\u0131r, ki bu daha verimlidir. (E\u011fer aksini farkederseniz, l\u00fctfen sorunu payla\u015f\u0131n)</p>\n<h3 id=\"what-counts-as-a-breaking-change\"><a class=\"anchor\" href=\"/react/faq-versioning#what-counts-as-a-breaking-change\"></a>Neler Uyumsuz De\u011fi\u015fikliklerdir? </h3>\n<p>A\u015fa\u011f\u0131daki durumlarda genellikle ana versiyon y\u00fckseltmesi <em>yapm\u0131yoruz</em>:</p>\n<ul>\n<li><strong>Geli\u015ftirme uyar\u0131lar\u0131.</strong> Bunlar canl\u0131 ortam\u0131n davran\u0131\u015f\u0131n\u0131 etkilemedi\u011fi i\u00e7in yeni uyar\u0131lar\u0131 ekleyebilir, ya da varolanlar\u0131 de\u011fi\u015ftirebiliriz. Bu asl\u0131nda gelecek uyumsuz de\u011fi\u015fikliklere kar\u015f\u0131 geli\u015ftiricileri g\u00fcvenilir bi\u00e7imde uyarmam\u0131z\u0131 sa\u011flamaktad\u0131r.</li>\n<li><strong><code class=\"language-javascript\">unstable_</code> ile ba\u015flayan APIler.</strong> Bunlar APIlerinden hen\u00fcz emin olunmayan deneysel \u00f6zelliklerdir. Bunlar\u0131 <code class=\"language-javascript\">unstable_</code> ile ba\u015flayacak \u015fekilde yay\u0131nlayarak daha h\u0131zl\u0131 ilerleyebilmekte ve stabil APIyi daha \u00f6nce sunabilmekteyiz.</li>\n<li><strong>React\u2019\u0131n alfa ve kanarya s\u00fcr\u00fcmleri.</strong> Yeni \u00f6zelliklerin daha \u00f6nce test edilebilmesi i\u00e7in alfa s\u00fcr\u00fcmlerini sunmaktay\u0131z, fakat alfa s\u00fcr\u00fcm\u00fcnden \u00f6\u011frendiklerimizle de de\u011fi\u015fiklik yapma esnekli\u011fine ihtiya\u00e7 duyuyoruz. Bu versiyonlar\u0131 kullan\u0131yorsan\u0131z, APIlerin stabil s\u00fcr\u00fcmden \u00f6nce de\u011fi\u015febilece\u011fi ihtimalini unutmay\u0131n.</li>\n<li><strong>D\u00f6k\u00fcmente edilmemi\u015f APIler ve i\u00e7sel veri yap\u0131lar\u0131.</strong> E\u011fer <code class=\"language-javascript\">__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED</code> ya da <code class=\"language-javascript\">__reactInternalInstance$uk43rzhitjg</code>, gibi dahili \u00f6zellik isimlerine eri\u015fim sa\u011flad\u0131\u011f\u0131n\u0131zda hi\u00e7bir g\u00fcvence yoktur. Bu noktada art\u0131k kendi ba\u015f\u0131n\u0131zas\u0131n\u0131z.</li>\n</ul>\n<p>Bu prensipler faydac\u0131 yakla\u015f\u0131mla tasarlanm\u0131\u015ft\u0131r; kesinlikle sizler i\u00e7in ba\u015f a\u011fr\u0131s\u0131na sebep olmak istemiyoruz. E\u011fer b\u00fct\u00fcn bu de\u011fi\u015fiklerle ana versiyon \u00e7\u0131karsak, daha fazla say\u0131da ana versiyon \u00e7\u0131km\u0131\u015f oluruz ve bu toplulu\u011fa daha fazla versiyon \u00e7ilesi yarat\u0131r. Ayr\u0131ca bu durum React\u2019\u0131 geli\u015ftirmek ve ilerletmek i\u00e7in istedi\u011fimiz kadar h\u0131zl\u0131 olamayaca\u011f\u0131m\u0131z anlam\u0131na da gelir.</p>\n<p>Bununla beraber, e\u011fer bu listedeki bir de\u011fi\u015fikli\u011fin toplulukta fazlaca sorun yarataca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcyorsak, kademeli ge\u00e7i\u015fte yol haritas\u0131 sunmak i\u00e7in elimizden gelenin en iyisini yapmaya \u00f6zen g\u00f6steriyoruz.</p>\n<h3 id=\"minors-versus-patches\"><a class=\"anchor\" href=\"/react/faq-versioning#minors-versus-patches\"></a>Bir min\u00f6r s\u00fcr\u00fcm yeni \u00f6zellikler i\u00e7ermedi\u011fi halde, neden bir yama s\u00fcr\u00fcm\u00fc de\u011fildir? </h3>\n<p>It\u2019s possible that a minor release will not include new features. <a class=\"external-link\" href=\"https://semver.org/#spec-item-7\">This is allowed by semver</a>, which states <strong>\u201d[a minor version] MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes.\u201d</strong></p>\n<p>However, it does raise the question of why these releases aren\u2019t versioned as patches instead.</p>\n<p>The answer is that any change to React (or other software) carries some risk of breaking in unexpected ways. Imagine a scenario where a patch release that fixes one bug accidentally introduces a different bug. This would not only be disruptive to developers, but also harm their confidence in future patch releases. It\u2019s especially regrettable if the original fix is for a bug that is rarely encountered in practice.</p>\n<p>We have a pretty good track record for keeping React releases free of bugs, but patch releases have an even higher bar for reliability because most developers assume they can be adopted without adverse consequences.</p>\n<p>For these reasons, we reserve patch releases only for the most critical bugs and security vulnerabilities.</p>\n<p>If a release includes non-essential changes \u2014 such as internal refactors, changes to implementation details, performance improvements, or minor bugfixes \u2014 we will bump the minor version even when there are no new features.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-versioning.md\">Edit this page</a></p></div></article>", "path": "/react/faq-versioning", "nav": ["/react/faq-structure", "/react/faq-internals"]}, {"key": "Virtual DOM ve \u0130\u00e7 Dinamikler", "value": "<article class=\"css-174qq1k\"><div class=\"css-124oy3v\"><div class=\"css-6nf64v\"><h3 id=\"what-is-the-virtual-dom\"><a class=\"anchor\" href=\"/react/faq-internals#what-is-the-virtual-dom\"></a>Virtual DOM nedir? </h3>\n<p>Virtual DOM (VDOM), bir UI\u2019\u0131n ideal veya \u201csanal\u201d bir temsilinin bellekte tutuldu\u011fu ve ReactDOM gibi bir k\u00fct\u00fcphane taraf\u0131ndan \u201cger\u00e7ek\u201d DOM \u200b\u200bile senkronize edildi\u011fi bir programlama konseptidir. Bu s\u00fcrece <a href=\"/react/reconciliation\">uyumla\u015ft\u0131rma</a> denir.</p>\n<p>Bu yakla\u015f\u0131m, bildirimsel React API\u2019sini etkinle\u015ftirir: React\u2019e UI\u2019\u0131n hangi state\u2019te olmas\u0131n\u0131 istedi\u011finizi s\u00f6ylersiniz ve DOM\u2019\u0131n bu durumla e\u015fle\u015fti\u011finden emin olur. Bu, uygulaman\u0131z\u0131 olu\u015fturmak i\u00e7in kullanmak zorunda kalaca\u011f\u0131n\u0131z \u00f6zellik manip\u00fclasyonu, olay y\u00f6netimi ve manuel DOM g\u00fcncellemesini \u00f6zetler.</p>\n<p>\u201cVirtual DOM\u201d belirli bir teknolojiden daha ziyade bir kal\u0131p oldu\u011fundan, insanlar bazen farkl\u0131 \u015feyler ifade etti\u011fini s\u00f6yl\u00fcyor. React d\u00fcnyas\u0131nda, \u201cvirtual DOM\u201d terimi genellikle <a href=\"/react/rendering-elements\">React elemanlar\u0131</a> ile ili\u015fkilendirilir, \u00e7\u00fcnk\u00fc bunlar kullan\u0131c\u0131 aray\u00fcz\u00fcn\u00fc temsil eden nesnelerdir. Bununla birlikte, React, bile\u015fen a\u011fac\u0131 hakk\u0131nda ek bilgi tutmak i\u00e7in \u201cfibers\u201d ad\u0131 verilen dahili nesneleri de kullan\u0131r. Ayr\u0131ca React\u2019teki \u201cvirtual DOM\u201d uygulamas\u0131n\u0131n bir par\u00e7as\u0131 olarak da d\u00fc\u015f\u00fcn\u00fclebilirler.</p>\n<h3 id=\"is-the-shadow-dom-the-same-as-the-virtual-dom\"><a class=\"anchor\" href=\"/react/faq-internals#is-the-shadow-dom-the-same-as-the-virtual-dom\"></a>Shadow DOM, Virtual DOM ile ayn\u0131 m\u0131? </h3>\n<p>Hay\u0131r, farkl\u0131lar. Shadow DOM, \u00f6ncelikle web bile\u015fenlerindeki de\u011fi\u015fkenleri ve CSS\u2019i kapsamak i\u00e7in tasarlanm\u0131\u015f bir taray\u0131c\u0131 teknolojisidir. Virtual DOM, JavaScript\u2019teki k\u00fct\u00fcphaneler taraf\u0131ndan taray\u0131c\u0131 API\u2019lar\u0131 \u00fczerine uygulanan bir kavramd\u0131r.</p>\n<h3 id=\"what-is-react-fiber\"><a class=\"anchor\" href=\"/react/faq-internals#what-is-react-fiber\"></a>\u201cReact Fiber\u201d nedir? </h3>\n<p>Fiber, React 16\u2019daki yeni uyumla\u015ft\u0131rma motorudur. Ana hedefi, virtual DOM\u2019\u0131n art\u0131ml\u0131 render edilmesini sa\u011flamakt\u0131r. <a class=\"external-link\" href=\"https://github.com/acdlite/react-fiber-architecture\">Devam\u0131n\u0131 okuyun</a>.</p></div><p><a class=\"external-link\" href=\"https://github.com/reactjs/tr.reactjs.org/tree/main/content/docs/faq-internals.md\">Edit this page</a></p></div></article>", "path": "/react/faq-internals", "nav": ["/react/faq-versioning"]}]}]